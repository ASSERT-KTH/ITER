bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder,  name);  [CE]  cannot  find  symbol  name  [FE]                ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder,  name);  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  excluder,  name);	  this(constructorConstructor,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  cannot  find  symbol  name	5	None	replace
2	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder,  null);  [CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder,  null);  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  excluder,  null);	  this(constructorConstructor,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;	5	None	replace
3	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  null,  excluder);  [CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  null,  excluder);  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  null,  excluder);	  this(constructorConstructor,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;	5	None	replace
4	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder,  false);  [CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder,  false);  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  excluder,  false);	  this(constructorConstructor,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;	5	None	replace
5	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingStrategy,  name,  excluder);  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]                        ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this(constructorConstructor,  fieldNamingStrategy,  name,  excluder);  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingStrategy,  name,  excluder);	  this(constructorConstructor,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	5	None	replace
6	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  name,  excluder);  [CE]  cannot  find  symbol  name  [FE]                          ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  name,  excluder);  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  name,  excluder);	  this(constructorConstructor,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  cannot  find  symbol  name	5	None	replace
7	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,  excluder);  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,  excluder);  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,  excluder);  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    fieldNamingPolicy,    excluder);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
8	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldN  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldN  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldN	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    fieldNamingPolicy,    excluder);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
9	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy,  excluder);  }  [CE]  ')'  expected  [FE]                ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy,  excluder);  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy,  excluder);  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    fieldNamingPolicy,    excluder);    }    	non-compiled	[CE]  ')'  expected	9	None	replace
10	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,  excluder  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,  excluder  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,  excluder	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    fieldNamingPolicy,    excluder);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
11	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    fieldNamingPolicy,    excluder);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
12	[BUG]  [BUGGY]  this.fieldNamingStrategy  =  fieldNamingPolicy;  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]        ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this.fieldNamingStrategy  =  fieldNamingPolicy;  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.fieldNamingStrategy  =  fieldNamingPolicy;	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingStrategy    =    fieldNamingPolicy;    this.name    =    name;    }    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	13	None	replace
13	[BUG]  [BUGGY]  this.fieldNamingPolicy  =  fieldNamingPolicy;  [CE]  variable  fieldNamingPolicy  might  already  have  been  assigned  [FE]          ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this.fieldNamingPolicy  =  fieldNamingPolicy;  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.fieldNamingPolicy  =  fieldNamingPolicy;	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingStrategy    =    fieldNamingPolicy;    this.name    =    name;    }    	non-compiled	[CE]  variable  fieldNamingPolicy  might  already  have  been  assigned	13	None	replace
14	[BUG]  [BUGGY]  this.fieldNamingStrategy  =  constructorConstructor;  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]            ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this.fieldNamingStrategy  =  constructorConstructor;  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.fieldNamingStrategy  =  constructorConstructor;	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingStrategy    =    fieldNamingPolicy;    this.name    =    name;    }    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	13	None	replace
15	[BUG]  [BUGGY]  This.constructorConstructor  =  constructorConstructor;  [CE]  cannot  find  symbol  This  [FE]              ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  This.constructorConstructor  =  constructorConstructor;  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	This.constructorConstructor  =  constructorConstructor;	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingStrategy    =    fieldNamingPolicy;    this.name    =    name;    }    	non-compiled	[CE]  cannot  find  symbol  This	13	None	replace
16	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy));  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy));  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy));  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    fieldNamingPolicy));    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
17	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNaming  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNaming  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNaming	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    fieldNamingPolicy));    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
18	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  field  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  field  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  field	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    fieldNamingPolicy));    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
19	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldN  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldN  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldN	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    fieldNamingPolicy));    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
20	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy)  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy)  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy)	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    fieldNamingPolicy));    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
21	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.name    =    name;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
22	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.name    =    name;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
23	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.name    =    name;    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
24	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.name    =    name;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
25	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  description;  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  description;  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  description;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.name    =    name;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
26	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.excluder    =    excluder;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
27	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.excluder    =    excluder;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
28	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.excluder    =    excluder;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
29	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.excluder    =    excluder;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
30	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excludedr;  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excludedr;  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excludedr;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.excluder    =    excluder;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
31	[BUG]  [BUGGY]  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  [CE]  cannot  find  symbol  bindingFields  [FE]          ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    }    	non-compiled	[CE]  cannot  find  symbol  bindingFields	14	None	replace
32	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
33	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  ||  constructorConstructor!=  null)  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
34	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
35	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
36	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
37	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  fieldNamingStrategy;  [CE]  incompatible  types  [FE]          ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  fieldNamingStrategy;  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  fieldNamingStrategy;	  this.constructorConstructor    =    fieldNamingPolicy;    	non-compiled	[CE]  incompatible  types	2	None	replace
38	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  fieldNamingPolicy;  [CE]  incompatible  types  [FE]            ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  fieldNamingPolicy;  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  fieldNamingPolicy;	  this.constructorConstructor    =    fieldNamingPolicy;    	non-compiled	[CE]  incompatible  types	2	None	replace
39	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.UNKNOWN;  [CE]  incompatible  types  [FE]              ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.UNKNOWN;  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.UNKNOWN;	  this.constructorConstructor    =    fieldNamingPolicy;    	non-compiled	[CE]  incompatible  types	2	None	replace
40	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.FUNCTION;  [CE]  incompatible  types  [FE]                ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.FUNCTION;  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.FUNCTION;	  this.constructorConstructor    =    fieldNamingPolicy;    	non-compiled	[CE]  incompatible  types	2	None	replace
41	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.getInstance();  [CE]  incompatible  types  [FE]                  ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.getInstance();  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor?  fieldNamingPolicy  :  FieldNamingStrategy.getInstance();	  this.constructorConstructor    =    fieldNamingPolicy;    	non-compiled	[CE]  incompatible  types	2	None	replace
42	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy);  }  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy);  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy);  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    fieldNamingPolicy);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
43	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  field  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  field  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  field	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    fieldNamingPolicy);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
44	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excluder);  }  [CE]  cannot  return  a  value  from  method  whose  result  type  is  void  [FE]              ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excluder);  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excluder);  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    fieldNamingPolicy);    }    	non-compiled	[CE]  cannot  return  a  value  from  method  whose  result  type  is  void	8	None	replace
45	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  excluder);  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  excluder);  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  excluder);	  this.constructorConstructor    =    constructorConstructor,    fieldNamingPolicy);    	non-compiled	[CE]  ';'  expected	3	None	replace
46	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  exception);  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  exception);  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  exception);	  this.constructorConstructor    =    constructorConstructor,    fieldNamingPolicy);    	non-compiled	[CE]  ';'  expected	3	None	replace
47	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  deserialized);  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  deserialized);  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  deserialized);	  this.constructorConstructor    =    constructorConstructor,    fieldNamingPolicy);    	non-compiled	[CE]  ';'  expected	3	None	replace
48	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  null);  [CE]  ';'  expected  [FE]                  ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  null);  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  null);	  this.constructorConstructor    =    constructorConstructor,    fieldNamingPolicy);    	non-compiled	[CE]  ';'  expected	3	None	replace
49	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructor;  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructor;  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructor;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
50	[BUG]  [BUGGY]  this.fieldNamingPolicy  =  constructorConstructor;  [CE]  incompatible  types  [FE]            ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this.fieldNamingPolicy  =  constructorConstructor;  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.fieldNamingPolicy  =  constructorConstructor;	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingStrategy    =    fieldNamingPolicy;    this.excluder    =    excluder;    }    	non-compiled	[CE]  incompatible  types	15	None	replace
51	[BUG]  [BUGGY]  super(constructorConstructor,  fieldNamingPolicy,  deserialized);  [CE]  cannot  find  symbol  deserialized  [FE]                  ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  super(constructorConstructor,  fieldNamingPolicy,  deserialized);  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	super(constructorConstructor,  fieldNamingPolicy,  deserialized);	      	non-compiled	[CE]  cannot  find  symbol  deserialized	6	None	replace
52	[BUG]  [BUGGY]  super(constructor);  this.fieldNamingPolicy  =  fieldNamingPolicy;  [CE]  cannot  find  symbol  constructor  [FE]                    ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  super(constructor);  this.fieldNamingPolicy  =  fieldNamingPolicy;  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	super(constructor);  this.fieldNamingPolicy  =  fieldNamingPolicy;	      	non-compiled	[CE]  cannot  find  symbol  constructor	6	None	replace
53	[BUG]  [BUGGY]  super(constructorConstructor,  fieldNamingPolicy,  excluder);  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [FE]                      ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  super(constructorConstructor,  fieldNamingPolicy,  excluder);  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	super(constructorConstructor,  fieldNamingPolicy,  excluder);	      	non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	6	None	replace
54	[BUG]  [BUGGY]  super(constructorConstructor,  fieldNamingPolicy);  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [FE]                        ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  super(constructorConstructor,  fieldNamingPolicy);  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	super(constructorConstructor,  fieldNamingPolicy);	      	non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	6	None	replace
55	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  null);  [CE]  recursive  constructor  invocation  [FE]                          ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  null);  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  null);	      	non-compiled	[CE]  recursive  constructor  invocation	6	None	replace
56	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  null,  null);  [CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;  [FE]                            ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  null,  null);  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  null,  null);	      	non-compiled	[CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;	6	None	replace
57	[BUG]  [BUGGY]  this.constructorConstructor  =  new  ConstructorConstructor(constructorConstructor,  fieldNamingPolicy);  [CE]  constructor  ConstructorConstructor  in  class  ConstructorConstructor  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this.constructorConstructor  =  new  ConstructorConstructor(constructorConstructor,  fieldNamingPolicy);  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  new  ConstructorConstructor(constructorConstructor,  fieldNamingPolicy);	  this.constructorConstructor    =    constructor;    	non-compiled	[CE]  constructor  ConstructorConstructor  in  class  ConstructorConstructor  cannot  be  applied  to  given  types;	1	None	replace
58	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor?  null  :  constructorConstructor;  [CE]  incompatible  types  [FE]          ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this.constructorConstructor  =  constructorConstructor?  null  :  constructorConstructor;  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor?  null  :  constructorConstructor;	  this.constructorConstructor    =    constructor;    	non-compiled	[CE]  incompatible  types	1	None	replace
59	[BUG]  [BUGGY]  this.constructorConstructor  =  new  ObjectConstructor(constructorConstructor,  fieldNamingPolicy);  [CE]  ObjectConstructor  is  abstract;  cannot  be  instantiated  [FE]            ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this.constructorConstructor  =  new  ObjectConstructor(constructorConstructor,  fieldNamingPolicy);  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  new  ObjectConstructor(constructorConstructor,  fieldNamingPolicy);	  this.constructorConstructor    =    constructor;    	non-compiled	[CE]  ObjectConstructor  is  abstract;  cannot  be  instantiated	1	None	replace
60	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy;  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy;  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy;	  this.constructorConstructor    =    constructorConstructor,    fieldNamingPolicy;    	non-compiled	[CE]  ';'  expected	4	None	replace
61	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  excluder;  [CE]  ';'  expected  [FE]                ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  excluder;  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  excluder;	  this.constructorConstructor    =    constructorConstructor,    fieldNamingPolicy;    	non-compiled	[CE]  ';'  expected	4	None	replace
62	[BUG]  [BUGGY]  this.constructorConstructor  =  constructor,  fieldNamingPolicy;  [CE]  ';'  expected  [FE]                  ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this.constructorConstructor  =  constructor,  fieldNamingPolicy;  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructor,  fieldNamingPolicy;	  this.constructorConstructor    =    constructorConstructor,    fieldNamingPolicy;    	non-compiled	[CE]  ';'  expected	4	None	replace
63	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [CE]  illegal  start  of  expression  [FE]                  ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
64	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [CE]  illegal  start  of  expression  [FE]                    ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
65	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [CE]  illegal  start  of  expression  [FE]                      ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
66	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  [CE]  illegal  start  of  expression  [FE]                        ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
67	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,  excluder);  }  [CE]  cannot  return  a  value  from  method  whose  result  type  is  void  [FE]            ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,  excluder);  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,  excluder);  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    fieldNamingPolicy,    excluder);    }    	non-compiled	[CE]  cannot  return  a  value  from  method  whose  result  type  is  void	9	None	replace
68	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy,  excluder);  }  [CE]  ')'  expected  [FE]              ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy,  excluder);  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy,  excluder);  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    fieldNamingPolicy,    excluder);    }    	non-compiled	[CE]  ')'  expected	9	None	replace
69	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,  excluder);  }  [CE]  incompatible  types  [FE]                ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,  excluder);  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,  excluder);  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    fieldNamingPolicy,    excluder);    }    	non-compiled	[CE]  incompatible  types	9	None	replace
70	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy),  excluder);  }  [CE]  cannot  return  a  value  from  method  whose  result  type  is  void  [FE]                  ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy),  excluder);  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy),  excluder);  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    fieldNamingPolicy,    excluder);    }    	non-compiled	[CE]  cannot  return  a  value  from  method  whose  result  type  is  void	9	None	replace
71	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingStrategy,  excluder);  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]                ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this(constructorConstructor,  fieldNamingStrategy,  excluder);  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingStrategy,  excluder);	  this(constructorConstructor,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	5	None	replace
72	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder,  true);  [CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder,  true);  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  excluder,  true);	  this(constructorConstructor,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;	5	None	replace
73	[BUG]  [BUGGY]  This(constructorConstructor,  fieldNamingPolicy,  excluder);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  This(constructorConstructor,  fieldNamingPolicy,  excluder);  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	This(constructorConstructor,  fieldNamingPolicy,  excluder);	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    }    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
74	[BUG]  [BUGGY]  super(constructorConstructor);  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  super(constructorConstructor);  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	super(constructorConstructor);	      	non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	6	None	replace
75	[BUG]  [BUGGY]  super(constructorConstructor);  this.fieldNamingPolicy  =  fieldNamingPolicy;  [CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  super(constructorConstructor);  this.fieldNamingPolicy  =  fieldNamingPolicy;  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	super(constructorConstructor);  this.fieldNamingPolicy  =  fieldNamingPolicy;	      	non-compiled	[CE]  constructor  Object  in  class  Object  cannot  be  applied  to  given  types;	6	None	replace
76	[BUG]  [BUGGY]  This.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  [CE]  cannot  find  symbol  This  [FE]          ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  This.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	This.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    }    	non-compiled	[CE]  cannot  find  symbol  This	14	None	replace
77	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.getInstance();  }  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.getInstance();  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.getInstance();  }	  this.constructorConstructor    =    constructorConstructor,    fieldNamingPolicy;    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
78	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.valueOf(fieldNamingPolicy);  }  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.valueOf(fieldNamingPolicy);  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.valueOf(fieldNamingPolicy);  }	  this.constructorConstructor    =    constructorConstructor,    fieldNamingPolicy;    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
79	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.getInstance(fieldNamingPolicy);  }  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.getInstance(fieldNamingPolicy);  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.getInstance(fieldNamingPolicy);  }	  this.constructorConstructor    =    constructorConstructor,    fieldNamingPolicy;    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
80	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy);  [CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;  [FE]              ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this(constructorConstructor,  fieldNamingPolicy);  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy);	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.excluder    =    excluder;    }    	non-compiled	[CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;	10	None	replace
81	[BUG]  [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  ||  constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	||  constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
82	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor  +  fieldNamingPolicy;  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]          ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this.constructorConstructor  =  constructorConstructor  +  fieldNamingPolicy;  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor  +  fieldNamingPolicy;	  this.constructorConstructor    =    fieldNamingPolicy;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	2	None	replace
83	[BUG]  [BUGGY]  this.constructorConstructor  =  fieldNamingPolicy,  constructorConstructor;  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this.constructorConstructor  =  fieldNamingPolicy,  constructorConstructor;  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  fieldNamingPolicy,  constructorConstructor;	  this.constructorConstructor    =    fieldNamingPolicy;    	non-compiled	[CE]  ';'  expected	2	None	replace
84	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy);  }  [CE]  cannot  return  a  value  from  method  whose  result  type  is  void  [FE]          ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy);  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy);  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    fieldNamingPolicy);    }    	non-compiled	[CE]  cannot  return  a  value  from  method  whose  result  type  is  void	8	None	replace
85	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excluder);  }  [CE]  cannot  return  a  value  from  method  whose  result  type  is  void  [FE]            ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excluder);  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excluder);  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    fieldNamingPolicy);    }    	non-compiled	[CE]  cannot  return  a  value  from  method  whose  result  type  is  void	8	None	replace
86	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excluder);  }  [CE]  incompatible  types  [FE]              ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excluder);  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  excluder);  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    fieldNamingPolicy);    }    	non-compiled	[CE]  incompatible  types	8	None	replace
87	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  excluder));  }  [CE]  cannot  return  a  value  from  method  whose  result  type  is  void  [FE]                ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  excluder));  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  excluder));  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    fieldNamingPolicy);    }    	non-compiled	[CE]  cannot  return  a  value  from  method  whose  result  type  is  void	8	None	replace
88	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }  [CE]  incompatible  types  [FE]              ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.name    =    name;    }    	non-compiled	[CE]  incompatible  types	16	None	replace
89	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  description;  }  [CE]  cannot  find  symbol  name  [FE]                ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  description;  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  description;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.name    =    name;    }    	non-compiled	[CE]  cannot  find  symbol  name	16	None	replace
90	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy));  }  [CE]  cannot  return  a  value  from  method  whose  result  type  is  void  [FE]                ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy));  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy));  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    fieldNamingPolicy));    }    	non-compiled	[CE]  cannot  return  a  value  from  method  whose  result  type  is  void	11	None	replace
91	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  excluder));  }  [CE]  cannot  return  a  value  from  method  whose  result  type  is  void  [FE]                  ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  excluder));  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  excluder));  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    fieldNamingPolicy));    }    	non-compiled	[CE]  cannot  return  a  value  from  method  whose  result  type  is  void	11	None	replace
92	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  excluder));  }  [CE]  incompatible  types  [FE]                    ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  excluder));  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  excluder));  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    fieldNamingPolicy));    }    	non-compiled	[CE]  incompatible  types	11	None	replace
93	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy);  [CE]  ';'  expected  [FE]            ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy);  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  fieldNamingStrategy);	  this.constructorConstructor    =    constructorConstructor,    fieldNamingPolicy);    	non-compiled	[CE]  ';'  expected	3	None	replace
94	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  excludedr);  [CE]  ';'  expected  [FE]              ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  excludedr);  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy,  excludedr);	  this.constructorConstructor    =    constructorConstructor,    fieldNamingPolicy);    	non-compiled	[CE]  ';'  expected	3	None	replace
95	[BUG]  [BUGGY]  This.fieldNamingStrategy  =  fieldNamingPolicy;  [CE]  cannot  find  symbol  This  [FE]            ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  This.fieldNamingStrategy  =  fieldNamingPolicy;  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	This.fieldNamingStrategy  =  fieldNamingPolicy;	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingStrategy    =    fieldNamingPolicy;    this.excluder    =    excluder;    }    	non-compiled	[CE]  cannot  find  symbol  This	15	None	replace
96	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor;  if(excluder!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  [CE]  variable  constructorConstructor  might  already  have  been  assigned  [FE]        ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this.constructorConstructor  =  constructorConstructor;  if(excluder!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor;  if(excluder!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    	non-compiled	[CE]  variable  constructorConstructor  might  already  have  been  assigned	7	None	replace
97	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor;  if(excluder!=  null)  {  this.constructorConstructor  =  excluder;  }  [CE]  incompatible  types  [FE]          ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this.constructorConstructor  =  constructorConstructor;  if(excluder!=  null)  {  this.constructorConstructor  =  excluder;  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor;  if(excluder!=  null)  {  this.constructorConstructor  =  excluder;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    	non-compiled	[CE]  incompatible  types	7	None	replace
98	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingStrategy  =  fieldNamingPolicy;  this.name  =  name;  }  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]        ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingStrategy  =  fieldNamingPolicy;  this.name  =  name;  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingStrategy  =  fieldNamingPolicy;  this.name  =  name;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingStrategy    =    fieldNamingPolicy;    this.name    =    name;    }    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	13	None	replace
99	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingStrategy  =  fieldNamingPolicy;  this.name  =  name;  }  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingStrategy  =  fieldNamingPolicy;  this.name  =  name;  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingStrategy  =  fieldNamingPolicy;  this.name  =  name;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingStrategy    =    fieldNamingPolicy;    this.name    =    name;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
100	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor;  else  {  this.fieldNamingStrategy  =  fieldNamingPolicy;  this.name  =  name;  }  [CE]  'else'  without  'if'  [FE]            ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this.constructorConstructor  =  constructorConstructor;  else  {  this.fieldNamingStrategy  =  fieldNamingPolicy;  this.name  =  name;  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor;  else  {  this.fieldNamingStrategy  =  fieldNamingPolicy;  this.name  =  name;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingStrategy    =    fieldNamingPolicy;    this.name    =    name;    }    	non-compiled	[CE]  'else'  without  'if'	13	None	replace
101	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }  [CE]  cannot  find  symbol  name  [FE]              ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingStrategy    =    fieldNamingPolicy;    this.name    =    name;    }    	non-compiled	[CE]  cannot  find  symbol  name	13	None	replace
102	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.createInstance(fieldNamingPolicy);  }  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.createInstance(fieldNamingPolicy);  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.createInstance(fieldNamingPolicy);  }	  this.constructorConstructor    =    constructorConstructor,    fieldNamingPolicy;    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
103	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.newInstance();  }  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.newInstance();  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.newInstance();  }	  this.constructorConstructor    =    constructorConstructor,    fieldNamingPolicy;    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
104	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.UNKNOWN;  }  [CE]  cannot  find  symbol  UNKNOWN  [FE]                  ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.UNKNOWN;  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  FieldNamingStrategy.UNKNOWN;  }	  this.constructorConstructor    =    constructorConstructor,    fieldNamingPolicy;    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN	4	None	replace
105	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,  excluder  [CE]  ')'  expected  [FE]            ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,  excluder  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,  excluder	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    fieldNamingPolicy,    excluder);    }    	non-compiled	[CE]  ')'  expected	9	None	replace
106	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,  excluder  [CE]  ')'  expected  [FE]              ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,  excluder  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,  excluder	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy),    fieldNamingPolicy,    excluder);    }    	non-compiled	[CE]  ')'  expected	9	None	replace
107	[BUG]  [BUGGY]  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }  [CE]  illegal  start  of  type  [FE]          ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.bindingFields    =    new    HashMap    <    String,ObjectConstructor>();    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
108	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  String.valueOf(this.name);  }  [CE]  cannot  find  symbol  name  [FE]              ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  String.valueOf(this.name);  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  String.valueOf(this.name);  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    this.name    =    name;    }    	non-compiled	[CE]  cannot  find  symbol  name	16	None	replace
109	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor;  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [CE]  'else'  without  'if'  [FE]                  ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this.constructorConstructor  =  constructorConstructor;  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor;  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    }    	non-compiled	[CE]  'else'  without  'if'	12	None	replace
110	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor;  if(excluder!=  null)  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [CE]  variable  fieldNamingPolicy  might  already  have  been  assigned  [FE]                    ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this.constructorConstructor  =  constructorConstructor;  if(excluder!=  null)  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor;  if(excluder!=  null)  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    }    	non-compiled	[CE]  variable  fieldNamingPolicy  might  already  have  been  assigned	12	None	replace
111	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [CE]  illegal  start  of  type  [FE]                      ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    this.fieldNamingPolicy    =    fieldNamingPolicy;    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
112	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingStrategy,  fieldNamingPolicy,  excluder);  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]                ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this(constructorConstructor,  fieldNamingStrategy,  fieldNamingPolicy,  excluder);  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingStrategy,  fieldNamingPolicy,  excluder);	  this(constructorConstructor,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	5	None	replace
113	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  excluder);  [CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;  [FE]                  ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  excluder);  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  excluder);	  this(constructorConstructor,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;	5	None	replace
114	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  excluder,  null);  [CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;  [FE]                    ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  excluder,  null);  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  fieldNamingPolicy,  excluder,  null);	  this(constructorConstructor,    fieldNamingPolicy,    excluder);    	non-compiled	[CE]  constructor  ReflectiveTypeAdapterFactory  in  class  ReflectiveTypeAdapterFactory  cannot  be  applied  to  given  types;	5	None	replace
115	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy));  }  [CE]  incompatible  types  [FE]                ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy));  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  fieldNamingPolicy;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy));  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    fieldNamingPolicy));    }    	non-compiled	[CE]  incompatible  types	11	None	replace
116	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy)  [CE]  ')'  expected  [FE]                  ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy)  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy)	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    fieldNamingPolicy));    }    	non-compiled	[CE]  ')'  expected	11	None	replace
117	[BUG]  [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy),  excluder);  }  [CE]  cannot  return  a  value  from  method  whose  result  type  is  void  [FE]                    ComparisonFailure    [CONTEXT]    public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {    [BUGGY]  if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy),  excluder);  }  [BUGGY]    this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor  ==  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy),  excluder);  }	  if(constructorConstructor!=    null)    {    this.constructorConstructor    =    constructorConstructor;    }    else    {    return    new    ReflectiveTypeAdapterFactory(new    FieldNamingStrategy(fieldNamingPolicy,    fieldNamingPolicy));    }    	non-compiled	[CE]  cannot  return  a  value  from  method  whose  result  type  is  void	11	None	replace
