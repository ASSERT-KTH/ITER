bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.constructorConstructor  =  constructor;  [CE]  cannot  find  symbol  constructor  [FE]    ComparisonFailure  [CONTEXT]  public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {  [BUGGY]  this.constructorConstructor  =  constructor;  [BUGGY]  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructor;	this.constructorConstructor  =  constructorConstructor;  	non-compiled	[CE]  cannot  find  symbol  constructor	5	None	replace
2	[BUG]  [BUGGY]  this.constructorConstructor  =  fieldNamingPolicy;  [CE]  incompatible  types  [FE]      ComparisonFailure  [CONTEXT]  public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {  [BUGGY]  this.constructorConstructor  =  fieldNamingPolicy;  [BUGGY]  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  fieldNamingPolicy;	this.constructorConstructor  =  constructorConstructor;  	non-compiled	[CE]  incompatible  types	5	None	replace
3	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy);  [CE]  ';'  expected  [FE]        ComparisonFailure  [CONTEXT]  public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy);  [BUGGY]  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy);	this.constructorConstructor  =  constructorConstructor;  	non-compiled	[CE]  ';'  expected	5	None	replace
4	[BUG]  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy;  [CE]  ';'  expected  [FE]          ComparisonFailure  [CONTEXT]  public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {  [BUGGY]  this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy;  [BUGGY]  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this.constructorConstructor  =  constructorConstructor,  fieldNamingPolicy;	this.constructorConstructor  =  constructorConstructor;  	non-compiled	[CE]  ';'  expected	5	None	replace
5	[BUG]  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder);  [CE]  recursive  constructor  invocation  [FE]            ComparisonFailure  [CONTEXT]  public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {  [BUGGY]  this(constructorConstructor,  fieldNamingPolicy,  excluder);  [BUGGY]  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	this(constructorConstructor,  fieldNamingPolicy,  excluder);	this.constructorConstructor  =  constructorConstructor;  	non-compiled	[CE]  recursive  constructor  invocation	5	None	replace
6	[BUG]  [BUGGY]    [CE]  variable  constructorConstructor  might  not  have  been  initialized  [FE]              ComparisonFailure  [CONTEXT]  public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {  [BUGGY]    [BUGGY]  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	  	this.constructorConstructor  =  constructorConstructor;  	non-compiled	[CE]  variable  constructorConstructor  might  not  have  been  initialized	5	None	replace
7	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  [CE]  variable  constructorConstructor  might  not  have  been  initialized  [FE]    ComparisonFailure  [CONTEXT]  public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  [BUGGY]  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }	this.constructorConstructor  =  constructorConstructor;  	non-compiled	[CE]  variable  constructorConstructor  might  not  have  been  initialized	5	None	replace
8	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy);  }  [CE]  cannot  return  a  value  from  method  whose  result  type  is  void  [FE]      ComparisonFailure  [CONTEXT]  public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy);  }  [BUGGY]  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy);  }	this.constructorConstructor  =  constructorConstructor;  	non-compiled	[CE]  cannot  return  a  value  from  method  whose  result  type  is  void	5	None	replace
9	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,  excluder);  }  [CE]  cannot  return  a  value  from  method  whose  result  type  is  void  [FE]        ComparisonFailure  [CONTEXT]  public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,  excluder);  }  [BUGGY]  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy),  fieldNamingPolicy,  excluder);  }	this.constructorConstructor  =  constructorConstructor;  	non-compiled	[CE]  cannot  return  a  value  from  method  whose  result  type  is  void	5	None	replace
10	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CE]  variable  fieldNamingPolicy  might  already  have  been  assigned  [FE]          ComparisonFailure  [CONTEXT]  public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [BUGGY]  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }	this.constructorConstructor  =  constructorConstructor;  	non-compiled	[CE]  variable  fieldNamingPolicy  might  already  have  been  assigned	5	None	replace
11	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy));  }  [CE]  cannot  return  a  value  from  method  whose  result  type  is  void  [FE]            ComparisonFailure  [CONTEXT]  public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy));  }  [BUGGY]  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  return  new  ReflectiveTypeAdapterFactory(new  FieldNamingStrategy(fieldNamingPolicy,  fieldNamingPolicy));  }	this.constructorConstructor  =  constructorConstructor;  	non-compiled	[CE]  cannot  return  a  value  from  method  whose  result  type  is  void	5	None	replace
12	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [CE]  variable  fieldNamingPolicy  might  already  have  been  assigned  [FE]              ComparisonFailure  [CONTEXT]  public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }  [BUGGY]  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  }	this.constructorConstructor  =  constructorConstructor;  	non-compiled	[CE]  variable  fieldNamingPolicy  might  already  have  been  assigned	5	None	replace
13	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingStrategy  =  fieldNamingPolicy;  this.name  =  name;  }  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]    ComparisonFailure  [CONTEXT]  public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingStrategy  =  fieldNamingPolicy;  this.name  =  name;  }  [BUGGY]  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingStrategy  =  fieldNamingPolicy;  this.name  =  name;  }	this.constructorConstructor  =  constructorConstructor;  	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	5	None	replace
14	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }  [CE]  cannot  find  symbol  bindingFields  [FE]      ComparisonFailure  [CONTEXT]  public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }  [BUGGY]  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.bindingFields  =  new  HashMap  <  String,ObjectConstructor>();  }	this.constructorConstructor  =  constructorConstructor;  	non-compiled	[CE]  cannot  find  symbol  bindingFields	5	None	replace
15	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingStrategy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]        ComparisonFailure  [CONTEXT]  public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingStrategy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [BUGGY]  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingStrategy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }	this.constructorConstructor  =  constructorConstructor;  	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	5	None	replace
16	[BUG]  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }  [CE]  cannot  find  symbol  name  [FE]          ComparisonFailure  [CONTEXT]  public  ReflectiveTypeAdapterFactory(ConstructorConstructor  constructorConstructor,  FieldNamingStrategy  fieldNamingPolicy,  Excluder  excluder)  {  [BUGGY]  if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }  [BUGGY]  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.excluder  =  excluder;  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  <init>  [RETURN_TYPE]  Excluder)  ConstructorConstructor  constructorConstructor  FieldNamingStrategy  fieldNamingPolicy  Excluder  excluder  [VARIABLES]  ConstructorConstructor  constructorConstructor  boolean  deserialized  serialized  ObjectConstructor  constructor  String  name  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	57	57	1	replace	if(constructorConstructor!=  null)  {  this.constructorConstructor  =  constructorConstructor;  }  else  {  this.fieldNamingPolicy  =  fieldNamingPolicy;  this.name  =  name;  }	this.constructorConstructor  =  constructorConstructor;  	non-compiled	[CE]  cannot  find  symbol  name	5	None	replace
