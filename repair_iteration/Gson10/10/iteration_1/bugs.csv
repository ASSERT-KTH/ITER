bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    ComparisonFailure  [CONTEXT]  private  List<String>  getFieldNames(Field  f)  {  SerializedName  annotation  =  f.getAnnotation(SerializedName.class);  [BUGGY]  if(annotation!=  null)  {  [BUGGY]  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	73	73	1	add	if(annotation!=  null)  {	if  (annotation  ==  null)  {  	compilable	  [FE]  NullPointerException  	19	9	replace
2	[BUG]  [BUGGY]  if(annotation!=  null)  {  [FE]  NullPointerException  [FE]    ComparisonFailure  [CONTEXT]  private  List<String>  getFieldNames(Field  f)  {  SerializedName  annotation  =  f.getAnnotation(SerializedName.class);  [BUGGY]  if(annotation!=  null)  {  [BUGGY]  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	73	73	1	replace	if(annotation!=  null)  {	if  (annotation  ==  null)  {  	compilable	  [FE]  NullPointerException  	19	9	replace
3	[BUG]  [BUGGY]  if(annotation  ==  null  ||  annotation.value()  ==  0)  {  [CE]  incomparable  types:  String  and  int  [FE]      ComparisonFailure  [CONTEXT]  private  List<String>  getFieldNames(Field  f)  {  SerializedName  annotation  =  f.getAnnotation(SerializedName.class);  [BUGGY]  if(annotation  ==  null  ||  annotation.value()  ==  0)  {  [BUGGY]  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	73	73	1	replace	if(annotation  ==  null  ||  annotation.value()  ==  0)  {	if  (annotation  ==  null)  {  	non-compiled	[CE]  incomparable  types:  String  and  int	19	None	replace
4	[BUG]  [BUGGY]  if(annotation!=  null  ||  annotation.value()  ==  0)  {  [CE]  incomparable  types:  String  and  int  [FE]        ComparisonFailure  [CONTEXT]  private  List<String>  getFieldNames(Field  f)  {  SerializedName  annotation  =  f.getAnnotation(SerializedName.class);  [BUGGY]  if(annotation!=  null  ||  annotation.value()  ==  0)  {  [BUGGY]  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	73	73	1	replace	if(annotation!=  null  ||  annotation.value()  ==  0)  {	if  (annotation  ==  null)  {  	non-compiled	[CE]  incomparable  types:  String  and  int	19	None	replace
5	[BUG]  [BUGGY]  if(annotation  ==  null  ||  annotation.value()!=  0)  {  [CE]  incomparable  types:  String  and  int  [FE]          ComparisonFailure  [CONTEXT]  private  List<String>  getFieldNames(Field  f)  {  SerializedName  annotation  =  f.getAnnotation(SerializedName.class);  [BUGGY]  if(annotation  ==  null  ||  annotation.value()!=  0)  {  [BUGGY]  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	73	73	1	replace	if(annotation  ==  null  ||  annotation.value()!=  0)  {	if  (annotation  ==  null)  {  	non-compiled	[CE]  incomparable  types:  String  and  int	19	None	replace
6	[BUG]  [BUGGY]  if(annotation  ==  null  ||  annotation.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]            ComparisonFailure  [CONTEXT]  private  List<String>  getFieldNames(Field  f)  {  SerializedName  annotation  =  f.getAnnotation(SerializedName.class);  [BUGGY]  if(annotation  ==  null  ||  annotation.length()  ==  0)  {  [BUGGY]  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	73	73	1	replace	if(annotation  ==  null  ||  annotation.length()  ==  0)  {	if  (annotation  ==  null)  {  	non-compiled	[CE]  cannot  find  symbol	19	None	replace
7	[BUG]  [BUGGY]    [CE]  illegal  start  of  type  [FE]              ComparisonFailure  [CONTEXT]  private  List<String>  getFieldNames(Field  f)  {  SerializedName  annotation  =  f.getAnnotation(SerializedName.class);  [BUGGY]    [BUGGY]  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	73	73	1	replace	  	if  (annotation  ==  null)  {  	non-compiled	[CE]  illegal  start  of  type	19	None	replace
8	[BUG]  [BUGGY]  if(annotation  ==  null  ||  annotation.equals(serializedName))  {  [CE]  cannot  find  symbol  serializedName  [FE]    ComparisonFailure  [CONTEXT]  private  List<String>  getFieldNames(Field  f)  {  SerializedName  annotation  =  f.getAnnotation(SerializedName.class);  [BUGGY]  if(annotation  ==  null  ||  annotation.equals(serializedName))  {  [BUGGY]  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	73	73	1	replace	if(annotation  ==  null  ||  annotation.equals(serializedName))  {	if  (annotation  ==  null)  {  	non-compiled	[CE]  cannot  find  symbol  serializedName	19	None	replace
9	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  private  List<String>  getFieldNames(Field  f)  {  SerializedName  annotation  =  f.getAnnotation(SerializedName.class);  [BUGGY]  if(annotation  ==  null  ||  annotation.equals(fieldNamingPolicy.translateName(f)))  {  [BUGGY]  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	73	73	1	add	if(annotation  ==  null  ||  annotation.equals(fieldNamingPolicy.translateName(f)))  {	if  (annotation  ==  null)  {  	compilable	  [FE]  ComparisonFailure  	19	1	replace
10	[BUG]  [BUGGY]  if(annotation  ==  null  ||  annotation.equals(fieldNamingPolicy.translateName(f)))  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  private  List<String>  getFieldNames(Field  f)  {  SerializedName  annotation  =  f.getAnnotation(SerializedName.class);  [BUGGY]  if(annotation  ==  null  ||  annotation.equals(fieldNamingPolicy.translateName(f)))  {  [BUGGY]  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	73	73	1	replace	if(annotation  ==  null  ||  annotation.equals(fieldNamingPolicy.translateName(f)))  {	if  (annotation  ==  null)  {  	compilable	  [FE]  ComparisonFailure  	19	1	replace
11	[BUG]  [BUGGY]  if(annotation  ==  null  ||  annotation.isEmpty())  {  [CE]  cannot  find  symbol  [FE]        ComparisonFailure  [CONTEXT]  private  List<String>  getFieldNames(Field  f)  {  SerializedName  annotation  =  f.getAnnotation(SerializedName.class);  [BUGGY]  if(annotation  ==  null  ||  annotation.isEmpty())  {  [BUGGY]  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	73	73	1	replace	if(annotation  ==  null  ||  annotation.isEmpty())  {	if  (annotation  ==  null)  {  	non-compiled	[CE]  cannot  find  symbol	19	None	replace
12	[BUG]  [BUGGY]  if(annotation  ==  null  ||  annotation.size()  ==  0)  {  [CE]  cannot  find  symbol  [FE]          ComparisonFailure  [CONTEXT]  private  List<String>  getFieldNames(Field  f)  {  SerializedName  annotation  =  f.getAnnotation(SerializedName.class);  [BUGGY]  if(annotation  ==  null  ||  annotation.size()  ==  0)  {  [BUGGY]  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	73	73	1	replace	if(annotation  ==  null  ||  annotation.size()  ==  0)  {	if  (annotation  ==  null)  {  	non-compiled	[CE]  cannot  find  symbol	19	None	replace
