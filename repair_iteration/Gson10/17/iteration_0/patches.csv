bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getSerialize());  [CE]  cannot  find  symbol  [FE]    ComparisonFailure  [CONTEXT]  final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getSerialize());  [BUGGY]    JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getSerialize());	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getRawType());  	non-compiled	[CE]  cannot  find  symbol	33	None	replace
2	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getRawClass());  [CE]  cannot  find  symbol  [FE]      ComparisonFailure  [CONTEXT]  final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getRawClass());  [BUGGY]    JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getRawClass());	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getRawType());  	non-compiled	[CE]  cannot  find  symbol	33	None	replace
3	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getValue());  [CE]  cannot  find  symbol  [FE]        ComparisonFailure  [CONTEXT]  final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getValue());  [BUGGY]    JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getValue());	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getRawType());  	non-compiled	[CE]  cannot  find  symbol	33	None	replace
4	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getDeserialize());  [CE]  cannot  find  symbol  [FE]          ComparisonFailure  [CONTEXT]  final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getDeserialize());  [BUGGY]    JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getDeserialize());	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getRawType());  	non-compiled	[CE]  cannot  find  symbol	33	None	replace
5	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getQualifiedName());  [CE]  cannot  find  symbol  [FE]            ComparisonFailure  [CONTEXT]  final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getQualifiedName());  [BUGGY]    JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getQualifiedName());	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getRawType());  	non-compiled	[CE]  cannot  find  symbol	33	None	replace
6	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getReturnType());  [CE]  cannot  find  symbol  [FE]              ComparisonFailure  [CONTEXT]  final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getReturnType());  [BUGGY]    JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getReturnType());	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getRawType());  	non-compiled	[CE]  cannot  find  symbol	33	None	replace
7	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  isPrimitive  [FE]                ComparisonFailure  [CONTEXT]  final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {  [BUGGY]    [BUGGY]    JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	  	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getRawType());  	non-compiled	[CE]  cannot  find  symbol  isPrimitive	33	None	replace
8	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getPrimitiveType());  [CE]  cannot  find  symbol  [FE]    ComparisonFailure  [CONTEXT]  final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getPrimitiveType());  [BUGGY]    JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getPrimitiveType());	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getRawType());  	non-compiled	[CE]  cannot  find  symbol	33	None	replace
9	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  [BUGGY]    JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	add	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getRawType());  	compilable	  [FE]  ComparisonFailure  	33	1	replace
10	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  [FE]  ComparisonFailure  [FE]      ComparisonFailure  [CONTEXT]  final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  [BUGGY]    JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getRawType());  	compilable	  [FE]  ComparisonFailure  	33	1	replace
11	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getAnnotation(JsonAdapter.class));  [CE]  cannot  find  symbol  [FE]        ComparisonFailure  [CONTEXT]  final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getAnnotation(JsonAdapter.class));  [BUGGY]    JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getAnnotation(JsonAdapter.class));	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getRawType());  	non-compiled	[CE]  cannot  find  symbol	33	None	replace
12	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getDeclaredType());  [CE]  cannot  find  symbol  [FE]    ComparisonFailure  [CONTEXT]  final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getDeclaredType());  [BUGGY]    JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getDeclaredType());	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getRawType());  	non-compiled	[CE]  cannot  find  symbol	33	None	replace
13	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getDeclaringClass());  [CE]  cannot  find  symbol  [FE]      ComparisonFailure  [CONTEXT]  final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getDeclaringClass());  [BUGGY]    JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getDeclaringClass());	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getRawType());  	non-compiled	[CE]  cannot  find  symbol	33	None	replace
