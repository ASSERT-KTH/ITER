bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  [CE]  variable  isPrimitive  is  already  defined  in  method  createBoundField(Gson,Field,String,TypeToken<?>,boolean,boolean)  [FE]    ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getClass());    final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());	  	non-compiled	[CE]  variable  isPrimitive  is  already  defined  in  method  createBoundField(Gson,Field,String,TypeToken<?>,boolean,boolean)	9	None	add
2	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  if(isPrimitive)  {  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  }  else  {  JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  mapped  =  getTypeAdapter(constructorConstructor,  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  if(isPrimitive)  {  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  }  else  {  JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  mapped  =  getTypeAdapter(constructorConstructor,  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getClass());    if(isPrimitive)  {  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  }  else  {  JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  mapped  =  getTypeAdapter(constructorConstructor,	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
3	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  if(isPrimitive)  {  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  }  else  {  JsonAdapter  annotation  =  context.getAnnotation(JsonAdapter.class);  mapped  =  getTypeAdapter(constructorConstructor,  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  if(isPrimitive)  {  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  }  else  {  JsonAdapter  annotation  =  context.getAnnotation(JsonAdapter.class);  mapped  =  getTypeAdapter(constructorConstructor,  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getClass());    if(isPrimitive)  {  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  }  else  {  JsonAdapter  annotation  =  context.getAnnotation(JsonAdapter.class);  mapped  =  getTypeAdapter(constructorConstructor,	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
4	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  [CE]  variable  isPrimitive  is  already  defined  in  method  createBoundField(Gson,Field,String,TypeToken<?>,boolean,boolean)  [FE]          ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getClass());    boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());	  	non-compiled	[CE]  variable  isPrimitive  is  already  defined  in  method  createBoundField(Gson,Field,String,TypeToken<?>,boolean,boolean)	9	None	add
5	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  if(isPrimitive)  {  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  }  [CE]  variable  isPrimitive  is  already  defined  in  method  createBoundField(Gson,Field,String,TypeToken<?>,boolean,boolean)  [FE]            ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  if(isPrimitive)  {  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  }  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getClass());    if(isPrimitive)  {  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  }	  	non-compiled	[CE]  variable  isPrimitive  is  already  defined  in  method  createBoundField(Gson,Field,String,TypeToken<?>,boolean,boolean)	9	None	add
6	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  if(isPrimitive)  {  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  }  else  {  JsonAdapter  annotation  =  context.getAnnotation(JsonAdapter.class);  mapped  =  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  if(isPrimitive)  {  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  }  else  {  JsonAdapter  annotation  =  context.getAnnotation(JsonAdapter.class);  mapped  =  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getClass());    if(isPrimitive)  {  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  }  else  {  JsonAdapter  annotation  =  context.getAnnotation(JsonAdapter.class);  mapped  =	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
7	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  if(isPrimitive)  {  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  }  else  {  JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  mapped  =  [CE]  illegal  start  of  expression  [FE]                ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  if(isPrimitive)  {  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  }  else  {  JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  mapped  =  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getClass());    if(isPrimitive)  {  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  }  else  {  JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  mapped  =	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
8	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  serialize.getDeserialize());  [CE]  boolean  cannot  be  dereferenced  [FE]              ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  serialize.getDeserialize());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  serialize.getDeserialize());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getDeserialize());    	non-compiled	[CE]  boolean  cannot  be  dereferenced	4	None	replace
9	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getDeserialize(),  deserialize);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getDeserialize(),  deserialize);  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getDeserialize(),  deserialize);	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getDeserialize());    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
10	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getDeserialize(),  serialize);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getDeserialize(),  serialize);  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getDeserialize(),  serialize);	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getDeserialize());    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
11	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldType.getDeserialize());  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldType.getDeserialize());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldType.getDeserialize());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getDeserialize());    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
12	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldValue.getDeserialize());  [CE]  cannot  find  symbol  fieldValue  [FE]                      ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldValue.getDeserialize());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldValue.getDeserialize());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getDeserialize());    	non-compiled	[CE]  cannot  find  symbol  fieldValue	4	None	replace
13	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  context.getDeserialize());  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  context.getDeserialize());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  context.getDeserialize());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getDeserialize());    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
14	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getDeclaringClass(),  serialize);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getDeclaringClass(),  serialize);  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getDeclaringClass(),  serialize);	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getDeclaringClass());    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
15	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getDeclaringClass(),  deserialize);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getDeclaringClass(),  deserialize);  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getDeclaringClass(),  deserialize);	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getDeclaringClass());    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
16	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldType.getDeclaringClass());  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldType.getDeclaringClass());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldType.getDeclaringClass());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getDeclaringClass());    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
17	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  context.getDeclaringClass());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  context.getDeclaringClass());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  context.getDeclaringClass());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getDeclaringClass());    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
18	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getDeclaringClass(),  fieldValue);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getDeclaringClass(),  fieldValue);  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getDeclaringClass(),  fieldValue);	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getDeclaringClass());    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
19	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldValue.getDeclaringClass());  [CE]  cannot  find  symbol  fieldValue  [FE]                    ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldValue.getDeclaringClass());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldValue.getDeclaringClass());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getDeclaringClass());    	non-compiled	[CE]  cannot  find  symbol  fieldValue	13	None	replace
20	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getRawClass(),  serialize);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getRawClass(),  serialize);  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getRawClass(),  serialize);	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getRawClass());    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
21	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldType.getRawClass());  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldType.getRawClass());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldType.getRawClass());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getRawClass());    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
22	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getRawClass(),  deserialize);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getRawClass(),  deserialize);  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getRawClass(),  deserialize);	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getRawClass());    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
23	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  context.getRawClass());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  context.getRawClass());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  context.getRawClass());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getRawClass());    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
24	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getRawClass(),  fieldValue);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getRawClass(),  fieldValue);  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getRawClass(),  fieldValue);	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getRawClass());    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
25	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldValue.getRawClass());  [CE]  cannot  find  symbol  fieldValue  [FE]                    ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldValue.getRawClass());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldValue.getRawClass());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getRawClass());    	non-compiled	[CE]  cannot  find  symbol  fieldValue	2	None	replace
26	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  field.getAnnotation(JsonAdapter.class));  [CE]  method  isPrimitive  in  class  Primitives  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  field.getAnnotation(JsonAdapter.class));  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  field.getAnnotation(JsonAdapter.class));	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getAnnotation(JsonAdapter.class));    	non-compiled	[CE]  method  isPrimitive  in  class  Primitives  cannot  be  applied  to  given  types;	11	None	replace
27	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  context.getAnnotation(JsonAdapter.class));  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  context.getAnnotation(JsonAdapter.class));  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  context.getAnnotation(JsonAdapter.class));	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getAnnotation(JsonAdapter.class));    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
28	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getAnnotation(JsonAdapter.class),  serialize);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getAnnotation(JsonAdapter.class),  serialize);  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getAnnotation(JsonAdapter.class),  serialize);	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getAnnotation(JsonAdapter.class));    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
29	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  typeAdapter.getAnnotation(JsonAdapter.class));  [CE]  cannot  find  symbol  typeAdapter  [FE]                  ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  typeAdapter.getAnnotation(JsonAdapter.class));  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  typeAdapter.getAnnotation(JsonAdapter.class));	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getAnnotation(JsonAdapter.class));    	non-compiled	[CE]  cannot  find  symbol  typeAdapter	11	None	replace
30	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(field,  fieldType.getAnnotation(JsonAdapter.class));  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(field,  fieldType.getAnnotation(JsonAdapter.class));  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(field,  fieldType.getAnnotation(JsonAdapter.class));	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getAnnotation(JsonAdapter.class));    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
31	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  constructor.getAnnotation(JsonAdapter.class));  [CE]  cannot  find  symbol  constructor  [FE]                      ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  constructor.getAnnotation(JsonAdapter.class));  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  constructor.getAnnotation(JsonAdapter.class));	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getAnnotation(JsonAdapter.class));    	non-compiled	[CE]  cannot  find  symbol  constructor	11	None	replace
32	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getValue(),  serialize);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getValue(),  serialize);  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getValue(),  serialize);	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getValue());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
33	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getValue(),  deserialize);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getValue(),  deserialize);  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getValue(),  deserialize);	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getValue());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
34	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldValue.getValue());  [CE]  cannot  find  symbol  fieldValue  [FE]                ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldValue.getValue());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldValue.getValue());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getValue());    	non-compiled	[CE]  cannot  find  symbol  fieldValue	3	None	replace
35	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getValue(),  fieldValue);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getValue(),  fieldValue);  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getValue(),  fieldValue);	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getValue());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
36	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldType.getValue());  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldType.getValue());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldType.getValue());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getValue());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
37	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getKey());  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getKey());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getKey());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getValue());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
38	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getDeclaredType(),  serialize);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getDeclaredType(),  serialize);  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getDeclaredType(),  serialize);	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getDeclaredType());    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
39	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getDeclaredType(),  deserialize);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getDeclaredType(),  deserialize);  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getDeclaredType(),  deserialize);	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getDeclaredType());    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
40	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldType.getDeclaredType());  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldType.getDeclaredType());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldType.getDeclaredType());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getDeclaredType());    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
41	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  context.getDeclaredType());  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  context.getDeclaredType());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  context.getDeclaredType());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getDeclaredType());    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
42	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getDeclaredType(),  fieldValue);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getDeclaredType(),  fieldValue);  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getDeclaredType(),  fieldValue);	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getDeclaredType());    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
43	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldValue.getDeclaredType());  [CE]  cannot  find  symbol  fieldValue  [FE]                  ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldValue.getDeclaredType());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldValue.getDeclaredType());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getDeclaredType());    	non-compiled	[CE]  cannot  find  symbol  fieldValue	12	None	replace
44	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getReturnType(),  serialize);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getReturnType(),  serialize);  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getReturnType(),  serialize);	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getReturnType());    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
45	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getReturnType(),  deserialize);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getReturnType(),  deserialize);  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getReturnType(),  deserialize);	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getReturnType());    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
46	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldType.getReturnType());  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldType.getReturnType());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldType.getReturnType());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getReturnType());    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
47	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getReturnType(),  fieldValue);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getReturnType(),  fieldValue);  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getReturnType(),  fieldValue);	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getReturnType());    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
48	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  context.getReturnType());  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  context.getReturnType());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  context.getReturnType());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getReturnType());    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
49	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldValue.getReturnType());  [CE]  cannot  find  symbol  fieldValue  [FE]                            ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldValue.getReturnType());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldValue.getReturnType());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getReturnType());    	non-compiled	[CE]  cannot  find  symbol  fieldValue	6	None	replace
50	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getQualifiedName(),  serialize);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getQualifiedName(),  serialize);  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getQualifiedName(),  serialize);	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getQualifiedName());    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
51	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getQualifiedName(),  deserialize);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getQualifiedName(),  deserialize);  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getQualifiedName(),  deserialize);	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getQualifiedName());    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
52	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  serialize.getQualifiedName());  [CE]  boolean  cannot  be  dereferenced  [FE]                    ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  serialize.getQualifiedName());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  serialize.getQualifiedName());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getQualifiedName());    	non-compiled	[CE]  boolean  cannot  be  dereferenced	5	None	replace
53	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldType.getQualifiedName());  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldType.getQualifiedName());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldType.getQualifiedName());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getQualifiedName());    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
54	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldValue.getQualifiedName());  [CE]  cannot  find  symbol  fieldValue  [FE]                        ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldValue.getQualifiedName());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldValue.getQualifiedName());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getQualifiedName());    	non-compiled	[CE]  cannot  find  symbol  fieldValue	5	None	replace
55	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  field.getQualifiedName());  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  field.getQualifiedName());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  field.getQualifiedName());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getQualifiedName());    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
56	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getPrimitiveType(),  serialize);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getPrimitiveType(),  serialize);  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getPrimitiveType(),  serialize);	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getPrimitiveType());    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
57	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getPrimitiveType(),  deserialize);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getPrimitiveType(),  deserialize);  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getPrimitiveType(),  deserialize);	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getPrimitiveType());    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
58	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldType.getPrimitiveType());  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldType.getPrimitiveType());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldType.getPrimitiveType());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getPrimitiveType());    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
59	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getPrimitiveType(),  fieldValue);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getPrimitiveType(),  fieldValue);  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getPrimitiveType(),  fieldValue);	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getPrimitiveType());    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
60	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  context.getPrimitiveType());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  context.getPrimitiveType());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  context.getPrimitiveType());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getPrimitiveType());    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
61	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldValue.getPrimitiveType());  [CE]  cannot  find  symbol  fieldValue  [FE]                  ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldValue.getPrimitiveType());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldValue.getPrimitiveType());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getPrimitiveType());    	non-compiled	[CE]  cannot  find  symbol  fieldValue	8	None	replace
62	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getParent());  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getParent());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getParent());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getClass());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
63	[BUG]  [BUGGY]  TypeToken  <?>  jsonAdapterPresent  =  field.getAnnotation(JsonAdapter.class);  [CE]  incompatible  types  [FE]                    ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  TypeToken  <?>  jsonAdapterPresent  =  field.getAnnotation(JsonAdapter.class);  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	TypeToken  <?>  jsonAdapterPresent  =  field.getAnnotation(JsonAdapter.class);	      	non-compiled	[CE]  incompatible  types	7	None	replace
64	[BUG]  [BUGGY]  FieldValue  <?>  fieldValue  =  field.getValue();  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  FieldValue  <?>  fieldValue  =  field.getValue();  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	FieldValue  <?>  fieldValue  =  field.getValue();	      	non-compiled	[CE]  cannot  find  symbol	7	None	replace
65	[BUG]  [BUGGY]  TypeToken  <?>  mapped  =  field.getAnnotation(JsonAdapter.class);  [CE]  incompatible  types  [FE]                        ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  TypeToken  <?>  mapped  =  field.getAnnotation(JsonAdapter.class);  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	TypeToken  <?>  mapped  =  field.getAnnotation(JsonAdapter.class);	      	non-compiled	[CE]  incompatible  types	7	None	replace
66	[BUG]  [BUGGY]  TypeToken  <?>  mapped  =  field.getAnnotation(TypeToken.class);  [CE]  no  suitable  method  found  for  getAnnotation(Class<TypeToken>)  [FE]                          ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  TypeToken  <?>  mapped  =  field.getAnnotation(TypeToken.class);  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	TypeToken  <?>  mapped  =  field.getAnnotation(TypeToken.class);	      	non-compiled	[CE]  no  suitable  method  found  for  getAnnotation(Class<TypeToken>)	7	None	replace
67	[BUG]  [BUGGY]  TypeToken  <?>  jsonAdapterPresent  =  field.getAnnotation(TypeToken.class);  [CE]  no  suitable  method  found  for  getAnnotation(Class<TypeToken>)  [FE]                            ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  TypeToken  <?>  jsonAdapterPresent  =  field.getAnnotation(TypeToken.class);  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	TypeToken  <?>  jsonAdapterPresent  =  field.getAnnotation(TypeToken.class);	      	non-compiled	[CE]  no  suitable  method  found  for  getAnnotation(Class<TypeToken>)	7	None	replace
68	[BUG]  [BUGGY]  Constructor  <?>  constructor  =  field.getConstructor();  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  Constructor  <?>  constructor  =  field.getConstructor();  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	Constructor  <?>  constructor  =  field.getConstructor();	      	non-compiled	[CE]  cannot  find  symbol	7	None	replace
69	[BUG]  [BUGGY]  TypeToken  <?>  jsonAdapterPresent  =  field.getAnnotation(JsonFactory.class);  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  TypeToken  <?>  jsonAdapterPresent  =  field.getAnnotation(JsonFactory.class);  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	TypeToken  <?>  jsonAdapterPresent  =  field.getAnnotation(JsonFactory.class);	      	non-compiled	[CE]  cannot  find  symbol	7	None	replace
70	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getSerialize(),  deserialize);  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getSerialize(),  deserialize);  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getSerialize(),  deserialize);	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getSerialize());    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
71	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  serialize.getSerialize());  [CE]  boolean  cannot  be  dereferenced  [FE]          ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  serialize.getSerialize());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  serialize.getSerialize());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getSerialize());    	non-compiled	[CE]  boolean  cannot  be  dereferenced	1	None	replace
72	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getSerialize(),  serialize);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getSerialize(),  serialize);  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getSerialize(),  serialize);	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getSerialize());    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
73	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldType.getSerialize());  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldType.getSerialize());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldType.getSerialize());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getSerialize());    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
74	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  field.getSerialize());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  field.getSerialize());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  field.getSerialize());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getSerialize());    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
75	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldValue.getSerialize());  [CE]  cannot  find  symbol  fieldValue  [FE]                  ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldValue.getSerialize());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldValue.getSerialize());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getSerialize());    	non-compiled	[CE]  cannot  find  symbol  fieldValue	1	None	replace
76	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  context.getSerialize());  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  context.getSerialize());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  context.getSerialize());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getSerialize());    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
77	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  deserialize);  [CE]  method  isPrimitive  in  class  Primitives  cannot  be  applied  to  given  types;  [FE]          ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  deserialize);  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  deserialize);	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getSerialize());    	non-compiled	[CE]  method  isPrimitive  in  class  Primitives  cannot  be  applied  to  given  types;	1	None	replace
78	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  delegate.getSerialize());  [CE]  cannot  find  symbol  delegate  [FE]            ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  delegate.getSerialize());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  delegate.getSerialize());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getSerialize());    	non-compiled	[CE]  cannot  find  symbol  delegate	1	None	replace
79	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  context.getQualifiedName());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  context.getQualifiedName());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  context.getQualifiedName());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getQualifiedName());    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
80	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  field.getDeclaredType());  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  field.getDeclaredType());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  field.getDeclaredType());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getDeclaredType());    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
81	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldNamingPolicy.getDeclaredType());  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldNamingPolicy.getDeclaredType());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldNamingPolicy.getDeclaredType());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getDeclaredType());    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
82	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  typeAdapter.getDeserialize());  [CE]  cannot  find  symbol  typeAdapter  [FE]              ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  typeAdapter.getDeserialize());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  typeAdapter.getDeserialize());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getDeserialize());    	non-compiled	[CE]  cannot  find  symbol  typeAdapter	4	None	replace
83	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  constructor.getDeserialize());  [CE]  cannot  find  symbol  constructor  [FE]                ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  constructor.getDeserialize());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  constructor.getDeserialize());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getDeserialize());    	non-compiled	[CE]  cannot  find  symbol  constructor	4	None	replace
84	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldNamingPolicy.getDeclaringClass());  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldNamingPolicy.getDeclaringClass());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldNamingPolicy.getDeclaringClass());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getDeclaringClass());    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
85	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  field.getDeclaringClass());  [CE]  method  isPrimitive  in  class  Primitives  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  field.getDeclaringClass());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  field.getDeclaringClass());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getDeclaringClass());    	non-compiled	[CE]  method  isPrimitive  in  class  Primitives  cannot  be  applied  to  given  types;	13	None	replace
86	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldNamingStrategy.getDeclaringClass());  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]              ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldNamingStrategy.getDeclaringClass());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldNamingStrategy.getDeclaringClass());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getDeclaringClass());    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	13	None	replace
87	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  Final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  [CE]  not  a  statement  [FE]    ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  Final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getClass());    Final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());	  	non-compiled	[CE]  not  a  statement	9	None	add
88	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  static  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  static  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getClass());    static  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
89	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  final  boolean  arePrimitive  =  Primitives.isPrimitive(fieldType.getClass());  [CE]  variable  isPrimitive  is  already  defined  in  method  createBoundField(Gson,Field,String,TypeToken<?>,boolean,boolean)  [FE]        ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  final  boolean  arePrimitive  =  Primitives.isPrimitive(fieldType.getClass());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getClass());    final  boolean  arePrimitive  =  Primitives.isPrimitive(fieldType.getClass());	  	non-compiled	[CE]  variable  isPrimitive  is  already  defined  in  method  createBoundField(Gson,Field,String,TypeToken<?>,boolean,boolean)	9	None	add
90	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  field.getRawClass());  [CE]  cannot  find  symbol  [FE]          ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  field.getRawClass());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  field.getRawClass());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getRawClass());    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
91	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  typeAdapter.getRawClass());  [CE]  cannot  find  symbol  typeAdapter  [FE]            ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  typeAdapter.getRawClass());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  typeAdapter.getRawClass());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getRawClass());    	non-compiled	[CE]  cannot  find  symbol  typeAdapter	2	None	replace
92	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  scope.getRawClass());  [CE]  cannot  find  symbol  scope  [FE]              ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  scope.getRawClass());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  scope.getRawClass());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getRawClass());    	non-compiled	[CE]  cannot  find  symbol  scope	2	None	replace
93	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  field.getPrimitiveType());  [CE]  cannot  find  symbol  [FE]        ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  field.getPrimitiveType());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  field.getPrimitiveType());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getPrimitiveType());    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
94	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(field.getAnnotation(JsonAdapter.class));  [CE]  method  isPrimitive  in  class  Primitives  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(field.getAnnotation(JsonAdapter.class));  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(field.getAnnotation(JsonAdapter.class));	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getAnnotation(JsonAdapter.class));    	non-compiled	[CE]  method  isPrimitive  in  class  Primitives  cannot  be  applied  to  given  types;	11	None	replace
95	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getParameterType(0));  [CE]  cannot  find  symbol  [FE]    ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getParameterType(0));  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getParameterType(0));	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getClass());    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
96	[BUG]  [BUGGY]  TypeToken  <?>  jsonAdapterPresent  =  context.getAnnotation(JsonAdapter.class);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  TypeToken  <?>  jsonAdapterPresent  =  context.getAnnotation(JsonAdapter.class);  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	TypeToken  <?>  jsonAdapterPresent  =  context.getAnnotation(JsonAdapter.class);	      	non-compiled	[CE]  cannot  find  symbol	7	None	replace
97	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  fieldType,  serialize,  deserialize);  [CE]  cannot  find  symbol  compiler  [FE]                      ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  NodeTraversal.traverse(compiler,  fieldType,  serialize,  deserialize);  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	NodeTraversal.traverse(compiler,  fieldType,  serialize,  deserialize);	      	non-compiled	[CE]  cannot  find  symbol  compiler	7	None	replace
98	[BUG]  [BUGGY]  ObjectConstructor  constructor  =  field.getAnnotation(JsonAdapter.class);  [CE]  incompatible  types  [FE]                        ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  ObjectConstructor  constructor  =  field.getAnnotation(JsonAdapter.class);  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	ObjectConstructor  constructor  =  field.getAnnotation(JsonAdapter.class);	      	non-compiled	[CE]  incompatible  types	7	None	replace
99	[BUG]  [BUGGY]  FieldValue  <?>  fieldValue  =  field.getValue(fieldType);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  FieldValue  <?>  fieldValue  =  field.getValue(fieldType);  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	FieldValue  <?>  fieldValue  =  field.getValue(fieldType);	      	non-compiled	[CE]  cannot  find  symbol	7	None	replace
100	[BUG]  [BUGGY]  JsonReader  writer  =  context.getJsonReader();  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  JsonReader  writer  =  context.getJsonReader();  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	JsonReader  writer  =  context.getJsonReader();	      	non-compiled	[CE]  cannot  find  symbol	7	None	replace
101	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  context.getValue());  [CE]  cannot  find  symbol  [FE]            ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  context.getValue());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  context.getValue());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getValue());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
102	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  field.getValue());  [CE]  cannot  find  symbol  [FE]              ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  field.getValue());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  field.getValue());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getValue());    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
103	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  typeAdapter.getValue());  [CE]  cannot  find  symbol  typeAdapter  [FE]                ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  typeAdapter.getValue());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  typeAdapter.getValue());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getValue());    	non-compiled	[CE]  cannot  find  symbol  typeAdapter	3	None	replace
104	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  field.getReturnType());  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  field.getReturnType());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  field.getReturnType());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getReturnType());    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
105	[BUG]  [BUGGY]  ObjectConstructor  <?>  constructor  =  field.getAnnotation(JsonAdapter.class);  [CE]  incompatible  types  [FE]                    ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  ObjectConstructor  <?>  constructor  =  field.getAnnotation(JsonAdapter.class);  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	ObjectConstructor  <?>  constructor  =  field.getAnnotation(JsonAdapter.class);	      	non-compiled	[CE]  incompatible  types	7	None	replace
106	[BUG]  [BUGGY]  Constructor  <?>  constructor  =  context.getConstructor();  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  Constructor  <?>  constructor  =  context.getConstructor();  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	Constructor  <?>  constructor  =  context.getConstructor();	      	non-compiled	[CE]  cannot  find  symbol	7	None	replace
107	[BUG]  [BUGGY]  TypeToken  <?>  fieldType  =  field.getAnnotation(Serialize.class);  [CE]  variable  fieldType  is  already  defined  in  method  createBoundField(Gson,Field,String,TypeToken<?>,boolean,boolean)  [FE]                        ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  TypeToken  <?>  fieldType  =  field.getAnnotation(Serialize.class);  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	TypeToken  <?>  fieldType  =  field.getAnnotation(Serialize.class);	      	non-compiled	[CE]  variable  fieldType  is  already  defined  in  method  createBoundField(Gson,Field,String,TypeToken<?>,boolean,boolean)	7	None	replace
108	[BUG]  [BUGGY]  ObjectConstructor  constructor  =  field.getConstructor();  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  ObjectConstructor  constructor  =  field.getConstructor();  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	ObjectConstructor  constructor  =  field.getConstructor();	      	non-compiled	[CE]  cannot  find  symbol	7	None	replace
109	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  if(isPrimitive)  {  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  }  else  {  final  boolean  serialize  =  Primitives.isPrimitive(fieldType.getClass());  }  [CE]  variable  isPrimitive  is  already  defined  in  method  createBoundField(Gson,Field,String,TypeToken<?>,boolean,boolean)  [FE]    ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  if(isPrimitive)  {  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  }  else  {  final  boolean  serialize  =  Primitives.isPrimitive(fieldType.getClass());  }  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getClass());    if(isPrimitive)  {  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  }  else  {  final  boolean  serialize  =  Primitives.isPrimitive(fieldType.getClass());  }	  	non-compiled	[CE]  variable  isPrimitive  is  already  defined  in  method  createBoundField(Gson,Field,String,TypeToken<?>,boolean,boolean)	9	None	add
110	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  if(isPrimitive)  {  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  }  else  {  final  boolean  serialize  =  Primitives.isPrimitive(fieldType.getClass());  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  if(isPrimitive)  {  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  }  else  {  final  boolean  serialize  =  Primitives.isPrimitive(fieldType.getClass());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getClass());    if(isPrimitive)  {  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  }  else  {  final  boolean  serialize  =  Primitives.isPrimitive(fieldType.getClass());	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
111	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  if(isPrimitive)  {  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  }  else  {  final  boolean  serialized  =  Primitives.isPrimitive(fieldType.getClass());  }  [CE]  variable  isPrimitive  is  already  defined  in  method  createBoundField(Gson,Field,String,TypeToken<?>,boolean,boolean)  [FE]        ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  if(isPrimitive)  {  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  }  else  {  final  boolean  serialized  =  Primitives.isPrimitive(fieldType.getClass());  }  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getClass());    if(isPrimitive)  {  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass());  }  else  {  final  boolean  serialized  =  Primitives.isPrimitive(fieldType.getClass());  }	  	non-compiled	[CE]  variable  isPrimitive  is  already  defined  in  method  createBoundField(Gson,Field,String,TypeToken<?>,boolean,boolean)	9	None	add
112	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  serialize.getDeclaringClass());  [CE]  boolean  cannot  be  dereferenced  [FE]          ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  serialize.getDeclaringClass());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  serialize.getDeclaringClass());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getDeclaringClass());    	non-compiled	[CE]  boolean  cannot  be  dereferenced	13	None	replace
113	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  serialize.getReturnType());  [CE]  boolean  cannot  be  dereferenced  [FE]                  ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  serialize.getReturnType());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  serialize.getReturnType());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getReturnType());    	non-compiled	[CE]  boolean  cannot  be  dereferenced	6	None	replace
114	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass()).booleanValue();  [CE]  boolean  cannot  be  dereferenced  [FE]    ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass()).booleanValue();  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass()).booleanValue();	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getClass());    	non-compiled	[CE]  boolean  cannot  be  dereferenced	10	None	replace
115	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.toString());  [CE]  method  isPrimitive  in  class  Primitives  cannot  be  applied  to  given  types;  [FE]      ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.toString());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.toString());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getClass());    	non-compiled	[CE]  method  isPrimitive  in  class  Primitives  cannot  be  applied  to  given  types;	10	None	replace
116	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass(),  serialize);  [CE]  method  isPrimitive  in  class  Primitives  cannot  be  applied  to  given  types;  [FE]        ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass(),  serialize);  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType.getClass(),  serialize);	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getClass());    	non-compiled	[CE]  method  isPrimitive  in  class  Primitives  cannot  be  applied  to  given  types;	10	None	replace
117	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  serialize.getValue());  [CE]  boolean  cannot  be  dereferenced  [FE]            ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  serialize.getValue());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  serialize.getValue());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getValue());    	non-compiled	[CE]  boolean  cannot  be  dereferenced	3	None	replace
118	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  serialize.getRawClass());  [CE]  boolean  cannot  be  dereferenced  [FE]          ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  serialize.getRawClass());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  serialize.getRawClass());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getRawClass());    	non-compiled	[CE]  boolean  cannot  be  dereferenced	2	None	replace
119	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldNamingStrategy.getDeclaredType());  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]        ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldNamingStrategy.getDeclaredType());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  fieldNamingStrategy.getDeclaredType());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getDeclaredType());    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	12	None	replace
120	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  serialize.getDeclaredType());  [CE]  boolean  cannot  be  dereferenced  [FE]          ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  serialize.getDeclaredType());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  serialize.getDeclaredType());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getDeclaredType());    	non-compiled	[CE]  boolean  cannot  be  dereferenced	12	None	replace
121	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  processor.getDeserialize());  [CE]  cannot  find  symbol  processor  [FE]              ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  processor.getDeserialize());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  processor.getDeserialize());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getDeserialize());    	non-compiled	[CE]  cannot  find  symbol  processor	4	None	replace
122	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  serializedName.getQualifiedName());  [CE]  cannot  find  symbol  serializedName  [FE]                ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  serializedName.getQualifiedName());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  serializedName.getQualifiedName());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getQualifiedName());    	non-compiled	[CE]  cannot  find  symbol  serializedName	5	None	replace
123	[BUG]  [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  serialize.getPrimitiveType());  [CE]  boolean  cannot  be  dereferenced  [FE]        ComparisonFailure    [CONTEXT]    final  TypeToken<?>  fieldType,  boolean  serialize,  boolean  deserialize)  {    [BUGGY]  final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  serialize.getPrimitiveType());  [BUGGY]      JsonAdapter  annotation  =  field.getAnnotation(JsonAdapter.class);  TypeAdapter<?>  mapped  =  null;  if  (annotation  !=  null)  {  mapped  =  getTypeAdapter(constructorConstructor,  context,  fieldType,  annotation);  }  final  boolean  jsonAdapterPresent  =  mapped  !=  null;  if  (mapped  ==  null)  mapped  =  context.getAdapter(fieldType);  final  TypeAdapter<?>  typeAdapter  =  mapped;  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  createBoundField  [RETURN_TYPE]  ReflectiveTypeAdapterFactory$BoundField  Gson  context  Field  field  String  name  TypeToken<?>  fieldType  boolean  serialize  boolean  deserialize  [VARIABLES]  Gson  context  String  $anonymous0  alternate  name  serializedName  JsonAdapter  annotation  Excluder  excluder  JsonWriter  writer  FieldNamingStrategy  fieldNamingPolicy  ConstructorConstructor  constructorConstructor  Field  field  boolean  $anonymous1  $anonymous2  deserialize  deserialized  isPrimitive  jsonAdapterPresent  serialize  serialized  TypeToken  fieldType  ObjectConstructor  constructor  TypeAdapter  mapped  t  typeAdapter  JsonReader  reader  Object  fieldValue  value  Map  boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	106	106	1	replace	final  boolean  isPrimitive  =  Primitives.isPrimitive(fieldType,  serialize.getPrimitiveType());	  final    boolean    isPrimitive    =    Primitives.isPrimitive(fieldType.getPrimitiveType());    	non-compiled	[CE]  boolean  cannot  be  dereferenced	8	None	replace
