projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,context,fieldType,constructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,context,fieldType,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,constructorConstructor,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,context,constructorConstructor,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,context,constructor,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,context,constructorConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,context,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,context,fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,constructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,constructorConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(constructorConstructor,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,constructorConstructor,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,constructorConstructor,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(type,annotation,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,constructor,context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,constructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,constructorConstructor,context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldValue,constructor,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,isPrimitive,constructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,context,fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,context,fieldType,serialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,serialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,typeAdapter);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,serialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,constructorConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(field,annotation,constructorConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,annotation,constructorConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(compiler,annotation,constructorConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(constructor,annotation,context,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(type,annotation,constructorConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,fieldNamingStrategy,constructorConstructor,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,fieldType,constructorConstructor,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,constructorConstructor,annotation,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(type,fieldType,constructorConstructor,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=annotation.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=context.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=context.getAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=annotation.getAnnotation(JsonFactory.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=annotation.getAnnotation(JsonConstants.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111TypeToken<?>mapped=annotation.getTypeToken();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=annotation.getAnnotation(JsonReader.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=annotation.getAnnotation(JsonNull.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,context,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,context,annotation,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,fieldType,annotation,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,annotation,fieldType,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,fieldType,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,constructorConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,fieldNamingStrategy,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,constructorConstructor,fieldNamingStrategy);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,constructorConstructor,serialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,context,constructorConstructor,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,constructorConstructor,context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,constructorConstructor,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,serialize,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,context,annotation,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,annotation,fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,isPrimitive,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,fieldType,mapped,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,context,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,context,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(compiler,fieldType,constructorConstructor,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,context,fieldType,typeAdapter);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldNamingStrategy,constructor,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,delegate);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,descriptor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=Primitives.isPrimitive(fieldType.getRawType());
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=Primitives.isPrimitive(fieldType.getRawType());mapped=context.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=Primitives.isPrimitive(fieldType.getRawType());mapped=field.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=Primitives.isPrimitive(fieldType.getRawType());mapped=context.getAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=Primitives.isPrimitive(fieldType.getRawType());mapped=annotation.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=context.getAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,constructorConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,context,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,deserialize,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,constructorConstructor,fieldNamingPolicy);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=context.isPrimitive(fieldType.getRawType());
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldNamingStrategy,annotation,constructorConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,constructorConstructor,fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(constructorConstructor,annotation,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(constructor,annotation,constructorConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,constructorConstructor,typeAdapter);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,constructorConstructor,annotation,fieldNamingStrategy);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,context,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,fieldType,annotation,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,methodNamingStrategy);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,typeAdapter,constructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,fieldNamingStrategy,context,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=annotation.getAnnotation(JsonParser.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=annotation.getAnnotation(JsonToken.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=annotation.getAnnotation(JsonObjectAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,fieldType,constructorConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,constructorConstructor,serialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,constructorConstructor,fieldNamingStrategy);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,isPrimitive,serialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,isPrimitive,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,isPrimitive,typeAdapter);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,isPrimitive,context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,annotation,constructorConstructor,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,fieldNamingStrategy,constructorConstructor,context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,fieldNamingStrategy,constructorConstructor,context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,constructorConstructor,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,fieldNamingStrategy,annotation,constructorConstructor,context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,constructorConstructor,fieldValue);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=Primitives.isPrimitive(annotation.getRawType());
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=Primitives.isPrimitive(fieldType.getRawType(),annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=Primitives.isPrimitive(fieldType.getSerialize());
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=Primitives.isPrimitive(fieldType.getReturnType());
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=Primitives.isPrimitive(annotation.getType());
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,typeAdapter,context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,constructor,typeAdapter);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,context,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,serialize,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,constructorConstructor,serialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,fieldNamingStrategy,constructorConstructor,serialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,fieldType,constructorConstructor,serialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,constructorConstructor,serialize,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=field.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=Primitives.isPrimitive(annotation.getRawType());mapped=field.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=Primitives.isPrimitive(fieldType.getRawType())&&mapped=field.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=Primitives.isPrimitive(fieldType.getSerialize());mapped=field.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=Primitives.isPrimitive(fieldType.getRawType());JsonAdapterannotation=field.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,constructorConstructor,context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(compiler,annotation,constructorConstructor,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,fieldValue,annotation,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,fieldNamingStrategy,annotation,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,fieldValue,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,fieldType,annotation,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,annotation,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,fieldNamingStrategy,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,fieldType,constructorConstructor,typeAdapter,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,fieldType,constructorConstructor,annotation,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,fieldType,constructorConstructor,jsonAdapterPresent,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,context,constructorConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,constructorConstructor,context,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,fieldType,constructorConstructor,isPrimitive,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,serialize,typeAdapter);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldValue,constructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,isPrimitive,constructor,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,name,constructor,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,type,constructor,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,fieldNamingStrategy);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,serialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,fieldValue);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldNamingPolicy,constructor,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,typeAdapter,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,fieldType,serialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(type,annotation,fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,serialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(type,fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,fieldNamingPolicy,context,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,fieldNamingPolicy,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,fieldNamingStrategy,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,isPrimitive,context,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,constructorConstructor,serialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,constructorConstructor,typeAdapter);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,constructorConstructor,value);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,annotation,constructorConstructor,fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(constructorConstructor,annotation,fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(constructor,annotation,fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=Context.isPrimitive(fieldType.getRawType());
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=context.isPrimitive(fieldType.getRawType(),annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=context.isPrimitive(fieldType.getRawType(),deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=context.isPrimitive(fieldType.getRawType()+1);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,serialize,deserialize,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(type,annotation,fieldType,serialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(serialize,fieldType,serialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(type,fieldType,serialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(text,fieldType,serialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,fieldType,annotation,constructorConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,constructorConstructor,fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(compiler,context,annotation,constructorConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,serialize,constructorConstructor,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,fieldType,constructorConstructor,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=context.getAdapter(fieldType);mapped=context.getAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=context.getAdapter(fieldType);finalbooleanserialize=context.getAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=context.getAdapter(fieldType);TypeToken<?>mapped=context.getAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=context.getAdapter(fieldType);finalmapped=context.getAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=context.getAdapter(fieldType);finalObjectConstructorconstructor=context.getConstructor(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=context.getAdapter(fieldType);finalObjectConstructorconstructor=context.getAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=context.getAdapter(fieldType);mapped=field.getAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,type,constructorConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111typeAdapter=getTypeAdapter(fieldType,annotation,constructorConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(field,fieldType,constructorConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(field,annotation,constructorConstructor,fieldValue,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(field,annotation,fieldNamingStrategy,constructorConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(field,annotation,constructorConstructor,typeAdapter,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(field,annotation,constructorConstructor,serialize,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(field,annotation,constructorConstructor,deserialize,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(field,fieldValue,constructorConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,constructor,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,serialize,constructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,constructor,serialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(field,constructorConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(field,annotation,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(field.getConstructor(),annotation,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldConstructor,annotation,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,fieldType,serialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,annotation,fieldType,serialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(type,annotation,fieldType,serialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=field.getAnnotation(JsonFactory.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=context.getAnnotation(JsonFactory.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=fields.getAnnotation(JsonFactory.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=annotation.getAnnotation(JsonFactory.class,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,serialize,annotation,context,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(compiler,fieldType,constructorConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(compiler,annotation,fieldNamingStrategy,constructorConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(compiler,annotation,fieldConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,annotation,constructorConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(compiler,constructorConstructor,fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,fieldType,constructorConstructor,typeAdapter,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,fieldType,constructorConstructor,annotation,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,fieldType,constructorConstructor,serialize,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,fieldType,annotation,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,fieldType,serialize,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,fieldType,beanType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=annotation.getAnnotation(JsonAdapter.class,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=typeAdapter.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=field.getAnnotation(JsonNull.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=context.getAnnotation(JsonNull.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=annotation.getAnnotation(JsonNull.class,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=fields.getAnnotation(JsonNull.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,serialize,annotation,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,serialize,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,fieldValue,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,typeAdapter,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(compiler,fieldType,constructorConstructor,serialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(compiler,fieldType,constructorConstructor,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(compiler,fieldType,annotation,constructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,fieldNamingPolicy,constructorConstructor,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,isPrimitive,constructorConstructor,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldNamingStrategy,constructorConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,context,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,annotation,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,fieldType,serialize,mapped,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,mapped,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,fieldType,mapped,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,context,mapped,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(compiler,fieldType,mapped,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(type,fieldType,mapped,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,fieldNamingStrategy,annotation,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,annotation,context,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,serialize,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,constructorConstructor,serialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(writer,annotation,fieldType,constructorConstructor,serialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(constructorConstructor,fieldType,serialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=field.getAnnotation(JsonReader.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=context.getAnnotation(JsonReader.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=annotation.getAnnotation(JsonReader.class,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=fields.getAnnotation(JsonReader.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=typeAdapter.getAnnotation(JsonReader.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldNamingStrategy,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,typeAdapter,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(field,annotation,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111typeAdapter=getTypeAdapter(fieldType,annotation,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,type,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,constructor,typeAdapter,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,constructor,serialize,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,constructor,isPrimitive,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldNamingPolicy,annotation,constructorConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,fieldType,constructorConstructor,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,serialize,constructorConstructor,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(constructorConstructor,fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(type,annotation,fieldType,constructorConstructor,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(writer,fieldType,constructorConstructor,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=field.getAnnotation(JsonParser.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=context.getAnnotation(JsonParser.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=annotation.getAnnotation(JsonParser.class,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=fields.getAnnotation(JsonParser.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=typeAdapter.getAnnotation(JsonParser.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(constructorConstructor,annotation,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(type,annotation,constructorConstructor,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,context,annotation,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,context,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,annotation,fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,delegate,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(type,annotation,fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(compiler,fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(type,annotation,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=field.getAnnotation(JsonConstants.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=context.getAnnotation(JsonConstants.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=annotation.getAnnotation(JsonConstants.class,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=fields.getAnnotation(JsonConstants.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111TypeToken<?>mapped=field.getTypeToken();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111TypeToken<?>mapped=fieldType.getTypeToken();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111TypeToken<?>mapped=context.getTypeToken();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111TypeToken<?>mapped=annotation.getRawTypeToken();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111TypeToken<?>mapped=typeAdapter.getTypeToken();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111TypeToken<?>mapped=annotation.toString();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,serialize,context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=context.getAnnotation(JsonAdapter.class,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=context.getAnnotation(JsonAdapter.class,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=field.getAnnotation(JsonObjectAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=context.getAnnotation(JsonObjectAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=annotation.getAnnotation(JsonObjectAdapter.class,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=typeAdapter.getAnnotation(JsonObjectAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=Primitives.isPrimitive(annotation.getRawType());mapped=context.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=Primitives.isPrimitive(fieldType.getRawType())&&mapped=context.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=Primitives.isPrimitive(fieldType.getSerialize());mapped=context.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=Primitives.isPrimitive(fieldType.getReturnType());mapped=context.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,constructorConstructor,typeAdapter,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(constructorConstructor,fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,constructorConstructor,isPrimitive,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,constructorConstructor,deserialize,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,constructorConstructor,serialize,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=context.getAdapter(fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=field.getAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=context.getAdapter(fieldValue,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=context.getAdapter(fieldValue);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=Primitives.isPrimitive(fieldType.getRawType())&&mapped=context.getAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=Primitives.isPrimitive(fieldType.getRawType());mapped=field.getAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=Primitives.isPrimitive(fieldType.getRawClass());mapped=context.getAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=Primitives.isPrimitive(fieldType.getSerialize());mapped=context.getAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,annotation,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(compiler,fieldType,annotation,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,fieldType,serialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,context,serialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldNamingPolicy,annotation,constructorConstructor,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,fieldType,annotation,constructorConstructor,fieldNamingPolicy);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,constructorConstructor,fieldNamingPolicy);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldNamingPolicy,annotation,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,fieldType,constructorConstructor,jsonAdapterPresent);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,fieldNamingStrategy,constructorConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,constructorConstructor,fieldValue,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,fieldNamingStrategy,constructorConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,constructorConstructor,typeAdapter,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=Primitives.isPrimitive(fieldType.getRawType())&&mapped=annotation.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=Primitives.isPrimitive(fieldType.getSerialize());mapped=annotation.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=Primitives.isPrimitive(fieldType.getRawClass());mapped=annotation.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=Primitives.isPrimitive(fieldType.getRawType());JsonAdaptermapped=annotation.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=Primitives.isPrimitive(fieldType.getReturnType());mapped=annotation.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,context.getConstructor());
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,context.getConstructorConstructor());
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,fieldType,annotation,constructorConstructor,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(type,fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=annotation.getAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=context.getAdapter(fieldType.getRawType());
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=field.getAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=context.getAdapter(fieldType,serialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=context.getAdapter(fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,serialize,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,context,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,constructorConstructor,isPrimitive,context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,constructorConstructor,typeAdapter,context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,constructorConstructor,context,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,constructorConstructor,serialize,context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=field.getAnnotation(JsonToken.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=context.getAnnotation(JsonToken.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=annotation.getAnnotation(JsonToken.class,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=fields.getAnnotation(JsonToken.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,isPrimitive,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,mapped,isPrimitive,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,fieldType,isPrimitive,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(type,annotation,fieldType,isPrimitive,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,beanType,isPrimitive,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,serialize,constructorConstructor,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,fieldNamingStrategy,constructorConstructor,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(type,fieldType,annotation,constructorConstructor,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(constructorConstructor,annotation,fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,fieldValue,constructorConstructor,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,fieldNamingStrategy,constructorConstructor,annotation,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,constructorConstructor,annotation,fieldValue,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,constructorConstructor,annotation,deserialize,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(constructorConstructor,fieldType,annotation,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,Serialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,mapped,deserialize,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,serialize,deserialize,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,deserialize,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(type,annotation,fieldType,deserialize,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,typeAdapter,context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,serialize,context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,isPrimitive,context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,constructorConstructor,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation.getConstructor(),fieldType,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(compiler,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(type,annotation,fieldType,serialize,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,constructorConstructor,typeAdapter);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,constructorConstructor,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,constructorConstructor,annotated);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,constructorConstructor,method);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(constructor,fieldType,annotation,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,fieldType,serialize,annotation,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,fieldType,serialize,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,fieldType,constructorConstructor,typeAdapter);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,constructorConstructor,annotation,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,constructorConstructor,annotation,fieldNamingPolicy);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,constructorConstructor,annotation,typeAdapter);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,constructorConstructor,annotation,serialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,constructorConstructor,annotation,fieldValue);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,constructorConstructor,annotation,value);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(field,annotation,context,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,annotation,context,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,annotation,constructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,constructor,context,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,constructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,serialize,fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,deserialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,beanType,deserialize,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,constructor,fieldValue);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,constructor,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,fieldNamingStrategy,context,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,fieldNamingStrategy,fieldValue,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=fields.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,constructorConstructor,deserialize,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=context.getAdapter(fieldType);finalbooleanisPrimitive=Primitives.isPrimitive(fieldType.getRawType());mapped=context.getAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=context.getAdapter(fieldType);finalbooleanisPrimitive=Primitives.isPrimitive(fieldType.getRawType());
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=context.getAdapter(fieldType);finalbooleanisPrimitive=Primitives.isPrimitive(fieldType.getRawType()).booleanValue();mapped=context.getAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=context.getAdapter(fieldType);finalObjectConstructor<?>mapped=context.getAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=context.getAdapter(fieldType);finalTypeToken<?>mapped=context.getAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=context.getAdapter(fieldType);finalbooleanisPrimitive=Primitives.isPrimitive(fieldType.getRawType())&&mapped!=null;mapped=context.getAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=context.getAdapter(fieldType);finalbooleanisPrimitive=Primitives.isPrimitive(fieldType.getSerialize());mapped=context.getAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=annotations.getAnnotation(JsonToken.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,annotation,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,fieldNamingStrategy,fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,fieldType,serialize,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,value);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,constructorConstructor,annotation,delegate);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,field,constructorConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(constructorConstructor,field,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,fieldType,deserialize,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,fieldNamingPolicy,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,context,annotations);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,fieldNamingStrategy,context,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,factory,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,factory,constructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,constructorConstructor,fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,constructorConstructor,methodNamingPolicy);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,constructorConstructor,delegate);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,serialize,isPrimitive,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,serialize,isPrimitive,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,fieldNamingPolicy);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,annotation,context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,serialize,deerialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldNamingPolicy,constructorConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,fieldType,constructorConstructor,deserialize,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,fieldType,constructorConstructor,serialize,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,constructorConstructor,delegate);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,constructorConstructor,t);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,constructorConstructor,jsonAdapterPresent);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=annotations.getAnnotation(JsonReader.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,constructorConstructor,fieldType,serialize,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,constructorConstructor,fieldType,deserialize,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(field,annotation,isPrimitive,context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldNamingStrategy,annotation,constructorConstructor,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=annotation.getAnnotation(JsonNull.class,JsonNull.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,fieldNamingStrategy,constructorConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=Primitives.isPrimitive(fieldType.getClass());mapped=context.getAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=Primitives.isPrimitive(fieldType.getValue());mapped=context.getAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldNamingStrategy,constructorConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldNamingPolicy,fieldType,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,constructorConstructor,serialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,fieldNamingStrategy,constructorConstructor,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,serialize,constructorConstructor,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=primitives.isPrimitive(fieldType.getRawType());
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=Primitives.isPrimitive(fieldType.getRawValue());
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=Primitives.isPrimitive(fieldType.getRawClass());
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=annotations.getAnnotation(JsonParser.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,constructorConstructor,fieldNamingStrategy,context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,constructorConstructor,typeAdapter,context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,fieldNamingStrategy,context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,serialize,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,constructorConstructor,serialize,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,serialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(compiler,fieldType,serialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(value,fieldType,serialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldNamingStrategy,fieldType,constructorConstructor,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(constructor,fieldType,constructorConstructor,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=Primitives.isPrimitive(fieldType.getRawClass());mapped=context.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=Primitives.isPrimitive(fieldType.getClass());mapped=context.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,deserialize,typeAdapter);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=Primitives.isPrimitive(fieldType.getPrimitiveType());
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=Primitives.isPrimitive(fieldType.getValue());
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=Primitives.isPrimitive(fieldType.getClass());
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldNamingStrategy,constructorConstructor,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(field,constructorConstructor,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=annotations.getAnnotation(JsonFactory.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,constructor,fieldNamingStrategy);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,constructor,fieldNamingPolicy);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldtype,annotation,constructorConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111TypeToken<?>mapped=annotation.cloneTree();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111TypeToken<?>mapped=annotation.getTypeToken(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=fields.getAnnotation(JsonObjectAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=annotations.getAnnotation(JsonObjectAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=Primitives.isPrimitive(fieldType.getRawClass());mapped=field.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=annotations.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=annotations.getAnnotation(JsonConstants.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldNamingPolicy,annotation,constructorConstructor,context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldNamingStrategy,annotation,constructorConstructor,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,isPrimitive,delegate);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,factory,constructorConstructor,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,typeAdapter,constructorConstructor,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,context,annotation,serialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,fieldType,serialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(compiler,annotation,fieldType,constructorConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=context.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=context.getTypeAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(constructorConstructor,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,constructorConstructor,annotation,methodNamingStrategy);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,typeAdapter);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,methodValue);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,constructor,methodNamingStrategy);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,typeAdapterFactory);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,fieldType,constructorConstructor,name);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,delegate,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=annotation.getAnnotation(JsonToken.class,field);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111if(fieldType.getRawType()!=fieldType){finalbooleanisPrimitive=Primitives.isPrimitive(fieldType.getRawType());mapped=annotation.getAnnotation(JsonAdapter.class);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,methodType,deserialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,constructorConstructor,fieldNamingPolicy);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,constructorConstructor,methodNamingPolicy);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,fieldNamingStrategy,annotation,constructorConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,fieldValue,constructorConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,constructorConstructor,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType.getRawType(),annotation,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldValue,annotation,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111map=getTypeAdapter(fieldType,annotation,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,constructorConstructor,descriptor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,constructorConstructor,methodNamingStrategy);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=annotation.getAnnotation(JsonFactory.class,fieldValue);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,serialize,fieldType,annotation,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,fieldType,serialize,deserialize,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111if(annotation==null){finalbooleanisPrimitive=Primitives.isPrimitive(fieldType.getRawType());mapped=context.getAnnotation(JsonAdapter.class);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,constructor,description);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldValue,annotation,constructorConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=context.getAdapter(fieldType.getRawClass());
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=context.getAdapter(fieldType.toString());
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,methodType,isPrimitive,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,isPrimitive,methodValue);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,serializedName,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,constructorConstructor,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,constructorConstructor,constructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,fieldValue,context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,fieldConstructor,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType.getRawType(),annotation,constructorConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111map=getTypeAdapter(fieldType,annotation,constructorConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,deserialize,constructorConstructor,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,serialize,fieldNamingStrategy,constructorConstructor,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldNamingStrategy,constructorConstructor,annotation,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,constructor,methodValue);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111if(annotation==null){finalbooleanisPrimitive=Primitives.isPrimitive(fieldType.getRawType());mapped=field.getAnnotation(JsonAdapter.class);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111if(annotation!=null){finalbooleanisPrimitive=Primitives.isPrimitive(fieldType.getRawType());mapped=field.getAnnotation(JsonAdapter.class);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(text,fieldType,constructorConstructor,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=context.getAdapter(fieldType);finalbooleanserialize=mapped!=null;mapped=context.getAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=context.getAdapter(fieldType);finalObjectConstructor<?>mapped=field.getAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(field,annotation,fieldValue,constructorConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,constructorConstructor,fieldValue,context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,context,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,methodType,serialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=annotation.getAnnotation(JsonAdapter.class,field);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(compiler,fieldType,constructorConstructor,annotation,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(compiler,fieldType,constructorConstructor,annotation,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=Primitives.isPrimitive(fieldType.getDeclaringClass());
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=annotation.getAnnotation(JsonNull.class,fieldValue);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(text,fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,constructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,annotation,field,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,methodType,constructorConstructor,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(serialize,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,serializedName,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(fieldType,constructorConstructor,mapped,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,fieldType,constructorConstructor,methodValue,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=annotation.getAnnotation(JsonParser.class,fieldValue);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=Primitives.isPrimitive(fieldType.getRawType());mapped=context.getAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=Primitives.isPrimitive(fieldType.getRawType());mapped=context.getAdapter(fieldValue);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=Primitives.isPrimitive(fieldType.getRawClass());mapped=context.getAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(text,annotation,constructorConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,constructorConstructor,fieldValue);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,fieldType,annotation,constructorConstructor.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,fieldType,constructorConstructor,annotation,typeAdapter);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,fieldType,constructorConstructor,annotation,serialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(compiler,fieldType,annotation,constructorConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=FieldUtils.isPrimitive(fieldType.getRawType());
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=context.isPrimitive(fieldType.getRawClass());
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111finalbooleanisPrimitive=Visibility.isPrimitive(fieldType.getRawType());
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,methodNamingPolicy);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=annotation.getAnnotation(JsonReader.class,fieldValue);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,constructorConstructor,fieldValue,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(annotation,fieldType,constructorConstructor,methodValue,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,fieldType,annotation,isPrimitive,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,fieldType,annotation,deserialize,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,fieldType,annotation,isPrimitive,serialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java111mapped=getTypeAdapter(context,fieldType,annotation,isPrimitive,typeAdapter);
