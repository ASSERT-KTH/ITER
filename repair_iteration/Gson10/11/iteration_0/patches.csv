bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  name  =  f.translateName(fieldNamingPolicy);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure  [CONTEXT]  private  List<String>  getFieldNames(Field  f)  {  SerializedName  annotation  =  f.getAnnotation(SerializedName.class);  if  (annotation  ==  null)  {  [BUGGY]  String  name  =  f.translateName(fieldNamingPolicy);  [BUGGY]  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  List<String>  fieldNames  =  new  ArrayList<String>(alternates.length  +  1);  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	74	74	1	replace	String  name  =  f.translateName(fieldNamingPolicy);	String  name  =  fieldNamingPolicy.translateName(f);  	non-compiled	[CE]  cannot  find  symbol	21	None	replace
2	[BUG]  [BUGGY]  String  name  =  annotation.translateName(f);  [CE]  cannot  find  symbol  [FE]      ComparisonFailure  [CONTEXT]  private  List<String>  getFieldNames(Field  f)  {  SerializedName  annotation  =  f.getAnnotation(SerializedName.class);  if  (annotation  ==  null)  {  [BUGGY]  String  name  =  annotation.translateName(f);  [BUGGY]  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  List<String>  fieldNames  =  new  ArrayList<String>(alternates.length  +  1);  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	74	74	1	replace	String  name  =  annotation.translateName(f);	String  name  =  fieldNamingPolicy.translateName(f);  	non-compiled	[CE]  cannot  find  symbol	21	None	replace
3	[BUG]  [BUGGY]  String  name  =  f.translateName(fieldNamingPolicy.getSerializedName());  [CE]  cannot  find  symbol  [FE]        ComparisonFailure  [CONTEXT]  private  List<String>  getFieldNames(Field  f)  {  SerializedName  annotation  =  f.getAnnotation(SerializedName.class);  if  (annotation  ==  null)  {  [BUGGY]  String  name  =  f.translateName(fieldNamingPolicy.getSerializedName());  [BUGGY]  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  List<String>  fieldNames  =  new  ArrayList<String>(alternates.length  +  1);  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	74	74	1	replace	String  name  =  f.translateName(fieldNamingPolicy.getSerializedName());	String  name  =  fieldNamingPolicy.translateName(f);  	non-compiled	[CE]  cannot  find  symbol	21	None	replace
4	[BUG]  [BUGGY]  String  name  =  f.translateName(fieldNamingPolicy.getName());  [CE]  cannot  find  symbol  [FE]          ComparisonFailure  [CONTEXT]  private  List<String>  getFieldNames(Field  f)  {  SerializedName  annotation  =  f.getAnnotation(SerializedName.class);  if  (annotation  ==  null)  {  [BUGGY]  String  name  =  f.translateName(fieldNamingPolicy.getName());  [BUGGY]  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  List<String>  fieldNames  =  new  ArrayList<String>(alternates.length  +  1);  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	74	74	1	replace	String  name  =  f.translateName(fieldNamingPolicy.getName());	String  name  =  fieldNamingPolicy.translateName(f);  	non-compiled	[CE]  cannot  find  symbol	21	None	replace
5	[BUG]  [BUGGY]  String  name  =  f.translateName(fieldNamingPolicy.getSimpleName());  [CE]  cannot  find  symbol  [FE]            ComparisonFailure  [CONTEXT]  private  List<String>  getFieldNames(Field  f)  {  SerializedName  annotation  =  f.getAnnotation(SerializedName.class);  if  (annotation  ==  null)  {  [BUGGY]  String  name  =  f.translateName(fieldNamingPolicy.getSimpleName());  [BUGGY]  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  List<String>  fieldNames  =  new  ArrayList<String>(alternates.length  +  1);  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	74	74	1	replace	String  name  =  f.translateName(fieldNamingPolicy.getSimpleName());	String  name  =  fieldNamingPolicy.translateName(f);  	non-compiled	[CE]  cannot  find  symbol	21	None	replace
6	[BUG]  [BUGGY]  String  name  =  f.translateName(fieldNamingPolicy.getDeclaringClass());  [CE]  cannot  find  symbol  [FE]              ComparisonFailure  [CONTEXT]  private  List<String>  getFieldNames(Field  f)  {  SerializedName  annotation  =  f.getAnnotation(SerializedName.class);  if  (annotation  ==  null)  {  [BUGGY]  String  name  =  f.translateName(fieldNamingPolicy.getDeclaringClass());  [BUGGY]  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  List<String>  fieldNames  =  new  ArrayList<String>(alternates.length  +  1);  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	74	74	1	replace	String  name  =  f.translateName(fieldNamingPolicy.getDeclaringClass());	String  name  =  fieldNamingPolicy.translateName(f);  	non-compiled	[CE]  cannot  find  symbol	21	None	replace
7	[BUG]  [BUGGY]  String  name  =  f.translateName(fieldNamingPolicy.getValue());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure  [CONTEXT]  private  List<String>  getFieldNames(Field  f)  {  SerializedName  annotation  =  f.getAnnotation(SerializedName.class);  if  (annotation  ==  null)  {  [BUGGY]  String  name  =  f.translateName(fieldNamingPolicy.getValue());  [BUGGY]  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  List<String>  fieldNames  =  new  ArrayList<String>(alternates.length  +  1);  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	74	74	1	replace	String  name  =  f.translateName(fieldNamingPolicy.getValue());	String  name  =  fieldNamingPolicy.translateName(f);  	non-compiled	[CE]  cannot  find  symbol	21	None	replace
8	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  name  [FE]                  ComparisonFailure  [CONTEXT]  private  List<String>  getFieldNames(Field  f)  {  SerializedName  annotation  =  f.getAnnotation(SerializedName.class);  if  (annotation  ==  null)  {  [BUGGY]    [BUGGY]  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  List<String>  fieldNames  =  new  ArrayList<String>(alternates.length  +  1);  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	74	74	1	replace	  	String  name  =  fieldNamingPolicy.translateName(f);  	non-compiled	[CE]  cannot  find  symbol  name	21	None	replace
9	[BUG]  [BUGGY]  String  name  =  f.translateName(fieldNamingPolicy.getAnnotation(SerializedName.class));  [CE]  cannot  find  symbol  [FE]    ComparisonFailure  [CONTEXT]  private  List<String>  getFieldNames(Field  f)  {  SerializedName  annotation  =  f.getAnnotation(SerializedName.class);  if  (annotation  ==  null)  {  [BUGGY]  String  name  =  f.translateName(fieldNamingPolicy.getAnnotation(SerializedName.class));  [BUGGY]  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  List<String>  fieldNames  =  new  ArrayList<String>(alternates.length  +  1);  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	74	74	1	replace	String  name  =  f.translateName(fieldNamingPolicy.getAnnotation(SerializedName.class));	String  name  =  fieldNamingPolicy.translateName(f);  	non-compiled	[CE]  cannot  find  symbol	21	None	replace
10	[BUG]  [BUGGY]  String  name  =  f.translateName(annotation);  [CE]  cannot  find  symbol  [FE]      ComparisonFailure  [CONTEXT]  private  List<String>  getFieldNames(Field  f)  {  SerializedName  annotation  =  f.getAnnotation(SerializedName.class);  if  (annotation  ==  null)  {  [BUGGY]  String  name  =  f.translateName(annotation);  [BUGGY]  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  List<String>  fieldNames  =  new  ArrayList<String>(alternates.length  +  1);  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	74	74	1	replace	String  name  =  f.translateName(annotation);	String  name  =  fieldNamingPolicy.translateName(f);  	non-compiled	[CE]  cannot  find  symbol	21	None	replace
11	[BUG]  [BUGGY]  String  name  =  f.translateName(fieldNamingPolicy.getAnnotation(SerializedName.class);  [CE]  ')'  expected  [FE]        ComparisonFailure  [CONTEXT]  private  List<String>  getFieldNames(Field  f)  {  SerializedName  annotation  =  f.getAnnotation(SerializedName.class);  if  (annotation  ==  null)  {  [BUGGY]  String  name  =  f.translateName(fieldNamingPolicy.getAnnotation(SerializedName.class);  [BUGGY]  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  List<String>  fieldNames  =  new  ArrayList<String>(alternates.length  +  1);  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	74	74	1	replace	String  name  =  f.translateName(fieldNamingPolicy.getAnnotation(SerializedName.class);	String  name  =  fieldNamingPolicy.translateName(f);  	non-compiled	[CE]  ')'  expected	21	None	replace
12	[BUG]  [BUGGY]  String  name  =  f.translateName(fieldNamingPolicy.class);  [CE]  cannot  find  symbol  [FE]          ComparisonFailure  [CONTEXT]  private  List<String>  getFieldNames(Field  f)  {  SerializedName  annotation  =  f.getAnnotation(SerializedName.class);  if  (annotation  ==  null)  {  [BUGGY]  String  name  =  f.translateName(fieldNamingPolicy.class);  [BUGGY]  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  List<String>  fieldNames  =  new  ArrayList<String>(alternates.length  +  1);  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	74	74	1	replace	String  name  =  f.translateName(fieldNamingPolicy.class);	String  name  =  fieldNamingPolicy.translateName(f);  	non-compiled	[CE]  cannot  find  symbol	21	None	replace
13	[BUG]  [BUGGY]  String  name  =  fieldNamingPolicy.translateName(annotation);  [CE]  method  translateName  in  interface  FieldNamingStrategy  cannot  be  applied  to  given  types;  [FE]            ComparisonFailure  [CONTEXT]  private  List<String>  getFieldNames(Field  f)  {  SerializedName  annotation  =  f.getAnnotation(SerializedName.class);  if  (annotation  ==  null)  {  [BUGGY]  String  name  =  fieldNamingPolicy.translateName(annotation);  [BUGGY]  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  List<String>  fieldNames  =  new  ArrayList<String>(alternates.length  +  1);  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	74	74	1	replace	String  name  =  fieldNamingPolicy.translateName(annotation);	String  name  =  fieldNamingPolicy.translateName(f);  	non-compiled	[CE]  method  translateName  in  interface  FieldNamingStrategy  cannot  be  applied  to  given  types;	21	None	replace
14	[BUG]  [BUGGY]  String  name  =  f.getAnnotation(SerializedName.class);  [CE]  incompatible  types  [FE]    ComparisonFailure  [CONTEXT]  private  List<String>  getFieldNames(Field  f)  {  SerializedName  annotation  =  f.getAnnotation(SerializedName.class);  if  (annotation  ==  null)  {  [BUGGY]  String  name  =  f.getAnnotation(SerializedName.class);  [BUGGY]  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  List<String>  fieldNames  =  new  ArrayList<String>(alternates.length  +  1);  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	74	74	1	replace	String  name  =  f.getAnnotation(SerializedName.class);	String  name  =  fieldNamingPolicy.translateName(f);  	non-compiled	[CE]  incompatible  types	21	None	replace
15	[BUG]  [BUGGY]  String  name  =  f.translateName(fieldNamingPolicy.name);  [CE]  cannot  find  symbol  name  [FE]      ComparisonFailure  [CONTEXT]  private  List<String>  getFieldNames(Field  f)  {  SerializedName  annotation  =  f.getAnnotation(SerializedName.class);  if  (annotation  ==  null)  {  [BUGGY]  String  name  =  f.translateName(fieldNamingPolicy.name);  [BUGGY]  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  List<String>  fieldNames  =  new  ArrayList<String>(alternates.length  +  1);  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	74	74	1	replace	String  name  =  f.translateName(fieldNamingPolicy.name);	String  name  =  fieldNamingPolicy.translateName(f);  	non-compiled	[CE]  cannot  find  symbol  name	21	None	replace
16	[BUG]  [BUGGY]  String  name  =  f.translateName(fieldNamingPolicy.value());  [CE]  cannot  find  symbol  [FE]        ComparisonFailure  [CONTEXT]  private  List<String>  getFieldNames(Field  f)  {  SerializedName  annotation  =  f.getAnnotation(SerializedName.class);  if  (annotation  ==  null)  {  [BUGGY]  String  name  =  f.translateName(fieldNamingPolicy.value());  [BUGGY]  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  List<String>  fieldNames  =  new  ArrayList<String>(alternates.length  +  1);  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	74	74	1	replace	String  name  =  f.translateName(fieldNamingPolicy.value());	String  name  =  fieldNamingPolicy.translateName(f);  	non-compiled	[CE]  cannot  find  symbol	21	None	replace
