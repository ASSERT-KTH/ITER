projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:declaredType.getFields()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:declaredType.fields){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.toArray(newField[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.length){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:declaredType.getFields){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.values()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.keySet()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.toArray(newString[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.toArray(newType[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.toArray(newString[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields,field.toArray(newString[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.keySet().toArray(newString[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.toArray(newString[fields.length()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.toArray(newString[fields.size()+1])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:declaredType.values()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields,declaredType.values()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:selectedFields.values()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:this.fields.values()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.getFields){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:type.getFields){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:declaredType.getFields,true){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.getFields()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:declaredType.getFields()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:declaredType.fields()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:declarationType.getFields()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:type.getFields()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:declaredType.fields){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:declaredType,field.fields){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:declaredType.fields.length){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:declaredType.length){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:declaredType.getFieldNames()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields,declaredType.length){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.toArray(newType[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields,field.toArray(newType[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.toArray(newType[fields.size()+1])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.toArray(newType[fields.length()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fields=field.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fields=context.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fields=type.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fields=context.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=type.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fields=field.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fields=context.getTypes();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:declaredType.keySet()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields,declaredType.keySet()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:selectedFields.keySet()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.keySet()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.toArray(newField[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields,field.toArray(newField[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.keySet().toArray(newField[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.toArray(newField[fields.size()+1])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:field.getFields){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:context.getFields){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:types.getFields){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:context.getFields()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:field.getFields()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.toArray(newString[fields.length])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.toArray(newType[fields.length])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:types.toArray(newType[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.values()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:type.fields){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:declarationType.fields){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.toArray(newField[fields.length])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.toArray(newField[fields.length()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fields=context.getFields(fields);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=raw.getFieldNames();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=getFieldNames(fields);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=raw.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.serialize(fields)){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.toArray(newField[fields.length-1])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.toArray(newField[fields.length+1])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.toArray(newField[fields.size()-1])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:paths.toArray(newField[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.toArray(newString[fields.size()-1])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:newLinkedHashMap<String,Field>(fields.values())){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:newLinkedHashMap<Field,Type>(fields.values())){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:newLinkedHashMap<Field,Object>(fields.values())){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:names.toArray(newType[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=fields.toArray(newField[fields.size()]);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fields=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=field.getGenericFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.getFieldNames()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:declaredType.getFieldNames()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:declaredType,field.getFieldNames()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:declarationType.getFieldNames()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:type.getFieldNames()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:selectedFields.getFields()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields[i].getFields()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.getFields()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:declaredType.getFields){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:declarationType.getFields){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fields=declaredType.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.toArray(newString[fields.length-1])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields,field.toArray(newString[fields.length])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.keySet().toArray(newString[fields.length])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.toArray(newString[fields.length])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.toArray(newString[fields.length-2])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.toArray(newField[fields.size()-1])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.toArray(newField[fields.size()]));
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.toArray(newField[fields.size()]),declaredType){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.toArray(newField[fields.size()])||declaredType.equals(fields[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.toArray(newField[fields.size()])+1){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.toArray(newField[fields.size()]),true){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.toArray(newField[fields.length()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields,field.toArray(newField[fields.length()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.toArray(newField[fields.length()+1])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.keySet().toArray(newField[fields.length()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields,declaredType.toArray(newField[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields,field.toArray(newField[fields.size()-1])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields,field.toArray(newField[fields.size()])||declaredType.equals(fields[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields,field.toArray(newField[fields.size()])||declaredType.equals(fields[fields.size()-1])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields,field.toArray(newField[fields.size()]),true){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:newLinkedHashMap<Field,Type>(fields,declaredType.values())){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:newArrayList<Field,Type>(fields.values())){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:newLinkedHashMap<Field,Type>(fields.keySet())){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:newjava.util.ArrayList<Field,Type>(fields.values())){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:newLinkedHashMap<Field,Type>(fields,fields.values())){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields,field.toArray(newField[fields.length])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.toArray(newField[fields.length])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.keySet().toArray(newField[fields.length])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.toArray(newField[fields.length-2])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:names.keySet()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.toArray(newType[fields.size()]),declaredType){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.toArray(newType[fields.size()])||declaredType.equals(fields[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.toArray(newType[fields.size()-1])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.toArray(newType[fields.size()]));
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.toArray(newType[fields.size()])+1){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.toArray(newType[fields.size()])||declaredType.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:newArrayList<Field>(fields.values())){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:newLinkedHashMap<String,Field>(fields,declaredType.values())){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:newLinkedHashMap<String,Field>(fields.keySet())){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:newLinkedHashMap<String,Field>(fields.length)){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:newArrayHashMap<String,Field>(fields.values())){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fields=raw.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fields=declaredType.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fields=context.getFields(declaredType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fields=context.getFields(type);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fields=type.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=context.getFieldNames();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=type.getFieldNames();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=raw.getFieldNames(type);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=declaredType.getFieldNames();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=raw.getFieldNames(declaredType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=fields.getFieldNames();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:declaredType.values()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:returnedFields.values()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.toArray(newField[fields.size()+1])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:selectedFields.values()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:context.getFields(fields)){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:context.fields()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fields=result.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fields=context.getDeclaredFields(declaredType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:declaredType.keySet()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:selectedFields.keySet()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields,declaredType.getFields()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=getFieldNames(fields,declaredType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=getFieldNames(context,fields);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=getFieldNames(type);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=getFieldNames(field);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=getFieldNames(context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=getFieldNames(type,fields);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fields=getFieldNames(context,declaredType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.fields()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:declaredType.fields()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:declaredType,fields.fields()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:declarationType.fields()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:type.fields()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:declaredType.names){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:declaredType,fields.length){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=newField[fields.size()];
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fields=fields.toArray(newField[fields.size()]);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=field.toArray(newField[fields.size()]);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=types.toArray(newField[fields.size()]);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=fields.toArray(newField[fields.size()-1]);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:declaredType.fields,field.length){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:declaredType.fields,fields.length){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fields=context.getFields(raw,declaredType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:newArrayList<Field,Object>(fields.values())){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:newLinkedHashMap<Field,Object>(fields,declaredType.values())){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:newLinkedHashMap<Field,Object>(fields.keySet())){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:newjava.util.ArrayList<Field,Object>(fields.values())){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:newArrayHashMap<Field,Object>(fields.values())){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:declaredType.getValues()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:types.values()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.fields){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:declaredType,fields){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=declaredType.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=context.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=declarationType.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=raw.getGenericFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=field.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=fields.getGenericFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=declaredType.getGenericFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=context.getGenericFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=field.getFieldNames();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.values().toArray(newField[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.keySet().toArray(newField[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields,field.keySet().toArray(newField[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.keySet(),field.toArray(newField[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.keySet().toArray(newField[fields.size()+1])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.keySet().toArray(newString[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields,field.keySet().toArray(newString[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.values().toArray(newString[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.keySet().toArray(newString[fields.size()+1])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.keySet(),field.toArray(newString[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:declaredType.toArray(newType[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields,field.toArray(newField[fields.length+1])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.toArray(newField[fields.length+1])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields[fields.length+1])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:selectedFields.toArray(newType[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields[i].getFields){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:declaredType,fields.values()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields,declaredType.getValues()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.get(0)){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:declaredType.getDeclaredFields()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:type.getFields()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.get()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fields=raw.getTypes();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fields=declaredType.getTypes();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fields=field.getTypes();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:this.fields.keySet()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:newLinkedHashMap<Field,Field>(fields.values())){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:this.fields,declaredType.values()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.toArray(newString[fields.size()*1])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.toArray(newString[fields.length()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.toArray(newString[fields.length()+1])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields,field.toArray(newString[fields.length()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.keySet().toArray(newString[fields.length()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:declaredTypes.getFields){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=context.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=type.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=declaredType.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=raw.getFields(type);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=raw.getFields(declaredType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields,declaredType.toArray(newType[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields,field.toArray(newType[fields.size()])||declaredType.equals(fields[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:declaredType.toArray(fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields,field.toArray(newType[fields.size()-1])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.toArray(newType[fields.length-1])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.toArray(newType[fields.length])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields,field.toArray(newType[fields.length])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:declaredType.toArray(newType[fields.length])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.toArray(newType[fields.length+1])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.clone()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.serialize(fields,declaredType)){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:declaredType.serialize(fields)){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.serialize(declaredType)){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:selectedFields.serialize(fields)){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.serialize(declaredType,fields)){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.serialize(type)){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:declaredType.getLength()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:declaredType.getName()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields,declaredType.fields){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:declaredType,field.types){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:declaredType.fields,true){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:declaredType.fields,false){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:declaredType.fields),true){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:declaredType.fields,fields.length){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:declaredType.fields,raw){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:declaredType.fields,null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields,declaredType.toArray(newString[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields,field.toArray(newString[fields.size()-1])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields,field.toArray(newString[fields.size()])||declaredType.equals(fields[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields,field.toArray(newString[fields.size()]),true){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.toArray(newField[fields.size()*1])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.toArray(newField[fields.length-1])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields,field.toArray(newField[fields.length-1])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.keySet().toArray(newField[fields.length-1])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.toArray(newType[fields.length()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.toArray(newType[fields.length()+1])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields,field.toArray(newType[fields.length()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.keySet().toArray(newType[fields.length()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.toArray(newType[fields.length()],declaredType.length())){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:context.fields){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.toArray(newString[fields.size()-1])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.toArray(newString[fields.size()])+1){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.toArray(newString[fields.size()]));
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.toArray(newString[fields.size()]),declaredType){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.toArray(newString[fields.size()])||declaredType.equals(fields[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:declaredType.getFields,false){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.getFields,true){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:declaredType.getFields,null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:declaredType.getFields,true,raw){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fields=context.getFields(fields,declaredType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fields=context.getFields(type,fields);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fields=context.getFields(declaredType,fields);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fields=context.getFieldsWithType(type);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields,declaredType){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:field.fields){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fields=context.getFields(raw);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fields=context.getFields(raw.getDeclaredFields());
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fields=newField[raw.getFields()];
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:paths.toArray(newField[fields.length])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:names.toArray(newField[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:names.toArray(newField[fields.length-1])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:arrays.toArray(newType[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:paths.toArray(newType[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=raw.getFields(fields);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=raw.getFields(field);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=raw.getFields(context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fields=result.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=getFieldNames(fields,false);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=getFieldNames(fields,true);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fields=getFieldNames(fields);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=getFieldNames(fields,i);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:names.values()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fieldNames.serialize(fields)){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:field.serialize(fields)){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.serialize(fields)){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:names.toArray(newType[fields.length])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fields=raw.getFieldNames();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fields=raw.getFieldTypes();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fields=row.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fields=field.getFields(raw);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:type.fields){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.toArray(newField[fields.size()]){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fields=context.getFields(fields,false);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fields=raw.getFields(fields);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fields=fieldNames.getFields(context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:declaredType.fields.keySet()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.toArray(newType[fields.size()])&&!fields.isEmpty()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:types.toArray(newType[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:names.toArray(newType[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:types.toArray(newType[fields.length])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:types.keySet()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:newLinkedHashMap<Field,Type>(fields,field.values())){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:newLinkedHashMap<Field,Type>(fields,context.values())){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.toArray(newString[fields.length+1])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.toArray(newString[fields.size()])&&!fields.isEmpty()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.toArray(newString[fields.size()+1])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fields=declarationType.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:field.fields()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.toArray(newString[fields.size()0])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:newLinkedHashMap<Field,Object>(fields,fields.values())){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:newLinkedHashMap<Field,Object>(fields,field.values())){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:newLinkedHashMap<Field,Object>(fields,context.values())){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fields=context.getDeclaredFields(raw);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:context.getFields,true){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:names.toArray(newField[fields.length+1])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:raw.getFields()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:field.getFieldNames()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:context.getFieldNames()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:FieldUtils.toArray(newField[fields.length()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields,fieldNames.toArray(newType[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields,fieldType.toArray(newType[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:newArrayList<String,Field>(fields.values())){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:newLinkedHashMap<String,Field>(fields,fields.values())){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:newLinkedHashMap<String,Field>(fields,field.values())){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=result.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:field.getFields()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:types.getFields()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:context.getFields()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fields=fieldNames.toArray(newField[fields.size()]);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=fields.toArray(newField[fields.size()+1]);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields,fieldNames.toArray(newField[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields,FieldUtils.toArray(newField[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=raw.getFieldNames(field);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=raw.getFieldNames(fields);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=raw.getFieldNames(context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:declarationType.values()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:field.values()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:type.values()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:declaredType.getFields),false){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:this.fields.getFields()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=fields.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:getFields(fields)){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:this.fields){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:newLinkedHashMap<String,Field>()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:types.toArray(newType[fields.length()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:names.toArray(newType[fields.length()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fields=raw.getGenericFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:getFields(fields)){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.toArray(newField[fields.size()])&&!fields.isEmpty()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields,fieldNames.toArray(newString[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields,FieldUtils.toArray(newString[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.toArray(newField[fields.size()0])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:paths.toArray(newField[fields.length-1])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:newLinkedHashMap<Field,Object>(fields,constructor.values())){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:paths.keySet()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fields=row.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fields=field.getFields(fields);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:other.fields.values()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.iterator().getFields()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:paths.toArray(newField[fields.length()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.keySet().toArray(newField[fields.length+1])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.toArray(newField[fields.length+1)){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=boundFields.toArray(newField[fields.size()]);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=paths.toArray(newField[fields.size()]);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.get,true){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=fields.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=getFieldNames(raw);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.length,declaredType.length){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.toArray(newClass[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.toArray(newTypeFactory[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.keySet().toArray(newString[fields.size()-1])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.values().toArray(newField[fields.length])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.keySet().toArray(newField[fields.size()-1])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields,constructor.serialize(fields)){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fieldNames.toArray(newType[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=context.getFieldNames(field);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:newLinkedHashMap<Field,Type>(fields.length)){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:newLinkedHashMap<Field,Type>(fields)){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:types.fields()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.fields()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.toArray(newString[fields.size()]),true){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields,field.toArray(newString[fields.size()]),false){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:newLinkedHashMap<Field,Type>(fields,constructor.values())){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:types.getFields()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.toArray(newField[fields.size()]),false){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.values().toArray(newField[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150Field[]fieldNames=getFieldNames(fields,context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.toArray(newType[fields.size()*1])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.toArray(newType[fields.size()1])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:paths.toArray(newType[fields.length()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:this.fields.getFields){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.values().toArray(newType[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields,field.toArray(newType[fields.size()]),true){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:fields.toArray(newType[fields.size()]),true){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.toArray(newString[fields.size()]),true){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.toArray(newString[fields.size()]),false){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.values().toArray(newString[fields.size()])){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:newLinkedHashMap<String,BoundField>(fields.values())){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.toArray(newType[fields.size()]),true){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.toArray(newType[fields.size()]),false){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150For(Fieldfield:fields.toArray(newType[fields.size()]),condition);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java150for(Fieldfield:newLinkedHashMap<String,Field>(fields,factory.values())){
