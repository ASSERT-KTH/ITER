projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=typeAdapter;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?null:mapped;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?null:annotation.getTypeAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=context.getTypeAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getRawType():null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?context.getTypeAdapter(annotation):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?context.getTypeAdapter(fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?context.getTypeAdapter(fieldType):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getTypeAdapter(annotation):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?annotation.getTypeAdapter(context):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation?context.getTypeAdapter(isPrimitive):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?context,annotation.getTypeAdapter(annotation):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=context.getTypeAdapter(annotation):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(annotation,context,fieldType,constructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,constructorConstructor,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(annotation,context,fieldType,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(fieldType,constructorConstructor,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(annotation,context,fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(fieldType,constructor,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(field,context,constructorConstructor,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109mapped=field.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=isPrimitive?fieldType.getRawType():field.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=isPrimitive?context.getRawType():field.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109FieldNamingStrategyconstructor=field.getAnnotation(JsonReader.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=isPrimitive?fieldType.getRawType();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=field.getTypeToken();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109FieldNamingStrategyconstructor=field.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(context,constructorConstructor,fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,constructorConstructor,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(fieldType,constructorConstructor,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,constructorConstructor,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(annotation,context,fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(type,context,fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(type,fieldType,constructorConstructor,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.getTypeAdapter(context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=field.getTypeAdapter(context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=field.getTypeAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=context.getTypeAdapter(fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fields.getTypeAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=typeAdapter.getTypeAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=annotation;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=typeAdapter;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=isPrimitive?null:mapped;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=getTypeAdapter(fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=context.getTypeAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=getTypeAdapter(fieldType,serialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(annotation,fieldType,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(context,constructorConstructor,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(context,constructorConstructor,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(compiler,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(type,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.getRawType():null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getRawType():typeAdapter;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getRawType():annotation;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType,isPrimitive?fieldType.getRawType():null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getRawType():object;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getRawType():serialize;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?null:annotation;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?null:typeAdapter;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?null:serialize;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?null:deserialize;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?null:fieldType;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?null:mapped.type;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=context;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=constructor;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation.type;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation.mapped;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=field.getAnnotation(Annotation.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=field.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotationinstanceofTypeAdapter?(TypeAdapter<?>)?(TypeAdapter<?>)annotated:annotation;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?context.getTypeAdapter(fieldType,annotation):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?context.getTypeAdapter(fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?annotation.getTypeAdapter(fieldType,context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?context.getTypeAdapter(fieldType,serialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?context.getTypeAdapter(annotation,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?null:fieldType.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType?null:annotation.getTypeAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?null:field.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType?null:field.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?null:context.getTypeAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType?null:context.getTypeAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(annotation,context,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(field,context,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(typeAdapter,context,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(compiler,context,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(constructor,context,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(structor,context,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation?null:fieldType.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation?null:annotation.getTypeAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation?null:fieldType.getTypeAdapter(isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(fieldType,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getRawType():context;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.getRawType();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=input;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation,isPrimitive;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation.getTypeAdapter();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation.value;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation.values();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation.map;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=context.getTypeAdapter(isPrimitive):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.getTypeAdapter(annotation):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation.getTypeAdapter(context):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?null:method;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(context,constructorConstructor,fieldType,serialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructor,fieldType,serialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(compiler,fieldType,constructorConstructor,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(fieldNamingStrategy,context,constructor,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109ObjectConstructorconstructor=field.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);}else{returnnewReflectiveTypeAdapterFactory.BoundField(name,serialize,deserialize);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);}else{returnnewReflectiveTypeAdapterFactory.BoundField(value,isPrimitive,serialize,deserialize);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);}else{returnnewReflectiveTypeAdapterFactory.BoundField(serializedName,serialize,deserialize);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);}else{returnnewReflectiveTypeAdapterFactory.BoundField(fieldType,serialize,deserialize);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);}else{returnnewReflectiveTypeAdapterFactory.BoundField(name,serialize,deserialize
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(structorConstructor,context,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=field;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?null:field.getAnnotation(Annotation.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(annotation,fieldType,constructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType:typeAdapter;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?annotation:typeAdapter;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType:mapped;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType,isPrimitive?null:field.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.isPrimitive?null:field.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?context,fieldType.getTypeAdapter(annotation):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?field.getTypeAdapter(annotation):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(annotation,fieldType,fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,serialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,fieldType,annotation,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,fieldType,annotation,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?context.getTypeAdapter(fieldType,annotation):field.getRawType();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?context.getTypeAdapter(fieldType,annotation):field.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getTypeAdapter(annotation):context.getTypeAdapter(fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getTypeAdapter(annotation):context.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.getTypeAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldtype.getTypeAdapter(context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getRawType():method;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getRawType():FieldUtils.safeMultiply(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);ObjectConstructor<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);TypeToken<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);finalTypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);Constructor<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,field,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>jsonAdapterPresent=field.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>constructor=field.getConstructor();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>constructor=field.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>constructor=field.getAnnotation(JsonReader.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>constructor=context.getConstructor();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>constructor=field.getAnnotation(JsonToken.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=isPrimitive?fieldType.getRawType():null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=isPrimitive?context.getTypeAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=getTypeAdapter(fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=isPrimitive?fieldType:null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation.getTypeAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.getTypeAdapter(type);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=constructor.getTypeAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(context,constructorConstructor,fieldType,annotation,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(type,fieldType,annotation,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(compiler,fieldType,annotation,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(fieldType,constructorConstructor,annotation,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109FieldNamingStrategyconstructor=field.getAnnotation(JsonAdapter.class,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109FieldNamingStrategyconstructor=context.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109FieldNamingStrategyconstructor=field.getAnnotation(JsonAdapter.class,jsonAdapterPresent);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109FieldNamingStrategyconstructor=field.getAnnotation(JsonAdapter.class,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109FieldNamingStrategyconstructor=field.getAnnotation(JsonAdapter.class,description);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109FieldNamingStrategyconstructor=field.getAnnotation(JsonAdapter.class,Object.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(fieldType,annotation,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(annotation,constructor,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation.getTypeAdapter(fieldType):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=context.getTypeAdapter(fieldType):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.getTypeAdapter(fieldValue):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.getTypeAdapter(value):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.getTypeAdapter(isPrimitive):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?context.getTypeAdapter(fieldType,serialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?context.getTypeAdapter(type,fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getTypeAdapter(annotation,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getTypeAdapter(array,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getTypeAdapter(annotations,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=getTypeAdapter(annotation,context,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=getTypeAdapter(fieldType,context,constructorConstructor,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation);TypeToken<?>mapped=getTypeAdapter(context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=getTypeAdapter(context,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,constructorConstructor,annotation);TypeToken<?>mapped=getTypeAdapter(fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(context,constructor,fieldType,annotation);TypeToken<?>mapped=getTypeAdapter(context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=getTypeAdapter(type,context,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(fieldType,serialize,constructorConstructor,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(fieldType,fieldNamingStrategy,constructorConstructor,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(type,constructorConstructor,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(prototype,fieldType,constructorConstructor,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(annotation,fieldType,constructorConstructor,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?context.getTypeAdapter(annotations):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getTypeAdapter(context):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=context,isPrimitive?annotation.getTypeAdapter(context):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?annotation.getTypeAdapter(fieldType):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType?null:deserialize;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=deserialize?null:isPrimitive;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?null:typeAdapter.deserialize;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=typeAdapter?null:deserialize;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType:null:deserialize;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=context.getTypeAdapter();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=context.getAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=context.type;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getRawType():deserialize;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getRawType():scope;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getRawType():description;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);}else{returnnewReflectiveTypeAdapterFactory.BoundField(value,isPrimitive,serialize,deserialize);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Annotationannotation=context.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Annotationannotation=field.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);}else{returnnewReflectiveTypeAdapterFactory.BoundField(value,isPrimitive,serialize,dese
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);}else{returnnewReflectiveTypeAdapterFactory.BoundField(name,isPrimitive,serialize,deserialize);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109mapped=getTypeAdapter(annotation,context,fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=field.getAnnotation(JsonAdapter.class,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=field.getAnnotation(JsonAdapter.class,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=context.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=field.getAnnotation(JsonAdapter.class,description);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getTypeAdapter(fieldType):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation?fieldType.getTypeAdapter(isPrimitive):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getTypeAdapter(array):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,annotation,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(annotation,fieldType,constructorConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(compilerConstructor,context,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(annotation,constructorConstructor,fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotationinstanceofTypeAdapter?(TypeAdapter<?>)?(TypeAdapter<?>)annotated:field.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotationinstanceofTypeAdapter?(TypeAdapter<?>)?(TypeAdapter<?>)annotated:typeAdapter;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotationinstanceofTypeAdapter?(TypeAdapter<?>)?(TypeAdapter<?>)typeAdapter:annotation;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotationinstanceofTypeAdapter?(TypeAdapter<?>)?(TypeAdapter<?>)annotated:field;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotationinstanceofTypeAdapter?(TypeAdapter<?>)?(TypeAdapter<?>)annotated:object;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=isPrimitive?field.getRawType():field.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=fieldType.getRawType():context.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=fieldType.getRawType():isPrimitive?context.getRawType():field.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=isPrimitive?fieldType.getRawType():context.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=fieldType.getRawType():isPrimitive.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.getTypeAdapter(context):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?context,fieldType.getTypeAdapter(fieldType):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fields.getTypeAdapter(fieldType):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldNamingStrategy,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(annotation,context,fieldNamingStrategy,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(annotation,context,constructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(fieldNamingPolicy,context,constructor,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(annotation,context,constructor,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldNamingPolicy,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructor,context,fieldNamingStrategy,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation?null:annotation.getTypeAdapter(fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation?null:annotation.getTypeAdapter(fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType?null:annotation.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType?null:mapped.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fields?null:fieldType.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(annotation,constructorConstructor,context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(compiler,context,constructorConstructor,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(context,annotation,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(field,constructorConstructor,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(annotation,field,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(field,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(annotation,context,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(context,field,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,constructorConstructor,annotation);TypeAdapter<?>mapped=getTypeAdapter(field,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation);typeAdapter.mapped=getTypeAdapter(context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation.getTypeAdapter(context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=typeAdapter.getTypeAdapter(context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=context.getTypeAdapter(field);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(field,context,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(field,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(field,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(jsonAdapterPresent){TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(field,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(jsonAdapterPresent){TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(field,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=getTypeAdapter(field,context,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(field,context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(field,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=isPrimitive?context.getTypeAdapter(fieldType.getRawType());
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=isPrimitive?context.getTypeAdapter(fieldType):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=isPrimitive?context.getTypeAdapter(fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=isPrimitive?fieldType.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=isPrimitive?context.getTypeAdapter(fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=isPrimitive?context.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=isPrimitive?fieldType.getTypeAdapter(array);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType,isPrimitive?fieldType.getReturnType():null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType,isPrimitive?fieldType.getSerialize():null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType,isPrimitive?fieldType.getRawType():annotation;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType,isPrimitive?fieldType.getNativeType():null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType,isPrimitive?fieldType.getRawType():typeAdapter;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(annotation,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,constructorConstructor,annotation);TypeAdapter<?>mapped=getTypeAdapter(fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?annotation.getTypeAdapter(fieldType,context):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation?context.getTypeAdapter(fieldType,isPrimitive):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getTypeAdapter(annotations):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?context,annotation.getTypeAdapter(fieldType,isPrimitive):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(annotation,constructorConstructor,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(fieldType,annotation,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(compilerConstructor,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=field.isPrimitive?null:field.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.isPrimitive?null:context.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.getRawType()?null:field.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fields.isPrimitive?null:field.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.isPrimitive?null:typeAdapter.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.getPrimitive():field.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109mapped=getTypeAdapter(annotation,context,fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){mapped=getTypeAdapter(annotation,context,fieldType,deserialize);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109ConstructorConstructorconstructorConstructor=context.getConstructorConstructor();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109mapped=getTypeAdapter(fieldType,context,isPrimitive,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getTypeAdapter(annotation):field.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getTypeAdapter(fieldType,annotation):field.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.getTypeAdapter(fieldType,annotation):context.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getTypeAdapter(annotations):field.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?field.getTypeAdapter(fieldType,annotation):field.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=getTypeAdapter(fieldType,context,constructorConstructor,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(context,constructor,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(context,constructorConstructor,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?null:jsonAdapterPresent;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?null:mapped.typeAdapter;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation?context.getTypeAdapter(fieldType):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?context.getTypeAdapter(isPrimitive):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=field,isPrimitive?null:field.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=field?null:field.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=field.getTypeAdapter(isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=field.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType,isPrimitive;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation,fieldType,isPrimitive;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive,annotation;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType,annotation,isPrimitive;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation,isPrimitive,deserialize;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=field,isPrimitive;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=typeAdapter,annotation,isPrimitive;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=fieldType?isPrimitive:null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=fieldType,isPrimitive?fieldType:null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=fieldType.isPrimitive?isPrimitive:null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=fieldType||isPrimitive?fieldType:null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=fields.isPrimitive?fieldType:null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType?null:isPrimitive.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fields.isPrimitive?null:fieldType.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType?null:context.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(annotation,fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(annotation,fieldType,typeAdapter);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(annotation,fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(annotation,fieldType,jsonAdapterPresent);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(annotation,fieldType,context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(annotation,fieldType,constructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=serialize?null:isPrimitive;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType:null:serialize;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?null:serialize,deserialize;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,annotation,fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,annotation,context,fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructor,context,fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructor,fieldType,annotation,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=field.getTypeAdapter(annotation):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation.getTypeAdapter(annotation):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=context.getTypeAdapter(fieldType,annotation):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?null:mapped.value;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?null:mapped.fieldType;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?null:mapped,fieldType.type;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?null:typeAdapter.type;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?null:mapped.serialize;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.getRawType():isPrimitive;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?context.getRawType():fieldType;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=context.getRawType()?fieldType.getRawType():isPrimitive;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=isPrimitive;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=fieldType;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=context;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=constructor;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation.getTypeAdapter(fieldValue):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=field.getTypeAdapter(context):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=annotation.getTypeAdapter(context):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation.getTypeAdapter(field):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>jsonAdapterPresent=annotation.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>jsonAdapterPresent=field.getAnnotation(JsonAdapter.class,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>jsonAdapterPresent=fieldType.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>jsonAdapterPresent=field.getAnnotation(JsonAdapter.class,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>jsonAdapterPresent=field.getAnnotation(JsonAdapter.class,description);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>jsonAdapterPresent=context.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?annotation:mapped;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?annotation:jsonAdapterPresent;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?annotation:fieldType;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?annotation:deserialize;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?annotation:serialize;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?annotation:method;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=getTypeAdapter(annotation,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=getTypeAdapter(fieldType,annotation,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=getTypeAdapter(compiler,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=getTypeAdapter(type,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=getTypeAdapter(type,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotationinstanceofTypeAdapter?(TypeAdapter<?>)?((TypeAdapter<?>)annotation).mapped;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotationinstanceofTypeAdapter?(TypeAdapter<?>)?((TypeAdapter<?>)annotated).mapped;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotationinstanceofTypeAdapter?(TypeAdapter<?>)?((TypeAdapter<?>)annotations).mapped;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getTypeAdapter(fieldValue);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?context.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getRawTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getTypeAdapter(jsonAdapterPresent);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getTypeAdapter(value);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getTypeAdapter(typeAdapter);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.mapped;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.restrictByNotNullOrUndefined();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.type;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.map();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.asParameterType();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=field.value;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation.getValue();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=typeAdapter.value;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation.setValue(isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation.getType();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(compiler,fieldType,serialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(compiler,context,fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType:jsonAdapterPresent;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType:serialize;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType:deserialize;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType:annotation;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType:mapped.typeAdapter;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.getTypeAdapter(field);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=getTypeAdapter(annotation,context,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation);finalTypeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation);}else{finalTypeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,constructorConstructor,annotation);finalTypeAdapter<?>mapped=getTypeAdapter(fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType,isPrimitive?null:field.getTypeAdapter(jsonAdapterPresent);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType,isPrimitive?null:context.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType,isPrimitive?null:field.getTypeAdapter(element);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType,isPrimitive?null:field.getTypeAdapter(array);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType,isPrimitive?null:field.getTypeAdapter(annotations);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType,isPrimitive?null:field.getTypeAdapter(type);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(type,constructorConstructor,fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotationinstanceofTypeAdapter?(TypeAdapter<?>)?(TypeAdapter<?>)annotated:annotation.type;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotationinstanceofTypeAdapter?(TypeAdapter<?>)?(TypeAdapter<?>)annotations.type;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotationinstanceofTypeAdapter?(TypeAdapter<?>)?(TypeAdapter<?>)annotations.get(0):annotation.type;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotationinstanceofTypeAdapter?(TypeAdapter<?>)?(TypeAdapter<?>)annotations.get(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructor,context,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(compiler,context,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,constructorConstructor,annotation);TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(type,context,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109mapped=getTypeAdapter(fieldType,context,isPrimitive,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109mapped=getTypeAdapter(context,fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){mapped=getTypeAdapter(fieldType,context,isPrimitive,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){mapped=getTypeAdapter(fieldType,constructor,isPrimitive,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?context,annotation.getTypeAdapter(fieldType):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType,annotation.getTypeAdapter(annotation):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?context,annotation.getTypeAdapter(type):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?context,annotation.getTypeAdapter(serialize):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?context,annotation.getRawTypeAdapter(annotation):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?context,annotation.getTypeAdapter(typeAdapter):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?context,annotation.getRawType():null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=getTypeAdapter(fieldType,serialize,deserialize,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=getTypeAdapter(type,fieldType,serialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=getTypeAdapter(context,fieldType,serialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=getTypeAdapter(annotation,fieldType,serialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=getTypeAdapter(fieldType,serialize,isPrimitive,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=getTypeAdapter(element,fieldType,serialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=getTypeAdapter(compiler,fieldType,serialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructor,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(compiler,fieldType,annotation,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?context.getTypeAdapter(fieldType,description);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive&&context.getTypeAdapter(annotation,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getTypeAdapter(annotation,context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(annotation,context,fieldType,typeAdapter);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(annotation,context,fieldType,serialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(annotation,context,fieldType,jsonAdapterPresent);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(annotation,context,fieldType,descriptor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){if(isPrimitive){mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){mapped=getTypeAdapter(annotation,context,fieldType,annotation);}else{returnnewReflectiveTypeAdapterFactory.BoundField(name,serialize,deserialize
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){mapped=getTypeAdapter(annotation,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){mapped=getTypeAdapter(annotation,context,fieldType,annotation);}else{returnnewReflectiveTypeAdapterFactory.BoundField(name,serialize,dese
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){if(isPrimitive){mapped=getTypeAdapter(context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=field.getTypeAdapter(isPrimitive):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?field.getTypeAdapter(fieldType):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,fieldType,constructorConstructor,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(compilerConstructor,fieldType,constructorConstructor,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>constructor=context.getConstructor(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>constructor=annotation.getConstructor();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>constructor=fieldType.getConstructor();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>constructor=context.getConstructor(isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>constructor=context.getConstructor(fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getRawType():FieldUtils.safeMultiply(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getRawType():FieldUtils.safeMultiply(annotation,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.getRawType():FieldUtils.safeMultiply(isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getRawType():FieldUtils.safeMultiply(type);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getRawType():FieldUtils.safeMultiply(fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getRawType():FieldUtils.safeMultiply(annotations);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,serialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,fieldType,serialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(context,constructorConstructor,fieldType,serialize,deserialize,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(type,constructorConstructor,fieldType,serialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,constructorConstructor,serialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(fieldType,constructorConstructor,context,serialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(structorConstructor,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,fieldType,declaration);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType?null:context.getTypeAdapter(isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?null:fieldType.getTypeAdapter(context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?null:field.getTypeAdapter(context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType,isPrimitive?null:context.getTypeAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fields.isPrimitive?null:context.getTypeAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>constructor=context.getAnnotation(JsonReader.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>constructor=field.getAnnotation(JsonReader.class,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>constructor=field.getAnnotation(JsonReader.class,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>constructor=field.getAnnotation(JsonReader.class,JsonReader.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>constructor=fieldType.getAnnotation(JsonReader.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>constructor=field.getAnnotation(JsonReader.TYPE_OBJECT);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(annotation,context,constructorConstructor,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(fieldType,annotation,constructorConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,constructorConstructor,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(fieldType,annotation,constructorConstructor,context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(annotation,fieldType,constructorConstructor,context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=fieldType.getTypeAdapter(context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=field.getTypeAdapter(context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=field.getTypeAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=context.getTypeAdapter(fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=fields.getTypeAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=typeAdapter.getTypeAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>mapped=getTypeAdapter(constructor,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>mapped=getTypeAdapter(context,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=field.getTypeAdapter();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=typeAdapter.getTypeAdapter();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.getTypeAdapter();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=field,annotation.getTypeAdapter();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation?fieldType.getRawType():isPrimitive;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getRawType():annotation.type;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getRawType():annotation,deserialize;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.getTypeAdapter(fieldValue);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType:mapped.type;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType?isPrimitive:mapped;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.isPrimitive?isPrimitive:mapped;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType:mapped,annotation;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType:mapped,serialize;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?context.getTypeAdapter(fieldType):context.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.getTypeAdapter(annotation):context.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getTypeAdapter(annotation):field.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?context.getTypeAdapter(annotation):field.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?context.getTypeAdapter(fieldType):field.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=context.getTypeAdapter(fieldType):field.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=fieldType.getRawType():field.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=isPrimitive?fieldType.getRawType():field.getAnnotation(JsonAdapter.class,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=fieldType.getRawType():isPrimitive?fieldType.getRawType():field.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=isPrimitive?fieldType.getRawType():annotation.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=isPrimitive?fieldType.getRawType():field.getAnnotation(JsonAdapter.class,description);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=isPrimitive?fieldType.getRawType():field.getAnnotation(JsonAdapter.TYPE);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.isPrimitive()?isPrimitive:mapped;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=context.isPrimitive()?isPrimitive:mapped;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.isPrimitive();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.isPrimitive()?isPrimitive:null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType?null:annotation.getTypeAdapter(isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType?null:mapped.getTypeAdapter(isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?null:fieldType.getTypeAdapter(isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fields?null:fieldType.getTypeAdapter(isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(field,annotation,constructorConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(context,field,constructorConstructor,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(annotation,field,constructorConstructor,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,annotation,fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructor,context,fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructor,fieldType,annotation,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,annotation,context,fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=getTypeAdapter(annotation,fieldType,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=getTypeAdapter(fieldType,constructorConstructor,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=getTypeAdapter(context,constructorConstructor,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=getTypeAdapter(context,constructorConstructor,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=field.values();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=typeAdapter.values();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.values();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fields.values();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=context.values();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation.getValues();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.getTypeAdapter(context,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive.getTypeAdapter(fieldType,context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=field.getTypeAdapter(fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=context.getTypeAdapter(fieldType,isPrimitive,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fields.getTypeAdapter(fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=field.getTypeAdapter(context,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(type,fieldType,serialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,serialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(jsonAdapterPresent){TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(annotation,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(annotation,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(context,constructorConstructor,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(annotation,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(jsonAdapterPresent){TypeAdapter<?>mapped=getTypeAdapter(context,constructorConstructor,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(annotation,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(fieldType,serialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109ObjectConstructor<?>mapped=getTypeAdapter(annotation,context,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation);ObjectConstructor<?>mapped=getTypeAdapter(context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,constructorConstructor,annotation);ObjectConstructor<?>mapped=getTypeAdapter(fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation);ObjectConstructor<?>mapped=getTypeAdapter(context,fieldType,annotation);}else{thrownewIllegalArgumentException("");}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,fieldType,annotation);ObjectConstructor<?>mapped=getTypeAdapter(fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType,annotation.getTypeAdapter(fieldType):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?context,fieldType.getRawType():null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType,annotation.getTypeAdapter(context):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType,annotation.getTypeAdapter(isPrimitive):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getRawType():jsonAdapterPresent;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=isPrimitive?fieldType.getRawType():null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=isPrimitive?fieldType.getRawType():typeAdapter;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=isPrimitive?fieldType.getSerialize():field.getRawType();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=isPrimitive?fieldType.getRawType():deserialize;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=fieldType.getRawType();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=isPrimitive?fieldType.getRawType():item;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=isPrimitive?fieldType.getRawType():field;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(annotation,constructorConstructor,fieldType,context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(fieldType,constructorConstructor,context,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(typeAdapter,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(typeAdapter,context,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(jsonAdapterPresent){TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,constructorConstructor,annotation);TypeAdapter<?>mapped=getTypeAdapter(typeAdapter,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(jsonAdapterPresent){TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(typeAdapter,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(jsonAdapterPresent){TypeAdapter<?>mapped=getTypeAdapter(fieldType,constructorConstructor,annotation);TypeAdapter<?>mapped=getTypeAdapter(typeAdapter,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=getTypeAdapter(typeAdapter,context,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(type,fieldType,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(compilerConstructor,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){mapped=getTypeAdapter(context,fieldType,serialize,deserialize);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation?null:isPrimitive;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?null:annotation.type;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?null:annotation.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?null:annotation.toString();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?null:annotation.map;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=field.getTypeAdapter(type);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=fieldType.getTypeToken();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=annotation.getTypeToken();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=fields.getTypeToken();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=context.getTypeToken();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=type.getTypeToken();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=field,annotation.getTypeToken();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){TypeAdapter<?>mapped=getTypeAdapter(constructor,context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=field.type;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=field.getRawType();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=field.mapped;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=field.getType();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>constructor=field.getAnnotation(JsonToken.TYPE_OBJECT);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>constructor=context.getAnnotation(JsonToken.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>constructor=fieldType.getAnnotation(JsonToken.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>constructor=field.getAnnotation(JsonToken.class,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>constructor=field.getAnnotation(JsonToken.CLASS);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>constructor=field.getAnnotation(JsonToken.class,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation.getRawType():null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=context.getRawType():null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.getReturnType():null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fields.getRawType():null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.getValue():null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.getTypeAdapter(element);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.getTypeAdapter(value);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>constructor=context.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>constructor=field.getAnnotation(JsonAdapter.class,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>constructor=field.getAnnotation(JsonAdapter.class,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>constructor=fieldType.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>constructor=field.getAnnotation(JsonAdapter.class,JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>constructor=field.getAnnotation(JsonAdapter.class,description);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109mapped=context.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109mapped=annotation.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109mapped=field.getAnnotation(JsonAdapter.class,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109mapped=typeAdapter.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109mapped=fields.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109mapped=field.getAnnotation(JsonAdapter.TYPE);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109mapped=getTypeAdapter(annotation,context,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109mapped=getTypeAdapter(fieldType,context,constructorConstructor,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation.getTypeAdapter(isPrimitive):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=typeAdapter.getTypeAdapter(isPrimitive):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=context.getTypeAdapter(fieldType,isPrimitive):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=context.getTypeAdapter(isPrimitive):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109ObjectConstructorconstructor=field.getAnnotation(JsonAdapter.class,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109ObjectConstructorconstructor=context.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109ObjectConstructorconstructor=field.getAnnotation(JsonAdapter.class,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109ObjectConstructorconstructor=field.getAnnotation(JsonAdapter.class,description);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109ObjectConstructorconstructor=annotation.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109ObjectConstructorconstructor=field.getAnnotation(JsonAdapter.class,name);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>constructor=field.getConstructor(isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>constructor=fieldConstructor.getConstructor();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>constructor=field,annotation.getConstructor();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=getTypeAdapter(annotation,fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=getTypeAdapter(fieldType,serialize,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=getTypeAdapter(context,fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=getTypeAdapter(type,fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=getTypeAdapter(fieldType,fieldNamingStrategy,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation.values;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation.path;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation.getMap();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation.data;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(type,annotation,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(prototype,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=mapped;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,fieldType,fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructor,fieldType,fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(structorConstructor,fieldType,fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,method,fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(context,constructorConstructor,fieldType,annotation,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(fieldType,constructorConstructor,annotation,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(annotation,fieldType,annotation,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(type,fieldType,annotation,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=constructorConstructor;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=context.getConstructor();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType?null:field.getTypeAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType?null:context.getTypeAdapter(fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType?null:context.getTypeAdapter(fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.getTypeAdapter(annotation,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType?null:annotation.getTypeAdapter(fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,serialize,constructorConstructor,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(fieldType,constructorConstructor,context,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(compilerConstructor,context,fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?annotation.getTypeAdapter(fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?annotation.getTypeAdapter(fieldType,fieldValue);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?context.getTypeAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?annotation.getTypeAdapter(fieldType,typeAdapter);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?annotation.getTypeAdapter(fieldType,serialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.getTypeAdapter(annotation):context.getTypeAdapter(fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getTypeAdapter(annotation):field.getTypeAdapter(annotation,context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation?fieldType.getTypeAdapter(annotation):context.getTypeAdapter(fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=context.getTypeAdapter(fieldType):mapped.getTypeAdapter(fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?context.getTypeAdapter(fieldType,deserialize):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?context.getTypeAdapter(fieldType,serialize):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation.getAnnotation(Annotation.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=context.getAnnotation(Annotation.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.getAnnotation(Annotation.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=field.getAnnotation(Annotation.class,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=field.getAnnotation(Annotation.TYPE);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fields.getAnnotation(Annotation.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType?null:field.getAnnotation(Annotation.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=field?null:field.getAnnotation(Annotation.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=field,isPrimitive?null:field.getAnnotation(Annotation.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?null:annotation.getAnnotation(Annotation.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fields?null:field.getAnnotation(Annotation.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation.getRawType();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.getReturnType();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=context.getRawType();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fields.getRawType();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109FieldNamingStrategyconstructor=field.getAnnotation(JsonReader.class,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109FieldNamingStrategyconstructor=field.getAnnotation(JsonReader.class,serialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109FieldNamingStrategyconstructor=field.getAnnotation(JsonReader.class,jsonAdapterPresent);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109FieldNamingStrategyconstructor=field.getAnnotation(JsonReader.class,name);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109FieldNamingStrategyconstructor=field.getAnnotation(JsonReader.class,description);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109FieldNamingStrategyconstructor=context.getAnnotation(JsonReader.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109FieldNamingStrategyconstructor=field.getAnnotation(JsonReader.class,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(fieldType,fieldNamingStrategy,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>mapped=getTypeAdapter(fieldType,context,constructorConstructor,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>mapped=getTypeAdapter(annotation,context,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>mapped=getTypeAdapter(compiler,context,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>mapped=getTypeAdapter(fieldType,context,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>mapped=getTypeAdapter(field,context,constructorConstructor,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType?null:isPrimitive;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType,isPrimitive?null:fieldType;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType:null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?null:fieldType.getRawType();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?null:fieldType.restrictByNotNullOrUndefined();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType?null:field.getTypeAdapter(annotation,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(type,fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=annotation.mapped;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=annotation.type;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=annotation.map;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=annotation,isPrimitive;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=annotation.getTypeAdapter();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(compiler,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,constructorConstructor,annotation);TypeAdapter<?>mapped=getTypeAdapter(compiler,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(context,constructorConstructor,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(compiler,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(compiler,context,fieldType,annotation);}else{thrownewIllegalArgumentException("");}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(jsonAdapterPresent){TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=isPrimitive?null:typeAdapter;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=isPrimitive?null:mapped.type;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=isPrimitive?null:annotation;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=fieldType?null:mapped;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=isPrimitive?null:serialize;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=isPrimitive?null:fieldType.getRawType();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,serialize,deserialize,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructor,context,fieldType,serialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(type,context,fieldType,serialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(compiler,context,fieldType,serialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=fieldType.getRawType():null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=isPrimitive?fieldType.getRawType():typeAdapter;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=isPrimitive?fieldType.getRawType():annotation;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=fieldType,isPrimitive?fieldType.getRawType():null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=isPrimitive?fieldType.getRawType():FieldUtils.safeNegate(fieldType.getRawType());
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=fieldType.getRawType();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getTypeAdapter(fieldType,annotation):field.getRawType();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getTypeAdapter(context):field.getRawType();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getTypeAdapter(annotation):field.getRawType();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.getTypeAdapter(fieldType,annotation):context.getRawType();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.getTypeAdapter(fieldType,annotation):isPrimitive.getRawType();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation?context.getTypeAdapter(fieldType,isPrimitive):field.getRawType();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=serialize?fieldType.getRawType():isPrimitive;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getRawType():serialize,deserialize;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.getRawType():serialize;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(structorConstructor,context,fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=fieldtype.getTypeAdapter(context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=context.getTypeAdapter(fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=typeAdapter.getTypeAdapter(fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation,fieldValue.values();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation,constructorConstructor,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=isPrimitive?fieldType.getRawType():field.getAnnotation(JsonAdapter.class,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=isPrimitive?fieldType.getRawType():field.getAnnotation(JsonAdapter.class,serialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,annotation.getTypeAdapter(annotation):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation,isPrimitive?context.getTypeAdapter(annotation):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?context,annotation.getTypeAdapter(fieldType),null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fields[isPrimitive?null:field.getAnnotation(Annotation.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,annotation,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(annotation,constructorConstructor,fieldType,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(context,fieldNamingStrategy,constructorConstructor,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.hasType()?null:field.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=context.isPrimitive?null:field.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){mapped=getTypeAdapter(annotation,context,fieldType,annotation);}else{returnnewReflectiveTypeAdapterFactory.BoundField(serializedName,serialize,deserialize);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);}else{returnnewReflectiveTypeAdapterFactory.BoundField(serializedName,serialize,deserialize);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){mapped=getTypeAdapter(context,fieldType,annotation);}else{returnnewReflectiveTypeAdapterFactory.BoundField(serializedName,serialize,deserialize);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){mapped=getTypeAdapter(fieldType,constructorConstructor,fieldType,annotation);}else{returnnewReflectiveTypeAdapterFactory.BoundField(serializedName,serialize,deserialize);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){mapped=getTypeAdapter(fieldType,context,isPrimitive,deserialize);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){mapped=getTypeAdapter(constructorConstructor,fieldType,annotation);}else{returnnewReflectiveTypeAdapterFactory.BoundField(serializedName,serialize,deserialize);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation,isPrimitive?null:annotation;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation,isPrimitive?null:field.getAnnotation(Annotation.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation,isPrimitive?null:fieldType;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation.isPrimitive?null:annotation;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(structorConstructor,fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(compilerConstructor,fieldType,constructor,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109FieldNamingStrategyconstructor=annotation.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109FieldNamingStrategyconstructor=field.getAnnotation(JsonAdapter.class,serialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getTypeAdapter(context,annotation):field.getRawType();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=context.getTypeAdapter(fieldType,annotation):field.getRawType();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=context.getTypeAdapter(fieldType):context.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=isPrimitive?fieldType.getNativeType(UNKNOWN_TYPE):fieldType.getRawType();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=isPrimitive?fieldType.getAnnotation(JsonAdapter.class):field.getRawType();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=isPrimitive?fieldType.getRawType():fieldValue;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=isPrimitive?fieldType.getJsonType().getRawType();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109mapped=getTypeAdapter(fieldType,context,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){mapped=getTypeAdapter(annotation,context,fieldType,isPrimitive);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(!serialize){mapped=getTypeAdapter(constructorConstructor,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,constructorConstructor,annotation);typeAdapter<?>mapped=getTypeAdapter(fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(!isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation);typeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,annotation,fieldType,serialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,constructorConstructor,fieldType,serialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation.isPrimitive;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=getTypeAdapter(compiler,fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=context?null:fieldType.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?annotation:constructor;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(compilerConstructor,fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(fieldType,constructorConstructor,serialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,serialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(typeConstructor,fieldType,serialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=isPrimitive?context.getTypeAdapter(fieldType,serialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(!isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,constructorConstructor,annotation);TypeAdapter<?>mapped=getTypeAdapter(compiler,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(!isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(compiler,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(prototype,context,fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getRawType():serialized;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?context:context;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType,isPrimitive?fieldType.getNativeType(UNKNOWN_TYPE):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType,isPrimitive?fieldType.getRawType():type;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=isPrimitive?fields.getRawType():field.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,serialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getRawType():array;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(!isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,constructorConstructor,annotation);TypeAdapter<?>mapped=getTypeAdapter(fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation==null){if(isPrimitive){mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){if(isPrimitive){mapped=getTypeAdapter(constructorConstructor,annotation,fieldType,deserialize);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){if(isPrimitive){mapped=getTypeAdapter(constructorConstructor,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){if(isPrimitive){mapped=getTypeAdapter(fieldType,context,isPrimitive,deserialize);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,field,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(compiler,field,constructorConstructor,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(annotation,fieldType,serialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType?null:fieldType.getTypeAdapter(isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation?null:fieldType.getTypeAdapter(isPrimitive,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation?null:fieldType.getTypeAdapter(value);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>constructor=fieldAdapter.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>constructor=typeAdapter.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>constructor=fields.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?null:constructor;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType,annotation.getTypeAdapter(field):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType,context.getTypeAdapter(annotation):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109ObjectConstructor<?>mapped=getTypeAdapter(fieldType,context,constructorConstructor,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,fieldType,annotation);ObjectConstructor<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.isPrimitive?null:isPrimitive;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=constructor.getTypeAdapter(context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=isPrimitive?null:fieldType;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>jsonAdapterPresent=field.getAnnotation(JsonAdapter.class,serialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>jsonAdapterPresent=field.getAnnotation(JsonAdapter.class,JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType:constructor;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=typeAdapter.getTypeAdapter(annotation):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,constructorConstructor,annotation);mapped=getTypeAdapter(fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation);mapped=getTypeAdapter(context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109mapped=constructor.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,annotation,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=getTypeAdapter(structorConstructor,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getRawType():field.getAnnotation(Annotation.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType,isPrimitive?fieldType:mapped;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(!isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation);TypeToken<?>mapped=getTypeAdapter(context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(!isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,constructorConstructor,annotation);TypeToken<?>mapped=getTypeAdapter(fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>constructor=typeAdapter.getConstructor();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(structorConstructor,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation==null){mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);}else{returnnewReflectiveTypeAdapterFactory.BoundField(value,isPrimitive,serialize,deserialize);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){mapped=getTypeAdapter(constructorConstructor,fieldType,annotation);}else{returnnewReflectiveTypeAdapterFactory.BoundField(value,isPrimitive,serialize,deserialize);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation==null){mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation==null){mapped=getTypeAdapter(constructorConstructor,fieldType,annotation);}else{returnnewReflectiveTypeAdapterFactory.BoundField(value,isPrimitive,serialize,deserialize);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,fieldType,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(compilerConstructor,context,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive||mapped.isPrimitive();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation==null){TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(field,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){TypeAdapter<?>mapped=getTypeAdapter(field,context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(field,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(field,context,fieldType,annotation);typeAdapter<?>mapped=getTypeAdapter(field,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(!isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(field,context,fieldType,annotation);typeAdapter<?>mapped=getTypeAdapter(field,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(annotation,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,constructorConstructor,annotation);TypeAdapter<?>mapped=getTypeAdapter(annotation,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(!isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(annotation,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,annotation,fieldType,isPrimitive);TypeAdapter<?>mapped=getTypeAdapter(annotation,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(constructor,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(annotation,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=annotation.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=annotation.value;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getRawType():FieldUtils.safeMultiply(fieldNamingStrategy);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getRawType():FieldUtils.safeMultiply(value);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(annotation,context,fieldType,delegate);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation?null:fieldType.getTypeAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation?null:fieldType.getTypeAdapter(annotation,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructor,fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fields.getTypeAdapter(annotation):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,fieldType,deserialize,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,fieldType,methodType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,fieldType,name,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getTypeAdapter(annotation,context):field.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getTypeAdapter(context):field.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,fieldType,annotations);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,fieldType,info);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,fieldType,warning);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation?fieldType.getRawType():null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation.field;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>mapped=getTypeAdapter(annotation,context,fieldType,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>mapped=getTypeAdapter(constructorConstructor,annotation,fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=object;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(structorConstructor,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation.getTypeAdapter(fieldType,context):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotations.getTypeAdapter(fieldType):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=typeAdapter.getTypeAdapter(context):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=isPrimitive?fieldType:typeAdapter;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.getTypeAdapter(isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.isPrimitive?null:context.getTypeAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>constructor=field.getAnnotation(JsonToken.class,JsonToken.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>constructor=fields.getAnnotation(JsonToken.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,constructorConstructor,annotation);TypeAdapter<?>mapped=getTypeAdapter(typeAdapter,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(!isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,constructorConstructor,annotation);TypeAdapter<?>mapped=getTypeAdapter(typeAdapter,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(fieldType,constructorConstructor,annotation);TypeAdapter<?>mapped=getTypeAdapter(typeAdapter,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getTypeAdapter(annotation):field.getTypeAdapter(fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation.getTypeAdapter(fieldType):context.getTypeAdapter(fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fields.getTypeAdapter(annotation):context.getTypeAdapter(fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getTypeAdapter(annotation,serialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation?field.getTypeAdapter(isPrimitive):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=null?context.getTypeAdapter(fieldType):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType?null:fieldType.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType,isPrimitive?null:fieldType.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.getRawType(isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getTypeAdapter(fieldType,annotation):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){mapped=getTypeAdapter(annotation,context,fieldType,annotation);}else{returnnewReflectiveTypeAdapterFactory.BoundField(fieldType,serialize,deserialize);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);}else{returnnewReflectiveTypeAdapterFactory.BoundField(fieldType,serialize,deserialize);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);}else{returnnewReflectiveTypeAdapterFactory.BoundField(fieldType,serialize,dese
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);}else{returnnewReflectiveTypeAdapterFactory.BoundField(fieldType,serialize,des
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){mapped=getTypeAdapter(annotation,context,fieldType,annotation);}else{returnnewReflectiveTypeAdapterFactory.BoundField(fieldType,serialize,dese
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){mapped=getTypeAdapter(annotation,context,fieldType,delegate);}else{returnnewReflectiveTypeAdapterFactory.BoundField(fieldType,serialize,deserialize);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation,isPrimitive,serialize;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation,isPrimitive,fieldType;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation,isPrimitive,typeAdapter;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=field.getParameterType(0);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(structorConstructor,context,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=fieldtype.getTypeToken();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=typeAdapter.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=field.getAnnotation(JsonAdapter.class,serialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,annotation,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?null:fieldType.type;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType?null:mapped.type;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?null:field.type;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,constructorConstructor,annotation);TypeAdapter<?>mapped=getTypeAdapter(constructor,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(!isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,constructorConstructor,annotation);TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=typeAdapter?null:serialize;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation,fieldType.getTypeAdapter();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=getTypeAdapter(fieldType,constructorConstructor);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType?null:field.getTypeAdapter(isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldtype.getTypeAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109ObjectConstructorconstructor=typeAdapter.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109ObjectConstructorconstructor=field.getAnnotation(JsonAdapter.class,serialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);}else{returnnewReflectiveTypeAdapterFactory.BoundField(name,serialize,deserialize);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){mapped=getTypeAdapter(annotation,context,fieldType,annotation);}else{returnnewReflectiveTypeAdapterFactory.BoundField(name,serialize,deserialize);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){mapped=getTypeAdapter(fieldType,constructorConstructor,annotation);}else{returnnewReflectiveTypeAdapterFactory.BoundField(name,serialize,deserialize);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){mapped=getTypeAdapter(fieldType,constructorConstructor,fieldType,annotation);}else{returnnewReflectiveTypeAdapterFactory.BoundField(name,serialize,deserialize);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){mapped=getTypeAdapter(annotation,context,fieldType,name);}else{returnnewReflectiveTypeAdapterFactory.BoundField(name,serialize,deserialize);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation!=null?fieldType.type:annotation.type;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation.isPrimitive?typeAdapter:annotation.type;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation.isPrimitive?fieldType:annotation.type;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=typeAdapter.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fields.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.getTypeAdapter(annotation,context);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=isPrimitive?fieldType.getRawType():context;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=isPrimitive?fieldType.getRawType():object;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotationinstanceofTypeAdapter?(TypeAdapter<?>)typeAdapter:annotation.mapped;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotationinstanceofTypeAdapter?(TypeAdapter<?>)typeAdapter;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,fieldType,serialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=getTypeAdapter(structorConstructor,fieldType,serialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.getTypeAdapter(fieldType):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>constructor=JsonReader.getAnnotation(field.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>constructor=fields.getAnnotation(JsonReader.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>constructor=typeAdapter.getAnnotation(JsonReader.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,instance,fieldType,serialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getRawType():type;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructor,context,fieldNamingPolicy,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(annotation,context,constructor,fieldNamingPolicy);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotations.getAnnotation(Annotation.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotated.getAnnotation(Annotation.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldtype?null:field.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=serialize?null:deserialize;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>constructor=fieldNamingPolicy.getConstructor();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,factory,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType,isPrimitive?null:field.getTypeAdapter(value);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType,isPrimitive?context:field.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?annotation.getTypeAdapter(fieldType,fieldNamingStrategy);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?annotation.getTypeAdapter(fieldType,context,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(jsonAdapterPresent){TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,constructorConstructor,annotation);TypeAdapter<?>mapped=getTypeAdapter(annotation,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(!isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,constructorConstructor,annotation);TypeAdapter<?>mapped=getTypeAdapter(annotation,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>constructor=fieldValue.getAnnotation(JsonReader.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,fieldType,annotation,fieldNamingStrategy,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,fieldType,annotation,deserialize,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);TypeToken<?>mapped=getTypeAdapter(context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);TypeToken<?>mapped=getTypeAdapter(fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,constructorConstructor,annotation);TypeToken<?>mapped=getTypeAdapter(fieldType,context,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,fieldType,annotation);TypeToken<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,constructorConstructor,annotation);TypeToken<?>mapped=getTypeAdapter(fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>constructor=field.getConstructor(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=fieldType.getTypeAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=field.getTypeAdapter(fieldValue);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldPrimitive?null:field.getAnnotation(Annotation.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation==null){mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);}else{returnnewReflectiveTypeAdapterFactory.BoundField(serializedName,serialize,deserialize);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){mapped=getTypeAdapter(fieldType,fieldType,annotation);}else{returnnewReflectiveTypeAdapterFactory.BoundField(serializedName,serialize,deserialize);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){mapped=getTypeAdapter(fieldType,context,fieldType,annotation);}else{returnnewReflectiveTypeAdapterFactory.BoundField(serializedName,serialize,deserialize);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType:mapped,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType:mapped,deserialize;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(annotation,context,constructor,fieldNamingStrategy);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(structorConstructor,context,fieldNamingStrategy,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldName,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation==null){TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){TypeAdapter<?>mapped=getTypeAdapter(constructor,context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(structor,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109FieldNamingStrategyconstructor=field.getAnnotation(JsonAdapter.class,name);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);typeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation==null){TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);typeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType,isPrimitive?null:field.getTypeAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?null:field.getTypeAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.isPrimitive?null:field.getTypeAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=getTypeAdapter(fieldType,serialize,deserialize,fieldNamingStrategy);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,fieldType,objectType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,bean,fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,fieldType,beanType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=deserialize?null:deserialize;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType,isPrimitive?null:deserialize;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>mapped=getTypeAdapter(constructorConstructor,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>mapped=getTypeAdapter(compilerConstructor,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,constructorConstructor,annotation);ObjectConstructor<?>mapped=getTypeAdapter(fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation==null){TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,constructorConstructor,annotation);ObjectConstructor<?>mapped=getTypeAdapter(fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);ObjectConstructor<?>mapped=getTypeAdapter(fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);ObjectConstructor<?>mapped=getTypeAdapter(context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorconstructor,context,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=isPrimitive?context.getTypeAdapter(fieldType):field.getRawType();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=isPrimitive?fieldType.getRawType():context.getTypeAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=field.getAnnotation(Annotation.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=field.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=annotation.map();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation!=null?fieldType.mapped;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation==null?fieldType.mapped;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation.isPrimitive?fieldType.mapped;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation!=null?field.mapped;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.getRawClass():null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.getRawParameterType(0);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation!=null?fieldType.value:annotation.value;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation!=null?fieldValue.value:annotation.value;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation==null?fieldType.toString():annotation.value;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation==null?fieldType.value:annotation.value;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation.getTypeAdapter(fieldType,isPrimitive):field.getRawType();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation!=null?fieldType.getTypeAdapter():annotation;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation!=null?fieldType.getTypeAdapter():annotation.getTypeAdapter();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.getTypeAdapter(fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.getTypeAdapter(value,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getRawType():annotation,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getRawType():annotation.toString();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation==null){TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,constructorConstructor,annotation);TypeAdapter<?>mapped=getTypeAdapter(fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType,deserialize?null:field.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType|null:field.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(compiler,fieldType,constructorConstructor,serialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getRawType().getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getTypeAdapter(fieldValue):field.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation==null){mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);}else{returnnewReflectiveTypeAdapterFactory.BoundField(name,serialize,deserialize);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){mapped=getTypeAdapter(fieldType,fieldType,annotation);}else{returnnewReflectiveTypeAdapterFactory.BoundField(name,serialize,deserialize);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=fieldType.isPrimitive?fieldType:null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,constructorConstructor,annotation);mapped=getTypeAdapter(fieldType,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(isPrimitive){TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,fieldType,annotation);mapped=getTypeAdapter(fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);mapped=getTypeAdapter(fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,constructorConstructor,annotation);mapped=getTypeAdapter(fieldType,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType:object;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType:method;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109FieldNamingStrategyconstructor=field.getAnnotation(JsonReader.class,serializedName);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getTypeAdapter(annotation):field.getTypeAdapter(annotation,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?annotation:field.getTypeAdapter(annotation):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?null:fieldValue;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=field.isPrimitive()?isPrimitive:typeAdapter;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=field.getTypeAdapter(fieldType):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,constructorConstructor,annotation);TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation==null){TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,constructorConstructor,annotation);TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation==null){TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,constructorConstructor,annotation);TypeAdapter<?>mapped=getTypeAdapter(fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);typeAdapter<?>mapped=getTypeAdapter(fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=getTypeAdapter(constructorConstructor,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<Object>mapped=getTypeAdapter(constructorConstructor,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,deserialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(structorConstructor,context,fieldType,serialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(structorConstructor,fieldType,serialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.getParameterTypes();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(typeAdapter,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(typeAdapter,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);typeAdapter<?>mapped=getTypeAdapter(typeAdapter,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){TypeAdapter<?>mapped=getTypeAdapter(constructor,context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(typeAdapter,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=isPrimitive?fieldType.toString():field.toString();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=isPrimitive?fieldType.getRawType():FieldUtils.safeMultiply(fieldValue);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=isPrimitive?fieldType.getRawType():FieldUtils.safeNegate(fieldValue);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType,isPrimitive?context.getTypeAdapter(annotation):field.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType,isPrimitive?null:field.getRawTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?context,annotation.findTypeAdapter(fieldType):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?context,annotation.getTypeAdapter(serializers):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?null:object;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=getTypeAdapter(compilerConstructor,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotationinstanceofClass<?>?null:annotation.getTypeAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotationinstanceofTypeAdapter?null:annotation.getTypeAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){if(isPrimitive){mapped=getTypeAdapter(structorConstructor,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Annotation<?>annotation=field.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation==null){if(isPrimitive){mapped=getTypeAdapter(structorConstructor,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){if(isPrimitive){mapped=getTypeAdapter(fieldType,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation==null){mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);}else{returnnewReflectiveTypeAdapterFactory.BoundField(fieldType,serialize,deserialize);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldPrimitive?null:field.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getRawType():FieldUtils.safeAdd(annotation,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,constructorConstructor,annotation);TypeAdapter<?>mapped=getTypeAdapter(constructor,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,constructorConstructor,annotation);TypeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation==null){TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,constructorConstructor,annotation);TypeAdapter<?>mapped=getTypeAdapter(constructor,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,fieldType,annotation,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation?null:annotation;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.restrictByNotNullOrUndefined():field.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.isPrimitive?null:field.getTypeAdapter(annotation,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=isPrimitive?fieldType.getRawType():FieldUtils.safeMultiply(fieldType.getRawType());
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=isPrimitive?fieldType.getRawType():newTypeAdapter<Object>(fieldType.getRawType());
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=isPrimitive?null:fieldValue;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109finalTypeAdapter<?>mapped=isPrimitive?null:field.getRawType();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType?context.getTypeAdapter(isPrimitive):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109mapped=isPrimitive?field.getAnnotation(JsonAdapter.class):field.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109mapped=field.getAnnotation(JsonAdapter.class,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation==null?fieldType.type:annotation.type;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation.isPrimitive?fieldType.getRawType():annotation.type;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation.isPrimitive?fieldType.toString():annotation.type;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getRawType():field;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldValue;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?context.getTypeAdapter(fieldType,deserialize):field.getRawType();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getTypeAdapter(annotation):context.getTypeAdapter(fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=field.map();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(structorConstructor,context,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(fieldType,fieldType,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,constructorConstructor,annotation);TypeAdapter<?>mapped=getTypeAdapter(fieldType,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(fieldType,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(fieldType,fieldType,constructorConstructor,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fields.getTypeAdapter(isPrimitive):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldValue.getTypeAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType,isPrimitive?null:annotation.getTypeAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=isPrimitive?fieldType.getRawType():field.getAnnotation(JsonAdapter.class,type);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(annotation,context,fieldType,description);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getTypeAdapter(annotation):context.getTypeAdapter(fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getTypeAdapter(annotation):field,context.getTypeAdapter(annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(annotation,field,constructorConstructor,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(compilerConstructor,fieldType,serialize,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(compiler,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation==null){TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(compiler,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){TypeAdapter<?>mapped=getTypeAdapter(constructor,context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(compiler,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation==null){TypeAdapter<?>mapped=getTypeAdapter(constructor,context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(compiler,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);typeAdapter<?>mapped=getTypeAdapter(compiler,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=isPrimitive?fieldType.getTypeAdapter(annotation,deserialize):context.getTypeAdapter(fieldType,deserialize);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=deserialize?context.getTypeAdapter(fieldType,isPrimitive);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation,fieldValue,isPrimitive;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>constructor=fields.getConstructor();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109Constructor<?>constructor=constructor.getConstructor();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType||isPrimitive?null:fieldType;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.isPrimitive?null:fieldType;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=fieldValue.getTypeToken();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(compilerConstructor,fieldType,constructorConstructor,annotation);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldValue.values();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation.fieldValue;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation.baseType;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=context.getTypeAdapter(fieldValue):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,fieldType,annotation):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);}else{returnnewReflectiveTypeAdapterFactory.BoundField(fieldType,isPrimitive,serialize,deserialize);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){TypeAdapter<?>mapped=getTypeAdapter(constructor,context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(field,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);typeAdapter<?>mapped=getTypeAdapter(field,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);TypeAdapter<?>mapped=getTypeAdapter(field,context,fieldType,annotation);}else{thrownewIllegalArgumentException("");}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,fieldType,annotation);typeAdapter.mapped=getTypeAdapter(field,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);finalTypeAdapter<?>mapped=getTypeAdapter(context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){TypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);finalTypeAdapter<?>mapped=getTypeAdapter(fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109if(annotation!=null){TypeAdapter<?>mapped=getTypeAdapter(fieldType,context,fieldType,annotation);finalTypeAdapter<?>mapped=getTypeAdapter(constructorConstructor,context,fieldType,annotation);}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeToken<?>mapped=arePrimitive?fieldType.getRawType():field.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType.getTypeAdapter(fieldType,annotation):field.getAnnotation(JsonAdapter.class);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType,isPrimitive?fieldType.getRawClass():null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=fieldType,isPrimitive?fieldType.getRawType():Collections.emptyList();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=annotation.getTypeAdapter(fieldType,isPrimitive):null;
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java109TypeAdapter<?>mapped=field.getAnnotation(Annotation.class,annotation);
