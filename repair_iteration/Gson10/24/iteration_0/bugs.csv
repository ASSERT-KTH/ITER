bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
47	[BUG] [BUGGY] return new ReflectiveTypeAdapterFactory.BoundField(name, serialize, deserialize) { [FE] ComparisonFailure [CONTEXT]  JsonAdapter annotation = field.getAnnotation(JsonAdapter.class); TypeAdapter<?> mapped = null; if (annotation != null) { mapped = getTypeAdapter(constructorConstructor, context, fieldType, annotation); } final boolean jsonAdapterPresent = mapped != null; if (mapped == null) mapped = context.getAdapter(fieldType); final TypeAdapter<?> typeAdapter = mapped; [BUGGY] return new ReflectiveTypeAdapterFactory.BoundField(name, serialize, deserialize) { [BUGGY] @SuppressWarnings({"unchecked", "rawtypes"}) // the type adapter and field type always agree @Override void write(JsonWriter writer, Object value) throws IOException, IllegalAccessException { Object fieldValue = field.get(value); TypeAdapter t = new TypeAdapterRuntimeTypeWrapper(context, typeAdapter, fieldType.getType()); t.write(writer, fieldValue); } @Override void read(JsonReader reader, Object value) throws IOException, IllegalAccessException { [CLASS] ReflectiveTypeAdapterFactory 1 BoundField Adapter [METHOD] createBoundField [RETURN_TYPE] ReflectiveTypeAdapterFactory$BoundField  Gson context Field field String name TypeToken<?> fieldType boolean serialize boolean deserialize [VARIABLES] Gson context String $anonymous0 alternate name serializedName JsonAdapter annotation Excluder excluder JsonWriter writer FieldNamingStrategy fieldNamingPolicy ConstructorConstructor constructorConstructor Field field boolean $anonymous1 $anonymous2 deserialize deserialized isPrimitive jsonAdapterPresent serialize serialized TypeToken fieldType ObjectConstructor constructor TypeAdapter mapped t typeAdapter JsonReader reader Object fieldValue value Map boundFields  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	117	117	1	replace	
