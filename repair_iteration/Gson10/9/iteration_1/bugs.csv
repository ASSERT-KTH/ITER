bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedName);  [CE]  cannot  find  symbol  serializedName  [FE]    ComparisonFailure  [CONTEXT]  private  List<String>  getFieldNames(Field  f)  {  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedName);  [BUGGY]  if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedName);	SerializedName  annotation  =  f.getAnnotation(SerializedName.class);  	non-compiled	[CE]  cannot  find  symbol  serializedName	17	None	replace
2	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(Serializable.class);  [CE]  cannot  find  symbol  [FE]      ComparisonFailure  [CONTEXT]  private  List<String>  getFieldNames(Field  f)  {  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(Serializable.class);  [BUGGY]  if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(Serializable.class);	SerializedName  annotation  =  f.getAnnotation(SerializedName.class);  	non-compiled	[CE]  cannot  find  symbol	17	None	replace
3	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serialize);  [CE]  cannot  find  symbol  serialize  [FE]        ComparisonFailure  [CONTEXT]  private  List<String>  getFieldNames(Field  f)  {  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serialize);  [BUGGY]  if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serialize);	SerializedName  annotation  =  f.getAnnotation(SerializedName.class);  	non-compiled	[CE]  cannot  find  symbol  serialize	17	None	replace
4	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type);  [CE]  type  has  private  access  in  Field  [FE]          ComparisonFailure  [CONTEXT]  private  List<String>  getFieldNames(Field  f)  {  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type);  [BUGGY]  if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type);	SerializedName  annotation  =  f.getAnnotation(SerializedName.class);  	non-compiled	[CE]  type  has  private  access  in  Field	17	None	replace
5	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null);  [CE]  no  suitable  method  found  for  getAnnotation(Class<SerializedName>,<null>)  [FE]            ComparisonFailure  [CONTEXT]  private  List<String>  getFieldNames(Field  f)  {  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null);  [BUGGY]  if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null);	SerializedName  annotation  =  f.getAnnotation(SerializedName.class);  	non-compiled	[CE]  no  suitable  method  found  for  getAnnotation(Class<SerializedName>,<null>)	17	None	replace
6	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializedName.class);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure  [CONTEXT]  private  List<String>  getFieldNames(Field  f)  {  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializedName.class);  [BUGGY]  if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(serializedName.class);	SerializedName  annotation  =  f.getAnnotation(SerializedName.class);  	non-compiled	[CE]  cannot  find  symbol	17	None	replace
7	[BUG]  [BUGGY]    [CE]  cannot  find  symbol  annotation  [FE]                ComparisonFailure  [CONTEXT]  private  List<String>  getFieldNames(Field  f)  {  [BUGGY]    [BUGGY]  if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	  	SerializedName  annotation  =  f.getAnnotation(SerializedName.class);  	non-compiled	[CE]  cannot  find  symbol  annotation	17	None	replace
8	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure  [CONTEXT]  private  List<String>  getFieldNames(Field  f)  {  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class);  [BUGGY]  if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class);	SerializedName  annotation  =  f.getAnnotation(SerializedName.class);  	non-compiled	[CE]  cannot  find  symbol	17	None	replace
9	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.value());  [CE]  cannot  find  symbol  [FE]      ComparisonFailure  [CONTEXT]  private  List<String>  getFieldNames(Field  f)  {  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.value());  [BUGGY]  if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.value());	SerializedName  annotation  =  f.getAnnotation(SerializedName.class);  	non-compiled	[CE]  cannot  find  symbol	17	None	replace
10	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class);  [CE]  no  suitable  method  found  for  getAnnotation(Class<FieldNamingStrategy>)  [FE]        ComparisonFailure  [CONTEXT]  private  List<String>  getFieldNames(Field  f)  {  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class);  [BUGGY]  if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class);	SerializedName  annotation  =  f.getAnnotation(SerializedName.class);  	non-compiled	[CE]  no  suitable  method  found  for  getAnnotation(Class<FieldNamingStrategy>)	17	None	replace
11	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name());  [CE]  cannot  find  symbol  [FE]          ComparisonFailure  [CONTEXT]  private  List<String>  getFieldNames(Field  f)  {  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name());  [BUGGY]  if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name());	SerializedName  annotation  =  f.getAnnotation(SerializedName.class);  	non-compiled	[CE]  cannot  find  symbol	17	None	replace
12	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name);  [CE]  name  has  private  access  in  Field  [FE]            ComparisonFailure  [CONTEXT]  private  List<String>  getFieldNames(Field  f)  {  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name);  [BUGGY]  if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name);	SerializedName  annotation  =  f.getAnnotation(SerializedName.class);  	non-compiled	[CE]  name  has  private  access  in  Field	17	None	replace
13	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.class);  [CE]  cannot  find  symbol  [FE]    ComparisonFailure  [CONTEXT]  private  List<String>  getFieldNames(Field  f)  {  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.class);  [BUGGY]  if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.class);	SerializedName  annotation  =  f.getAnnotation(SerializedName.class);  	non-compiled	[CE]  cannot  find  symbol	17	None	replace
14	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f);  [CE]  no  suitable  method  found  for  getAnnotation(Class<SerializedName>,Field)  [FE]      ComparisonFailure  [CONTEXT]  private  List<String>  getFieldNames(Field  f)  {  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f);  [BUGGY]  if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f);	SerializedName  annotation  =  f.getAnnotation(SerializedName.class);  	non-compiled	[CE]  no  suitable  method  found  for  getAnnotation(Class<SerializedName>,Field)	17	None	replace
