bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(scope.class);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(scope.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedName.getAnnotation(scope.class);	  SerializedName    annotation    =    scope.getAnnotation(serializedName.class);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
2	[BUG]  [BUGGY]  SerializedName  annotation  =  scope.getAnnotation(serializedName,  f.class);  [CE]  cannot  find  symbol  serializedName  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  scope.getAnnotation(serializedName,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  scope.getAnnotation(serializedName,  f.class);	  SerializedName    annotation    =    scope.getAnnotation(serializedName.class);    	non-compiled	[CE]  cannot  find  symbol  serializedName	88	None	replace
3	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(scope,  f.class);  [CE]  cannot  find  symbol  scope  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(scope,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedName.getAnnotation(scope,  f.class);	  SerializedName    annotation    =    scope.getAnnotation(serializedName.class);    	non-compiled	[CE]  cannot  find  symbol  scope	88	None	replace
4	[BUG]  [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(scope.class);  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(scope.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialize.getAnnotation(scope.class);	  SerializedName    annotation    =    scope.getAnnotation(serializedName.class);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
5	[BUG]  [BUGGY]  SerializedName  annotation  =  scope.getAnnotation(f.serializedName.class);  [CE]  package  f  does  not  exist  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  scope.getAnnotation(f.serializedName.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  scope.getAnnotation(f.serializedName.class);	  SerializedName    annotation    =    scope.getAnnotation(serializedName.class);    	non-compiled	[CE]  package  f  does  not  exist	88	None	replace
6	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(serializedName.class);  [CE]  cannot  find  symbol  [FE]                                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(serializedName.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedName.getAnnotation(serializedName.class);	  SerializedName    annotation    =    scope.getAnnotation(serializedName.class);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
7	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(Serializable.class,  f);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(Serializable.class,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(Serializable.class,  f);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(Serializable.class);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
8	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(Serializable,  f.class);  [CE]  cannot  find  symbol  Serializable  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(Serializable,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(Serializable,  f.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(Serializable.class);    	non-compiled	[CE]  cannot  find  symbol  Serializable	70	None	replace
9	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(Serializable.class,  serializedName);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(Serializable.class,  serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(Serializable.class,  serializedName);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(Serializable.class);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
10	[BUG]  [BUGGY]  SerializedName  annotation  =  FieldNamingPolicy.getAnnotation(Serializable.class);  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  FieldNamingPolicy.getAnnotation(Serializable.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  FieldNamingPolicy.getAnnotation(Serializable.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(Serializable.class);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
11	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(FieldNamingStrategy.class,  f);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(FieldNamingStrategy.class,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(FieldNamingStrategy.class,  f);	  SerializedName    annotation    =    f.getAnnotation(FieldNamingStrategy.class,    fieldNamingPolicy);    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
12	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  fieldNamingPolicy,  serializedName);  [CE]  cannot  find  symbol  serializedName  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  fieldNamingPolicy,  serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  fieldNamingPolicy,  serializedName);	  SerializedName    annotation    =    f.getAnnotation(FieldNamingStrategy.class,    fieldNamingPolicy);    	non-compiled	[CE]  cannot  find  symbol  serializedName	113	None	replace
13	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  fieldNamingPolicy,  serialize);  [CE]  cannot  find  symbol  serialize  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  fieldNamingPolicy,  serialize);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  fieldNamingPolicy,  serialize);	  SerializedName    annotation    =    f.getAnnotation(FieldNamingStrategy.class,    fieldNamingPolicy);    	non-compiled	[CE]  cannot  find  symbol  serialize	113	None	replace
14	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(fieldNamingPolicy.class,  FieldNamingStrategy.class);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(fieldNamingPolicy.class,  FieldNamingStrategy.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(fieldNamingPolicy.class,  FieldNamingStrategy.class);	  SerializedName    annotation    =    f.getAnnotation(FieldNamingStrategy.class,    fieldNamingPolicy);    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
15	[BUG]  [BUGGY]  SerializedName  annotation  =  fields.getAnnotation(FieldNamingStrategy.class,  f);  [CE]  cannot  find  symbol  fields  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fields.getAnnotation(FieldNamingStrategy.class,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fields.getAnnotation(FieldNamingStrategy.class,  f);	  SerializedName    annotation    =    f.getAnnotation(FieldNamingStrategy.class,    fieldNamingPolicy);    	non-compiled	[CE]  cannot  find  symbol  fields	113	None	replace
16	[BUG]  [BUGGY]  serializedName  =  f.getAnnotation(FieldNamingStrategy.class,  fieldNamingPolicy);  [CE]  cannot  find  symbol  serializedName  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  serializedName  =  f.getAnnotation(FieldNamingStrategy.class,  fieldNamingPolicy);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	serializedName  =  f.getAnnotation(FieldNamingStrategy.class,  fieldNamingPolicy);	  SerializedName    annotation    =    f.getAnnotation(FieldNamingStrategy.class,    fieldNamingPolicy);    	non-compiled	[CE]  cannot  find  symbol  serializedName	113	None	replace
17	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f,  f);  [CE]  cannot  find  symbol  serializedName  [FE]              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f,  f);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName,    f);    	non-compiled	[CE]  cannot  find  symbol  serializedName	44	None	replace
18	[BUG]  [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f,  f);  [CE]  cannot  find  symbol  serialize  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f,  f);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName,    f);    	non-compiled	[CE]  cannot  find  symbol  serialize	44	None	replace
19	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  name,  f);  [CE]  cannot  find  symbol  name  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  name,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  name,  f);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName,    f);    	non-compiled	[CE]  cannot  find  symbol  name	44	None	replace
20	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  name.name());  [CE]  cannot  find  symbol  name  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  name.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  name.name());	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serialize.name());    	non-compiled	[CE]  cannot  find  symbol  name	29	None	replace
21	[BUG]  [BUGGY]  SerializedName  annotation  =  serializer.getAnnotation(SerializedName.class,  f.name());  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializer.getAnnotation(SerializedName.class,  f.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializer.getAnnotation(SerializedName.class,  f.name());	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serialize.name());    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
22	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  $anonymous0);  [CE]  cannot  find  symbol  $anonymous0  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  $anonymous0);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  $anonymous0);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    $anonymous1);    	non-compiled	[CE]  cannot  find  symbol  $anonymous0	11	None	replace
23	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  $anonymous2);  [CE]  cannot  find  symbol  $anonymous2  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  $anonymous2);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  $anonymous2);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    $anonymous1);    	non-compiled	[CE]  cannot  find  symbol  $anonymous2	11	None	replace
24	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  new  FieldNamingStrategy(f.getDeclaredFieldNames());  [CE]  cannot  find  symbol  [FE]                                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  new  FieldNamingStrategy(f.getDeclaredFieldNames());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  new  FieldNamingStrategy(f.getDeclaredFieldNames());	  FieldNamingStrategy    fieldNamingPolicy    =    f.getDeclaredFieldNames();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
25	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  f.getDeclaredFieldNames(field);  [CE]  cannot  find  symbol  field  [FE]                                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  f.getDeclaredFieldNames(field);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  f.getDeclaredFieldNames(field);	  FieldNamingStrategy    fieldNamingPolicy    =    f.getDeclaredFieldNames();    	non-compiled	[CE]  cannot  find  symbol  field	65	None	replace
26	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  fields.getDeclaredFieldNames();  [CE]  cannot  find  symbol  fields  [FE]                                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  fields.getDeclaredFieldNames();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  fields.getDeclaredFieldNames();	  FieldNamingStrategy    fieldNamingPolicy    =    f.getDeclaredFieldNames();    	non-compiled	[CE]  cannot  find  symbol  fields	65	None	replace
27	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  this.fieldNamingPolicy.getDeclaredFieldNames();  [CE]  cannot  find  symbol  [FE]                                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  this.fieldNamingPolicy.getDeclaredFieldNames();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  this.fieldNamingPolicy.getDeclaredFieldNames();	  FieldNamingStrategy    fieldNamingPolicy    =    f.getDeclaredFieldNames();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
28	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  f.getDeclaredFieldNames(true);  [CE]  cannot  find  symbol  [FE]                                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  f.getDeclaredFieldNames(true);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  f.getDeclaredFieldNames(true);	  FieldNamingStrategy    fieldNamingPolicy    =    f.getDeclaredFieldNames();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
29	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  f.getDeclaredFieldNames(null);  [CE]  cannot  find  symbol  [FE]                                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  f.getDeclaredFieldNames(null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  f.getDeclaredFieldNames(null);	  FieldNamingStrategy    fieldNamingPolicy    =    f.getDeclaredFieldNames();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
30	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  _value);  [CE]  cannot  find  symbol  _value  [FE]              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  _value);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  _value);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    _class);    	non-compiled	[CE]  cannot  find  symbol  _value	85	None	replace
31	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  serialize);  [CE]  cannot  find  symbol  serialize  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  serialize);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  serialize);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    _class);    	non-compiled	[CE]  cannot  find  symbol  serialize	85	None	replace
32	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  serialized);  [CE]  cannot  find  symbol  serialized  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  serialized);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  serialized);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    _class);    	non-compiled	[CE]  cannot  find  symbol  serialized	85	None	replace
33	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  _objectConstructor);  [CE]  cannot  find  symbol  _objectConstructor  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  _objectConstructor);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  _objectConstructor);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    _class);    	non-compiled	[CE]  cannot  find  symbol  _objectConstructor	85	None	replace
34	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  this);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  this);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  this);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    _class);    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
35	[BUG]  [BUGGY]  FieldNamingStrategy  constructor  =  fieldNamingPolicy.getConstructor();  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  constructor  =  fieldNamingPolicy.getConstructor();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  constructor  =  fieldNamingPolicy.getConstructor();	  FieldNamingStrategy    constructor    =    f.getConstructor();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
36	[BUG]  [BUGGY]  FieldNamingStrategy  constructor  =  f,  fieldNamingPolicy.getConstructor();  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  constructor  =  f,  fieldNamingPolicy.getConstructor();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  constructor  =  f,  fieldNamingPolicy.getConstructor();	  FieldNamingStrategy    constructor    =    f.getConstructor();    	non-compiled	[CE]  ';'  expected	63	None	replace
37	[BUG]  [BUGGY]  FieldNamingStrategy  constructor  =  f.constructorConstructor();  [CE]  cannot  find  symbol  [FE]                                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  constructor  =  f.constructorConstructor();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  constructor  =  f.constructorConstructor();	  FieldNamingStrategy    constructor    =    f.getConstructor();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
38	[BUG]  [BUGGY]  FieldNamingStrategy  constructor  =  this.fieldNamingPolicy.getConstructor();  [CE]  cannot  find  symbol  [FE]                                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  constructor  =  this.fieldNamingPolicy.getConstructor();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  constructor  =  this.fieldNamingPolicy.getConstructor();	  FieldNamingStrategy    constructor    =    f.getConstructor();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
39	[BUG]  [BUGGY]  FieldNamingStrategy  constructor  =  f.constructor();  [CE]  cannot  find  symbol  [FE]                                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  constructor  =  f.constructor();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  constructor  =  f.constructor();	  FieldNamingStrategy    constructor    =    f.getConstructor();    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
40	[BUG]  [BUGGY]  FieldNamingStrategy  constructor  =  scope.getConstructor();  [CE]  cannot  find  symbol  scope  [FE]                                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  constructor  =  scope.getConstructor();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  constructor  =  scope.getConstructor();	  FieldNamingStrategy    constructor    =    f.getConstructor();    	non-compiled	[CE]  cannot  find  symbol  scope	63	None	replace
41	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializedNames.class);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializedNames.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(serializedNames.class);	  SerializedName    annotation    =    serializedNames.getAnnotation(f.class);    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
42	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializers.class);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializers.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(serializers.class);	  SerializedName    annotation    =    serializedNames.getAnnotation(f.class);    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
43	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializableNames.class);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializableNames.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(serializableNames.class);	  SerializedName    annotation    =    serializedNames.getAnnotation(f.class);    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
44	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializedNames,  f.class);  [CE]  cannot  find  symbol  serializedNames  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializedNames,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(serializedNames,  f.class);	  SerializedName    annotation    =    serializedNames.getAnnotation(f.class);    	non-compiled	[CE]  cannot  find  symbol  serializedNames	124	None	replace
45	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedNames.getAnnotation(f,  f.class);  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedNames.getAnnotation(f,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedNames.getAnnotation(f,  f.class);	  SerializedName    annotation    =    serializedNames.getAnnotation(f.class);    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
46	[BUG]  [BUGGY]  SerializedName  annotation  =  this.serializedNames.getAnnotation(f.class);  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  this.serializedNames.getAnnotation(f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  this.serializedNames.getAnnotation(f.class);	  SerializedName    annotation    =    serializedNames.getAnnotation(f.class);    	non-compiled	[CE]  cannot  find  symbol	124	None	replace
47	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializers,  f.class);  [CE]  cannot  find  symbol  serializers  [FE]                                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializers,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(serializers,  f.class);	  SerializedName    annotation    =    serializedNames.getAnnotation(f.class);    	non-compiled	[CE]  cannot  find  symbol  serializers	124	None	replace
48	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  boundFields.getDeclaredFields();  [CE]  cannot  find  symbol  boundFields  [FE]                                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  boundFields.getDeclaredFields();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  boundFields.getDeclaredFields();	  FieldNamingStrategy    fieldNamingPolicy    =    f.getDeclaredFields();    	non-compiled	[CE]  cannot  find  symbol  boundFields	64	None	replace
49	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  new  FieldNamingStrategy(f.getDeclaredFields());  [CE]  cannot  find  symbol  [FE]                                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  new  FieldNamingStrategy(f.getDeclaredFields());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  new  FieldNamingStrategy(f.getDeclaredFields());	  FieldNamingStrategy    fieldNamingPolicy    =    f.getDeclaredFields();    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
50	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  fields.getDeclaredFields();  [CE]  cannot  find  symbol  fields  [FE]                                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  fields.getDeclaredFields();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  fields.getDeclaredFields();	  FieldNamingStrategy    fieldNamingPolicy    =    f.getDeclaredFields();    	non-compiled	[CE]  cannot  find  symbol  fields	64	None	replace
51	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  this.fieldNamingPolicy.getDeclaredFields();  [CE]  cannot  find  symbol  [FE]                                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  this.fieldNamingPolicy.getDeclaredFields();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  this.fieldNamingPolicy.getDeclaredFields();	  FieldNamingStrategy    fieldNamingPolicy    =    f.getDeclaredFields();    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
52	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  new  FieldNamingStrategy(f.getDeclaredFields(),  null);  [CE]  cannot  find  symbol  [FE]                                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  new  FieldNamingStrategy(f.getDeclaredFields(),  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  new  FieldNamingStrategy(f.getDeclaredFields(),  null);	  FieldNamingStrategy    fieldNamingPolicy    =    f.getDeclaredFields();    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
53	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  this.fields.getDeclaredFields();  [CE]  cannot  find  symbol  fields  [FE]                                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  this.fields.getDeclaredFields();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  this.fields.getDeclaredFields();	  FieldNamingStrategy    fieldNamingPolicy    =    f.getDeclaredFields();    	non-compiled	[CE]  cannot  find  symbol  fields	64	None	replace
54	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(FunctionNamingStrategy.class,  f);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(FunctionNamingStrategy.class,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(FunctionNamingStrategy.class,  f);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(FunctionNamingStrategy.class);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
55	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(FunctionNamingStrategy.class,  serializedName);  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(FunctionNamingStrategy.class,  serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(FunctionNamingStrategy.class,  serializedName);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(FunctionNamingStrategy.class);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
56	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FunctionNamingStrategy.class);  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FunctionNamingStrategy.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(FunctionNamingStrategy.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(FunctionNamingStrategy.class);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
57	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(FunctionNamingStrategy,  f.class);  [CE]  cannot  find  symbol  FunctionNamingStrategy  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(FunctionNamingStrategy,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(FunctionNamingStrategy,  f.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(FunctionNamingStrategy.class);    	non-compiled	[CE]  cannot  find  symbol  FunctionNamingStrategy	23	None	replace
58	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(FunctionNamingStrategy.class,  f.type);  [CE]  cannot  find  symbol  [FE]                                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(FunctionNamingStrategy.class,  f.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(FunctionNamingStrategy.class,  f.type);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(FunctionNamingStrategy.class);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
59	[BUG]  [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy.value());  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy.value());	  SerializedName    annotation    =    serialize.getAnnotation(SerializedName.class,    f.value());    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
60	[BUG]  [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f,  f.value());  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f,  f.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f,  f.value());	  SerializedName    annotation    =    serialize.getAnnotation(SerializedName.class,    f.value());    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
61	[BUG]  [BUGGY]  SerializedName  serializedName  =  f.getAnnotation(SerializedName.class,  serialize.value());  [CE]  cannot  find  symbol  serialize  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  serializedName  =  f.getAnnotation(SerializedName.class,  serialize.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  serializedName  =  f.getAnnotation(SerializedName.class,  serialize.value());	  SerializedName    annotation    =    serialize.getAnnotation(SerializedName.class,    f.value());    	non-compiled	[CE]  cannot  find  symbol  serialize	56	None	replace
62	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  FieldNamingStrategy.class,  serializedName);  [CE]  cannot  find  symbol  serializedName  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  FieldNamingStrategy.class,  serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  FieldNamingStrategy.class,  serializedName);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    FieldNamingStrategy.class);    	non-compiled	[CE]  cannot  find  symbol  serializedName	20	None	replace
63	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(fieldNamingPolicy,  FieldNamingStrategy.class);  [CE]  no  suitable  method  found  for  getAnnotation(FieldNamingStrategy,Class<FieldNamingStrategy>)  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(fieldNamingPolicy,  FieldNamingStrategy.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(fieldNamingPolicy,  FieldNamingStrategy.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    FieldNamingStrategy.class);    	non-compiled	[CE]  no  suitable  method  found  for  getAnnotation(FieldNamingStrategy,Class<FieldNamingStrategy>)	20	None	replace
64	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(field,  FieldNamingStrategy.class);  [CE]  cannot  find  symbol  field  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(field,  FieldNamingStrategy.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(field,  FieldNamingStrategy.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    FieldNamingStrategy.class);    	non-compiled	[CE]  cannot  find  symbol  field	20	None	replace
65	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  FieldNamingStrategy.class,  serialize);  [CE]  cannot  find  symbol  serialize  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  FieldNamingStrategy.class,  serialize);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  FieldNamingStrategy.class,  serialize);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    FieldNamingStrategy.class);    	non-compiled	[CE]  cannot  find  symbol  serialize	20	None	replace
66	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  FieldNamingStrategy.class),  serializedName);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  FieldNamingStrategy.class),  serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  FieldNamingStrategy.class),  serializedName);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    FieldNamingStrategy.class);    	non-compiled	[CE]  ';'  expected	20	None	replace
67	[BUG]  [BUGGY]  SerializedName  annotation  =  f.fieldNamingPolicy.getAnnotation(this.fieldNamingPolicy.class);  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.fieldNamingPolicy.getAnnotation(this.fieldNamingPolicy.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.fieldNamingPolicy.getAnnotation(this.fieldNamingPolicy.class);	  SerializedName    annotation    =    this.fieldNamingPolicy.getAnnotation(f.class);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
68	[BUG]  [BUGGY]  SerializedName  annotation  =  this.fieldNamingPolicy.getAnnotation(f,  f.class);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  this.fieldNamingPolicy.getAnnotation(f,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  this.fieldNamingPolicy.getAnnotation(f,  f.class);	  SerializedName    annotation    =    this.fieldNamingPolicy.getAnnotation(f.class);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
69	[BUG]  [BUGGY]  SerializedName  annotation  =  f.fieldNamingPolicy.getAnnotation(this.fieldNamingPolicy);  [CE]  cannot  find  symbol  fieldNamingPolicy  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.fieldNamingPolicy.getAnnotation(this.fieldNamingPolicy);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.fieldNamingPolicy.getAnnotation(this.fieldNamingPolicy);	  SerializedName    annotation    =    this.fieldNamingPolicy.getAnnotation(f.class);    	non-compiled	[CE]  cannot  find  symbol  fieldNamingPolicy	78	None	replace
70	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(this.fieldNamingPolicy.class);  [CE]  <identifier>  expected  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(this.fieldNamingPolicy.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(this.fieldNamingPolicy.class);	  SerializedName    annotation    =    this.fieldNamingPolicy.getAnnotation(f.class);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
71	[BUG]  [BUGGY]  SerializedName  annotation  =  f.fieldNamingPolicy.getAnnotation(this.fieldNamingPolicy,  f.class);  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.fieldNamingPolicy.getAnnotation(this.fieldNamingPolicy,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.fieldNamingPolicy.getAnnotation(this.fieldNamingPolicy,  f.class);	  SerializedName    annotation    =    this.fieldNamingPolicy.getAnnotation(f.class);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
72	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedFactory.getAnnotation(SerializedName.class,  f);  [CE]  cannot  find  symbol  serializedFactory  [FE]            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedFactory.getAnnotation(SerializedName.class,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedFactory.getAnnotation(SerializedName.class,  f);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    alternate);    	non-compiled	[CE]  cannot  find  symbol  serializedFactory	132	None	replace
73	[BUG]  [BUGGY]  SerializedName  annotation  =  this.serializedName.getAnnotation(SerializedName.class,  f);  [CE]  cannot  find  symbol  serializedName  [FE]              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  this.serializedName.getAnnotation(SerializedName.class,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  this.serializedName.getAnnotation(SerializedName.class,  f);	  SerializedName    annotation    =    serializedName.getAnnotation(SerializedName.class,    f);    	non-compiled	[CE]  cannot  find  symbol  serializedName	8	None	replace
74	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serialized);  [CE]  cannot  find  symbol  serialized  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serialized);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serialized);	  SerializedName    annotation    =    serializedName.getAnnotation(SerializedName.class,    f);    	non-compiled	[CE]  cannot  find  symbol  serialized	8	None	replace
75	[BUG]  [BUGGY]  SerializedName  annotation  =  constructor.getAnnotation(SerializedName.class,  f);  [CE]  cannot  find  symbol  constructor  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  constructor.getAnnotation(SerializedName.class,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  constructor.getAnnotation(SerializedName.class,  f);	  SerializedName    annotation    =    serialize.getAnnotation(SerializedName.class,    f);    	non-compiled	[CE]  cannot  find  symbol  constructor	10	None	replace
76	[BUG]  [BUGGY]  SerializedName  annotation  =  scope.getAnnotation(SerializedName.class,  f);  [CE]  cannot  find  symbol  scope  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  scope.getAnnotation(SerializedName.class,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  scope.getAnnotation(SerializedName.class,  f);	  SerializedName    annotation    =    serialize.getAnnotation(SerializedName.class,    f);    	non-compiled	[CE]  cannot  find  symbol  scope	10	None	replace
77	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializer);  [CE]  cannot  find  symbol  serializer  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializer);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializer);	  SerializedName    annotation    =    serialize.getAnnotation(SerializedName.class,    f);    	non-compiled	[CE]  cannot  find  symbol  serializer	10	None	replace
78	[BUG]  [BUGGY]  SerializedName  annotation  =  type.getAnnotation(SerializedName.class,  f);  [CE]  cannot  find  symbol  type  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  type.getAnnotation(SerializedName.class,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  type.getAnnotation(SerializedName.class,  f);	  SerializedName    annotation    =    serialize.getAnnotation(SerializedName.class,    f);    	non-compiled	[CE]  cannot  find  symbol  type	10	None	replace
79	[BUG]  [BUGGY]  ObjectConstructor  constructor  =  fieldNamingPolicy.getConstructor();  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  ObjectConstructor  constructor  =  fieldNamingPolicy.getConstructor();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	ObjectConstructor  constructor  =  fieldNamingPolicy.getConstructor();	  ObjectConstructor    constructor    =    f.getConstructor();    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
80	[BUG]  [BUGGY]  ObjectConstructor  constructor  =  f.constructor();  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  ObjectConstructor  constructor  =  f.constructor();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	ObjectConstructor  constructor  =  f.constructor();	  ObjectConstructor    constructor    =    f.getConstructor();    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
81	[BUG]  [BUGGY]  ObjectConstructor  constructor  =  f,  fieldNamingPolicy.getConstructor();  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  ObjectConstructor  constructor  =  f,  fieldNamingPolicy.getConstructor();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	ObjectConstructor  constructor  =  f,  fieldNamingPolicy.getConstructor();	  ObjectConstructor    constructor    =    f.getConstructor();    	non-compiled	[CE]  ';'  expected	117	None	replace
82	[BUG]  [BUGGY]  ObjectConstructor  constructor  =  f.constructorConstructor();  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  ObjectConstructor  constructor  =  f.constructorConstructor();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	ObjectConstructor  constructor  =  f.constructorConstructor();	  ObjectConstructor    constructor    =    f.getConstructor();    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
83	[BUG]  [BUGGY]  ObjectConstructor  constructor  =  scope.getConstructor();  [CE]  cannot  find  symbol  scope  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  ObjectConstructor  constructor  =  scope.getConstructor();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	ObjectConstructor  constructor  =  scope.getConstructor();	  ObjectConstructor    constructor    =    f.getConstructor();    	non-compiled	[CE]  cannot  find  symbol  scope	117	None	replace
84	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  deserializedName);  [CE]  cannot  find  symbol  deserializedName  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  deserializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  deserializedName);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    serializedName);    	non-compiled	[CE]  cannot  find  symbol  deserializedName	77	None	replace
85	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f.name);  [CE]  name  has  private  access  in  Field  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f.name);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f.name);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    serializedName);    	non-compiled	[CE]  name  has  private  access  in  Field	77	None	replace
86	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f.value());  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f.value());	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    serializedName);    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
87	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f.serializedName);  [CE]  cannot  find  symbol  serializedName  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f.serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f.serializedName);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    serializedName);    	non-compiled	[CE]  cannot  find  symbol  serializedName	77	None	replace
88	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  name);  [CE]  cannot  find  symbol  name  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  name);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  name);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    serializedName);    	non-compiled	[CE]  cannot  find  symbol  name	77	None	replace
89	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f.type);  [CE]  type  has  private  access  in  Field  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f.type);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    serializedName);    	non-compiled	[CE]  type  has  private  access  in  Field	77	None	replace
90	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f);  [CE]  cannot  find  symbol  [FE]                                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    serializedName);    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
91	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy.value());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy.value());	  SerializedName    annotation    =    serializedName.getAnnotation(SerializedName.class,    f.value());    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
92	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f,  f.value());  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f,  f.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f,  f.value());	  SerializedName    annotation    =    serializedName.getAnnotation(SerializedName.class,    f.value());    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
93	[BUG]  [BUGGY]  SerializedName  serializedName  =  f.getAnnotation(SerializedName.class,  serializedName.value());  [CE]  no  suitable  method  found  for  getAnnotation(Class<SerializedName>,String)  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  serializedName  =  f.getAnnotation(SerializedName.class,  serializedName.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  serializedName  =  f.getAnnotation(SerializedName.class,  serializedName.value());	  SerializedName    annotation    =    serializedName.getAnnotation(SerializedName.class,    f.value());    	non-compiled	[CE]  no  suitable  method  found  for  getAnnotation(Class<SerializedName>,String)	54	None	replace
94	[BUG]  [BUGGY]  SerializedName  annotation  =  this.serializedName.getAnnotation(SerializedName.class,  f.value());  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  this.serializedName.getAnnotation(SerializedName.class,  f.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  this.serializedName.getAnnotation(SerializedName.class,  f.value());	  SerializedName    annotation    =    serializedName.getAnnotation(SerializedName.class,    f.value());    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
95	[BUG]  [BUGGY]  serializedName  =  f.getAnnotation(SerializedName.class,  serializedName.value());  [CE]  cannot  find  symbol  serializedName  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  serializedName  =  f.getAnnotation(SerializedName.class,  serializedName.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	serializedName  =  f.getAnnotation(SerializedName.class,  serializedName.value());	  SerializedName    annotation    =    serializedName.getAnnotation(SerializedName.class,    f.value());    	non-compiled	[CE]  cannot  find  symbol  serializedName	54	None	replace
96	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(fieldNamingPolicy,  f.class);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(fieldNamingPolicy,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(fieldNamingPolicy,  f.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    f.class);    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
97	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f,  serializedName.class);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f,  serializedName.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f,  serializedName.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    f.class);    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
98	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  serializedName.class);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  serializedName.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  serializedName.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    f.class);    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
99	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f,  null);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f,  null);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    f.class);    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
100	[BUG]  [BUGGY]  SerializedName  annotation  =  this.fieldNamingPolicy.getAnnotation(f,  f);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  this.fieldNamingPolicy.getAnnotation(f,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  this.fieldNamingPolicy.getAnnotation(f,  f);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    this.fieldNamingStrategy);    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
101	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(this.fieldNamingStrategy);  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(this.fieldNamingStrategy);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(this.fieldNamingStrategy);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    this.fieldNamingStrategy);    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	126	None	replace
102	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(this.fieldNamingPolicy,  f);  [CE]  no  suitable  method  found  for  getAnnotation(FieldNamingStrategy,Field)  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(this.fieldNamingPolicy,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(this.fieldNamingPolicy,  f);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    this.fieldNamingStrategy);    	non-compiled	[CE]  no  suitable  method  found  for  getAnnotation(FieldNamingStrategy,Field)	126	None	replace
103	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(this.fieldNamingStrategy,  f);  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(this.fieldNamingStrategy,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(this.fieldNamingStrategy,  f);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    this.fieldNamingStrategy);    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	126	None	replace
104	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(this.fieldNamingPolicy,  this.fieldNamingStrategy);  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(this.fieldNamingPolicy,  this.fieldNamingStrategy);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(this.fieldNamingPolicy,  this.fieldNamingStrategy);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    this.fieldNamingStrategy);    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	126	None	replace
105	[BUG]  [BUGGY]  SerializedName  annotation  =  this.fieldNamingPolicy.getAnnotation(f,  fieldNamingPolicy);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  this.fieldNamingPolicy.getAnnotation(f,  fieldNamingPolicy);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  this.fieldNamingPolicy.getAnnotation(f,  fieldNamingPolicy);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    this.fieldNamingStrategy);    	non-compiled	[CE]  cannot  find  symbol	126	None	replace
106	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedFactory.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy.value());  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedFactory.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedFactory.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy.value());	  SerializedName    annotation    =    serializedFactory.getAnnotation(SerializedName.class,    f.value());    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
107	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedFactory.getAnnotation(SerializedName.class,  f,  f.value());  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedFactory.getAnnotation(SerializedName.class,  f,  f.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedFactory.getAnnotation(SerializedName.class,  f,  f.value());	  SerializedName    annotation    =    serializedFactory.getAnnotation(SerializedName.class,    f.value());    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
108	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedFactory.value());  [CE]  cannot  find  symbol  serializedFactory  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedFactory.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedFactory.value());	  SerializedName    annotation    =    serializedFactory.getAnnotation(SerializedName.class,    f.value());    	non-compiled	[CE]  cannot  find  symbol  serializedFactory	57	None	replace
109	[BUG]  [BUGGY]  SerializedName  annotation  =  this.serializedFactory.getAnnotation(SerializedName.class,  f.value());  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  this.serializedFactory.getAnnotation(SerializedName.class,  f.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  this.serializedFactory.getAnnotation(SerializedName.class,  f.value());	  SerializedName    annotation    =    serializedFactory.getAnnotation(SerializedName.class,    f.value());    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
110	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedFactory.getAnnotation(SerializedName,  f.class,  f.value());  [CE]  cannot  find  symbol  SerializedName  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedFactory.getAnnotation(SerializedName,  f.class,  f.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedFactory.getAnnotation(SerializedName,  f.class,  f.value());	  SerializedName    annotation    =    serializedFactory.getAnnotation(SerializedName.class,    f.value());    	non-compiled	[CE]  cannot  find  symbol  SerializedName	57	None	replace
111	[BUG]  [BUGGY]  List  <  String>  annotation  =  constructor.getAnnotation(Factory.class);  [CE]  cannot  find  symbol  [FE]                                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  List  <  String>  annotation  =  constructor.getAnnotation(Factory.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	List  <  String>  annotation  =  constructor.getAnnotation(Factory.class);	  List    <    String>    annotation    =    f.getAnnotation(Constructor.class);    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
112	[BUG]  [BUGGY]  List  <  String>  annotation  =  constructor.getAnnotation(Constructor.class);  [CE]  cannot  find  symbol  [FE]                                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  List  <  String>  annotation  =  constructor.getAnnotation(Constructor.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	List  <  String>  annotation  =  constructor.getAnnotation(Constructor.class);	  List    <    String>    annotation    =    f.getAnnotation(Constructor.class);    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
113	[BUG]  [BUGGY]  List  <  String>  annotation  =  constructor.getAnnotation(f.class);  [CE]  cannot  find  symbol  [FE]                                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  List  <  String>  annotation  =  constructor.getAnnotation(f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	List  <  String>  annotation  =  constructor.getAnnotation(f.class);	  List    <    String>    annotation    =    f.getAnnotation(Constructor.class);    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
114	[BUG]  [BUGGY]  List  <  String>  annotation  =  constructor.getAnnotation(Function.class);  [CE]  cannot  find  symbol  [FE]                                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  List  <  String>  annotation  =  constructor.getAnnotation(Function.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	List  <  String>  annotation  =  constructor.getAnnotation(Function.class);	  List    <    String>    annotation    =    f.getAnnotation(Constructor.class);    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
115	[BUG]  [BUGGY]  List  <  String>  annotation  =  constructorConstructor.getAnnotation(f.class);  [CE]  cannot  find  symbol  [FE]                                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  List  <  String>  annotation  =  constructorConstructor.getAnnotation(f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	List  <  String>  annotation  =  constructorConstructor.getAnnotation(f.class);	  List    <    String>    annotation    =    f.getAnnotation(Constructor.class);    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
116	[BUG]  [BUGGY]  List  <  String>  annotation  =  constructorConstructor.getAnnotation(f);  [CE]  cannot  find  symbol  [FE]                                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  List  <  String>  annotation  =  constructorConstructor.getAnnotation(f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	List  <  String>  annotation  =  constructorConstructor.getAnnotation(f);	  List    <    String>    annotation    =    f.getAnnotation(Constructor.class);    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
117	[BUG]  [BUGGY]  List  <  String>  annotation  =  constructorConstructor.getAnnotation(Factory.class);  [CE]  cannot  find  symbol  [FE]                                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  List  <  String>  annotation  =  constructorConstructor.getAnnotation(Factory.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	List  <  String>  annotation  =  constructorConstructor.getAnnotation(Factory.class);	  List    <    String>    annotation    =    f.getAnnotation(Constructor.class);    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
118	[BUG]  [BUGGY]  SerializedName  serializedName  =  serializedName.getAnnotation(f.class);  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  serializedName  =  serializedName.getAnnotation(f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  serializedName  =  serializedName.getAnnotation(f.class);	  SerializedName    serializedName    =    f.getAnnotation(serializedName.class);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
119	[BUG]  [BUGGY]  SerializedName  serializedName  =  serialized.getAnnotation(f.class);  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  serializedName  =  serialized.getAnnotation(f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  serializedName  =  serialized.getAnnotation(f.class);	  SerializedName    serializedName    =    f.getAnnotation(serializedName.class);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
120	[BUG]  [BUGGY]  SerializedName  serializedName  =  serialize.getAnnotation(f.class);  [CE]  cannot  find  symbol  [FE]                                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  serializedName  =  serialize.getAnnotation(f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  serializedName  =  serialize.getAnnotation(f.class);	  SerializedName    serializedName    =    f.getAnnotation(serializedName.class);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
121	[BUG]  [BUGGY]  SerializedName  serializedName  =  serializedFactory.getAnnotation(f.class);  [CE]  cannot  find  symbol  [FE]                                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  serializedName  =  serializedFactory.getAnnotation(f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  serializedName  =  serializedFactory.getAnnotation(f.class);	  SerializedName    serializedName    =    f.getAnnotation(serializedName.class);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
122	[BUG]  [BUGGY]  SerializedName  serializedName  =  serializedNames.getAnnotation(f.class);  [CE]  cannot  find  symbol  [FE]                                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  serializedName  =  serializedNames.getAnnotation(f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  serializedName  =  serializedNames.getAnnotation(f.class);	  SerializedName    serializedName    =    f.getAnnotation(serializedName.class);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
123	[BUG]  [BUGGY]  SerializedName  serializedName  =  serializedField.getAnnotation(f.class);  [CE]  cannot  find  symbol  [FE]                                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  serializedName  =  serializedField.getAnnotation(f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  serializedName  =  serializedField.getAnnotation(f.class);	  SerializedName    serializedName    =    f.getAnnotation(serializedName.class);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
124	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(Serializable.class,  this.serializedName);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(Serializable.class,  this.serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(Serializable.class,  this.serializedName);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    this.serializedName);    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
125	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  this.serialize);  [CE]  cannot  find  symbol  serialize  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  this.serialize);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  this.serialize);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    this.serializedName);    	non-compiled	[CE]  cannot  find  symbol  serialize	109	None	replace
126	[BUG]  [BUGGY]  SerializedName  annotation  =  this.serialize.getAnnotation(SerializedName.class,  f);  [CE]  cannot  find  symbol  serialize  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  this.serialize.getAnnotation(SerializedName.class,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  this.serialize.getAnnotation(SerializedName.class,  f);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    this.serializedName);    	non-compiled	[CE]  cannot  find  symbol  serialize	109	None	replace
127	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  this.serializationName);  [CE]  cannot  find  symbol  serializationName  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  this.serializationName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  this.serializationName);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    this.serializedName);    	non-compiled	[CE]  cannot  find  symbol  serializationName	109	None	replace
128	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  this.name);  [CE]  cannot  find  symbol  name  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  this.name);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  this.name);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    this.serializedName);    	non-compiled	[CE]  cannot  find  symbol  name	109	None	replace
129	[BUG]  [BUGGY]  SerializedName  annotation  =  serialized.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy.name());  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialized.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialized.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy.name());	  SerializedName    annotation    =    serialized.getAnnotation(SerializedName.class,    f.name());    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
130	[BUG]  [BUGGY]  SerializedName  annotation  =  serialized.getAnnotation(SerializedName.class,  f,  f.name());  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialized.getAnnotation(SerializedName.class,  f,  f.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialized.getAnnotation(SerializedName.class,  f,  f.name());	  SerializedName    annotation    =    serialized.getAnnotation(SerializedName.class,    f.name());    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
131	[BUG]  [BUGGY]  SerializedName  serializedName  =  f.getAnnotation(SerializedName.class,  serializedName.name());  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  serializedName  =  f.getAnnotation(SerializedName.class,  serializedName.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  serializedName  =  f.getAnnotation(SerializedName.class,  serializedName.name());	  SerializedName    annotation    =    serialized.getAnnotation(SerializedName.class,    f.name());    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
132	[BUG]  [BUGGY]  SerializedName  annotation  =  this.serialized.getAnnotation(SerializedName.class,  f.name());  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  this.serialized.getAnnotation(SerializedName.class,  f.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  this.serialized.getAnnotation(SerializedName.class,  f.name());	  SerializedName    annotation    =    serialized.getAnnotation(SerializedName.class,    f.name());    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
133	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serialize.name);  [CE]  cannot  find  symbol  serialize  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serialize.name);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serialize.name);	  SerializedName    annotation    =    serialize.getAnnotation(SerializedName.class,    f.name);    	non-compiled	[CE]  cannot  find  symbol  serialize	51	None	replace
134	[BUG]  [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f.name,  f.value);  [CE]  name  has  private  access  in  Field  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f.name,  f.value);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f.name,  f.value);	  SerializedName    annotation    =    serialize.getAnnotation(SerializedName.class,    f.name);    	non-compiled	[CE]  name  has  private  access  in  Field	51	None	replace
135	[BUG]  [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f.name,  f.type);  [CE]  name  has  private  access  in  Field  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f.name,  f.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f.name,  f.type);	  SerializedName    annotation    =    serialize.getAnnotation(SerializedName.class,    f.name);    	non-compiled	[CE]  name  has  private  access  in  Field	51	None	replace
136	[BUG]  [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f.name,  f.value());  [CE]  name  has  private  access  in  Field  [FE]                                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f.name,  f.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f.name,  f.value());	  SerializedName    annotation    =    serialize.getAnnotation(SerializedName.class,    f.name);    	non-compiled	[CE]  name  has  private  access  in  Field	51	None	replace
137	[BUG]  [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f.name,  fieldNamingPolicy);  [CE]  name  has  private  access  in  Field  [FE]                                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f.name,  fieldNamingPolicy);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f.name,  fieldNamingPolicy);	  SerializedName    annotation    =    serialize.getAnnotation(SerializedName.class,    f.name);    	non-compiled	[CE]  name  has  private  access  in  Field	51	None	replace
138	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.name,  f.name);  [CE]  name  has  private  access  in  Field  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.name,  f.name);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.name,  f.name);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName,    f.name);    	non-compiled	[CE]  name  has  private  access  in  Field	47	None	replace
139	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.name,  f.serializedName);  [CE]  name  has  private  access  in  Field  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.name,  f.serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.name,  f.serializedName);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName,    f.name);    	non-compiled	[CE]  name  has  private  access  in  Field	47	None	replace
140	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.name,  f.serialize);  [CE]  name  has  private  access  in  Field  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.name,  f.serialize);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.name,  f.serialize);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName,    f.name);    	non-compiled	[CE]  name  has  private  access  in  Field	47	None	replace
141	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  name,  f.name);  [CE]  cannot  find  symbol  name  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  name,  f.name);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  name,  f.name);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName,    f.name);    	non-compiled	[CE]  cannot  find  symbol  name	47	None	replace
142	[BUG]  [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f.name,  f.name);  [CE]  name  has  private  access  in  Field  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f.name,  f.name);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f.name,  f.name);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName,    f.name);    	non-compiled	[CE]  name  has  private  access  in  Field	47	None	replace
143	[BUG]  [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f.name,  f.serializedName);  [CE]  name  has  private  access  in  Field  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f.name,  f.serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f.name,  f.serializedName);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName,    f.name);    	non-compiled	[CE]  name  has  private  access  in  Field	47	None	replace
144	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.value,  serializedName);  [CE]  name  has  private  access  in  Field  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.value,  serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.value,  serializedName);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    f.value);    	non-compiled	[CE]  name  has  private  access  in  Field	79	None	replace
145	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  serializedName,  f.value);  [CE]  name  has  private  access  in  Field  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  serializedName,  f.value);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  serializedName,  f.value);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    f.value);    	non-compiled	[CE]  name  has  private  access  in  Field	79	None	replace
146	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.name,  f.value);  [CE]  name  has  private  access  in  Field  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.name,  f.value);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.name,  f.value);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    f.value);    	non-compiled	[CE]  name  has  private  access  in  Field	79	None	replace
147	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.value,  serialize);  [CE]  name  has  private  access  in  Field  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.value,  serialize);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.value,  serialize);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    f.value);    	non-compiled	[CE]  name  has  private  access  in  Field	79	None	replace
148	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedName,  f.value);  [CE]  cannot  find  symbol  serializedName  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedName,  f.value);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedName,  f.value);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    f.value);    	non-compiled	[CE]  cannot  find  symbol  serializedName	79	None	replace
149	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  serialize,  f.value);  [CE]  name  has  private  access  in  Field  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  serialize,  f.value);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  serialize,  f.value);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    f.value);    	non-compiled	[CE]  name  has  private  access  in  Field	79	None	replace
150	[BUG]  [BUGGY]  SerializedName  annotation  =  serialized.getAnnotation(Serializable.class,  f);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialized.getAnnotation(Serializable.class,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialized.getAnnotation(Serializable.class,  f);	  SerializedName    annotation    =    serialized.getAnnotation(Serializable.class);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
151	[BUG]  [BUGGY]  SerializedName  annotation  =  this.serialized.getAnnotation(Serializable.class);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  this.serialized.getAnnotation(Serializable.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  this.serialized.getAnnotation(Serializable.class);	  SerializedName    annotation    =    serialized.getAnnotation(Serializable.class);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
152	[BUG]  [BUGGY]  SerializedName  serialized  =  serialize.getAnnotation(Serializable.class);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  serialized  =  serialize.getAnnotation(Serializable.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  serialized  =  serialize.getAnnotation(Serializable.class);	  SerializedName    annotation    =    serialized.getAnnotation(Serializable.class);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
153	[BUG]  [BUGGY]  SerializedName  annotation  =  serialized.getAnnotation(Serializable,  f.class);  [CE]  cannot  find  symbol  Serializable  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialized.getAnnotation(Serializable,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialized.getAnnotation(Serializable,  f.class);	  SerializedName    annotation    =    serialized.getAnnotation(Serializable.class);    	non-compiled	[CE]  cannot  find  symbol  Serializable	66	None	replace
154	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializationName);  [CE]  cannot  find  symbol  serializationName  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializationName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializationName);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    deserializedName);    	non-compiled	[CE]  cannot  find  symbol  serializationName	9	None	replace
155	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.value);  [CE]  cannot  find  symbol  value  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.value);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.value);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.value);    	non-compiled	[CE]  cannot  find  symbol  value	83	None	replace
156	[BUG]  [BUGGY]  SerializedName  annotation  =  serialized.getAnnotation(SerializedName.class,  f.value);  [CE]  cannot  find  symbol  value  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialized.getAnnotation(SerializedName.class,  f.value);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialized.getAnnotation(SerializedName.class,  f.value);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.value);    	non-compiled	[CE]  cannot  find  symbol  value	83	None	replace
157	[BUG]  [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f.value);  [CE]  cannot  find  symbol  value  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f.value);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f.value);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.value);    	non-compiled	[CE]  cannot  find  symbol  value	83	None	replace
158	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedFactory.getAnnotation(SerializedName.class,  f.value);  [CE]  cannot  find  symbol  value  [FE]                                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedFactory.getAnnotation(SerializedName.class,  f.value);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedFactory.getAnnotation(SerializedName.class,  f.value);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.value);    	non-compiled	[CE]  cannot  find  symbol  value	83	None	replace
159	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedName,  f.type,  null);  [CE]  cannot  find  symbol  serializedName  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedName,  f.type,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedName,  f.type,  null);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.type,    null);    	non-compiled	[CE]  cannot  find  symbol  serializedName	134	None	replace
160	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  null,  serialize);  [CE]  type  has  private  access  in  Field  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  null,  serialize);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  null,  serialize);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.type,    null);    	non-compiled	[CE]  type  has  private  access  in  Field	134	None	replace
161	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  null,  serializedName);  [CE]  type  has  private  access  in  Field  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  null,  serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  null,  serializedName);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.type,    null);    	non-compiled	[CE]  type  has  private  access  in  Field	134	None	replace
162	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serialize,  f.type,  null);  [CE]  cannot  find  symbol  serialize  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serialize,  f.type,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serialize,  f.type,  null);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.type,    null);    	non-compiled	[CE]  cannot  find  symbol  serialize	134	None	replace
163	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.type,  null);  [CE]  name  has  private  access  in  Field  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.type,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.type,  null);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.type,    null);    	non-compiled	[CE]  name  has  private  access  in  Field	134	None	replace
164	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  null,  fieldNamingPolicy);  [CE]  type  has  private  access  in  Field  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  null,  fieldNamingPolicy);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  null,  fieldNamingPolicy);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.type,    null);    	non-compiled	[CE]  type  has  private  access  in  Field	134	None	replace
165	[BUG]  [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f.type,  f);  [CE]  type  has  private  access  in  Field  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f.type,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f.type,  f);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.type,    serialize);    	non-compiled	[CE]  type  has  private  access  in  Field	5	None	replace
166	[BUG]  [BUGGY]  SerializedName  annotation  =  serialized.getAnnotation(SerializedName.class,  f.type,  f);  [CE]  type  has  private  access  in  Field  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialized.getAnnotation(SerializedName.class,  f.type,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialized.getAnnotation(SerializedName.class,  f.type,  f);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.type,    serialize);    	non-compiled	[CE]  type  has  private  access  in  Field	5	None	replace
167	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedName.type,  f.type);  [CE]  cannot  find  symbol  serializedName  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedName.type,  f.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedName.type,  f.type);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.type,    serialize);    	non-compiled	[CE]  cannot  find  symbol  serializedName	5	None	replace
168	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedName.type,  f.value);  [CE]  cannot  find  symbol  serializedName  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedName.type,  f.value);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedName.type,  f.value);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.type,    serialize);    	non-compiled	[CE]  cannot  find  symbol  serializedName	5	None	replace
169	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  serialize,  $anonymous1);  [CE]  type  has  private  access  in  Field  [FE]                                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  serialize,  $anonymous1);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  serialize,  $anonymous1);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.type,    serialize);    	non-compiled	[CE]  type  has  private  access  in  Field	5	None	replace
170	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f,  null);  [CE]  cannot  find  symbol  serializedName  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f,  null);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serialize,    null);    	non-compiled	[CE]  cannot  find  symbol  serializedName	14	None	replace
171	[BUG]  [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f,  null);  [CE]  cannot  find  symbol  serialize  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f,  null);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serialize,    null);    	non-compiled	[CE]  cannot  find  symbol  serialize	14	None	replace
172	[BUG]  [BUGGY]  SerializedName  annotation  =  serialized.getAnnotation(SerializedName.class,  f,  null);  [CE]  cannot  find  symbol  serialized  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialized.getAnnotation(SerializedName.class,  f,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialized.getAnnotation(SerializedName.class,  f,  null);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serialize,    null);    	non-compiled	[CE]  cannot  find  symbol  serialized	14	None	replace
173	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  name,  null);  [CE]  cannot  find  symbol  name  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  name,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  name,  null);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serialize,    null);    	non-compiled	[CE]  cannot  find  symbol  name	14	None	replace
174	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  null);  [CE]  no  suitable  method  found  for  getAnnotation(Class<SerializedName>,<null>,<null>)  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  null);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serialize,    null);    	non-compiled	[CE]  no  suitable  method  found  for  getAnnotation(Class<SerializedName>,<null>,<null>)	14	None	replace
175	[BUG]  [BUGGY]  SerializedName  annotation  =  serialized.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy.value());  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialized.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialized.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy.value());	  SerializedName    annotation    =    serialized.getAnnotation(SerializedName.class,    f.value());    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
176	[BUG]  [BUGGY]  SerializedName  annotation  =  serialized.getAnnotation(SerializedName.class,  f,  f.value());  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialized.getAnnotation(SerializedName.class,  f,  f.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialized.getAnnotation(SerializedName.class,  f,  f.value());	  SerializedName    annotation    =    serialized.getAnnotation(SerializedName.class,    f.value());    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
177	[BUG]  [BUGGY]  SerializedName  annotation  =  this.serialized.getAnnotation(SerializedName.class,  f.value());  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  this.serialized.getAnnotation(SerializedName.class,  f.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  this.serialized.getAnnotation(SerializedName.class,  f.value());	  SerializedName    annotation    =    serialized.getAnnotation(SerializedName.class,    f.value());    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
178	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class,  serializedName));  [CE]  cannot  find  symbol  serializedName  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class,  serializedName));  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class,  serializedName));	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class));    	non-compiled	[CE]  cannot  find  symbol  serializedName	21	None	replace
179	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class),  serializedName);  [CE]  no  suitable  method  found  for  getAnnotation(Class<FieldNamingStrategy>)  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class),  serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class),  serializedName);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class));    	non-compiled	[CE]  no  suitable  method  found  for  getAnnotation(Class<FieldNamingStrategy>)	21	None	replace
180	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f.getAnnotation(FieldNamingStrategy.class));  [CE]  no  suitable  method  found  for  getAnnotation(Class<FieldNamingStrategy>)  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f.getAnnotation(FieldNamingStrategy.class));  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f.getAnnotation(FieldNamingStrategy.class));	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class));    	non-compiled	[CE]  no  suitable  method  found  for  getAnnotation(Class<FieldNamingStrategy>)	21	None	replace
181	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(field.getAnnotation(FieldNamingStrategy.class),  serializedName);  [CE]  cannot  find  symbol  field  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(field.getAnnotation(FieldNamingStrategy.class),  serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(field.getAnnotation(FieldNamingStrategy.class),  serializedName);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class));    	non-compiled	[CE]  cannot  find  symbol  field	21	None	replace
182	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class,  serialize));  [CE]  cannot  find  symbol  serialize  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class,  serialize));  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class,  serialize));	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class));    	non-compiled	[CE]  cannot  find  symbol  serialize	21	None	replace
183	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class,  f.name()));  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class,  f.name()));  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class,  f.name()));	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class));    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
184	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(field.getAnnotation(FieldNamingStrategy.class,  f.name()));  [CE]  cannot  find  symbol  [FE]                                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(field.getAnnotation(FieldNamingStrategy.class,  f.name()));  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(field.getAnnotation(FieldNamingStrategy.class,  f.name()));	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class));    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
185	[BUG]  [BUGGY]  SerializedName  annotation  =  typeFactory.getAnnotation(Serializable.class,  f);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  typeFactory.getAnnotation(Serializable.class,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  typeFactory.getAnnotation(Serializable.class,  f);	  SerializedName    annotation    =    typeFactory.getAnnotation(Serializable.class);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
186	[BUG]  [BUGGY]  SerializedName  annotation  =  typeFactory.getAnnotation(Serializable,  f.class);  [CE]  cannot  find  symbol  Serializable  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  typeFactory.getAnnotation(Serializable,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  typeFactory.getAnnotation(Serializable,  f.class);	  SerializedName    annotation    =    typeFactory.getAnnotation(Serializable.class);    	non-compiled	[CE]  cannot  find  symbol  Serializable	93	None	replace
187	[BUG]  [BUGGY]  SerializedName  annotation  =  typeFactory.getAnnotation(Serializable.class,  f.type);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  typeFactory.getAnnotation(Serializable.class,  f.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  typeFactory.getAnnotation(Serializable.class,  f.type);	  SerializedName    annotation    =    typeFactory.getAnnotation(Serializable.class);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
188	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(f.class,  f.name);  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(f.class,  f.name);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedName.getAnnotation(f.class,  f.name);	  SerializedName    annotation    =    f.getAnnotation(serializedName.class,    f.name);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
189	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializedName.class,  serializedName);  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializedName.class,  serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(serializedName.class,  serializedName);	  SerializedName    annotation    =    f.getAnnotation(serializedName.class,    f.name);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
190	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(f.class,  f.serializedName);  [CE]  cannot  find  symbol  [FE]                                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(f.class,  f.serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedName.getAnnotation(f.class,  f.serializedName);	  SerializedName    annotation    =    f.getAnnotation(serializedName.class,    f.name);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
191	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializedName.class,  serializedName.name);  [CE]  cannot  find  symbol  [FE]                                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializedName.class,  serializedName.name);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(serializedName.class,  serializedName.name);	  SerializedName    annotation    =    f.getAnnotation(serializedName.class,    f.name);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
192	[BUG]  [BUGGY]  SerializedName  annotation  =  serialized.getAnnotation(f.class,  f.name);  [CE]  cannot  find  symbol  [FE]                                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialized.getAnnotation(f.class,  f.name);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialized.getAnnotation(f.class,  f.name);	  SerializedName    annotation    =    f.getAnnotation(serializedName.class,    f.name);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
193	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(f,  f.class);  [CE]  cannot  find  symbol  [FE]                                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(f,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedName.getAnnotation(f,  f.class);	  SerializedName    annotation    =    f.getAnnotation(serializedName.class,    f.name);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
194	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  deserializedName);  [CE]  cannot  find  symbol  deserializedName  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  deserializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  deserializedName);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    serialize);    	non-compiled	[CE]  cannot  find  symbol  deserializedName	17	None	replace
195	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  deserialized);  [CE]  cannot  find  symbol  deserialized  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  deserialized);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  deserialized);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    serialize);    	non-compiled	[CE]  cannot  find  symbol  deserialized	17	None	replace
196	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  deserialize);  [CE]  cannot  find  symbol  deserialize  [FE]                                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  deserialize);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  deserialize);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    serialize);    	non-compiled	[CE]  cannot  find  symbol  deserialize	17	None	replace
197	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  $anonymous1);  [CE]  cannot  find  symbol  $anonymous1  [FE]                                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  $anonymous1);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  $anonymous1);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    serialize);    	non-compiled	[CE]  cannot  find  symbol  $anonymous1	17	None	replace
198	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  $anonymous2);  [CE]  cannot  find  symbol  $anonymous2  [FE]                                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  $anonymous2);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  $anonymous2);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    serialize);    	non-compiled	[CE]  cannot  find  symbol  $anonymous2	17	None	replace
199	[BUG]  [BUGGY]  SerializedName  annotation  =  serialized.getAnnotation(SerializedName.class,  null,  f);  [CE]  cannot  find  symbol  serialized  [FE]                                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialized.getAnnotation(SerializedName.class,  null,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialized.getAnnotation(SerializedName.class,  null,  f);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    serialize);    	non-compiled	[CE]  cannot  find  symbol  serialized	17	None	replace
200	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName,  f,  f.class);  [CE]  cannot  find  symbol  SerializedName  [FE]              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName,  f,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName,  f,  f.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName,    f.class);    	non-compiled	[CE]  cannot  find  symbol  SerializedName	40	None	replace
201	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName,  f,  serializedName.class);  [CE]  cannot  find  symbol  SerializedName  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName,  f,  serializedName.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName,  f,  serializedName.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName,    f.class);    	non-compiled	[CE]  cannot  find  symbol  SerializedName	40	None	replace
202	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName,  f,  this.class);  [CE]  <identifier>  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName,  f,  this.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName,  f,  this.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName,    f.class);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
203	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName,  fieldNamingPolicy.class);  [CE]  cannot  find  symbol  SerializedName  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName,  fieldNamingPolicy.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName,  fieldNamingPolicy.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName,    f.class);    	non-compiled	[CE]  cannot  find  symbol  SerializedName	40	None	replace
204	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName,  f,  null);  [CE]  cannot  find  symbol  SerializedName  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName,  f,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName,  f,  null);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName,    f.class);    	non-compiled	[CE]  cannot  find  symbol  SerializedName	40	None	replace
205	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName,  f,  serialize.class);  [CE]  cannot  find  symbol  SerializedName  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName,  f,  serialize.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName,  f,  serialize.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName,    f.class);    	non-compiled	[CE]  cannot  find  symbol  SerializedName	40	None	replace
206	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName,  f);  [CE]  cannot  find  symbol  SerializedName  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName,  f);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName,    f.class);    	non-compiled	[CE]  cannot  find  symbol  SerializedName	40	None	replace
207	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedName,  alternates);  [CE]  cannot  find  symbol  serializedName  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedName,  alternates);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedName,  alternates);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    alternates);    	non-compiled	[CE]  cannot  find  symbol  serializedName	130	None	replace
208	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.name,  alternates);  [CE]  name  has  private  access  in  Field  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.name,  alternates);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.name,  alternates);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    alternates);    	non-compiled	[CE]  name  has  private  access  in  Field	130	None	replace
209	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  alternates,  serializedName);  [CE]  name  has  private  access  in  Field  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  alternates,  serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  alternates,  serializedName);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    alternates);    	non-compiled	[CE]  name  has  private  access  in  Field	130	None	replace
210	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  alternates,  serialize);  [CE]  name  has  private  access  in  Field  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  alternates,  serialize);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  alternates,  serialize);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    alternates);    	non-compiled	[CE]  name  has  private  access  in  Field	130	None	replace
211	[BUG]  [BUGGY]  SerializedName  annotation  =  alternates.getAnnotation(SerializedName.class,  f.name,  f);  [CE]  name  has  private  access  in  Field  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  alternates.getAnnotation(SerializedName.class,  f.name,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  alternates.getAnnotation(SerializedName.class,  f.name,  f);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    alternates);    	non-compiled	[CE]  name  has  private  access  in  Field	130	None	replace
212	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  null,  alternates);  [CE]  name  has  private  access  in  Field  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  null,  alternates);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  null,  alternates);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    alternates);    	non-compiled	[CE]  name  has  private  access  in  Field	130	None	replace
213	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy.name());  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy.name());	  SerializedName    annotation    =    serializedName.getAnnotation(SerializedName.class,    f.name());    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
214	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f,  f.name());  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f,  f.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f,  f.name());	  SerializedName    annotation    =    serializedName.getAnnotation(SerializedName.class,    f.name());    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
215	[BUG]  [BUGGY]  SerializedName  annotation  =  this.serializedName.getAnnotation(SerializedName.class,  f.name());  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  this.serializedName.getAnnotation(SerializedName.class,  f.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  this.serializedName.getAnnotation(SerializedName.class,  f.name());	  SerializedName    annotation    =    serializedName.getAnnotation(SerializedName.class,    f.name());    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
216	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f,  fields.name());  [CE]  cannot  find  symbol  fields  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f,  fields.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f,  fields.name());	  SerializedName    annotation    =    serializedName.getAnnotation(SerializedName.class,    f.name());    	non-compiled	[CE]  cannot  find  symbol  fields	25	None	replace
217	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f.fieldNamingStrategy.class);  [CE]  package  f  does  not  exist  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f.fieldNamingStrategy.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f.fieldNamingStrategy.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    this.fieldNamingStrategy.class);    	non-compiled	[CE]  package  f  does  not  exist	75	None	replace
218	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  this.fieldNamingStrategy.class)+  1;  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  this.fieldNamingStrategy.class)+  1;  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  this.fieldNamingStrategy.class)+  1;	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    this.fieldNamingStrategy.class);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
219	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(this.fieldNamingStrategy,  f.class);  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(this.fieldNamingStrategy,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(this.fieldNamingStrategy,  f.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    this.fieldNamingStrategy.class);    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	75	None	replace
220	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  this.fieldNamingStrategy.class,  serializedName);  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  this.fieldNamingStrategy.class,  serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  this.fieldNamingStrategy.class,  serializedName);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    this.fieldNamingStrategy.class);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
221	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  serializedName.value());  [CE]  type  has  private  access  in  Field  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  serializedName.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  serializedName.value());	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.type,    f.value());    	non-compiled	[CE]  type  has  private  access  in  Field	107	None	replace
222	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.type());  [CE]  name  has  private  access  in  Field  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.type());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.type());	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.type,    f.value());    	non-compiled	[CE]  name  has  private  access  in  Field	107	None	replace
223	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedName,  f.type());  [CE]  cannot  find  symbol  serializedName  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedName,  f.type());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedName,  f.type());	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.type,    f.value());    	non-compiled	[CE]  cannot  find  symbol  serializedName	107	None	replace
224	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  serialize,  f.value());  [CE]  type  has  private  access  in  Field  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  serialize,  f.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  serialize,  f.value());	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.type,    f.value());    	non-compiled	[CE]  type  has  private  access  in  Field	107	None	replace
225	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.type,  f.value());  [CE]  type  has  private  access  in  Field  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.type,  f.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.type,  f.value());	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.type,    f.value());    	non-compiled	[CE]  type  has  private  access  in  Field	107	None	replace
226	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.value(),  f.type);  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.value(),  f.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.value(),  f.type);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.type,    f.value());    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
227	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  serializedName,  f.type);  [CE]  cannot  find  symbol  serializedName  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  serializedName,  f.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  serializedName,  f.type);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    f.type);    	non-compiled	[CE]  cannot  find  symbol  serializedName	100	None	replace
228	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  serialize,  f.type);  [CE]  cannot  find  symbol  serialize  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  serialize,  f.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  serialize,  f.type);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    f.type);    	non-compiled	[CE]  cannot  find  symbol  serialize	100	None	replace
229	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  f.type,  serializedName);  [CE]  type  has  private  access  in  Field  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  f.type,  serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  f.type,  serializedName);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    f.type);    	non-compiled	[CE]  type  has  private  access  in  Field	100	None	replace
230	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  f.type,  serialize);  [CE]  type  has  private  access  in  Field  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  f.type,  serialize);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  f.type,  serialize);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    f.type);    	non-compiled	[CE]  type  has  private  access  in  Field	100	None	replace
231	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  null,  f.type);  [CE]  type  has  private  access  in  Field  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  null,  f.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  null,  f.type);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    f.type);    	non-compiled	[CE]  type  has  private  access  in  Field	100	None	replace
232	[BUG]  [BUGGY]  ObjectConstructor  constructor  =  fieldNamingPolicy.getConstructor(f,  f);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  ObjectConstructor  constructor  =  fieldNamingPolicy.getConstructor(f,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	ObjectConstructor  constructor  =  fieldNamingPolicy.getConstructor(f,  f);	  ObjectConstructor    constructor    =    fieldNamingPolicy.getConstructor(f);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
233	[BUG]  [BUGGY]  ObjectConstructor  constructor  =  fieldNamingPolicy.getConstructor(f,  null);  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  ObjectConstructor  constructor  =  fieldNamingPolicy.getConstructor(f,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	ObjectConstructor  constructor  =  fieldNamingPolicy.getConstructor(f,  null);	  ObjectConstructor    constructor    =    fieldNamingPolicy.getConstructor(f);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
234	[BUG]  [BUGGY]  ObjectConstructor  constructor  =  fieldNamingPolicy.findConstructor(f);  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  ObjectConstructor  constructor  =  fieldNamingPolicy.findConstructor(f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	ObjectConstructor  constructor  =  fieldNamingPolicy.findConstructor(f);	  ObjectConstructor    constructor    =    fieldNamingPolicy.getConstructor(f);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
235	[BUG]  [BUGGY]  ObjectConstructor  constructor  =  fieldNamingPolicy.getConstructor(f,  this);  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  ObjectConstructor  constructor  =  fieldNamingPolicy.getConstructor(f,  this);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	ObjectConstructor  constructor  =  fieldNamingPolicy.getConstructor(f,  this);	  ObjectConstructor    constructor    =    fieldNamingPolicy.getConstructor(f);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
236	[BUG]  [BUGGY]  ObjectConstructor  constructor  =  fieldNamingPolicy.constructor(f);  [CE]  cannot  find  symbol  [FE]                                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  ObjectConstructor  constructor  =  fieldNamingPolicy.constructor(f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	ObjectConstructor  constructor  =  fieldNamingPolicy.constructor(f);	  ObjectConstructor    constructor    =    fieldNamingPolicy.getConstructor(f);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
237	[BUG]  [BUGGY]  ObjectConstructor  constructor  =  fieldNamingPolicy.getConstructor(f,  scope);  [CE]  cannot  find  symbol  scope  [FE]                                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  ObjectConstructor  constructor  =  fieldNamingPolicy.getConstructor(f,  scope);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	ObjectConstructor  constructor  =  fieldNamingPolicy.getConstructor(f,  scope);	  ObjectConstructor    constructor    =    fieldNamingPolicy.getConstructor(f);    	non-compiled	[CE]  cannot  find  symbol  scope	90	None	replace
238	[BUG]  [BUGGY]  SerializedName  annotation  =  serialized.getAnnotation(SerializedName.class,  f,  f);  [CE]  cannot  find  symbol  serialized  [FE]              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialized.getAnnotation(SerializedName.class,  f,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialized.getAnnotation(SerializedName.class,  f,  f);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f,    deserialized);    	non-compiled	[CE]  cannot  find  symbol  serialized	125	None	replace
239	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  serialized);  [CE]  cannot  find  symbol  serialized  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  serialized);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  serialized);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f,    deserialized);    	non-compiled	[CE]  cannot  find  symbol  serialized	125	None	replace
240	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedFactory.getAnnotation(SerializedName.class,  f,  f);  [CE]  cannot  find  symbol  serializedFactory  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedFactory.getAnnotation(SerializedName.class,  f,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedFactory.getAnnotation(SerializedName.class,  f,  f);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f,    deserialized);    	non-compiled	[CE]  cannot  find  symbol  serializedFactory	125	None	replace
241	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  deserializedName);  [CE]  cannot  find  symbol  deserializedName  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  deserializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  deserializedName);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f,    serialize);    	non-compiled	[CE]  cannot  find  symbol  deserializedName	98	None	replace
242	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedFunction.getAnnotation(Serializable.class,  f);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedFunction.getAnnotation(Serializable.class,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedFunction.getAnnotation(Serializable.class,  f);	  SerializedName    annotation    =    serializedFunction.getAnnotation(Serializable.class);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
243	[BUG]  [BUGGY]  SerializedName  annotation  =  this.serializedFunction.getAnnotation(Serializable.class);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  this.serializedFunction.getAnnotation(Serializable.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  this.serializedFunction.getAnnotation(Serializable.class);	  SerializedName    annotation    =    serializedFunction.getAnnotation(Serializable.class);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
244	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedFunction.getAnnotation(Serializable,  f.class);  [CE]  cannot  find  symbol  Serializable  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedFunction.getAnnotation(Serializable,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedFunction.getAnnotation(Serializable,  f.class);	  SerializedName    annotation    =    serializedFunction.getAnnotation(Serializable.class);    	non-compiled	[CE]  cannot  find  symbol  Serializable	71	None	replace
245	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(Serializable.class,  f);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(Serializable.class,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedName.getAnnotation(Serializable.class,  f);	  SerializedName    annotation    =    f.getAnnotation(Serializable.class,    serializedName);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
246	[BUG]  [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(Serializable.class,  f);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(Serializable.class,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialize.getAnnotation(Serializable.class,  f);	  SerializedName    annotation    =    f.getAnnotation(Serializable.class,    serializedName);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
247	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedFactory.getAnnotation(Serializable.class,  f);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedFactory.getAnnotation(Serializable.class,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedFactory.getAnnotation(Serializable.class,  f);	  SerializedName    annotation    =    f.getAnnotation(Serializable.class,    serializedName);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
248	[BUG]  [BUGGY]  SerializedName  annotation  =  serializer.getAnnotation(Serializable.class,  f);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializer.getAnnotation(Serializable.class,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializer.getAnnotation(Serializable.class,  f);	  SerializedName    annotation    =    f.getAnnotation(Serializable.class,    serializedName);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
249	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedRes.getAnnotation(Serializable.class,  f);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedRes.getAnnotation(Serializable.class,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedRes.getAnnotation(Serializable.class,  f);	  SerializedName    annotation    =    f.getAnnotation(Serializable.class,    serializedName);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
250	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(FieldNamingStrategy.class,  f.name);  [CE]  name  has  private  access  in  Field  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(FieldNamingStrategy.class,  f.name);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(FieldNamingStrategy.class,  f.name);	  SerializedName    annotation    =    f.getAnnotation(FieldNamingStrategy.class,    f.name);    	non-compiled	[CE]  name  has  private  access  in  Field	116	None	replace
251	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  f.name,  serializedName);  [CE]  name  has  private  access  in  Field  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  f.name,  serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  f.name,  serializedName);	  SerializedName    annotation    =    f.getAnnotation(FieldNamingStrategy.class,    f.name);    	non-compiled	[CE]  name  has  private  access  in  Field	116	None	replace
252	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  f.name,  fieldNamingPolicy);  [CE]  name  has  private  access  in  Field  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  f.name,  fieldNamingPolicy);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  f.name,  fieldNamingPolicy);	  SerializedName    annotation    =    f.getAnnotation(FieldNamingStrategy.class,    f.name);    	non-compiled	[CE]  name  has  private  access  in  Field	116	None	replace
253	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  f.name,  serialize);  [CE]  name  has  private  access  in  Field  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  f.name,  serialize);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  f.name,  serialize);	  SerializedName    annotation    =    f.getAnnotation(FieldNamingStrategy.class,    f.name);    	non-compiled	[CE]  name  has  private  access  in  Field	116	None	replace
254	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  f.name,  false);  [CE]  name  has  private  access  in  Field  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  f.name,  false);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  f.name,  false);	  SerializedName    annotation    =    f.getAnnotation(FieldNamingStrategy.class,    f.name);    	non-compiled	[CE]  name  has  private  access  in  Field	116	None	replace
255	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  serializedName,  f.type);  [CE]  name  has  private  access  in  Field  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  serializedName,  f.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  serializedName,  f.type);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    f.type);    	non-compiled	[CE]  name  has  private  access  in  Field	80	None	replace
256	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.type,  serializedName);  [CE]  name  has  private  access  in  Field  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.type,  serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.type,  serializedName);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    f.type);    	non-compiled	[CE]  name  has  private  access  in  Field	80	None	replace
257	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  serialize,  f.type);  [CE]  name  has  private  access  in  Field  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  serialize,  f.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  serialize,  f.type);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    f.type);    	non-compiled	[CE]  name  has  private  access  in  Field	80	None	replace
258	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.type,  serialize);  [CE]  name  has  private  access  in  Field  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.type,  serialize);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.type,  serialize);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    f.type);    	non-compiled	[CE]  name  has  private  access  in  Field	80	None	replace
259	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.name,  f.type);  [CE]  name  has  private  access  in  Field  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.name,  f.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.name,  f.type);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    f.type);    	non-compiled	[CE]  name  has  private  access  in  Field	80	None	replace
260	[BUG]  [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f.name,  f);  [CE]  name  has  private  access  in  Field  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f.name,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f.name,  f);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    serialize);    	non-compiled	[CE]  name  has  private  access  in  Field	82	None	replace
261	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedName,  f.value());  [CE]  cannot  find  symbol  serializedName  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedName,  f.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedName,  f.value());	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    serialize);    	non-compiled	[CE]  cannot  find  symbol  serializedName	82	None	replace
262	[BUG]  [BUGGY]  SerializedName  annotation  =  serialized.getAnnotation(SerializedName.class,  f.name,  f);  [CE]  name  has  private  access  in  Field  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialized.getAnnotation(SerializedName.class,  f.name,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialized.getAnnotation(SerializedName.class,  f.name,  f);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    serialize);    	non-compiled	[CE]  name  has  private  access  in  Field	82	None	replace
263	[BUG]  [BUGGY]  SerializedName  annotation  =  this.serialized.getAnnotation(SerializedName.class,  f);  [CE]  cannot  find  symbol  serialized  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  this.serialized.getAnnotation(SerializedName.class,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  this.serialized.getAnnotation(SerializedName.class,  f);	  SerializedName    annotation    =    serialized.getAnnotation(SerializedName.class,    f);    	non-compiled	[CE]  cannot  find  symbol  serialized	38	None	replace
264	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(FieldNamingStrategy.class,  serializedName);  [CE]  cannot  find  symbol  serializedName  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(FieldNamingStrategy.class,  serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(FieldNamingStrategy.class,  serializedName);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(FieldNamingStrategy.class);    	non-compiled	[CE]  cannot  find  symbol  serializedName	18	None	replace
265	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(FieldNamingStrategy,  f.class);  [CE]  cannot  find  symbol  FieldNamingStrategy  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(FieldNamingStrategy,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(FieldNamingStrategy,  f.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(FieldNamingStrategy.class);    	non-compiled	[CE]  cannot  find  symbol  FieldNamingStrategy	18	None	replace
266	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(FieldNamingStrategy.class,  f.type);  [CE]  type  has  private  access  in  Field  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(FieldNamingStrategy.class,  f.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(FieldNamingStrategy.class,  f.type);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(FieldNamingStrategy.class);    	non-compiled	[CE]  type  has  private  access  in  Field	18	None	replace
267	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(FieldNamingStrategy.class,  f.scope);  [CE]  cannot  find  symbol  scope  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(FieldNamingStrategy.class,  f.scope);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(FieldNamingStrategy.class,  f.scope);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(FieldNamingStrategy.class);    	non-compiled	[CE]  cannot  find  symbol  scope	18	None	replace
268	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.name,  fieldNamingPolicy);  [CE]  name  has  private  access  in  Field  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.name,  fieldNamingPolicy);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.name,  fieldNamingPolicy);	  SerializedName    annotation    =    serializedName.getAnnotation(SerializedName.class,    f.name);    	non-compiled	[CE]  name  has  private  access  in  Field	48	None	replace
269	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.name,  f.value());  [CE]  name  has  private  access  in  Field  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.name,  f.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.name,  f.value());	  SerializedName    annotation    =    serializedName.getAnnotation(SerializedName.class,    f.name);    	non-compiled	[CE]  name  has  private  access  in  Field	48	None	replace
270	[BUG]  [BUGGY]  SerializedName  annotation  =  this.serializedName.getAnnotation(SerializedName.class,  f.name);  [CE]  name  has  private  access  in  Field  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  this.serializedName.getAnnotation(SerializedName.class,  f.name);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  this.serializedName.getAnnotation(SerializedName.class,  f.name);	  SerializedName    annotation    =    serializedName.getAnnotation(SerializedName.class,    f.name);    	non-compiled	[CE]  name  has  private  access  in  Field	48	None	replace
271	[BUG]  [BUGGY]  SerializedName  annotation  =  this.fieldNamingPolicy.getAnnotation(Serializable.class,  f);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  this.fieldNamingPolicy.getAnnotation(Serializable.class,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  this.fieldNamingPolicy.getAnnotation(Serializable.class,  f);	  SerializedName    annotation    =    this.fieldNamingPolicy.getAnnotation(Serializable.class);    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
272	[BUG]  [BUGGY]  SerializedName  annotation  =  this.fieldNamingPolicy.getAnnotation(Serializable,  f.class);  [CE]  cannot  find  symbol  Serializable  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  this.fieldNamingPolicy.getAnnotation(Serializable,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  this.fieldNamingPolicy.getAnnotation(Serializable,  f.class);	  SerializedName    annotation    =    this.fieldNamingPolicy.getAnnotation(Serializable.class);    	non-compiled	[CE]  cannot  find  symbol  Serializable	92	None	replace
273	[BUG]  [BUGGY]  SerializedName  annotation  =  getFieldNamingPolicy().getAnnotation(Serializable.class);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  getFieldNamingPolicy().getAnnotation(Serializable.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  getFieldNamingPolicy().getAnnotation(Serializable.class);	  SerializedName    annotation    =    this.fieldNamingPolicy.getAnnotation(Serializable.class);    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
274	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  null,  f);  [CE]  cannot  find  symbol  serializedName  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  null,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  null,  f);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    serializedName);    	non-compiled	[CE]  cannot  find  symbol  serializedName	13	None	replace
275	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  name);  [CE]  cannot  find  symbol  name  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  name);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  name);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    serializedName);    	non-compiled	[CE]  cannot  find  symbol  name	13	None	replace
276	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  itemName);  [CE]  cannot  find  symbol  itemName  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  itemName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  itemName);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    serializedName);    	non-compiled	[CE]  cannot  find  symbol  itemName	13	None	replace
277	[BUG]  [BUGGY]  SerializedName  annotation  =  this.serialize.getAnnotation(Serializable.class);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  this.serialize.getAnnotation(Serializable.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  this.serialize.getAnnotation(Serializable.class);	  SerializedName    annotation    =    serialize.getAnnotation(Serializable.class);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
278	[BUG]  [BUGGY]  SerializedName  serializedName  =  serialize.getAnnotation(Serializable.class);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  serializedName  =  serialize.getAnnotation(Serializable.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  serializedName  =  serialize.getAnnotation(Serializable.class);	  SerializedName    annotation    =    serialize.getAnnotation(Serializable.class);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
279	[BUG]  [BUGGY]  SerializedName  annotation  =  serialized.getAnnotation(SerializedName.class,  f.name,  f.name);  [CE]  name  has  private  access  in  Field  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialized.getAnnotation(SerializedName.class,  f.name,  f.name);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialized.getAnnotation(SerializedName.class,  f.name,  f.name);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serialize,    f.name);    	non-compiled	[CE]  name  has  private  access  in  Field	49	None	replace
280	[BUG]  [BUGGY]  SerializedName  annotation  =  serialized.getAnnotation(SerializedName.class,  f.name,  f.serialize);  [CE]  name  has  private  access  in  Field  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialized.getAnnotation(SerializedName.class,  f.name,  f.serialize);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialized.getAnnotation(SerializedName.class,  f.name,  f.serialize);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serialize,    f.name);    	non-compiled	[CE]  name  has  private  access  in  Field	49	None	replace
281	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializationName,  f);  [CE]  cannot  find  symbol  serializationName  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializationName,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializationName,  f);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serialize,    f);    	non-compiled	[CE]  cannot  find  symbol  serializationName	45	None	replace
282	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  getFunctionNamingPolicy(f);  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  getFunctionNamingPolicy(f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  getFunctionNamingPolicy(f);	  FieldNamingStrategy    fieldNamingPolicy    =    getFunctionNamingPolicy();    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
283	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  f.getFunctionNamingPolicy();  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  f.getFunctionNamingPolicy();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  f.getFunctionNamingPolicy();	  FieldNamingStrategy    fieldNamingPolicy    =    getFunctionNamingPolicy();    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
284	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  getFunctionNamingPolicy().getFieldNames(f);  [CE]  cannot  find  symbol  [FE]                                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  getFunctionNamingPolicy().getFieldNames(f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  getFunctionNamingPolicy().getFieldNames(f);	  FieldNamingStrategy    fieldNamingPolicy    =    getFunctionNamingPolicy();    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
285	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  getFunctionNamingPolicy(f.getModule());  [CE]  cannot  find  symbol  [FE]                                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  getFunctionNamingPolicy(f.getModule());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  getFunctionNamingPolicy(f.getModule());	  FieldNamingStrategy    fieldNamingPolicy    =    getFunctionNamingPolicy();    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
286	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  getFunctionNamingPolicy(f.getAnnotation());  [CE]  no  suitable  method  found  for  getAnnotation()  [FE]                                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  getFunctionNamingPolicy(f.getAnnotation());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  getFunctionNamingPolicy(f.getAnnotation());	  FieldNamingStrategy    fieldNamingPolicy    =    getFunctionNamingPolicy();    	non-compiled	[CE]  no  suitable  method  found  for  getAnnotation()	62	None	replace
287	[BUG]  [BUGGY]  SerializedName  annotation  =  constructor.getAnnotation(f,  fieldNamingPolicy.class);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  constructor.getAnnotation(f,  fieldNamingPolicy.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  constructor.getAnnotation(f,  fieldNamingPolicy.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    ObjectConstructor.class);    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
288	[BUG]  [BUGGY]  SerializedName  annotation  =  constructor.getAnnotation(f,  ObjectConstructor.class);  [CE]  cannot  find  symbol  constructor  [FE]              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  constructor.getAnnotation(f,  ObjectConstructor.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  constructor.getAnnotation(f,  ObjectConstructor.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    ObjectConstructor.class);    	non-compiled	[CE]  cannot  find  symbol  constructor	84	None	replace
289	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(fieldNamingPolicy,  ObjectConstructor.class);  [CE]  no  suitable  method  found  for  getAnnotation(FieldNamingStrategy,Class<ObjectConstructor>)  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(fieldNamingPolicy,  ObjectConstructor.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(fieldNamingPolicy,  ObjectConstructor.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    ObjectConstructor.class);    	non-compiled	[CE]  no  suitable  method  found  for  getAnnotation(FieldNamingStrategy,Class<ObjectConstructor>)	84	None	replace
290	[BUG]  [BUGGY]  SerializedName  annotation  =  constructorConstructor.getAnnotation(f,  fieldNamingPolicy.class);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  constructorConstructor.getAnnotation(f,  fieldNamingPolicy.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  constructorConstructor.getAnnotation(f,  fieldNamingPolicy.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    ObjectConstructor.class);    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
291	[BUG]  [BUGGY]  SerializedName  annotation  =  constructor.getAnnotation(f,  FieldNamingPolicy.class);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  constructor.getAnnotation(f,  FieldNamingPolicy.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  constructor.getAnnotation(f,  FieldNamingPolicy.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    ObjectConstructor.class);    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
292	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  ObjectConstructor.class,  serializedName);  [CE]  cannot  find  symbol  serializedName  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  ObjectConstructor.class,  serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  ObjectConstructor.class,  serializedName);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    ObjectConstructor.class);    	non-compiled	[CE]  cannot  find  symbol  serializedName	84	None	replace
293	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(fieldNamingPolicy);  [CE]  no  suitable  method  found  for  getAnnotation(FieldNamingStrategy)  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(fieldNamingPolicy);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(fieldNamingPolicy);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f);    	non-compiled	[CE]  no  suitable  method  found  for  getAnnotation(FieldNamingStrategy)	74	None	replace
294	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  serialization);  [CE]  cannot  find  symbol  serialization  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  serialization);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  serialization);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f);    	non-compiled	[CE]  cannot  find  symbol  serialization	74	None	replace
295	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f.name,  serializedName);  [CE]  name  has  private  access  in  Field  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f.name,  serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f.name,  serializedName);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f.name);    	non-compiled	[CE]  name  has  private  access  in  Field	50	None	replace
296	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f.name,  serialize);  [CE]  name  has  private  access  in  Field  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f.name,  serialize);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f.name,  serialize);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f.name);    	non-compiled	[CE]  name  has  private  access  in  Field	50	None	replace
297	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  serializedName,  f.name);  [CE]  cannot  find  symbol  serializedName  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  serializedName,  f.name);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  serializedName,  f.name);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f.name);    	non-compiled	[CE]  cannot  find  symbol  serializedName	50	None	replace
298	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f.name,  f.value);  [CE]  name  has  private  access  in  Field  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f.name,  f.value);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f.name,  f.value);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f.name);    	non-compiled	[CE]  name  has  private  access  in  Field	50	None	replace
299	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(serializedName.class,  f.name);  [CE]  cannot  find  symbol  [FE]                                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(serializedName.class,  f.name);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(serializedName.class,  f.name);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f.name);    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
300	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f.name,  f.value());  [CE]  name  has  private  access  in  Field  [FE]                                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f.name,  f.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f.name,  f.value());	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f.name);    	non-compiled	[CE]  name  has  private  access  in  Field	50	None	replace
301	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  fieldNamingPolicy.name());  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  fieldNamingPolicy.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  fieldNamingPolicy.name());	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f.name());    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
302	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  serializedName.name());  [CE]  cannot  find  symbol  serializedName  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  serializedName.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  serializedName.name());	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f.name());    	non-compiled	[CE]  cannot  find  symbol  serializedName	112	None	replace
303	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  serializedName,  f.name());  [CE]  cannot  find  symbol  serializedName  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  serializedName,  f.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  serializedName,  f.name());	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f.name());    	non-compiled	[CE]  cannot  find  symbol  serializedName	112	None	replace
304	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  serialize.name());  [CE]  cannot  find  symbol  serialize  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  serialize.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  serialize.name());	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f.name());    	non-compiled	[CE]  cannot  find  symbol  serialize	112	None	replace
305	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  serializedName.name());  [CE]  cannot  find  symbol  serializedName  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  serializedName.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  serializedName.name());	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f.name());    	non-compiled	[CE]  cannot  find  symbol  serializedName	112	None	replace
306	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  serialize.name());  [CE]  cannot  find  symbol  serialize  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  serialize.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  serialize.name());	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f.name());    	non-compiled	[CE]  cannot  find  symbol  serialize	112	None	replace
307	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  f);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  f);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f,    fieldNamingPolicy);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
308	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  serializedName);  [CE]  cannot  find  symbol  serializedName  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  serializedName);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f,    fieldNamingPolicy);    	non-compiled	[CE]  cannot  find  symbol  serializedName	96	None	replace
309	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedName,  f,  fieldNamingPolicy);  [CE]  cannot  find  symbol  serializedName  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedName,  f,  fieldNamingPolicy);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedName,  f,  fieldNamingPolicy);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f,    fieldNamingPolicy);    	non-compiled	[CE]  cannot  find  symbol  serializedName	96	None	replace
310	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  fieldNamingPolicy,  serializedName);  [CE]  cannot  find  symbol  serializedName  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  fieldNamingPolicy,  serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  fieldNamingPolicy,  serializedName);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f,    fieldNamingPolicy);    	non-compiled	[CE]  cannot  find  symbol  serializedName	96	None	replace
311	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  fieldNamingPolicy,  serialize);  [CE]  cannot  find  symbol  serialize  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  fieldNamingPolicy,  serialize);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  fieldNamingPolicy,  serialize);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f,    fieldNamingPolicy);    	non-compiled	[CE]  cannot  find  symbol  serialize	96	None	replace
312	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serialize,  f,  fieldNamingPolicy);  [CE]  cannot  find  symbol  serialize  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serialize,  f,  fieldNamingPolicy);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serialize,  f,  fieldNamingPolicy);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f,    fieldNamingPolicy);    	non-compiled	[CE]  cannot  find  symbol  serialize	96	None	replace
313	[BUG]  [BUGGY]  SerializedName  annotation  =  this.serializedName.getAnnotation(SerializedName.class,  null);  [CE]  cannot  find  symbol  serializedName  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  this.serializedName.getAnnotation(SerializedName.class,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  this.serializedName.getAnnotation(SerializedName.class,  null);	  SerializedName    annotation    =    serializedName.getAnnotation(SerializedName.class,    null);    	non-compiled	[CE]  cannot  find  symbol  serializedName	16	None	replace
314	[BUG]  [BUGGY]  SerializedName  annotation  =  getSerializedName(f.getAnnotation(SerializedName.class,  null);  [CE]  ')'  expected  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  getSerializedName(f.getAnnotation(SerializedName.class,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  getSerializedName(f.getAnnotation(SerializedName.class,  null);	  SerializedName    annotation    =    serializedName.getAnnotation(SerializedName.class,    null);    	non-compiled	[CE]  ')'  expected	16	None	replace
315	[BUG]  [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  null);  [CE]  cannot  find  symbol  serialize  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  null);	  SerializedName    annotation    =    serializedName.getAnnotation(SerializedName.class,    null);    	non-compiled	[CE]  cannot  find  symbol  serialize	16	None	replace
316	[BUG]  [BUGGY]  SerializedName  annotation  =  type.getAnnotation(SerializedName.class,  null);  [CE]  cannot  find  symbol  type  [FE]                                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  type.getAnnotation(SerializedName.class,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  type.getAnnotation(SerializedName.class,  null);	  SerializedName    annotation    =    serializedName.getAnnotation(SerializedName.class,    null);    	non-compiled	[CE]  cannot  find  symbol  type	16	None	replace
317	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializedFactory.class);  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializedFactory.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(serializedFactory.class);	  SerializedName    annotation    =    serializedFactory.getAnnotation(f.class);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
318	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializedFactory.getAnnotation(f.class);  [CE]  ')'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializedFactory.getAnnotation(f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(serializedFactory.getAnnotation(f.class);	  SerializedName    annotation    =    serializedFactory.getAnnotation(f.class);    	non-compiled	[CE]  ')'  expected	36	None	replace
319	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializableFactory.class);  [CE]  cannot  find  symbol  [FE]                                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializableFactory.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(serializableFactory.class);	  SerializedName    annotation    =    serializedFactory.getAnnotation(f.class);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
320	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializableFactory.getAnnotation(f.class);  [CE]  ')'  expected  [FE]                                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializableFactory.getAnnotation(f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(serializableFactory.getAnnotation(f.class);	  SerializedName    annotation    =    serializedFactory.getAnnotation(f.class);    	non-compiled	[CE]  ')'  expected	36	None	replace
321	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializedFactory,  f.class);  [CE]  cannot  find  symbol  serializedFactory  [FE]                                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializedFactory,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(serializedFactory,  f.class);	  SerializedName    annotation    =    serializedFactory.getAnnotation(f.class);    	non-compiled	[CE]  cannot  find  symbol  serializedFactory	36	None	replace
322	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializer.class);  [CE]  cannot  find  symbol  [FE]                                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializer.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(serializer.class);	  SerializedName    annotation    =    serializedFactory.getAnnotation(f.class);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
323	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(name);  [CE]  cannot  find  symbol  name  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(name);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(name);	  SerializedName    annotation    =    f.getAnnotation(serializedName);    	non-compiled	[CE]  cannot  find  symbol  name	87	None	replace
324	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(this.serializedName);  [CE]  cannot  find  symbol  serializedName  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(this.serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(this.serializedName);	  SerializedName    annotation    =    f.getAnnotation(serializedName);    	non-compiled	[CE]  cannot  find  symbol  serializedName	87	None	replace
325	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(this.fieldNamingPolicy);  [CE]  no  suitable  method  found  for  getAnnotation(FieldNamingStrategy)  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(this.fieldNamingPolicy);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(this.fieldNamingPolicy);	  SerializedName    annotation    =    f.getAnnotation(serializedName);    	non-compiled	[CE]  no  suitable  method  found  for  getAnnotation(FieldNamingStrategy)	87	None	replace
326	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(genericName);  [CE]  cannot  find  symbol  genericName  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(genericName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(genericName);	  SerializedName    annotation    =    f.getAnnotation(serializedName);    	non-compiled	[CE]  cannot  find  symbol  genericName	87	None	replace
327	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(method);  [CE]  cannot  find  symbol  method  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(method);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(method);	  SerializedName    annotation    =    f.getAnnotation(serializedName);    	non-compiled	[CE]  cannot  find  symbol  method	87	None	replace
328	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  serializedName.value());  [CE]  cannot  find  symbol  serializedName  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  serializedName.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  serializedName.value());	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    f.value());    	non-compiled	[CE]  cannot  find  symbol  serializedName	101	None	replace
329	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  null,  f.value());  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  null,  f.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  null,  f.value());	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    f.value());    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
330	[BUG]  [BUGGY]  SerializedName  annotation  =  serialized.getAnnotation(SerializedName.class,  null,  f.value());  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialized.getAnnotation(SerializedName.class,  null,  f.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialized.getAnnotation(SerializedName.class,  null,  f.value());	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    f.value());    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
331	[BUG]  [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  null,  f.value());  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  null,  f.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  null,  f.value());	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    f.value());    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
332	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedFactory.getAnnotation(SerializedName.class,  null,  f.value());  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedFactory.getAnnotation(SerializedName.class,  null,  f.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedFactory.getAnnotation(SerializedName.class,  null,  f.value());	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    f.value());    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
333	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  serialize.value());  [CE]  cannot  find  symbol  serialize  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  serialize.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  serialize.value());	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    f.value());    	non-compiled	[CE]  cannot  find  symbol  serialize	101	None	replace
334	[BUG]  [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy.name());  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy.name());	  SerializedName    annotation    =    serialize.getAnnotation(SerializedName.class,    f.name());    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
335	[BUG]  [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f,  f.name());  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f,  f.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f,  f.name());	  SerializedName    annotation    =    serialize.getAnnotation(SerializedName.class,    f.name());    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
336	[BUG]  [BUGGY]  SerializedName  serializedName  =  f.getAnnotation(SerializedName.class,  serialize.name());  [CE]  cannot  find  symbol  serialize  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  serializedName  =  f.getAnnotation(SerializedName.class,  serialize.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  serializedName  =  f.getAnnotation(SerializedName.class,  serialize.name());	  SerializedName    annotation    =    serialize.getAnnotation(SerializedName.class,    f.name());    	non-compiled	[CE]  cannot  find  symbol  serialize	27	None	replace
337	[BUG]  [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f,  fields.name());  [CE]  cannot  find  symbol  fields  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f,  fields.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f,  fields.name());	  SerializedName    annotation    =    serialize.getAnnotation(SerializedName.class,    f.name());    	non-compiled	[CE]  cannot  find  symbol  fields	27	None	replace
338	[BUG]  [BUGGY]  List  <  String>  annotation  =  f.getFieldNames(fieldNamingPolicy);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  List  <  String>  annotation  =  f.getFieldNames(fieldNamingPolicy);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	List  <  String>  annotation  =  f.getFieldNames(fieldNamingPolicy);	  List    <    String>    annotation    =    fieldNamingPolicy.getFieldNames(f);    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
339	[BUG]  [BUGGY]  List  <  String>  annotation  =  fieldNamingPolicy.getFieldNames(f,  f);  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  List  <  String>  annotation  =  fieldNamingPolicy.getFieldNames(f,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	List  <  String>  annotation  =  fieldNamingPolicy.getFieldNames(f,  f);	  List    <    String>    annotation    =    fieldNamingPolicy.getFieldNames(f);    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
340	[BUG]  [BUGGY]  List  <  String>  annotation  =  fieldNamingPolicy.getFieldNames(f,  serializedName);  [CE]  cannot  find  symbol  serializedName  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  List  <  String>  annotation  =  fieldNamingPolicy.getFieldNames(f,  serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	List  <  String>  annotation  =  fieldNamingPolicy.getFieldNames(f,  serializedName);	  List    <    String>    annotation    =    fieldNamingPolicy.getFieldNames(f);    	non-compiled	[CE]  cannot  find  symbol  serializedName	118	None	replace
341	[BUG]  [BUGGY]  List  <  String>  annotation  =  fieldNamingPolicy.getFieldNames(f,  null);  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  List  <  String>  annotation  =  fieldNamingPolicy.getFieldNames(f,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	List  <  String>  annotation  =  fieldNamingPolicy.getFieldNames(f,  null);	  List    <    String>    annotation    =    fieldNamingPolicy.getFieldNames(f);    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
342	[BUG]  [BUGGY]  List  <  String>  annotation  =  fieldNamingPolicy.getFieldNames(f,  false);  [CE]  cannot  find  symbol  [FE]                                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  List  <  String>  annotation  =  fieldNamingPolicy.getFieldNames(f,  false);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	List  <  String>  annotation  =  fieldNamingPolicy.getFieldNames(f,  false);	  List    <    String>    annotation    =    fieldNamingPolicy.getFieldNames(f);    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
343	[BUG]  [BUGGY]  List  <  String>  annotation  =  fieldNamingPolicy.getFieldNames(f,  ObjectConstructor.class);  [CE]  cannot  find  symbol  [FE]                                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  List  <  String>  annotation  =  fieldNamingPolicy.getFieldNames(f,  ObjectConstructor.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	List  <  String>  annotation  =  fieldNamingPolicy.getFieldNames(f,  ObjectConstructor.class);	  List    <    String>    annotation    =    fieldNamingPolicy.getFieldNames(f);    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
344	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class)+  1);  [CE]  no  suitable  method  found  for  getAnnotation(Class<FieldNamingStrategy>)  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class)+  1);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class)+  1);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class);    	non-compiled	[CE]  no  suitable  method  found  for  getAnnotation(Class<FieldNamingStrategy>)	19	None	replace
345	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class),  null);  [CE]  no  suitable  method  found  for  getAnnotation(Class<FieldNamingStrategy>)  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class),  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class),  null);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class);    	non-compiled	[CE]  no  suitable  method  found  for  getAnnotation(Class<FieldNamingStrategy>)	19	None	replace
346	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class),  serialize);  [CE]  no  suitable  method  found  for  getAnnotation(Class<FieldNamingStrategy>)  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class),  serialize);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class),  serialize);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class);    	non-compiled	[CE]  no  suitable  method  found  for  getAnnotation(Class<FieldNamingStrategy>)	19	None	replace
347	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class),  f);  [CE]  no  suitable  method  found  for  getAnnotation(Class<FieldNamingStrategy>)  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class),  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class),  f);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class);    	non-compiled	[CE]  no  suitable  method  found  for  getAnnotation(Class<FieldNamingStrategy>)	19	None	replace
348	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  deserialize);  [CE]  cannot  find  symbol  deserialize  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  deserialize);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  deserialize);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f,    serializedName);    	non-compiled	[CE]  cannot  find  symbol  deserialize	99	None	replace
349	[BUG]  [BUGGY]  SerializedName  annotation  =  Serializable.getAnnotation(f,  f.class);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  Serializable.getAnnotation(f,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  Serializable.getAnnotation(f,  f.class);	  SerializedName    annotation    =    Serializable.getAnnotation(f.class);    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
350	[BUG]  [BUGGY]  SerializedName  annotation  =  Serializable.getAnnotation(f,  fieldNamingPolicy.class);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  Serializable.getAnnotation(f,  fieldNamingPolicy.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  Serializable.getAnnotation(f,  fieldNamingPolicy.class);	  SerializedName    annotation    =    Serializable.getAnnotation(f.class);    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
351	[BUG]  [BUGGY]  SerializedName  annotation  =  Serializable.getAnnotation(f,  this.fieldNamingPolicy.class);  [CE]  <identifier>  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  Serializable.getAnnotation(f,  this.fieldNamingPolicy.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  Serializable.getAnnotation(f,  this.fieldNamingPolicy.class);	  SerializedName    annotation    =    Serializable.getAnnotation(f.class);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
352	[BUG]  [BUGGY]  SerializedName  annotation  =  Serializable.getAnnotation(f,  ObjectConstructor.class);  [CE]  cannot  find  symbol  Serializable  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  Serializable.getAnnotation(f,  ObjectConstructor.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  Serializable.getAnnotation(f,  ObjectConstructor.class);	  SerializedName    annotation    =    Serializable.getAnnotation(f.class);    	non-compiled	[CE]  cannot  find  symbol  Serializable	94	None	replace
353	[BUG]  [BUGGY]  SerializedName  annotation  =  Serializable.getAnnotation(f,  this.class);  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  Serializable.getAnnotation(f,  this.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  Serializable.getAnnotation(f,  this.class);	  SerializedName    annotation    =    Serializable.getAnnotation(f.class);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
354	[BUG]  [BUGGY]  SerializedName  annotation  =  Serializable.getAnnotation(f);  [CE]  cannot  find  symbol  Serializable  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  Serializable.getAnnotation(f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  Serializable.getAnnotation(f);	  SerializedName    annotation    =    Serializable.getAnnotation(f.class);    	non-compiled	[CE]  cannot  find  symbol  Serializable	94	None	replace
355	[BUG]  [BUGGY]  SerializedName  annotation  =  this.serializedName.getAnnotation(SerializedName.class);  [CE]  cannot  find  symbol  serializedName  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  this.serializedName.getAnnotation(SerializedName.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  this.serializedName.getAnnotation(SerializedName.class);	  SerializedName    annotation    =    serializedName.getAnnotation(SerializedName.class);    	non-compiled	[CE]  cannot  find  symbol  serializedName	41	None	replace
356	[BUG]  [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class);  [CE]  cannot  find  symbol  serialize  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class);	  SerializedName    annotation    =    serializedName.getAnnotation(SerializedName.class);    	non-compiled	[CE]  cannot  find  symbol  serialize	41	None	replace
357	[BUG]  [BUGGY]  SerializedName  annotation  =  getSerializedName(f.getAnnotation(SerializedName.class);  [CE]  ')'  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  getSerializedName(f.getAnnotation(SerializedName.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  getSerializedName(f.getAnnotation(SerializedName.class);	  SerializedName    annotation    =    serializedName.getAnnotation(SerializedName.class);    	non-compiled	[CE]  ')'  expected	41	None	replace
358	[BUG]  [BUGGY]  SerializedName  annotation  =  type.getAnnotation(SerializedName.class);  [CE]  cannot  find  symbol  type  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  type.getAnnotation(SerializedName.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  type.getAnnotation(SerializedName.class);	  SerializedName    annotation    =    serializedName.getAnnotation(SerializedName.class);    	non-compiled	[CE]  cannot  find  symbol  type	41	None	replace
359	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  this.fieldNamingPolicy.getFieldNamingPolicy();  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  this.fieldNamingPolicy.getFieldNamingPolicy();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  this.fieldNamingPolicy.getFieldNamingPolicy();	  FieldNamingStrategy    fieldNamingPolicy    =    f.getFieldNamingPolicy();    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
360	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  fields.getFieldNamingPolicy();  [CE]  cannot  find  symbol  fields  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  fields.getFieldNamingPolicy();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  fields.getFieldNamingPolicy();	  FieldNamingStrategy    fieldNamingPolicy    =    f.getFieldNamingPolicy();    	non-compiled	[CE]  cannot  find  symbol  fields	61	None	replace
361	[BUG]  [BUGGY]  FieldNamingPolicy  fieldNamingPolicy  =  f.getFieldNamingPolicy();  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingPolicy  fieldNamingPolicy  =  f.getFieldNamingPolicy();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingPolicy  fieldNamingPolicy  =  f.getFieldNamingPolicy();	  FieldNamingStrategy    fieldNamingPolicy    =    f.getFieldNamingPolicy();    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
362	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  scope.getFieldNamingPolicy();  [CE]  cannot  find  symbol  scope  [FE]                                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  scope.getFieldNamingPolicy();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  scope.getFieldNamingPolicy();	  FieldNamingStrategy    fieldNamingPolicy    =    f.getFieldNamingPolicy();    	non-compiled	[CE]  cannot  find  symbol  scope	61	None	replace
363	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  f.fieldNamingPolicy();  [CE]  cannot  find  symbol  [FE]                                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  f.fieldNamingPolicy();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  f.fieldNamingPolicy();	  FieldNamingStrategy    fieldNamingPolicy    =    f.getFieldNamingPolicy();    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
364	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializableName,  f.class);  [CE]  cannot  find  symbol  serializableName  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializableName,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(serializableName,  f.class);	  SerializedName    annotation    =    serializedName.getAnnotation(f.class);    	non-compiled	[CE]  cannot  find  symbol  serializableName	31	None	replace
365	[BUG]  [BUGGY]  SerializedName  serializedName  =  f.getAnnotation(serializedName);  [CE]  no  suitable  method  found  for  getAnnotation(SerializedName)  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  serializedName  =  f.getAnnotation(serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  serializedName  =  f.getAnnotation(serializedName);	  SerializedName    annotation    =    serializedName.getAnnotation(f.class);    	non-compiled	[CE]  no  suitable  method  found  for  getAnnotation(SerializedName)	31	None	replace
366	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.class),  serializedName);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.class),  serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.class),  serializedName);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class),    f);    	non-compiled	[CE]  ';'  expected	105	None	replace
367	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(serializedName.class),  f);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(serializedName.class),  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(serializedName.class),  f);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class),    f);    	non-compiled	[CE]  ';'  expected	105	None	replace
368	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class),  fieldNamingPolicy);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class),  fieldNamingPolicy);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class),  fieldNamingPolicy);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class),    f);    	non-compiled	[CE]  ';'  expected	105	None	replace
369	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class),  f,  serialize);  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class),  f,  serialize);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class),  f,  serialize);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class),    f);    	non-compiled	[CE]  ';'  expected	105	None	replace
370	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class),  f,  serializedName);  [CE]  ';'  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class),  f,  serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class),  f,  serializedName);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class),    f);    	non-compiled	[CE]  ';'  expected	105	None	replace
371	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.getSerializedName()),  f);  [CE]  ';'  expected  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.getSerializedName()),  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.getSerializedName()),  f);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class),    f);    	non-compiled	[CE]  ';'  expected	105	None	replace
372	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(Function.class,  f);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(Function.class,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(Function.class,  f);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class),    f);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
373	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serialize.class);  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serialize.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(serialize.class);	  SerializedName    annotation    =    serialize.getAnnotation(f.class);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
374	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serialize);  [CE]  cannot  find  symbol  serialize  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serialize);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(serialize);	  SerializedName    annotation    =    serialize.getAnnotation(f.class);    	non-compiled	[CE]  cannot  find  symbol  serialize	34	None	replace
375	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serialize,  f.class);  [CE]  cannot  find  symbol  serialize  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serialize,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(serialize,  f.class);	  SerializedName    annotation    =    serialize.getAnnotation(f.class);    	non-compiled	[CE]  cannot  find  symbol  serialize	34	None	replace
376	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serialize).getAnnotation(f.class);  [CE]  cannot  find  symbol  [FE]                                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serialize).getAnnotation(f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(serialize).getAnnotation(f.class);	  SerializedName    annotation    =    serialize.getAnnotation(f.class);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
377	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serialize).getAnnotation(f);  [CE]  cannot  find  symbol  serialize  [FE]                                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serialize).getAnnotation(f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(serialize).getAnnotation(f);	  SerializedName    annotation    =    serialize.getAnnotation(f.class);    	non-compiled	[CE]  cannot  find  symbol  serialize	34	None	replace
378	[BUG]  [BUGGY]  List  <  String>  fieldNames  =  f.getFieldNames(null);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  List  <  String>  fieldNames  =  f.getFieldNames(null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	List  <  String>  fieldNames  =  f.getFieldNames(null);	  List    <    String>    fieldNames    =    f.getFieldNames();    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
379	[BUG]  [BUGGY]  List  <  String>  fieldNames  =  f.fieldNames();  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  List  <  String>  fieldNames  =  f.fieldNames();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	List  <  String>  fieldNames  =  f.fieldNames();	  List    <    String>    fieldNames    =    f.getFieldNames();    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
380	[BUG]  [BUGGY]  List  <  String>  fieldNames  =  this.fieldNames.getFieldNames();  [CE]  cannot  find  symbol  fieldNames  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  List  <  String>  fieldNames  =  this.fieldNames.getFieldNames();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	List  <  String>  fieldNames  =  this.fieldNames.getFieldNames();	  List    <    String>    fieldNames    =    f.getFieldNames();    	non-compiled	[CE]  cannot  find  symbol  fieldNames	89	None	replace
381	[BUG]  [BUGGY]  List  <  String>  fieldNames  =  f.getFieldNames(f);  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  List  <  String>  fieldNames  =  f.getFieldNames(f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	List  <  String>  fieldNames  =  f.getFieldNames(f);	  List    <    String>    fieldNames    =    f.getFieldNames();    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
382	[BUG]  [BUGGY]  List  <  String>  fieldNames  =  f.getFieldNames(true);  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  List  <  String>  fieldNames  =  f.getFieldNames(true);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	List  <  String>  fieldNames  =  f.getFieldNames(true);	  List    <    String>    fieldNames    =    f.getFieldNames();    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
383	[BUG]  [BUGGY]  List  <  String>  fieldNames  =  FieldUtils.getFieldNames(f);  [CE]  cannot  find  symbol  FieldUtils  [FE]                                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  List  <  String>  fieldNames  =  FieldUtils.getFieldNames(f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	List  <  String>  fieldNames  =  FieldUtils.getFieldNames(f);	  List    <    String>    fieldNames    =    f.getFieldNames();    	non-compiled	[CE]  cannot  find  symbol  FieldUtils	89	None	replace
384	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  serializedName,  f.value());  [CE]  name  has  private  access  in  Field  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  serializedName,  f.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  serializedName,  f.value());	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    f.value());    	non-compiled	[CE]  name  has  private  access  in  Field	81	None	replace
385	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  serialize,  f.value());  [CE]  name  has  private  access  in  Field  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  serialize,  f.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  serialize,  f.value());	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    f.value());    	non-compiled	[CE]  name  has  private  access  in  Field	81	None	replace
386	[BUG]  [BUGGY]  FieldNamingStrategy  annotation  =  f.getAnnotation(fieldNamingPolicy);  [CE]  no  suitable  method  found  for  getAnnotation(FieldNamingStrategy)  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  annotation  =  f.getAnnotation(fieldNamingPolicy);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  annotation  =  f.getAnnotation(fieldNamingPolicy);	  FieldNamingStrategy    annotation    =    fieldNamingPolicy.getAnnotation(f);    	non-compiled	[CE]  no  suitable  method  found  for  getAnnotation(FieldNamingStrategy)	120	None	replace
387	[BUG]  [BUGGY]  FieldNamingStrategy  annotation  =  fieldNamingPolicy.getAnnotation(f,  f);  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  annotation  =  fieldNamingPolicy.getAnnotation(f,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  annotation  =  fieldNamingPolicy.getAnnotation(f,  f);	  FieldNamingStrategy    annotation    =    fieldNamingPolicy.getAnnotation(f);    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
388	[BUG]  [BUGGY]  FieldNamingStrategy  annotation  =  fieldNamingPolicy.getAnnotation(f,  ObjectConstructor.class);  [CE]  cannot  find  symbol  [FE]                                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  annotation  =  fieldNamingPolicy.getAnnotation(f,  ObjectConstructor.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  annotation  =  fieldNamingPolicy.getAnnotation(f,  ObjectConstructor.class);	  FieldNamingStrategy    annotation    =    fieldNamingPolicy.getAnnotation(f);    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
389	[BUG]  [BUGGY]  FieldNamingStrategy  annotation  =  fieldNamingPolicy.getAnnotation(f,  null);  [CE]  cannot  find  symbol  [FE]                                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  annotation  =  fieldNamingPolicy.getAnnotation(f,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  annotation  =  fieldNamingPolicy.getAnnotation(f,  null);	  FieldNamingStrategy    annotation    =    fieldNamingPolicy.getAnnotation(f);    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
390	[BUG]  [BUGGY]  FieldNamingStrategy  annotation  =  fieldNamingPolicy.getAnnotation(f,  this.fieldNamingStrategy);  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]                                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  annotation  =  fieldNamingPolicy.getAnnotation(f,  this.fieldNamingStrategy);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  annotation  =  fieldNamingPolicy.getAnnotation(f,  this.fieldNamingStrategy);	  FieldNamingStrategy    annotation    =    fieldNamingPolicy.getAnnotation(f);    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	120	None	replace
391	[BUG]  [BUGGY]  FieldNamingStrategy  annotation  =  fieldNamingPolicy.getAnnotation(f,  f.type);  [CE]  type  has  private  access  in  Field  [FE]                                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  annotation  =  fieldNamingPolicy.getAnnotation(f,  f.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  annotation  =  fieldNamingPolicy.getAnnotation(f,  f.type);	  FieldNamingStrategy    annotation    =    fieldNamingPolicy.getAnnotation(f);    	non-compiled	[CE]  type  has  private  access  in  Field	120	None	replace
392	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  deserializedName.value());  [CE]  cannot  find  symbol  deserializedName  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  deserializedName.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  deserializedName.value());	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serialize.value());    	non-compiled	[CE]  cannot  find  symbol  deserializedName	58	None	replace
393	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializers,  f.class,  null);  [CE]  cannot  find  symbol  serializers  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializers,  f.class,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(serializers,  f.class,  null);	  SerializedName    annotation    =    f.getAnnotation(serializedName,    f.class,    null);    	non-compiled	[CE]  cannot  find  symbol  serializers	15	None	replace
394	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializableName,  f.class,  null);  [CE]  cannot  find  symbol  serializableName  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializableName,  f.class,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(serializableName,  f.class,  null);	  SerializedName    annotation    =    f.getAnnotation(serializedName,    f.class,    null);    	non-compiled	[CE]  cannot  find  symbol  serializableName	15	None	replace
395	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serialize,  f.class,  null);  [CE]  cannot  find  symbol  serialize  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serialize,  f.class,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(serialize,  f.class,  null);	  SerializedName    annotation    =    f.getAnnotation(serializedName,    f.class,    null);    	non-compiled	[CE]  cannot  find  symbol  serialize	15	None	replace
396	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(selectorizedName,  f.class,  null);  [CE]  cannot  find  symbol  selectorizedName  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(selectorizedName,  f.class,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(selectorizedName,  f.class,  null);	  SerializedName    annotation    =    f.getAnnotation(serializedName,    f.class,    null);    	non-compiled	[CE]  cannot  find  symbol  selectorizedName	15	None	replace
397	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializable,  f.class,  null);  [CE]  cannot  find  symbol  serializable  [FE]                                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializable,  f.class,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(serializable,  f.class,  null);	  SerializedName    annotation    =    f.getAnnotation(serializedName,    f.class,    null);    	non-compiled	[CE]  cannot  find  symbol  serializable	15	None	replace
398	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializer,  f.class,  null);  [CE]  cannot  find  symbol  serializer  [FE]                                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializer,  f.class,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(serializer,  f.class,  null);	  SerializedName    annotation    =    f.getAnnotation(serializedName,    f.class,    null);    	non-compiled	[CE]  cannot  find  symbol  serializer	15	None	replace
399	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  fieldNamingPolicy.value());  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  fieldNamingPolicy.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  fieldNamingPolicy.value());	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f.value());    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
400	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  serializedName.value());  [CE]  cannot  find  symbol  serializedName  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  serializedName.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  serializedName.value());	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f.value());    	non-compiled	[CE]  cannot  find  symbol  serializedName	86	None	replace
401	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  f.value());  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  f.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  f.value());	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f.value());    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
402	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  serialize.value());  [CE]  cannot  find  symbol  serialize  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  serialize.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  serialize.value());	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f.value());    	non-compiled	[CE]  cannot  find  symbol  serialize	86	None	replace
403	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  serializedName,  f.value());  [CE]  cannot  find  symbol  serializedName  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  serializedName,  f.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  serializedName,  f.value());	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f.value());    	non-compiled	[CE]  cannot  find  symbol  serializedName	86	None	replace
404	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  serializedName.value());  [CE]  cannot  find  symbol  serializedName  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  serializedName.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  serializedName.value());	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f.value());    	non-compiled	[CE]  cannot  find  symbol  serializedName	86	None	replace
405	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  serialize.value());  [CE]  cannot  find  symbol  serialize  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  serialize.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  serialize.value());	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f.value());    	non-compiled	[CE]  cannot  find  symbol  serialize	86	None	replace
406	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  deserializedName.name());  [CE]  cannot  find  symbol  deserializedName  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  deserializedName.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  deserializedName.name());	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName.name());    	non-compiled	[CE]  cannot  find  symbol  deserializedName	24	None	replace
407	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  null,  alternates);  [CE]  cannot  find  symbol  alternates  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  null,  alternates);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  null,  alternates);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    alternates);    	non-compiled	[CE]  cannot  find  symbol  alternates	133	None	replace
408	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  SYNTHETIC_NAME,  null);  [CE]  cannot  find  symbol  SYNTHETIC_NAME  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  SYNTHETIC_NAME,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  SYNTHETIC_NAME,  null);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName,    null);    	non-compiled	[CE]  cannot  find  symbol  SYNTHETIC_NAME	12	None	replace
409	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(fieldNamingPolicy.class);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(fieldNamingPolicy.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedName.getAnnotation(fieldNamingPolicy.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(serializedName.class);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
410	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(serializedName);  [CE]  cannot  find  symbol  serializedName  [FE]              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(serializedName);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(serializedName.class);    	non-compiled	[CE]  cannot  find  symbol  serializedName	104	None	replace
411	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  new  FieldNamingStrategy(f.getRawClass());  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  new  FieldNamingStrategy(f.getRawClass());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  new  FieldNamingStrategy(f.getRawClass());	  FieldNamingStrategy    fieldNamingPolicy    =    f.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
412	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  this.fieldNamingPolicy.getRawClass();  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  this.fieldNamingPolicy.getRawClass();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  this.fieldNamingPolicy.getRawClass();	  FieldNamingStrategy    fieldNamingPolicy    =    f.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
413	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  f.fieldNamingPolicy.getRawClass();  [CE]  cannot  find  symbol  fieldNamingPolicy  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  f.fieldNamingPolicy.getRawClass();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  f.fieldNamingPolicy.getRawClass();	  FieldNamingStrategy    fieldNamingPolicy    =    f.getRawClass();    	non-compiled	[CE]  cannot  find  symbol  fieldNamingPolicy	60	None	replace
414	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  fields.getRawClass();  [CE]  cannot  find  symbol  fields  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  fields.getRawClass();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  fields.getRawClass();	  FieldNamingStrategy    fieldNamingPolicy    =    f.getRawClass();    	non-compiled	[CE]  cannot  find  symbol  fields	60	None	replace
415	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  f.newInstance().getRawClass();  [CE]  cannot  find  symbol  [FE]                                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  f.newInstance().getRawClass();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  f.newInstance().getRawClass();	  FieldNamingStrategy    fieldNamingPolicy    =    f.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
416	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  scope.getRawClass();  [CE]  cannot  find  symbol  scope  [FE]                                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  scope.getRawClass();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  scope.getRawClass();	  FieldNamingStrategy    fieldNamingPolicy    =    f.getRawClass();    	non-compiled	[CE]  cannot  find  symbol  scope	60	None	replace
417	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.type,  f);  [CE]  type  has  private  access  in  Field  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.type,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.type,  f);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.type,    serializedName);    	non-compiled	[CE]  type  has  private  access  in  Field	6	None	replace
418	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.type,  f.type);  [CE]  type  has  private  access  in  Field  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.type,  f.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.type,  f.type);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.type,    serializedName);    	non-compiled	[CE]  type  has  private  access  in  Field	6	None	replace
419	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.type,  f.asSerializedName);  [CE]  type  has  private  access  in  Field  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.type,  f.asSerializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.type,  f.asSerializedName);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.type,    serializedName);    	non-compiled	[CE]  type  has  private  access  in  Field	6	None	replace
420	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.type,  f.value);  [CE]  type  has  private  access  in  Field  [FE]                                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.type,  f.value);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.type,  f.value);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.type,    serializedName);    	non-compiled	[CE]  type  has  private  access  in  Field	6	None	replace
421	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(f.class,  f);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(f.class,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedName.getAnnotation(f.class,  f);	  SerializedName    annotation    =    f.getAnnotation(serializedName.class,    f);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
422	[BUG]  [BUGGY]  SerializedName  serializedName  =  f.getAnnotation(serializedName.class,  f);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  serializedName  =  f.getAnnotation(serializedName.class,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  serializedName  =  f.getAnnotation(serializedName.class,  f);	  SerializedName    annotation    =    f.getAnnotation(serializedName.class,    f);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
423	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializedName.class,  serialize);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializedName.class,  serialize);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(serializedName.class,  serialize);	  SerializedName    annotation    =    f.getAnnotation(serializedName.class,    f);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
424	[BUG]  [BUGGY]  SerializedName  annotation  =  serialized.getAnnotation(f.class,  f);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialized.getAnnotation(f.class,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialized.getAnnotation(f.class,  f);	  SerializedName    annotation    =    f.getAnnotation(serializedName.class,    f);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
425	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedNames.getAnnotation(f.class,  f);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedNames.getAnnotation(f.class,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedNames.getAnnotation(f.class,  f);	  SerializedName    annotation    =    f.getAnnotation(serializedName.class,    f);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
426	[BUG]  [BUGGY]  SerializedName  serializedName  =  serializedName.getAnnotation(f,  f.class);  [CE]  cannot  find  symbol  [FE]                                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  serializedName  =  serializedName.getAnnotation(f,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  serializedName  =  serializedName.getAnnotation(f,  f.class);	  SerializedName    serializedName    =    f.getAnnotation(serializedName,    f.class);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
427	[BUG]  [BUGGY]  SerializedName  serializedName  =  f.getAnnotation(serializedName,  f.type);  [CE]  type  has  private  access  in  Field  [FE]                                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  serializedName  =  f.getAnnotation(serializedName,  f.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  serializedName  =  f.getAnnotation(serializedName,  f.type);	  SerializedName    serializedName    =    f.getAnnotation(serializedName,    f.class);    	non-compiled	[CE]  type  has  private  access  in  Field	37	None	replace
428	[BUG]  [BUGGY]  SerializedName  serializedName  =  f.getAnnotation(SerializedName,  f.class);  [CE]  cannot  find  symbol  SerializedName  [FE]                                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  serializedName  =  f.getAnnotation(SerializedName,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  serializedName  =  f.getAnnotation(SerializedName,  f.class);	  SerializedName    serializedName    =    f.getAnnotation(serializedName,    f.class);    	non-compiled	[CE]  cannot  find  symbol  SerializedName	37	None	replace
429	[BUG]  [BUGGY]  SerializedName  serializedName  =  f.getAnnotation(serializedName,  f);  [CE]  no  suitable  method  found  for  getAnnotation(SerializedName,Field)  [FE]                                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  serializedName  =  f.getAnnotation(serializedName,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  serializedName  =  f.getAnnotation(serializedName,  f);	  SerializedName    serializedName    =    f.getAnnotation(serializedName,    f.class);    	non-compiled	[CE]  no  suitable  method  found  for  getAnnotation(SerializedName,Field)	37	None	replace
430	[BUG]  [BUGGY]  SerializedName  serializedName  =  f.getAnnotation(serializedName,  f.name);  [CE]  name  has  private  access  in  Field  [FE]                                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  serializedName  =  f.getAnnotation(serializedName,  f.name);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  serializedName  =  f.getAnnotation(serializedName,  f.name);	  SerializedName    serializedName    =    f.getAnnotation(serializedName,    f.class);    	non-compiled	[CE]  name  has  private  access  in  Field	37	None	replace
431	[BUG]  [BUGGY]  SerializedName  serializedName  =  f.getAnnotation(serialize,  f.class);  [CE]  cannot  find  symbol  serialize  [FE]                                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  serializedName  =  f.getAnnotation(serialize,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  serializedName  =  f.getAnnotation(serialize,  f.class);	  SerializedName    serializedName    =    f.getAnnotation(serializedName,    f.class);    	non-compiled	[CE]  cannot  find  symbol  serialize	37	None	replace
432	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  getFieldNamingPolicy(f.getModule());  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  getFieldNamingPolicy(f.getModule());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  getFieldNamingPolicy(f.getModule());	  FieldNamingStrategy    fieldNamingPolicy    =    getFieldNamingPolicy();    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
433	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  getFieldNamingPolicy(f.getAnnotation());  [CE]  no  suitable  method  found  for  getAnnotation()  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  getFieldNamingPolicy(f.getAnnotation());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  getFieldNamingPolicy(f.getAnnotation());	  FieldNamingStrategy    fieldNamingPolicy    =    getFieldNamingPolicy();    	non-compiled	[CE]  no  suitable  method  found  for  getAnnotation()	59	None	replace
434	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =(FieldNamingPolicy)getFieldNamingPolicy();  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =(FieldNamingPolicy)getFieldNamingPolicy();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =(FieldNamingPolicy)getFieldNamingPolicy();	  FieldNamingStrategy    fieldNamingPolicy    =    getFieldNamingPolicy();    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
435	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  getFieldNamingPolicy(f.getType());  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  getFieldNamingPolicy(f.getType());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  getFieldNamingPolicy(f.getType());	  FieldNamingStrategy    fieldNamingPolicy    =    getFieldNamingPolicy();    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
436	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serialization);  [CE]  cannot  find  symbol  serialization  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serialization);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serialization);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    deserialized);    	non-compiled	[CE]  cannot  find  symbol  serialization	128	None	replace
437	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(selectorizedName,  f.class);  [CE]  cannot  find  symbol  selectorizedName  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(selectorizedName,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(selectorizedName,  f.class);	  SerializedName    annotation    =    f.getAnnotation(serializedName,    f.class);    	non-compiled	[CE]  cannot  find  symbol  selectorizedName	32	None	replace
438	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializer,  f.class);  [CE]  cannot  find  symbol  serializer  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializer,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(serializer,  f.class);	  SerializedName    annotation    =    f.getAnnotation(serializedName,    f.class);    	non-compiled	[CE]  cannot  find  symbol  serializer	32	None	replace
439	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializable,  f.class);  [CE]  cannot  find  symbol  serializable  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializable,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(serializable,  f.class);	  SerializedName    annotation    =    f.getAnnotation(serializedName,    f.class);    	non-compiled	[CE]  cannot  find  symbol  serializable	32	None	replace
440	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedField.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy.name());  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedField.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedField.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy.name());	  SerializedName    annotation    =    serializedField.getAnnotation(SerializedName.class,    f.name());    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
441	[BUG]  [BUGGY]  SerializedName  annotation  =  this.serializedField.getAnnotation(SerializedName.class,  f.name());  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  this.serializedField.getAnnotation(SerializedName.class,  f.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  this.serializedField.getAnnotation(SerializedName.class,  f.name());	  SerializedName    annotation    =    serializedField.getAnnotation(SerializedName.class,    f.name());    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
442	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedField.getAnnotation(SerializedName.class,  f,  f.name());  [CE]  cannot  find  symbol  [FE]                                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedField.getAnnotation(SerializedName.class,  f,  f.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedField.getAnnotation(SerializedName.class,  f,  f.name());	  SerializedName    annotation    =    serializedField.getAnnotation(SerializedName.class,    f.name());    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
443	[BUG]  [BUGGY]  SerializedName  annotation  =  field.getAnnotation(SerializedName.class,  f.name());  [CE]  cannot  find  symbol  [FE]                                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  field.getAnnotation(SerializedName.class,  f.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  field.getAnnotation(SerializedName.class,  f.name());	  SerializedName    annotation    =    serializedField.getAnnotation(SerializedName.class,    f.name());    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
444	[BUG]  [BUGGY]  FieldNamingStrategy  annotation  =  fieldNamingPolicy.getAnnotation(JsonString.class);  [CE]  cannot  find  symbol  [FE]                                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  annotation  =  fieldNamingPolicy.getAnnotation(JsonString.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  annotation  =  fieldNamingPolicy.getAnnotation(JsonString.class);	  FieldNamingStrategy    annotation    =    f.getAnnotation(JsonString.class);    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
445	[BUG]  [BUGGY]  FieldNamingStrategy  annotation  =  f.getAnnotation(JsonString.class,  fieldNamingPolicy);  [CE]  cannot  find  symbol  [FE]                                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  annotation  =  f.getAnnotation(JsonString.class,  fieldNamingPolicy);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  annotation  =  f.getAnnotation(JsonString.class,  fieldNamingPolicy);	  FieldNamingStrategy    annotation    =    f.getAnnotation(JsonString.class);    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
446	[BUG]  [BUGGY]  FieldNamingStrategy  annotation  =  this.fieldNamingPolicy.getAnnotation(JsonString.class);  [CE]  cannot  find  symbol  [FE]                                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  annotation  =  this.fieldNamingPolicy.getAnnotation(JsonString.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  annotation  =  this.fieldNamingPolicy.getAnnotation(JsonString.class);	  FieldNamingStrategy    annotation    =    f.getAnnotation(JsonString.class);    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
447	[BUG]  [BUGGY]  FieldNamingStrategy  annotation  =  JsonString.getAnnotation(f.getAnnotation(JsonString.class));  [CE]  cannot  find  symbol  [FE]                                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  annotation  =  JsonString.getAnnotation(f.getAnnotation(JsonString.class));  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  annotation  =  JsonString.getAnnotation(f.getAnnotation(JsonString.class));	  FieldNamingStrategy    annotation    =    f.getAnnotation(JsonString.class);    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
448	[BUG]  [BUGGY]  FieldNamingStrategy  annotation  =  JsonString.getAnnotation(f.getAnnotation(JsonString.class),  fieldNamingPolicy);  [CE]  cannot  find  symbol  [FE]                                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  annotation  =  JsonString.getAnnotation(f.getAnnotation(JsonString.class),  fieldNamingPolicy);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  annotation  =  JsonString.getAnnotation(f.getAnnotation(JsonString.class),  fieldNamingPolicy);	  FieldNamingStrategy    annotation    =    f.getAnnotation(JsonString.class);    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
449	[BUG]  [BUGGY]  FieldNamingStrategy  annotation  =  new  FieldNamingStrategy(f.getAnnotation(JsonString.class));  [CE]  cannot  find  symbol  [FE]                                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  annotation  =  new  FieldNamingStrategy(f.getAnnotation(JsonString.class));  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  annotation  =  new  FieldNamingStrategy(f.getAnnotation(JsonString.class));	  FieldNamingStrategy    annotation    =    f.getAnnotation(JsonString.class);    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
450	[BUG]  [BUGGY]  SerializedName  annotation  =  serialized.getAnnotation(SerializedName.class,  f.type,  f.type);  [CE]  type  has  private  access  in  Field  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialized.getAnnotation(SerializedName.class,  f.type,  f.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialized.getAnnotation(SerializedName.class,  f.type,  f.type);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serialize,    f.type);    	non-compiled	[CE]  type  has  private  access  in  Field	3	None	replace
451	[BUG]  [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f.type,  f.type);  [CE]  type  has  private  access  in  Field  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f.type,  f.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f.type,  f.type);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serialize,    f.type);    	non-compiled	[CE]  type  has  private  access  in  Field	3	None	replace
452	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.type,  f.serialize);  [CE]  type  has  private  access  in  Field  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.type,  f.serialize);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.type,  f.serialize);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serialize,    f.type);    	non-compiled	[CE]  type  has  private  access  in  Field	3	None	replace
453	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.type,  f.asSerialize);  [CE]  type  has  private  access  in  Field  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.type,  f.asSerialize);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.type,  f.asSerialize);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serialize,    f.type);    	non-compiled	[CE]  type  has  private  access  in  Field	3	None	replace
454	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f.type,  serializedName);  [CE]  type  has  private  access  in  Field  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f.type,  serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f.type,  serializedName);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f.type);    	non-compiled	[CE]  type  has  private  access  in  Field	106	None	replace
455	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f.type,  serialize);  [CE]  type  has  private  access  in  Field  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f.type,  serialize);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f.type,  serialize);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f.type);    	non-compiled	[CE]  type  has  private  access  in  Field	106	None	replace
456	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f.name,  f.type);  [CE]  name  has  private  access  in  Field  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f.name,  f.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f.name,  f.type);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f.type);    	non-compiled	[CE]  name  has  private  access  in  Field	106	None	replace
457	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  serializedName,  f.type);  [CE]  cannot  find  symbol  serializedName  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  serializedName,  f.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  serializedName,  f.type);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f.type);    	non-compiled	[CE]  cannot  find  symbol  serializedName	106	None	replace
458	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  fieldNamingPolicy.type);  [CE]  cannot  find  symbol  type  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  fieldNamingPolicy.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  fieldNamingPolicy.type);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f.type);    	non-compiled	[CE]  cannot  find  symbol  type	106	None	replace
459	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  this.class,  serializedName);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  this.class,  serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  this.class,  serializedName);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    this.class);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
460	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  null);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  null);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    this.class);    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
461	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(this.class,  f);  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(this.class,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(this.class,  f);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    this.class);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
462	[BUG]  [BUGGY]  SerializedName  annotation  =  this.fieldNamingPolicy.getAnnotation(f,  this.class);  [CE]  <identifier>  expected  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  this.fieldNamingPolicy.getAnnotation(f,  this.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  this.fieldNamingPolicy.getAnnotation(f,  this.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    this.class);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
463	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  this.class)+  1;  [CE]  <identifier>  expected  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  this.class)+  1;  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  this.class)+  1;	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    this.class);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
464	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  name);  [CE]  cannot  find  symbol  name  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  name);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  name);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    serializedName);    	non-compiled	[CE]  cannot  find  symbol  name	42	None	replace
465	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  deserializedName);  [CE]  cannot  find  symbol  deserializedName  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  deserializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  deserializedName);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    serializedName);    	non-compiled	[CE]  cannot  find  symbol  deserializedName	42	None	replace
466	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f.serializedName);  [CE]  cannot  find  symbol  serializedName  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f.serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f.serializedName);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    serializedName);    	non-compiled	[CE]  cannot  find  symbol  serializedName	42	None	replace
467	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.name,  f);  [CE]  name  has  private  access  in  Field  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.name,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.name,  f);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    serializedName);    	non-compiled	[CE]  name  has  private  access  in  Field	129	None	replace
468	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.name,  f.asSerializedName);  [CE]  name  has  private  access  in  Field  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.name,  f.asSerializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.name,  f.asSerializedName);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    serializedName);    	non-compiled	[CE]  name  has  private  access  in  Field	129	None	replace
469	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(Factory.class,  f);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(Factory.class,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(Factory.class,  f);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(Factory.class);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
470	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(Factory.class);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(Factory.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(Factory.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(Factory.class);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
471	[BUG]  [BUGGY]  SerializedName  annotation  =  factory.getAnnotation(Factory.class);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  factory.getAnnotation(Factory.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  factory.getAnnotation(Factory.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(Factory.class);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
472	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(Factory.class,  serializedName);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(Factory.class,  serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(Factory.class,  serializedName);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(Factory.class);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
473	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(Factory.class,  f.type);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(Factory.class,  f.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(Factory.class,  f.type);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(Factory.class);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
474	[BUG]  [BUGGY]  SerializedName  annotation  =  FieldNamingPolicy.getAnnotation(Factory.class);  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  FieldNamingPolicy.getAnnotation(Factory.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  FieldNamingPolicy.getAnnotation(Factory.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(Factory.class);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
475	[BUG]  [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f.type);  [CE]  type  has  private  access  in  Field  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f.type);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName.type);    	non-compiled	[CE]  type  has  private  access  in  Field	4	None	replace
476	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serialize.type);  [CE]  cannot  find  symbol  serialize  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serialize.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serialize.type);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName.type);    	non-compiled	[CE]  cannot  find  symbol  serialize	4	None	replace
477	[BUG]  [BUGGY]  SerializedName  annotation  =  serialized.getAnnotation(SerializedName.class,  f.type);  [CE]  type  has  private  access  in  Field  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialized.getAnnotation(SerializedName.class,  f.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialized.getAnnotation(SerializedName.class,  f.type);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName.type);    	non-compiled	[CE]  type  has  private  access  in  Field	4	None	replace
478	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  name.type);  [CE]  cannot  find  symbol  name  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  name.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  name.type);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName.type);    	non-compiled	[CE]  cannot  find  symbol  name	4	None	replace
479	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedName,  false);  [CE]  cannot  find  symbol  serializedName  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedName,  false);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedName,  false);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    false);    	non-compiled	[CE]  cannot  find  symbol  serializedName	110	None	replace
480	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serialize,  false);  [CE]  cannot  find  symbol  serialize  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serialize,  false);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serialize,  false);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    false);    	non-compiled	[CE]  cannot  find  symbol  serialize	110	None	replace
481	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  true);  [CE]  no  suitable  method  found  for  getAnnotation(Class<SerializedName>,boolean)  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  true);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  true);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    false);    	non-compiled	[CE]  no  suitable  method  found  for  getAnnotation(Class<SerializedName>,boolean)	110	None	replace
482	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  false,  serializedName);  [CE]  cannot  find  symbol  serializedName  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  false,  serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  false,  serializedName);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    false);    	non-compiled	[CE]  cannot  find  symbol  serializedName	110	None	replace
483	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  false);  [CE]  no  suitable  method  found  for  getAnnotation(Class<SerializedName>,<null>,boolean)  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  false);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  false);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    false);    	non-compiled	[CE]  no  suitable  method  found  for  getAnnotation(Class<SerializedName>,<null>,boolean)	110	None	replace
484	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  false,  f.type);  [CE]  type  has  private  access  in  Field  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  false,  f.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  false,  f.type);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    false);    	non-compiled	[CE]  type  has  private  access  in  Field	110	None	replace
485	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  false);  [CE]  cannot  find  symbol  serializedName  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  false);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  false);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    false);    	non-compiled	[CE]  cannot  find  symbol  serializedName	110	None	replace
486	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.type,  fieldNamingPolicy);  [CE]  type  has  private  access  in  Field  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.type,  fieldNamingPolicy);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.type,  fieldNamingPolicy);	  SerializedName    annotation    =    serializedName.getAnnotation(SerializedName.class,    f.type);    	non-compiled	[CE]  type  has  private  access  in  Field	2	None	replace
487	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.type,  f.unknownType());  [CE]  type  has  private  access  in  Field  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.type,  f.unknownType());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.type,  f.unknownType());	  SerializedName    annotation    =    serializedName.getAnnotation(SerializedName.class,    f.type);    	non-compiled	[CE]  type  has  private  access  in  Field	2	None	replace
488	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.type,  f.name);  [CE]  type  has  private  access  in  Field  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.type,  f.name);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.type,  f.name);	  SerializedName    annotation    =    serializedName.getAnnotation(SerializedName.class,    f.type);    	non-compiled	[CE]  type  has  private  access  in  Field	2	None	replace
489	[BUG]  [BUGGY]  SerializedName  annotation  =  this.serializer.getAnnotation(Serializable.class);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  this.serializer.getAnnotation(Serializable.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  this.serializer.getAnnotation(Serializable.class);	  SerializedName    annotation    =    serializer.getAnnotation(Serializable.class);    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
490	[BUG]  [BUGGY]  SerializedName  serialized  =  serializer.getAnnotation(Serializable.class);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  serialized  =  serializer.getAnnotation(Serializable.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  serialized  =  serializer.getAnnotation(Serializable.class);	  SerializedName    annotation    =    serializer.getAnnotation(Serializable.class);    	non-compiled	[CE]  cannot  find  symbol	131	None	replace
491	[BUG]  [BUGGY]  SerializedName  annotation  =  serializer.getAnnotation(Serializable,  f.class);  [CE]  cannot  find  symbol  Serializable  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializer.getAnnotation(Serializable,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializer.getAnnotation(Serializable,  f.class);	  SerializedName    annotation    =    serializer.getAnnotation(Serializable.class);    	non-compiled	[CE]  cannot  find  symbol  Serializable	131	None	replace
492	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  fieldNamingPolicy);  [CE]  no  suitable  method  found  for  getAnnotation(Class<SerializedName>,FieldNamingStrategy)  [FE]            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  fieldNamingPolicy);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  fieldNamingPolicy);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f);    	non-compiled	[CE]  no  suitable  method  found  for  getAnnotation(Class<SerializedName>,FieldNamingStrategy)	39	None	replace
493	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  serialize);  [CE]  cannot  find  symbol  serialize  [FE]              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  serialize);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  serialize);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f);    	non-compiled	[CE]  cannot  find  symbol  serialize	39	None	replace
494	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  deserializedName);  [CE]  cannot  find  symbol  deserializedName  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  deserializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  deserializedName);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f);    	non-compiled	[CE]  cannot  find  symbol  deserializedName	39	None	replace
495	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  deserialized);  [CE]  cannot  find  symbol  deserialized  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  deserialized);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  deserialized);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f);    	non-compiled	[CE]  cannot  find  symbol  deserialized	39	None	replace
496	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  getFieldNamingPolicy(f,  f);  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  getFieldNamingPolicy(f,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  getFieldNamingPolicy(f,  f);	  FieldNamingStrategy    fieldNamingPolicy    =    getFieldNamingPolicy(f);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
497	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  getFieldNamingPolicy(f,  f.type);  [CE]  type  has  private  access  in  Field  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  getFieldNamingPolicy(f,  f.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  getFieldNamingPolicy(f,  f.type);	  FieldNamingStrategy    fieldNamingPolicy    =    getFieldNamingPolicy(f);    	non-compiled	[CE]  type  has  private  access  in  Field	91	None	replace
498	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  getFieldNamingPolicy(f.getRawClass());  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  getFieldNamingPolicy(f.getRawClass());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  getFieldNamingPolicy(f.getRawClass());	  FieldNamingStrategy    fieldNamingPolicy    =    getFieldNamingPolicy(f);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
499	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  getFieldNamingPolicy(f,  null);  [CE]  cannot  find  symbol  [FE]                                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  getFieldNamingPolicy(f,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  getFieldNamingPolicy(f,  null);	  FieldNamingStrategy    fieldNamingPolicy    =    getFieldNamingPolicy(f);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
500	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  getFieldNamingPolicy(f,  f.getModule());  [CE]  cannot  find  symbol  [FE]                                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  getFieldNamingPolicy(f,  f.getModule());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  getFieldNamingPolicy(f,  f.getModule());	  FieldNamingStrategy    fieldNamingPolicy    =    getFieldNamingPolicy(f);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
501	[BUG]  [BUGGY]  Collections.  <  String>  boundFields  =  f.getRow();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  Collections.  <  String>  boundFields  =  f.getRow();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	Collections.  <  String>  boundFields  =  f.getRow();	  Collections.    <    String>    boundFields    =    f.getCollection();    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
502	[BUG]  [BUGGY]  Collections.  <  String>  boundFields  =  fieldNamingPolicy.getCollection();  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  Collections.  <  String>  boundFields  =  fieldNamingPolicy.getCollection();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	Collections.  <  String>  boundFields  =  fieldNamingPolicy.getCollection();	  Collections.    <    String>    boundFields    =    f.getCollection();    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
503	[BUG]  [BUGGY]  Collections.  <  String>  boundFields  =  f.getRowCount();  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  Collections.  <  String>  boundFields  =  f.getRowCount();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	Collections.  <  String>  boundFields  =  f.getRowCount();	  Collections.    <    String>    boundFields    =    f.getCollection();    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
504	[BUG]  [BUGGY]  Collections.  <  String>  boundFields  =  f.getEntry();  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  Collections.  <  String>  boundFields  =  f.getEntry();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	Collections.  <  String>  boundFields  =  f.getEntry();	  Collections.    <    String>    boundFields    =    f.getCollection();    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
505	[BUG]  [BUGGY]  Collections.  <  String>  boundFields  =  f.getCollection()  +  1;  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  Collections.  <  String>  boundFields  =  f.getCollection()  +  1;  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	Collections.  <  String>  boundFields  =  f.getCollection()  +  1;	  Collections.    <    String>    boundFields    =    f.getCollection();    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
506	[BUG]  [BUGGY]  Collections.  <  String>  boundFields  =  f.getRaw();  [CE]  illegal  start  of  expression  [FE]                                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  Collections.  <  String>  boundFields  =  f.getRaw();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	Collections.  <  String>  boundFields  =  f.getRaw();	  Collections.    <    String>    boundFields    =    f.getCollection();    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
507	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName,  f.class,  null);  [CE]  cannot  find  symbol  SerializedName  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName,  f.class,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName,  f.class,  null);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    null);    	non-compiled	[CE]  cannot  find  symbol  SerializedName	103	None	replace
508	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(serializedName.class,  null);  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(serializedName.class,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(serializedName.class,  null);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    null);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
509	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  null,  f);  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  null,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  null,  f);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    null);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
510	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.type,  f.serializedName);  [CE]  type  has  private  access  in  Field  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.type,  f.serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f.type,  f.serializedName);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName,    f.type);    	non-compiled	[CE]  type  has  private  access  in  Field	1	None	replace
511	[BUG]  [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f.type,  f.serializedName);  [CE]  type  has  private  access  in  Field  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f.type,  f.serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialize.getAnnotation(SerializedName.class,  f.type,  f.serializedName);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName,    f.type);    	non-compiled	[CE]  type  has  private  access  in  Field	1	None	replace
512	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  name);  [CE]  cannot  find  symbol  name  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  name);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  name);	  SerializedName    annotation    =    f.getAnnotation(FieldNamingStrategy.class,    serializedName);    	non-compiled	[CE]  cannot  find  symbol  name	22	None	replace
513	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  deserializedName);  [CE]  cannot  find  symbol  deserializedName  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  deserializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  deserializedName);	  SerializedName    annotation    =    f.getAnnotation(FieldNamingStrategy.class,    serializedName);    	non-compiled	[CE]  cannot  find  symbol  deserializedName	22	None	replace
514	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  serialize);  [CE]  cannot  find  symbol  serialize  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  serialize);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  serialize);	  SerializedName    annotation    =    f.getAnnotation(FieldNamingStrategy.class,    serializedName);    	non-compiled	[CE]  cannot  find  symbol  serialize	22	None	replace
515	[BUG]  [BUGGY]  SerializedName  annotation  =  _objectConstructor.getAnnotation(f,  fieldNamingPolicy.class);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  _objectConstructor.getAnnotation(f,  fieldNamingPolicy.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  _objectConstructor.getAnnotation(f,  fieldNamingPolicy.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    _objectConstructor.class);    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
516	[BUG]  [BUGGY]  SerializedName  annotation  =  _objectConstructor.getAnnotation(fieldNamingPolicy,  f.class);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  _objectConstructor.getAnnotation(fieldNamingPolicy,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  _objectConstructor.getAnnotation(fieldNamingPolicy,  f.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    _objectConstructor.class);    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
517	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  constructor.class);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  constructor.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  constructor.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    _objectConstructor.class);    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
518	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  _objectConstructor,  _objectConstructor.class);  [CE]  cannot  find  symbol  _objectConstructor  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  _objectConstructor,  _objectConstructor.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  _objectConstructor,  _objectConstructor.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    _objectConstructor.class);    	non-compiled	[CE]  cannot  find  symbol  _objectConstructor	127	None	replace
519	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(_objectConstructor,  f.class);  [CE]  cannot  find  symbol  _objectConstructor  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(_objectConstructor,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(_objectConstructor,  f.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    _objectConstructor.class);    	non-compiled	[CE]  cannot  find  symbol  _objectConstructor	127	None	replace
520	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(fieldNamingPolicy,  _objectConstructor.class);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(fieldNamingPolicy,  _objectConstructor.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(fieldNamingPolicy,  _objectConstructor.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    _objectConstructor.class);    	non-compiled	[CE]  cannot  find  symbol	127	None	replace
521	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f).class;  [CE]  <identifier>  expected  [FE]              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f).class;  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f).class;	  SerializedName    annotation    =    f.getAnnotation(fieldNamingPolicy.class);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
522	[BUG]  [BUGGY]  SerializedName  annotation  =  fields.getAnnotation(fieldNamingPolicy.class);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fields.getAnnotation(fieldNamingPolicy.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fields.getAnnotation(fieldNamingPolicy.class);	  SerializedName    annotation    =    f.getAnnotation(fieldNamingPolicy.class);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
523	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.name);  [CE]  name  has  private  access  in  Field  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.name);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.name);	  SerializedName    annotation    =    f.getAnnotation(fieldNamingPolicy.class);    	non-compiled	[CE]  name  has  private  access  in  Field	73	None	replace
524	[BUG]  [BUGGY]  SerializedName  annotation  =  scope.getAnnotation(Serializable.class,  f);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  scope.getAnnotation(Serializable.class,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  scope.getAnnotation(Serializable.class,  f);	  SerializedName    annotation    =    scope.getAnnotation(Serializable.class);    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
525	[BUG]  [BUGGY]  SerializedName  annotation  =  this.scope.getAnnotation(Serializable.class);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  this.scope.getAnnotation(Serializable.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  this.scope.getAnnotation(Serializable.class);	  SerializedName    annotation    =    scope.getAnnotation(Serializable.class);    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
526	[BUG]  [BUGGY]  FieldNamingStrategy  annotation  =  constructor.getAnnotation(Constructor.class);  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  annotation  =  constructor.getAnnotation(Constructor.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  annotation  =  constructor.getAnnotation(Constructor.class);	  FieldNamingStrategy    annotation    =    f.getAnnotation(Constructor.class);    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
527	[BUG]  [BUGGY]  FieldNamingStrategy  annotation  =  constructor.getAnnotation(Factory.class);  [CE]  cannot  find  symbol  [FE]                                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  annotation  =  constructor.getAnnotation(Factory.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  annotation  =  constructor.getAnnotation(Factory.class);	  FieldNamingStrategy    annotation    =    f.getAnnotation(Constructor.class);    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
528	[BUG]  [BUGGY]  FieldNamingStrategy  annotation  =  constructorConstructor.getAnnotation(Factory.class);  [CE]  cannot  find  symbol  [FE]                                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  annotation  =  constructorConstructor.getAnnotation(Factory.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  annotation  =  constructorConstructor.getAnnotation(Factory.class);	  FieldNamingStrategy    annotation    =    f.getAnnotation(Constructor.class);    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
529	[BUG]  [BUGGY]  FieldNamingStrategy  annotation  =  constructorConstructor.getAnnotation(f.class);  [CE]  cannot  find  symbol  [FE]                                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  annotation  =  constructorConstructor.getAnnotation(f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  annotation  =  constructorConstructor.getAnnotation(f.class);	  FieldNamingStrategy    annotation    =    f.getAnnotation(Constructor.class);    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
530	[BUG]  [BUGGY]  FieldNamingStrategy  annotation  =  constructorConstructor.getAnnotation(Function.class);  [CE]  cannot  find  symbol  [FE]                                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  annotation  =  constructorConstructor.getAnnotation(Function.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  annotation  =  constructorConstructor.getAnnotation(Function.class);	  FieldNamingStrategy    annotation    =    f.getAnnotation(Constructor.class);    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
531	[BUG]  [BUGGY]  FieldNamingStrategy  annotation  =  constructor.getAnnotation(Function.class);  [CE]  cannot  find  symbol  [FE]                                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  annotation  =  constructor.getAnnotation(Function.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  annotation  =  constructor.getAnnotation(Function.class);	  FieldNamingStrategy    annotation    =    f.getAnnotation(Constructor.class);    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
532	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedName,  name);  [CE]  cannot  find  symbol  serializedName  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedName,  name);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedName,  name);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f,    name);    	non-compiled	[CE]  cannot  find  symbol  serializedName	97	None	replace
533	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serialized.class);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serialized.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(serialized.class);	  SerializedName    annotation    =    serialized.getAnnotation(f.class);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
534	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serialized).getAnnotation(f);  [CE]  cannot  find  symbol  serialized  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serialized).getAnnotation(f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(serialized).getAnnotation(f);	  SerializedName    annotation    =    serialized.getAnnotation(f.class);    	non-compiled	[CE]  cannot  find  symbol  serialized	33	None	replace
535	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serialized);  [CE]  cannot  find  symbol  serialized  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serialized);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(serialized);	  SerializedName    annotation    =    serialized.getAnnotation(f.class);    	non-compiled	[CE]  cannot  find  symbol  serialized	33	None	replace
536	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serialized,  f.class);  [CE]  cannot  find  symbol  serialized  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serialized,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(serialized,  f.class);	  SerializedName    annotation    =    serialized.getAnnotation(f.class);    	non-compiled	[CE]  cannot  find  symbol  serialized	33	None	replace
537	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serialized).getAnnotation(f.class);  [CE]  cannot  find  symbol  [FE]                                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serialized).getAnnotation(f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(serialized).getAnnotation(f.class);	  SerializedName    annotation    =    serialized.getAnnotation(f.class);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
538	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializable.class);  [CE]  cannot  find  symbol  [FE]                                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializable.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(serializable.class);	  SerializedName    annotation    =    serialized.getAnnotation(f.class);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
539	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  fieldNamingPolicy,  null);  [CE]  no  suitable  method  found  for  getAnnotation(Class<SerializedName>,FieldNamingStrategy,<null>)  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  fieldNamingPolicy,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  fieldNamingPolicy,  null);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    fieldNamingPolicy);    	non-compiled	[CE]  no  suitable  method  found  for  getAnnotation(Class<SerializedName>,FieldNamingStrategy,<null>)	102	None	replace
540	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedName,  null,  fieldNamingPolicy);  [CE]  cannot  find  symbol  serializedName  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedName,  null,  fieldNamingPolicy);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedName,  null,  fieldNamingPolicy);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    fieldNamingPolicy);    	non-compiled	[CE]  cannot  find  symbol  serializedName	102	None	replace
541	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  serializedName,  fieldNamingPolicy);  [CE]  cannot  find  symbol  serializedName  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  serializedName,  fieldNamingPolicy);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  serializedName,  fieldNamingPolicy);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    fieldNamingPolicy);    	non-compiled	[CE]  cannot  find  symbol  serializedName	102	None	replace
542	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  fieldNamingPolicy,  serializedName);  [CE]  cannot  find  symbol  serializedName  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  fieldNamingPolicy,  serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  fieldNamingPolicy,  serializedName);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    fieldNamingPolicy);    	non-compiled	[CE]  cannot  find  symbol  serializedName	102	None	replace
543	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  serialize,  fieldNamingPolicy);  [CE]  cannot  find  symbol  serialize  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  serialize,  fieldNamingPolicy);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  serialize,  fieldNamingPolicy);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    fieldNamingPolicy);    	non-compiled	[CE]  cannot  find  symbol  serialize	102	None	replace
544	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  fieldNamingPolicy,  deserializedName);  [CE]  cannot  find  symbol  deserializedName  [FE]                                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  fieldNamingPolicy,  deserializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  fieldNamingPolicy,  deserializedName);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    fieldNamingPolicy);    	non-compiled	[CE]  cannot  find  symbol  deserializedName	102	None	replace
545	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  name.value());  [CE]  cannot  find  symbol  name  [FE]              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  name.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  name.value());	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName.value());    	non-compiled	[CE]  cannot  find  symbol  name	53	None	replace
546	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedFactory.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy.name());  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedFactory.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedFactory.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy.name());	  SerializedName    annotation    =    serializedFactory.getAnnotation(SerializedName.class,    f.name());    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
547	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedFactory.getAnnotation(SerializedName.class,  f,  f.name());  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedFactory.getAnnotation(SerializedName.class,  f,  f.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedFactory.getAnnotation(SerializedName.class,  f,  f.name());	  SerializedName    annotation    =    serializedFactory.getAnnotation(SerializedName.class,    f.name());    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
548	[BUG]  [BUGGY]  SerializedName  annotation  =  this.serializedFactory.getAnnotation(SerializedName.class,  f.name());  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  this.serializedFactory.getAnnotation(SerializedName.class,  f.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  this.serializedFactory.getAnnotation(SerializedName.class,  f.name());	  SerializedName    annotation    =    serializedFactory.getAnnotation(SerializedName.class,    f.name());    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
549	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedFactory.getAnnotation(SerializedName.class,  f,  fields.name());  [CE]  cannot  find  symbol  fields  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedFactory.getAnnotation(SerializedName.class,  f,  fields.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedFactory.getAnnotation(SerializedName.class,  f,  fields.name());	  SerializedName    annotation    =    serializedFactory.getAnnotation(SerializedName.class,    f.name());    	non-compiled	[CE]  cannot  find  symbol  fields	28	None	replace
550	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  f.type,  serializedName);  [CE]  type  has  private  access  in  Field  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  f.type,  serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  f.type,  serializedName);	  SerializedName    annotation    =    f.getAnnotation(FieldNamingStrategy.class,    f.type);    	non-compiled	[CE]  type  has  private  access  in  Field	115	None	replace
551	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  f.type,  fieldNamingPolicy);  [CE]  type  has  private  access  in  Field  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  f.type,  fieldNamingPolicy);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  f.type,  fieldNamingPolicy);	  SerializedName    annotation    =    f.getAnnotation(FieldNamingStrategy.class,    f.type);    	non-compiled	[CE]  type  has  private  access  in  Field	115	None	replace
552	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  f.type,  serialize);  [CE]  type  has  private  access  in  Field  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  f.type,  serialize);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  f.type,  serialize);	  SerializedName    annotation    =    f.getAnnotation(FieldNamingStrategy.class,    f.type);    	non-compiled	[CE]  type  has  private  access  in  Field	115	None	replace
553	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  fieldNamingPolicy.type);  [CE]  cannot  find  symbol  type  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  fieldNamingPolicy.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  fieldNamingPolicy.type);	  SerializedName    annotation    =    f.getAnnotation(FieldNamingStrategy.class,    f.type);    	non-compiled	[CE]  cannot  find  symbol  type	115	None	replace
554	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(serializableName,  f.class);  [CE]  cannot  find  symbol  serializableName  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(serializableName,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(serializableName,  f.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(serializedName,    f.class);    	non-compiled	[CE]  cannot  find  symbol  serializableName	43	None	replace
555	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(serializers,  f.class);  [CE]  cannot  find  symbol  serializers  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(serializers,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(serializers,  f.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(serializedName,    f.class);    	non-compiled	[CE]  cannot  find  symbol  serializers	43	None	replace
556	[BUG]  [BUGGY]  SerializedName  annotation  =  this.serializedFactory.getAnnotation(Serializable.class);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  this.serializedFactory.getAnnotation(Serializable.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  this.serializedFactory.getAnnotation(Serializable.class);	  SerializedName    annotation    =    serializedFactory.getAnnotation(Serializable.class);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
557	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedFactory.getAnnotation(Serializable,  f.class);  [CE]  cannot  find  symbol  Serializable  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedFactory.getAnnotation(Serializable,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedFactory.getAnnotation(Serializable,  f.class);	  SerializedName    annotation    =    serializedFactory.getAnnotation(Serializable.class);    	non-compiled	[CE]  cannot  find  symbol  Serializable	69	None	replace
558	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedFactory.getAnnotation(Serializable.class,  f.type);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedFactory.getAnnotation(Serializable.class,  f.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedFactory.getAnnotation(Serializable.class,  f.type);	  SerializedName    annotation    =    serializedFactory.getAnnotation(Serializable.class);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
559	[BUG]  [BUGGY]  SerializedName  serializedName  =  f.getAnnotation(serializedName,  f.value());  [CE]  cannot  find  symbol  [FE]                                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  serializedName  =  f.getAnnotation(serializedName,  f.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  serializedName  =  f.getAnnotation(serializedName,  f.value());	  SerializedName    serializedName    =    f.getAnnotation(serializedName,    f.class);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
560	[BUG]  [BUGGY]  SerializedName  serializedName  =  f.getAnnotation(serializedName,  f.value);  [CE]  cannot  find  symbol  value  [FE]                                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  serializedName  =  f.getAnnotation(serializedName,  f.value);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  serializedName  =  f.getAnnotation(serializedName,  f.value);	  SerializedName    serializedName    =    f.getAnnotation(serializedName,    f.class);    	non-compiled	[CE]  cannot  find  symbol  value	37	None	replace
561	[BUG]  [BUGGY]  SerializedName  serializedName  =  f.getAnnotation(serializedName,  f.name());  [CE]  cannot  find  symbol  [FE]                                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  serializedName  =  f.getAnnotation(serializedName,  f.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  serializedName  =  f.getAnnotation(serializedName,  f.name());	  SerializedName    serializedName    =    f.getAnnotation(serializedName,    f.class);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
562	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  serialize,  f.name);  [CE]  cannot  find  symbol  serialize  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  serialize,  f.name);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  serialize,  f.name);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serialize,    f.name);    	non-compiled	[CE]  cannot  find  symbol  serialize	49	None	replace
563	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializationName,  f.name);  [CE]  cannot  find  symbol  serializationName  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializationName,  f.name);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializationName,  f.name);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serialize,    f.name);    	non-compiled	[CE]  cannot  find  symbol  serializationName	49	None	replace
564	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.serialize);  [CE]  name  has  private  access  in  Field  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.serialize);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.serialize);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serialize,    f.name);    	non-compiled	[CE]  name  has  private  access  in  Field	49	None	replace
565	[BUG]  [BUGGY]  ObjectConstructor  constructor  =  fieldNamingStrategy.getConstructor();  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  ObjectConstructor  constructor  =  fieldNamingStrategy.getConstructor();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	ObjectConstructor  constructor  =  fieldNamingStrategy.getConstructor();	  ObjectConstructor    constructor    =    f.getConstructor();    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	117	None	replace
566	[BUG]  [BUGGY]  ObjectConstructor  constructor  =  fieldNames.getConstructor();  [CE]  cannot  find  symbol  fieldNames  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  ObjectConstructor  constructor  =  fieldNames.getConstructor();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	ObjectConstructor  constructor  =  fieldNames.getConstructor();	  ObjectConstructor    constructor    =    f.getConstructor();    	non-compiled	[CE]  cannot  find  symbol  fieldNames	117	None	replace
567	[BUG]  [BUGGY]  SerializedName  annotation  =  scope.getAnnotation(f.class);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  scope.getAnnotation(f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  scope.getAnnotation(f.class);	  SerializedName    annotation    =    scope.getAnnotation(serializedName.class);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
568	[BUG]  [BUGGY]  SerializedName  annotation  =  scope.getAnnotation(serializedName);  [CE]  cannot  find  symbol  serializedName  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  scope.getAnnotation(serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  scope.getAnnotation(serializedName);	  SerializedName    annotation    =    scope.getAnnotation(serializedName.class);    	non-compiled	[CE]  cannot  find  symbol  serializedName	88	None	replace
569	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  f.name,  f.type);  [CE]  name  has  private  access  in  Field  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  f.name,  f.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  f.name,  f.type);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    f.type);    	non-compiled	[CE]  name  has  private  access  in  Field	80	None	replace
570	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.type,  f.value());  [CE]  name  has  private  access  in  Field  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.type,  f.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.type,  f.value());	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    f.type);    	non-compiled	[CE]  name  has  private  access  in  Field	80	None	replace
571	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.class,  f.name);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.class,  f.name);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.class,  f.name);	  SerializedName    annotation    =    f.getAnnotation(FieldNamingStrategy.class,    f.name);    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
572	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(Factory.class,  f.name);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(Factory.class,  f.name);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(Factory.class,  f.name);	  SerializedName    annotation    =    f.getAnnotation(FieldNamingStrategy.class,    f.name);    	non-compiled	[CE]  cannot  find  symbol	116	None	replace
573	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.name,  FieldNamingStrategy.class);  [CE]  name  has  private  access  in  Field  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.name,  FieldNamingStrategy.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.name,  FieldNamingStrategy.class);	  SerializedName    annotation    =    f.getAnnotation(FieldNamingStrategy.class,    f.name);    	non-compiled	[CE]  name  has  private  access  in  Field	116	None	replace
574	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.name,  f.class);  [CE]  name  has  private  access  in  Field  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.name,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.name,  f.class);	  SerializedName    annotation    =    f.getAnnotation(FieldNamingStrategy.class,    f.name);    	non-compiled	[CE]  name  has  private  access  in  Field	116	None	replace
575	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  f.name,  f.value);  [CE]  name  has  private  access  in  Field  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  f.name,  f.value);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  f.name,  f.value);	  SerializedName    annotation    =    f.getAnnotation(FieldNamingStrategy.class,    f.name);    	non-compiled	[CE]  name  has  private  access  in  Field	116	None	replace
576	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedField.name());  [CE]  cannot  find  symbol  serializedField  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedField.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedField.name());	  SerializedName    annotation    =    serializedField.getAnnotation(SerializedName.class,    f.name());    	non-compiled	[CE]  cannot  find  symbol  serializedField	30	None	replace
577	[BUG]  [BUGGY]  SerializedName  annotation  =  scope.getAnnotation(SerializedName.class,  f.name());  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  scope.getAnnotation(SerializedName.class,  f.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  scope.getAnnotation(SerializedName.class,  f.name());	  SerializedName    annotation    =    serializedField.getAnnotation(SerializedName.class,    f.name());    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
578	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  constructor);  [CE]  cannot  find  symbol  constructor  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  constructor);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  constructor);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f);    	non-compiled	[CE]  cannot  find  symbol  constructor	74	None	replace
579	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  denominator);  [CE]  cannot  find  symbol  denominator  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  denominator);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  denominator);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    serializedName);    	non-compiled	[CE]  cannot  find  symbol  denominator	13	None	replace
580	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  equals);  [CE]  cannot  find  symbol  equals  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  equals);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  equals);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    serializedName);    	non-compiled	[CE]  cannot  find  symbol  equals	13	None	replace
581	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  delegate);  [CE]  cannot  find  symbol  delegate  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  delegate);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  delegate);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    serializedName);    	non-compiled	[CE]  cannot  find  symbol  delegate	13	None	replace
582	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  serialize,  f);  [CE]  cannot  find  symbol  serialize  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  serialize,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  serialize,  f);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serialize,    f);    	non-compiled	[CE]  cannot  find  symbol  serialize	45	None	replace
583	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializer,  f);  [CE]  cannot  find  symbol  serializer  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializer,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializer,  f);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serialize,    f);    	non-compiled	[CE]  cannot  find  symbol  serializer	45	None	replace
584	[BUG]  [BUGGY]  FieldNamingPolicy  fieldNamingPolicy  =  f.getRawClass();  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingPolicy  fieldNamingPolicy  =  f.getRawClass();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingPolicy  fieldNamingPolicy  =  f.getRawClass();	  FieldNamingStrategy    fieldNamingPolicy    =    f.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
585	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  f.newInstance();  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  f.newInstance();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  f.newInstance();	  FieldNamingStrategy    fieldNamingPolicy    =    f.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
586	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  f.findFieldNamingPolicy(f.getRawClass());  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  f.findFieldNamingPolicy(f.getRawClass());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  f.findFieldNamingPolicy(f.getRawClass());	  FieldNamingStrategy    fieldNamingPolicy    =    f.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
587	[BUG]  [BUGGY]  Collections.  <  String>  boundFields  =  f.getRowNames();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  Collections.  <  String>  boundFields  =  f.getRowNames();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	Collections.  <  String>  boundFields  =  f.getRowNames();	  Collections.    <    String>    boundFields    =    f.getCollection();    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
588	[BUG]  [BUGGY]  Collections.  <  String>  boundFields  =  f.getCollection(fieldNames);  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  Collections.  <  String>  boundFields  =  f.getCollection(fieldNames);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	Collections.  <  String>  boundFields  =  f.getCollection(fieldNames);	  Collections.    <    String>    boundFields    =    f.getCollection();    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
589	[BUG]  [BUGGY]  Collections.  <  String>  boundFields  =  f.getDeclaredFields();  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  Collections.  <  String>  boundFields  =  f.getDeclaredFields();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	Collections.  <  String>  boundFields  =  f.getDeclaredFields();	  Collections.    <    String>    boundFields    =    f.getCollection();    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
590	[BUG]  [BUGGY]  Collections.  <  String>  boundFields  =  f.getDeclaredFieldNames();  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  Collections.  <  String>  boundFields  =  f.getDeclaredFieldNames();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	Collections.  <  String>  boundFields  =  f.getDeclaredFieldNames();	  Collections.    <    String>    boundFields    =    f.getCollection();    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
591	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializeName);  [CE]  cannot  find  symbol  serializeName  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializeName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializeName);	  SerializedName    annotation    =    serializedName.getAnnotation(SerializedName.class,    f.name);    	non-compiled	[CE]  cannot  find  symbol  serializeName	48	None	replace
592	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f,  f.name);  [CE]  name  has  private  access  in  Field  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f,  f.name);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f,  f.name);	  SerializedName    annotation    =    serializedName.getAnnotation(SerializedName.class,    f.name);    	non-compiled	[CE]  name  has  private  access  in  Field	48	None	replace
593	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  getFieldNamingPolicy(f.getParent());  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  getFieldNamingPolicy(f.getParent());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  getFieldNamingPolicy(f.getParent());	  FieldNamingStrategy    fieldNamingPolicy    =    getFieldNamingPolicy();    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
594	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(f,  f.class,  null);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(f,  f.class,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(f,  f.class,  null);	  SerializedName    annotation    =    f.getAnnotation(serializedName,    f.class,    null);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
595	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(fieldNamingPolicy,  f.class,  null);  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(fieldNamingPolicy,  f.class,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(fieldNamingPolicy,  f.class,  null);	  SerializedName    annotation    =    f.getAnnotation(serializedName,    f.class,    null);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
596	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(name,  f.class,  null);  [CE]  cannot  find  symbol  name  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(name,  f.class,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(name,  f.class,  null);	  SerializedName    annotation    =    f.getAnnotation(serializedName,    f.class,    null);    	non-compiled	[CE]  cannot  find  symbol  name	15	None	replace
597	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f.class,  null);  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f.class,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f.class,  null);	  SerializedName    annotation    =    f.getAnnotation(serializedName,    f.class,    null);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
598	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(this,  f.class,  null);  [CE]  cannot  find  symbol  [FE]                                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(this,  f.class,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(this,  f.class,  null);	  SerializedName    annotation    =    f.getAnnotation(serializedName,    f.class,    null);    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
599	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  deserialization);  [CE]  cannot  find  symbol  deserialization  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  deserialization);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  deserialization);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f,    serialize);    	non-compiled	[CE]  cannot  find  symbol  deserialization	98	None	replace
600	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  deserializer);  [CE]  cannot  find  symbol  deserializer  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  deserializer);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  deserializer);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f,    serialize);    	non-compiled	[CE]  cannot  find  symbol  deserializer	98	None	replace
601	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  false,  f.value());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  false,  f.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  false,  f.value());	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    false);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
602	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  name,  false);  [CE]  cannot  find  symbol  name  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  name,  false);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  name,  false);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    false);    	non-compiled	[CE]  cannot  find  symbol  name	110	None	replace
603	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  this.serializedName);  [CE]  cannot  find  symbol  serializedName  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  this.serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  this.serializedName);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    serializedName);    	non-compiled	[CE]  cannot  find  symbol  serializedName	42	None	replace
604	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  decodeSerializedName);  [CE]  cannot  find  symbol  decodeSerializedName  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  decodeSerializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  decodeSerializedName);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    serializedName);    	non-compiled	[CE]  cannot  find  symbol  decodeSerializedName	42	None	replace
605	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  false);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  false);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  false);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    serializedName);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
606	[BUG]  [BUGGY]  List  <  String>  fieldNames  =  fields.getFieldNames();  [CE]  cannot  find  symbol  fields  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  List  <  String>  fieldNames  =  fields.getFieldNames();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	List  <  String>  fieldNames  =  fields.getFieldNames();	  List    <    String>    fieldNames    =    f.getFieldNames();    	non-compiled	[CE]  cannot  find  symbol  fields	89	None	replace
607	[BUG]  [BUGGY]  List  <  String>  fields  =  f.getFieldNames();  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  List  <  String>  fields  =  f.getFieldNames();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	List  <  String>  fields  =  f.getFieldNames();	  List    <    String>    fieldNames    =    f.getFieldNames();    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
608	[BUG]  [BUGGY]  SerializedName  annotation  =  this.serialize.getAnnotation(SerializedName.class,  f.value());  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  this.serialize.getAnnotation(SerializedName.class,  f.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  this.serialize.getAnnotation(SerializedName.class,  f.value());	  SerializedName    annotation    =    serialize.getAnnotation(SerializedName.class,    f.value());    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
609	[BUG]  [BUGGY]  SerializedName  annotation  =  typeFactory.getAnnotation(SerializedName.class,  f.value());  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  typeFactory.getAnnotation(SerializedName.class,  f.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  typeFactory.getAnnotation(SerializedName.class,  f.value());	  SerializedName    annotation    =    serialize.getAnnotation(SerializedName.class,    f.value());    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
610	[BUG]  [BUGGY]  SerializedName  annotation  =  scope.getAnnotation(SerializedName.class,  f.value());  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  scope.getAnnotation(SerializedName.class,  f.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  scope.getAnnotation(SerializedName.class,  f.value());	  SerializedName    annotation    =    serialize.getAnnotation(SerializedName.class,    f.value());    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
611	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  deserialization);  [CE]  cannot  find  symbol  deserialization  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  deserialization);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  deserialization);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    serialize);    	non-compiled	[CE]  cannot  find  symbol  deserialization	17	None	replace
612	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  deserializer);  [CE]  cannot  find  symbol  deserializer  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  deserializer);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  deserializer);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    serialize);    	non-compiled	[CE]  cannot  find  symbol  deserializer	17	None	replace
613	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  this.value);  [CE]  cannot  find  symbol  value  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  this.value);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  this.value);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    this.class);    	non-compiled	[CE]  cannot  find  symbol  value	76	None	replace
614	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  this.serialize.name());  [CE]  cannot  find  symbol  serialize  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  this.serialize.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  this.serialize.name());	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serialize.name());    	non-compiled	[CE]  cannot  find  symbol  serialize	29	None	replace
615	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  this.serializedName.name());  [CE]  cannot  find  symbol  serializedName  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  this.serializedName.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  this.serializedName.name());	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serialize.name());    	non-compiled	[CE]  cannot  find  symbol  serializedName	29	None	replace
616	[BUG]  [BUGGY]  SerializedName  annotation  =  factory.getAnnotation(SerializedName.class,  f);  [CE]  cannot  find  symbol  factory  [FE]              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  factory.getAnnotation(SerializedName.class,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  factory.getAnnotation(SerializedName.class,  f);	  SerializedName    annotation    =    serializedName.getAnnotation(SerializedName.class,    f);    	non-compiled	[CE]  cannot  find  symbol  factory	8	None	replace
617	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  dataArea,  alternates);  [CE]  cannot  find  symbol  dataArea  [FE]            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  dataArea,  alternates);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  dataArea,  alternates);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    alternates);    	non-compiled	[CE]  cannot  find  symbol  dataArea	108	None	replace
618	[BUG]  [BUGGY]  FieldNamingStrategy  annotation  =  constructorConstructor.getAnnotation(f);  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  annotation  =  constructorConstructor.getAnnotation(f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  annotation  =  constructorConstructor.getAnnotation(f);	  FieldNamingStrategy    annotation    =    f.getAnnotation(Constructor.class);    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
619	[BUG]  [BUGGY]  FieldNamingStrategy  annotation  =  fieldNamingPolicy.getAnnotation(Constructor.class);  [CE]  cannot  find  symbol  [FE]                                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  annotation  =  fieldNamingPolicy.getAnnotation(Constructor.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  annotation  =  fieldNamingPolicy.getAnnotation(Constructor.class);	  FieldNamingStrategy    annotation    =    f.getAnnotation(Constructor.class);    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
620	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.serializedName);  [CE]  name  has  private  access  in  Field  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.serializedName);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName,    f.name);    	non-compiled	[CE]  name  has  private  access  in  Field	47	None	replace
621	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.serializer);  [CE]  name  has  private  access  in  Field  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.serializer);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.serializer);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName,    f.name);    	non-compiled	[CE]  name  has  private  access  in  Field	47	None	replace
622	[BUG]  [BUGGY]  SerializedName  annotation  =  scope.getAnnotation(SerializedName.class);  [CE]  cannot  find  symbol  scope  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  scope.getAnnotation(SerializedName.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  scope.getAnnotation(SerializedName.class);	  SerializedName    annotation    =    serializedName.getAnnotation(SerializedName.class);    	non-compiled	[CE]  cannot  find  symbol  scope	41	None	replace
623	[BUG]  [BUGGY]  SerializedName  annotation  =  constructor.getAnnotation(SerializedName.class);  [CE]  cannot  find  symbol  constructor  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  constructor.getAnnotation(SerializedName.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  constructor.getAnnotation(SerializedName.class);	  SerializedName    annotation    =    serializedName.getAnnotation(SerializedName.class);    	non-compiled	[CE]  cannot  find  symbol  constructor	41	None	replace
624	[BUG]  [BUGGY]  FieldNamingStrategy  annotation  =  fields.getAnnotation(JsonString.class);  [CE]  cannot  find  symbol  [FE]                                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  annotation  =  fields.getAnnotation(JsonString.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  annotation  =  fields.getAnnotation(JsonString.class);	  FieldNamingStrategy    annotation    =    f.getAnnotation(JsonString.class);    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
625	[BUG]  [BUGGY]  FieldNamingStrategy  annotation  =  JsonString.getAnnotation(f.class);  [CE]  cannot  find  symbol  [FE]                                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  annotation  =  JsonString.getAnnotation(f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  annotation  =  JsonString.getAnnotation(f.class);	  FieldNamingStrategy    annotation    =    f.getAnnotation(JsonString.class);    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
626	[BUG]  [BUGGY]  FieldNamingStrategy  annotation  =  typeFactory.getAnnotation(JsonString.class);  [CE]  cannot  find  symbol  [FE]                                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  annotation  =  typeFactory.getAnnotation(JsonString.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  annotation  =  typeFactory.getAnnotation(JsonString.class);	  FieldNamingStrategy    annotation    =    f.getAnnotation(JsonString.class);    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
627	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f.name,  alternates);  [CE]  name  has  private  access  in  Field  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f.name,  alternates);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f.name,  alternates);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    alternates);    	non-compiled	[CE]  name  has  private  access  in  Field	130	None	replace
628	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  options);  [CE]  name  has  private  access  in  Field  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  options);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  options);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    alternates);    	non-compiled	[CE]  name  has  private  access  in  Field	130	None	replace
629	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  alternates,  null);  [CE]  name  has  private  access  in  Field  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  alternates,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  alternates,  null);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    alternates);    	non-compiled	[CE]  name  has  private  access  in  Field	130	None	replace
630	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  fieldNames);  [CE]  name  has  private  access  in  Field  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  fieldNames);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  fieldNames);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    alternates);    	non-compiled	[CE]  name  has  private  access  in  Field	130	None	replace
631	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(this,  f.class);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(this,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(this,  f.class);	  SerializedName    annotation    =    f.getAnnotation(serializedName,    f.class);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
632	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(name,  f.class);  [CE]  cannot  find  symbol  name  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(name,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(name,  f.class);	  SerializedName    annotation    =    f.getAnnotation(serializedName,    f.class);    	non-compiled	[CE]  cannot  find  symbol  name	32	None	replace
633	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(localizedName,  f.class);  [CE]  cannot  find  symbol  localizedName  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(localizedName,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(localizedName,  f.class);	  SerializedName    annotation    =    f.getAnnotation(serializedName,    f.class);    	non-compiled	[CE]  cannot  find  symbol  localizedName	32	None	replace
634	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(value,  f.class);  [CE]  cannot  find  symbol  value  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(value,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(value,  f.class);	  SerializedName    annotation    =    f.getAnnotation(serializedName,    f.class);    	non-compiled	[CE]  cannot  find  symbol  value	32	None	replace
635	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(this.fieldNamingStrategy,  f);  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(this.fieldNamingStrategy,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(this.fieldNamingStrategy,  f);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    this.fieldNamingStrategy);    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	126	None	replace
636	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  null);  [CE]  no  suitable  method  found  for  getAnnotation(Class<SerializedName>,Field,<null>)  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  null);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serialize,    null);    	non-compiled	[CE]  no  suitable  method  found  for  getAnnotation(Class<SerializedName>,Field,<null>)	14	None	replace
637	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  false,  null);  [CE]  no  suitable  method  found  for  getAnnotation(Class<SerializedName>,boolean,<null>)  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  false,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  false,  null);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serialize,    null);    	non-compiled	[CE]  no  suitable  method  found  for  getAnnotation(Class<SerializedName>,boolean,<null>)	14	None	replace
638	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  f.name,  f.value());  [CE]  name  has  private  access  in  Field  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  f.name,  f.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  f.name,  f.value());	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    f.value());    	non-compiled	[CE]  name  has  private  access  in  Field	81	None	replace
639	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.value()  +  1);  [CE]  name  has  private  access  in  Field  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.value()  +  1);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.value()  +  1);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    f.value());    	non-compiled	[CE]  name  has  private  access  in  Field	81	None	replace
640	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  value);  [CE]  cannot  find  symbol  value  [FE]            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  value);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  value);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    alternate);    	non-compiled	[CE]  cannot  find  symbol  value	132	None	replace
641	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(FieldNamingStrategy.class),  f);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(FieldNamingStrategy.class),  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(FieldNamingStrategy.class),  f);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(FieldNamingStrategy.class);    	non-compiled	[CE]  ';'  expected	18	None	replace
642	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.findAnnotation(FieldNamingStrategy.class);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.findAnnotation(FieldNamingStrategy.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.findAnnotation(FieldNamingStrategy.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(FieldNamingStrategy.class);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
643	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(FieldNamingStrategy.class)+  1;  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(FieldNamingStrategy.class)+  1;  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(FieldNamingStrategy.class)+  1;	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(FieldNamingStrategy.class);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
644	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  f.type);  [CE]  type  has  private  access  in  Field  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  f.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  f.type);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f.type);    	non-compiled	[CE]  type  has  private  access  in  Field	106	None	replace
645	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(serializedName.class,  f.type);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(serializedName.class,  f.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(serializedName.class,  f.type);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f.type);    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
646	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.class,  SerializedName.class);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.class,  SerializedName.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.class,  SerializedName.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f.type);    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
647	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.name,  SerializedName.class);  [CE]  name  has  private  access  in  Field  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.name,  SerializedName.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.name,  SerializedName.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f.name);    	non-compiled	[CE]  name  has  private  access  in  Field	50	None	replace
648	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class,  f.type));  [CE]  type  has  private  access  in  Field  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class,  f.type));  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class,  f.type));	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class));    	non-compiled	[CE]  type  has  private  access  in  Field	21	None	replace
649	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class,  f.value()));  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class,  f.value()));  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class,  f.value()));	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class));    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
650	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class),  f.type);  [CE]  no  suitable  method  found  for  getAnnotation(Class<FieldNamingStrategy>)  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class),  f.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class),  f.type);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class));    	non-compiled	[CE]  no  suitable  method  found  for  getAnnotation(Class<FieldNamingStrategy>)	21	None	replace
651	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  f.getDeclaredFieldNames(this.boundFields);  [CE]  cannot  find  symbol  boundFields  [FE]                                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  f.getDeclaredFieldNames(this.boundFields);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  f.getDeclaredFieldNames(this.boundFields);	  FieldNamingStrategy    fieldNamingPolicy    =    f.getDeclaredFieldNames();    	non-compiled	[CE]  cannot  find  symbol  boundFields	65	None	replace
652	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  f.getDeclaredFieldNames(f);  [CE]  cannot  find  symbol  [FE]                                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  f.getDeclaredFieldNames(f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  f.getDeclaredFieldNames(f);	  FieldNamingStrategy    fieldNamingPolicy    =    f.getDeclaredFieldNames();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
653	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  f.getDeclaredFieldNames(this);  [CE]  cannot  find  symbol  [FE]                                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  f.getDeclaredFieldNames(this);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  f.getDeclaredFieldNames(this);	  FieldNamingStrategy    fieldNamingPolicy    =    f.getDeclaredFieldNames();    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
654	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  f.getDeclaredFieldNames(includer);  [CE]  cannot  find  symbol  includer  [FE]                                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  f.getDeclaredFieldNames(includer);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  f.getDeclaredFieldNames(includer);	  FieldNamingStrategy    fieldNamingPolicy    =    f.getDeclaredFieldNames();    	non-compiled	[CE]  cannot  find  symbol  includer	65	None	replace
655	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingStrategy.getAnnotation(SerializedName.class,  f);  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingStrategy.getAnnotation(SerializedName.class,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingStrategy.getAnnotation(SerializedName.class,  f);	  SerializedName    annotation    =    serialized.getAnnotation(SerializedName.class,    f);    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	38	None	replace
656	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f.type,  f.value());  [CE]  type  has  private  access  in  Field  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f.type,  f.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f.type,  f.value());	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.type,    f.value());    	non-compiled	[CE]  type  has  private  access  in  Field	107	None	replace
657	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  f.type,  f.value());  [CE]  type  has  private  access  in  Field  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  f.type,  f.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  f.type,  f.value());	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.type,    f.value());    	non-compiled	[CE]  type  has  private  access  in  Field	107	None	replace
658	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  f.name());  [CE]  type  has  private  access  in  Field  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  f.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  f.name());	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.type,    f.value());    	non-compiled	[CE]  type  has  private  access  in  Field	107	None	replace
659	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.class),  f);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.class),  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.class),  f);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class),    f);    	non-compiled	[CE]  ';'  expected	105	None	replace
660	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.class),  serialize);  [CE]  ';'  expected  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.class),  serialize);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.class),  serialize);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class),    f);    	non-compiled	[CE]  ';'  expected	105	None	replace
661	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(Factory.class),  f);  [CE]  ';'  expected  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(Factory.class),  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(Factory.class),  f);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class),    f);    	non-compiled	[CE]  ';'  expected	105	None	replace
662	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  FieldNamingStrategy.class)+  1;  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  FieldNamingStrategy.class)+  1;  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  FieldNamingStrategy.class)+  1;	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    FieldNamingStrategy.class);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
663	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingPolicy.class,  fieldNamingStrategy);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingPolicy.class,  fieldNamingStrategy);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(FieldNamingPolicy.class,  fieldNamingStrategy);	  SerializedName    annotation    =    f.getAnnotation(FieldNamingStrategy.class,    fieldNamingPolicy);    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
664	[BUG]  [BUGGY]  SerializedName  annotation  =  FieldNamingPolicy.getAnnotation(f.class,  fieldNamingPolicy);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  FieldNamingPolicy.getAnnotation(f.class,  fieldNamingPolicy);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  FieldNamingPolicy.getAnnotation(f.class,  fieldNamingPolicy);	  SerializedName    annotation    =    f.getAnnotation(FieldNamingStrategy.class,    fieldNamingPolicy);    	non-compiled	[CE]  cannot  find  symbol	113	None	replace
665	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(Factory,  f.class);  [CE]  cannot  find  symbol  Factory  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(Factory,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(Factory,  f.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(Factory.class);    	non-compiled	[CE]  cannot  find  symbol  Factory	114	None	replace
666	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(FactoryType.class);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(FactoryType.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(FactoryType.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(Factory.class);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
667	[BUG]  [BUGGY]  SerializedName  annotation  =  fields.getAnnotation(Factory.class);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fields.getAnnotation(Factory.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fields.getAnnotation(Factory.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(Factory.class);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
668	[BUG]  [BUGGY]  SerializedName  annotation  =  factory.getAnnotation(SerializedName.class,  f.value());  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  factory.getAnnotation(SerializedName.class,  f.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  factory.getAnnotation(SerializedName.class,  f.value());	  SerializedName    annotation    =    serializedFactory.getAnnotation(SerializedName.class,    f.value());    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
669	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  this.fieldNamingPolicy.class);  [CE]  <identifier>  expected  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  this.fieldNamingPolicy.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  this.fieldNamingPolicy.class);	  SerializedName    annotation    =    this.fieldNamingPolicy.getAnnotation(f.class);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
670	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.class,  serializedName);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.class,  serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.class,  serializedName);	  SerializedName    annotation    =    f.getAnnotation(serializedName.class,    f);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
671	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializedName,  f.class,  f);  [CE]  cannot  find  symbol  serializedName  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializedName,  f.class,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(serializedName,  f.class,  f);	  SerializedName    annotation    =    f.getAnnotation(serializedName.class,    f);    	non-compiled	[CE]  cannot  find  symbol  serializedName	46	None	replace
672	[BUG]  [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(f.class,  f);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(f.class,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialize.getAnnotation(f.class,  f);	  SerializedName    annotation    =    f.getAnnotation(serializedName.class,    f);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
673	[BUG]  [BUGGY]  SerializedName  annotation  =  typeFactory.getAnnotation(f.class,  serializedName);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  typeFactory.getAnnotation(f.class,  serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  typeFactory.getAnnotation(f.class,  serializedName);	  SerializedName    annotation    =    f.getAnnotation(serializedName.class,    f);    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
674	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  new  FieldNamingPolicy(f.getFieldNamingPolicy());  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  new  FieldNamingPolicy(f.getFieldNamingPolicy());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  new  FieldNamingPolicy(f.getFieldNamingPolicy());	  FieldNamingStrategy    fieldNamingPolicy    =    f.getFieldNamingPolicy();    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
675	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedFactory.name());  [CE]  cannot  find  symbol  serializedFactory  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedFactory.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedFactory.name());	  SerializedName    annotation    =    serializedFactory.getAnnotation(SerializedName.class,    f.name());    	non-compiled	[CE]  cannot  find  symbol  serializedFactory	28	None	replace
676	[BUG]  [BUGGY]  SerializedName  annotation  =  factory.getAnnotation(SerializedName.class,  f.name());  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  factory.getAnnotation(SerializedName.class,  f.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  factory.getAnnotation(SerializedName.class,  f.name());	  SerializedName    annotation    =    serializedFactory.getAnnotation(SerializedName.class,    f.name());    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
677	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  fieldNamingStrategy);  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  fieldNamingStrategy);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  fieldNamingStrategy);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f);    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	39	None	replace
678	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
679	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(serializedName.class,  f);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(serializedName.class,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(serializedName.class,  f);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
680	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  null);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  null);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
681	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  this);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  this);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  this);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
682	[BUG]  [BUGGY]  SerializedName  annotation  =  fields.getAnnotation(Serializable.class);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fields.getAnnotation(Serializable.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fields.getAnnotation(Serializable.class);	  SerializedName    annotation    =    this.fieldNamingPolicy.getAnnotation(Serializable.class);    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
683	[BUG]  [BUGGY]  SerializedName  annotation  =  this.fieldNamingPolicy.getAnnotation(FieldNamingStrategy.class);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  this.fieldNamingPolicy.getAnnotation(FieldNamingStrategy.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  this.fieldNamingPolicy.getAnnotation(FieldNamingStrategy.class);	  SerializedName    annotation    =    this.fieldNamingPolicy.getAnnotation(Serializable.class);    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
684	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  f.serializedName);  [CE]  type  has  private  access  in  Field  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  f.serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  f.serializedName);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName,    f.type);    	non-compiled	[CE]  type  has  private  access  in  Field	1	None	replace
685	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  f.asSerializedName);  [CE]  type  has  private  access  in  Field  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  f.asSerializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  f.asSerializedName);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName,    f.type);    	non-compiled	[CE]  type  has  private  access  in  Field	1	None	replace
686	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  f.type);  [CE]  type  has  private  access  in  Field  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  f.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  f.type);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName,    f.type);    	non-compiled	[CE]  type  has  private  access  in  Field	1	None	replace
687	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  f.serialize);  [CE]  type  has  private  access  in  Field  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  f.serialize);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  f.serialize);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName,    f.type);    	non-compiled	[CE]  type  has  private  access  in  Field	1	None	replace
688	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(fieldNamingPolicy.value());  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(fieldNamingPolicy.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(fieldNamingPolicy.value());	  SerializedName    annotation    =    f.getAnnotation(serializedName);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
689	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(fieldNamingStrategy);  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(fieldNamingStrategy);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(fieldNamingStrategy);	  SerializedName    annotation    =    f.getAnnotation(serializedName);    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	87	None	replace
690	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(compiler);  [CE]  cannot  find  symbol  compiler  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(compiler);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(compiler);	  SerializedName    annotation    =    f.getAnnotation(serializedName);    	non-compiled	[CE]  cannot  find  symbol  compiler	87	None	replace
691	[BUG]  [BUGGY]  FieldNamingStrategy  annotation  =  fieldNamingPolicy.getAnnotation(f,  fieldNamingPolicy);  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  annotation  =  fieldNamingPolicy.getAnnotation(f,  fieldNamingPolicy);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  annotation  =  fieldNamingPolicy.getAnnotation(f,  fieldNamingPolicy);	  FieldNamingStrategy    annotation    =    fieldNamingPolicy.getAnnotation(f);    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
692	[BUG]  [BUGGY]  FieldNamingStrategy  annotation  =  fieldNamingPolicy.getAnnotation(f,  this);  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  annotation  =  fieldNamingPolicy.getAnnotation(f,  this);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  annotation  =  fieldNamingPolicy.getAnnotation(f,  this);	  FieldNamingStrategy    annotation    =    fieldNamingPolicy.getAnnotation(f);    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
693	[BUG]  [BUGGY]  SerializedName  annotation  =  this.serializedName.getAnnotation(SerializedName.class,  f.type);  [CE]  type  has  private  access  in  Field  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  this.serializedName.getAnnotation(SerializedName.class,  f.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  this.serializedName.getAnnotation(SerializedName.class,  f.type);	  SerializedName    annotation    =    serializedName.getAnnotation(SerializedName.class,    f.type);    	non-compiled	[CE]  type  has  private  access  in  Field	2	None	replace
694	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f,  f.type);  [CE]  type  has  private  access  in  Field  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f,  f.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f,  f.type);	  SerializedName    annotation    =    serializedName.getAnnotation(SerializedName.class,    f.type);    	non-compiled	[CE]  type  has  private  access  in  Field	2	None	replace
695	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  this.fieldNamingStrategy,  f.class);  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  this.fieldNamingStrategy,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  this.fieldNamingStrategy,  f.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    this.fieldNamingStrategy.class);    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	75	None	replace
696	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f.value);  [CE]  cannot  find  symbol  value  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f.value);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f.value);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.value);    	non-compiled	[CE]  cannot  find  symbol  value	83	None	replace
697	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.value,  f.type);  [CE]  name  has  private  access  in  Field  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.value,  f.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.value,  f.type);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    f.value);    	non-compiled	[CE]  name  has  private  access  in  Field	79	None	replace
698	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.value,  f.length);  [CE]  name  has  private  access  in  Field  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.value,  f.length);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.value,  f.length);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    f.value);    	non-compiled	[CE]  name  has  private  access  in  Field	79	None	replace
699	[BUG]  [BUGGY]  SerializedName  annotation  =  this.serializedFactory.getAnnotation(f.class);  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  this.serializedFactory.getAnnotation(f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  this.serializedFactory.getAnnotation(f.class);	  SerializedName    annotation    =    serializedFactory.getAnnotation(f.class);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
700	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializedFactory);  [CE]  cannot  find  symbol  serializedFactory  [FE]                                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializedFactory);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(serializedFactory);	  SerializedName    annotation    =    serializedFactory.getAnnotation(f.class);    	non-compiled	[CE]  cannot  find  symbol  serializedFactory	36	None	replace
701	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedFactory.getAnnotation(f,  f.class);  [CE]  cannot  find  symbol  [FE]                                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedFactory.getAnnotation(f,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedFactory.getAnnotation(f,  f.class);	  SerializedName    annotation    =    serializedFactory.getAnnotation(f.class);    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
702	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.class,  f.type);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.class,  f.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.class,  f.type);	  SerializedName    annotation    =    f.getAnnotation(FieldNamingStrategy.class,    f.type);    	non-compiled	[CE]  cannot  find  symbol	115	None	replace
703	[BUG]  [BUGGY]  SerializedName  annotation  =  fields.getAnnotation(FieldNamingStrategy.class,  f.type);  [CE]  type  has  private  access  in  Field  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fields.getAnnotation(FieldNamingStrategy.class,  f.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fields.getAnnotation(FieldNamingStrategy.class,  f.type);	  SerializedName    annotation    =    f.getAnnotation(FieldNamingStrategy.class,    f.type);    	non-compiled	[CE]  type  has  private  access  in  Field	115	None	replace
704	[BUG]  [BUGGY]  ObjectConstructor  constructor  =  fieldNamingPolicy.getConstructor(f,  false);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  ObjectConstructor  constructor  =  fieldNamingPolicy.getConstructor(f,  false);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	ObjectConstructor  constructor  =  fieldNamingPolicy.getConstructor(f,  false);	  ObjectConstructor    constructor    =    fieldNamingPolicy.getConstructor(f);    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
705	[BUG]  [BUGGY]  SerializedName  serializedName  =  f.getAnnotation(SerializedName.class);  [CE]  cannot  find  symbol  annotation  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  serializedName  =  f.getAnnotation(SerializedName.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  serializedName  =  f.getAnnotation(SerializedName.class);	  SerializedName    serializedName    =    f.getAnnotation(serializedName.class);    	non-compiled	[CE]  cannot  find  symbol  annotation	35	None	replace
706	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  this);  [CE]  no  suitable  method  found  for  getAnnotation(Class<SerializedName>,Field,ReflectiveTypeAdapterFactory)  [FE]              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  this);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  this);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f,    deserialized);    	non-compiled	[CE]  no  suitable  method  found  for  getAnnotation(Class<SerializedName>,Field,ReflectiveTypeAdapterFactory)	125	None	replace
707	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  $anonymous1);  [CE]  cannot  find  symbol  $anonymous1  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  $anonymous1);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  $anonymous1);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f,    deserialized);    	non-compiled	[CE]  cannot  find  symbol  $anonymous1	125	None	replace
708	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  value);  [CE]  cannot  find  symbol  value  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  value);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  value);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f,    deserialized);    	non-compiled	[CE]  cannot  find  symbol  value	125	None	replace
709	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(serializedName,  f.class,  null);  [CE]  cannot  find  symbol  serializedName  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(serializedName,  f.class,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(serializedName,  f.class,  null);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    null);    	non-compiled	[CE]  cannot  find  symbol  serializedName	103	None	replace
710	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.class,  null);  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.class,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.class,  null);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    null);    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
711	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  alternates);  [CE]  type  has  private  access  in  Field  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  alternates);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  alternates);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.type,    serializedName);    	non-compiled	[CE]  type  has  private  access  in  Field	6	None	replace
712	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  deserializedName);  [CE]  type  has  private  access  in  Field  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  deserializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  deserializedName);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.type,    serializedName);    	non-compiled	[CE]  type  has  private  access  in  Field	6	None	replace
713	[BUG]  [BUGGY]  SerializedName  annotation  =  this.serialize.getAnnotation(SerializedName.class,  f.name());  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  this.serialize.getAnnotation(SerializedName.class,  f.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  this.serialize.getAnnotation(SerializedName.class,  f.name());	  SerializedName    annotation    =    serialize.getAnnotation(SerializedName.class,    f.name());    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
714	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  this.fieldNamingStrategy.value());  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  this.fieldNamingStrategy.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  this.fieldNamingStrategy.value());	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f.value());    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	86	None	replace
715	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(serializedName.class,  f.value());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(serializedName.class,  f.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(serializedName.class,  f.value());	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f.value());    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
716	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  factory.value());  [CE]  cannot  find  symbol  factory  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  factory.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  factory.value());	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f.value());    	non-compiled	[CE]  cannot  find  symbol  factory	86	None	replace
717	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy.value());  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy.value());	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f.value());    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
718	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  this.serializedName,  null);  [CE]  cannot  find  symbol  serializedName  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  this.serializedName,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  this.serializedName,  null);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName,    null);    	non-compiled	[CE]  cannot  find  symbol  serializedName	12	None	replace
719	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  $anonymous3);  [CE]  cannot  find  symbol  $anonymous3  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  $anonymous3);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  $anonymous3);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    $anonymous1);    	non-compiled	[CE]  cannot  find  symbol  $anonymous3	11	None	replace
720	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  name,  f.type);  [CE]  cannot  find  symbol  name  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  name,  f.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  name,  f.type);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serialize,    f.type);    	non-compiled	[CE]  cannot  find  symbol  name	3	None	replace
721	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  serialize,  f.type);  [CE]  cannot  find  symbol  serialize  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  serialize,  f.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  serialize,  f.type);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serialize,    f.type);    	non-compiled	[CE]  cannot  find  symbol  serialize	3	None	replace
722	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializationName,  f.type);  [CE]  cannot  find  symbol  serializationName  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializationName,  f.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializationName,  f.type);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serialize,    f.type);    	non-compiled	[CE]  cannot  find  symbol  serializationName	3	None	replace
723	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  f.name());  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  f.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  f.name());	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f.name());    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
724	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy.name());  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy.name());	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f.name());    	non-compiled	[CE]  cannot  find  symbol	112	None	replace
725	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  this.fieldNamingStrategy.name());  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  this.fieldNamingStrategy.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  this.fieldNamingStrategy.name());	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f.name());    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	112	None	replace
726	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  factory.name());  [CE]  cannot  find  symbol  factory  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  factory.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  factory.name());	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f.name());    	non-compiled	[CE]  cannot  find  symbol  factory	112	None	replace
727	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(serialize,  f.class);  [CE]  cannot  find  symbol  serialize  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(serialize,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(serialize,  f.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(serializedName,    f.class);    	non-compiled	[CE]  cannot  find  symbol  serialize	43	None	replace
728	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(name,  f.class);  [CE]  cannot  find  symbol  name  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(name,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(name,  f.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(serializedName,    f.class);    	non-compiled	[CE]  cannot  find  symbol  name	43	None	replace
729	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(Factory.class,  f.class);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(Factory.class,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(Factory.class,  f.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(serializedName,    f.class);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
730	[BUG]  [BUGGY]  SerializedName  annotation  =  _objectConstructor.getAnnotation(fieldNamingPolicy,  f);  [CE]  cannot  find  symbol  _objectConstructor  [FE]              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  _objectConstructor.getAnnotation(fieldNamingPolicy,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  _objectConstructor.getAnnotation(fieldNamingPolicy,  f);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    _objectConstructor.class);    	non-compiled	[CE]  cannot  find  symbol  _objectConstructor	127	None	replace
731	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  _objectConstructor,  fieldNamingPolicy.class);  [CE]  cannot  find  symbol  _objectConstructor  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  _objectConstructor,  fieldNamingPolicy.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  _objectConstructor,  fieldNamingPolicy.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    _objectConstructor.class);    	non-compiled	[CE]  cannot  find  symbol  _objectConstructor	127	None	replace
732	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  deserialize);  [CE]  name  has  private  access  in  Field  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  deserialize);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  deserialize);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    serialize);    	non-compiled	[CE]  name  has  private  access  in  Field	82	None	replace
733	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  alternate);  [CE]  name  has  private  access  in  Field  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  alternate);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  alternate);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    serialize);    	non-compiled	[CE]  name  has  private  access  in  Field	82	None	replace
734	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f);  [CE]  name  has  private  access  in  Field  [FE]              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName,    f);    	non-compiled	[CE]  name  has  private  access  in  Field	44	None	replace
735	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  f);  [CE]  no  suitable  method  found  for  getAnnotation(Class<SerializedName>,Field,Field)  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  f);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName,    f);    	non-compiled	[CE]  no  suitable  method  found  for  getAnnotation(Class<SerializedName>,Field,Field)	44	None	replace
736	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.value(),  f);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.value(),  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.value(),  f);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName,    f);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
737	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  null,  f.type);  [CE]  type  has  private  access  in  Field  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  null,  f.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  null,  f.type);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    f.type);    	non-compiled	[CE]  type  has  private  access  in  Field	100	None	replace
738	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  f.type,  f.value());  [CE]  type  has  private  access  in  Field  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  f.type,  f.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  f.type,  f.value());	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    f.type);    	non-compiled	[CE]  type  has  private  access  in  Field	100	None	replace
739	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  f.type,  deserializedName);  [CE]  type  has  private  access  in  Field  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  f.type,  deserializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  f.type,  deserializedName);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    f.type);    	non-compiled	[CE]  type  has  private  access  in  Field	100	None	replace
740	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  f.type,  deserialize);  [CE]  type  has  private  access  in  Field  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  f.type,  deserialize);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  f.type,  deserialize);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    f.type);    	non-compiled	[CE]  type  has  private  access  in  Field	100	None	replace
741	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(serializable.class);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(serializable.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(serializable.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(Serializable.class);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
742	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(Serialized.class);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(Serialized.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(Serialized.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(Serializable.class);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
743	[BUG]  [BUGGY]  SerializedName  annotation  =  this.serialized.getAnnotation(f.class);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  this.serialized.getAnnotation(f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  this.serialized.getAnnotation(f.class);	  SerializedName    annotation    =    serialized.getAnnotation(f.class);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
744	[BUG]  [BUGGY]  SerializedName  annotation  =  this.serialize.getAnnotation(SerializedName.class,  f.name);  [CE]  name  has  private  access  in  Field  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  this.serialize.getAnnotation(SerializedName.class,  f.name);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  this.serialize.getAnnotation(SerializedName.class,  f.name);	  SerializedName    annotation    =    serialize.getAnnotation(SerializedName.class,    f.name);    	non-compiled	[CE]  name  has  private  access  in  Field	51	None	replace
745	[BUG]  [BUGGY]  SerializedName  annotation  =  factory.getAnnotation(SerializedName.class,  f.name);  [CE]  name  has  private  access  in  Field  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  factory.getAnnotation(SerializedName.class,  f.name);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  factory.getAnnotation(SerializedName.class,  f.name);	  SerializedName    annotation    =    serialize.getAnnotation(SerializedName.class,    f.name);    	non-compiled	[CE]  name  has  private  access  in  Field	51	None	replace
746	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  f.value());  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  f.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  f.value());	  SerializedName    annotation    =    f.getAnnotation(FieldNamingStrategy.class,    serializedName);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
747	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  f);  [CE]  no  suitable  method  found  for  getAnnotation(Class<FieldNamingStrategy>,Field)  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  f);	  SerializedName    annotation    =    f.getAnnotation(FieldNamingStrategy.class,    serializedName);    	non-compiled	[CE]  no  suitable  method  found  for  getAnnotation(Class<FieldNamingStrategy>,Field)	22	None	replace
748	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  null);  [CE]  no  suitable  method  found  for  getAnnotation(Class<FieldNamingStrategy>,<null>)  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  null);	  SerializedName    annotation    =    f.getAnnotation(FieldNamingStrategy.class,    serializedName);    	non-compiled	[CE]  no  suitable  method  found  for  getAnnotation(Class<FieldNamingStrategy>,<null>)	22	None	replace
749	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  getFieldNamingPolicy(f,  fieldNamingPolicy);  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  getFieldNamingPolicy(f,  fieldNamingPolicy);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  getFieldNamingPolicy(f,  fieldNamingPolicy);	  FieldNamingStrategy    fieldNamingPolicy    =    getFieldNamingPolicy(f);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
750	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  getFieldNamingPolicy(f.getName());  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  getFieldNamingPolicy(f.getName());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  getFieldNamingPolicy(f.getName());	  FieldNamingStrategy    fieldNamingPolicy    =    getFieldNamingPolicy(f);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
751	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  getFieldNamingPolicy(f.getDeclaringClass());  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  getFieldNamingPolicy(f.getDeclaringClass());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  getFieldNamingPolicy(f.getDeclaringClass());	  FieldNamingStrategy    fieldNamingPolicy    =    getFieldNamingPolicy(f);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
752	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName,  f,  false);  [CE]  cannot  find  symbol  SerializedName  [FE]              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName,  f,  false);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName,  f,  false);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName,    f.class);    	non-compiled	[CE]  cannot  find  symbol  SerializedName	40	None	replace
753	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f.type,  null);  [CE]  type  has  private  access  in  Field  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f.type,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f.type,  null);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.type,    null);    	non-compiled	[CE]  type  has  private  access  in  Field	134	None	replace
754	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  fieldNamingPolicy);  [CE]  type  has  private  access  in  Field  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  fieldNamingPolicy);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  fieldNamingPolicy);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.type,    null);    	non-compiled	[CE]  type  has  private  access  in  Field	134	None	replace
755	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  null,  f.value());  [CE]  type  has  private  access  in  Field  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  null,  f.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  null,  f.value());	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.type,    null);    	non-compiled	[CE]  type  has  private  access  in  Field	134	None	replace
756	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  this);  [CE]  type  has  private  access  in  Field  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  this);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  this);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.type,    null);    	non-compiled	[CE]  type  has  private  access  in  Field	134	None	replace
757	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class),  false);  [CE]  no  suitable  method  found  for  getAnnotation(Class<FieldNamingStrategy>)  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class),  false);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class),  false);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class);    	non-compiled	[CE]  no  suitable  method  found  for  getAnnotation(Class<FieldNamingStrategy>)	19	None	replace
758	[BUG]  [BUGGY]  List  <  String>  annotation  =  fieldNamingPolicy.getFieldNames(f,  this);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  List  <  String>  annotation  =  fieldNamingPolicy.getFieldNames(f,  this);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	List  <  String>  annotation  =  fieldNamingPolicy.getFieldNames(f,  this);	  List    <    String>    annotation    =    fieldNamingPolicy.getFieldNames(f);    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
759	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  null,  f.value());  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  null,  f.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  null,  f.value());	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    f.value());    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
760	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  f.getDeclaredFields(this);  [CE]  cannot  find  symbol  [FE]                                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  f.getDeclaredFields(this);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  f.getDeclaredFields(this);	  FieldNamingStrategy    fieldNamingPolicy    =    f.getDeclaredFields();    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
761	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  f.getDeclaredFields(null);  [CE]  cannot  find  symbol  [FE]                                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  f.getDeclaredFields(null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  f.getDeclaredFields(null);	  FieldNamingStrategy    fieldNamingPolicy    =    f.getDeclaredFields();    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
762	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  f.getDeclaredFields(fieldNamingPolicy);  [CE]  cannot  find  symbol  [FE]                                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  f.getDeclaredFields(fieldNamingPolicy);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  f.getDeclaredFields(fieldNamingPolicy);	  FieldNamingStrategy    fieldNamingPolicy    =    f.getDeclaredFields();    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
763	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  f.getDeclaredFields(this.boundFields);  [CE]  cannot  find  symbol  boundFields  [FE]                                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  f.getDeclaredFields(this.boundFields);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  f.getDeclaredFields(this.boundFields);	  FieldNamingStrategy    fieldNamingPolicy    =    f.getDeclaredFields();    	non-compiled	[CE]  cannot  find  symbol  boundFields	64	None	replace
764	[BUG]  [BUGGY]  FieldNamingPolicy  fieldNamingPolicy  =  f.getDeclaredFields();  [CE]  cannot  find  symbol  [FE]                                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingPolicy  fieldNamingPolicy  =  f.getDeclaredFields();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingPolicy  fieldNamingPolicy  =  f.getDeclaredFields();	  FieldNamingStrategy    fieldNamingPolicy    =    f.getDeclaredFields();    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
765	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  decodeSerializedName.name());  [CE]  cannot  find  symbol  decodeSerializedName  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  decodeSerializedName.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  decodeSerializedName.name());	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName.name());    	non-compiled	[CE]  cannot  find  symbol  decodeSerializedName	24	None	replace
766	[BUG]  [BUGGY]  FieldNamingStrategy  constructor  =  fields.getConstructor();  [CE]  cannot  find  symbol  fields  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  constructor  =  fields.getConstructor();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  constructor  =  fields.getConstructor();	  FieldNamingStrategy    constructor    =    f.getConstructor();    	non-compiled	[CE]  cannot  find  symbol  fields	63	None	replace
767	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.findAnnotation(FunctionNamingStrategy.class);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.findAnnotation(FunctionNamingStrategy.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.findAnnotation(FunctionNamingStrategy.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(FunctionNamingStrategy.class);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
768	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(FunctionNamingStrategy.class),  f);  [CE]  ';'  expected  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(FunctionNamingStrategy.class),  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(FunctionNamingStrategy.class),  f);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(FunctionNamingStrategy.class);    	non-compiled	[CE]  ';'  expected	23	None	replace
769	[BUG]  [BUGGY]  SerializedName  annotation  =  fields.getAnnotation(FunctionNamingStrategy.class);  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fields.getAnnotation(FunctionNamingStrategy.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fields.getAnnotation(FunctionNamingStrategy.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(FunctionNamingStrategy.class);    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
770	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f,  this.class);  [CE]  <identifier>  expected  [FE]            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f,  this.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f,  this.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    f.class);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
771	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f,  fieldNamingStrategy.class);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f,  fieldNamingStrategy.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f,  fieldNamingStrategy.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    f.class);    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
772	[BUG]  [BUGGY]  SerializedName  annotation  =  scope.getAnnotation(SerializedName.class,  this.serializedName);  [CE]  cannot  find  symbol  serializedName  [FE]              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  scope.getAnnotation(SerializedName.class,  this.serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  scope.getAnnotation(SerializedName.class,  this.serializedName);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    this.serializedName);    	non-compiled	[CE]  cannot  find  symbol  serializedName	109	None	replace
773	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  deserialized);  [CE]  cannot  find  symbol  deserialized  [FE]              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  deserialized);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  deserialized);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    _class);    	non-compiled	[CE]  cannot  find  symbol  deserialized	85	None	replace
774	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy,  deserializedName);  [CE]  cannot  find  symbol  deserializedName  [FE]              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy,  deserializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy,  deserializedName);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f,    fieldNamingPolicy);    	non-compiled	[CE]  cannot  find  symbol  deserializedName	96	None	replace
775	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy,  name);  [CE]  cannot  find  symbol  name  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy,  name);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy,  name);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f,    fieldNamingPolicy);    	non-compiled	[CE]  cannot  find  symbol  name	96	None	replace
776	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy,  serialize);  [CE]  cannot  find  symbol  serialize  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy,  serialize);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy,  serialize);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f,    fieldNamingPolicy);    	non-compiled	[CE]  cannot  find  symbol  serialize	96	None	replace
777	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializedName).getAnnotation(f);  [CE]  cannot  find  symbol  serializedName  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializedName).getAnnotation(f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(serializedName).getAnnotation(f);	  SerializedName    annotation    =    serializedName.getAnnotation(f.class);    	non-compiled	[CE]  cannot  find  symbol  serializedName	31	None	replace
778	[BUG]  [BUGGY]  SerializedName  annotation  =  this.serializedName.getAnnotation(f.class);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  this.serializedName.getAnnotation(f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  this.serializedName.getAnnotation(f.class);	  SerializedName    annotation    =    serializedName.getAnnotation(f.class);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
779	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializedName).getAnnotation(f.class);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializedName).getAnnotation(f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(serializedName).getAnnotation(f.class);	  SerializedName    annotation    =    serializedName.getAnnotation(f.class);    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
780	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  deserialize);  [CE]  type  has  private  access  in  Field  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  deserialize);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  deserialize);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.type,    serialize);    	non-compiled	[CE]  type  has  private  access  in  Field	5	None	replace
781	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  equals);  [CE]  type  has  private  access  in  Field  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  equals);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  equals);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.type,    serialize);    	non-compiled	[CE]  type  has  private  access  in  Field	5	None	replace
782	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  this.serializedName.value());  [CE]  cannot  find  symbol  serializedName  [FE]              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  this.serializedName.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  this.serializedName.value());	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName.value());    	non-compiled	[CE]  cannot  find  symbol  serializedName	53	None	replace
783	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  alternates.value());  [CE]  cannot  find  symbol  alternates  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  alternates.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  alternates.value());	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName.value());    	non-compiled	[CE]  cannot  find  symbol  alternates	53	None	replace
784	[BUG]  [BUGGY]  SerializedName  annotation  =  Serializable.getAnnotation(serialize.class);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  Serializable.getAnnotation(serialize.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  Serializable.getAnnotation(serialize.class);	  SerializedName    annotation    =    serialize.getAnnotation(Serializable.class);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
785	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(serialize.class);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(serialize.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(serialize.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(serializedName.class);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
786	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(fieldNamingPolicy,  f.class);  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(fieldNamingPolicy,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(fieldNamingPolicy,  f.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(serializedName.class);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
787	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(fieldNamingPolicy.class,  serializedName);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(fieldNamingPolicy.class,  serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(fieldNamingPolicy.class,  serializedName);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(serializedName.class);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
788	[BUG]  [BUGGY]  SerializedName  annotation  =  ObjectConstructor.getAnnotation(f,  fieldNamingPolicy.class);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  ObjectConstructor.getAnnotation(f,  fieldNamingPolicy.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  ObjectConstructor.getAnnotation(f,  fieldNamingPolicy.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    ObjectConstructor.class);    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
789	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  null,  fieldNamingPolicy);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  null,  fieldNamingPolicy);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  null,  fieldNamingPolicy);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    fieldNamingPolicy);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
790	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingPolicy.class,  null,  serializedName);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingPolicy.class,  null,  serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(FieldNamingPolicy.class,  null,  serializedName);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    fieldNamingPolicy);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
791	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  fieldNamingPolicy,  excluder);  [CE]  no  suitable  method  found  for  getAnnotation(Class<SerializedName>,<null>,FieldNamingStrategy,Excluder)  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  fieldNamingPolicy,  excluder);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  fieldNamingPolicy,  excluder);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    fieldNamingPolicy);    	non-compiled	[CE]  no  suitable  method  found  for  getAnnotation(Class<SerializedName>,<null>,FieldNamingStrategy,Excluder)	102	None	replace
792	[BUG]  [BUGGY]  SerializedName  annotation  =  this.typeFactory.getAnnotation(Serializable.class);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  this.typeFactory.getAnnotation(Serializable.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  this.typeFactory.getAnnotation(Serializable.class);	  SerializedName    annotation    =    typeFactory.getAnnotation(Serializable.class);    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
793	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializeName,  f.name);  [CE]  cannot  find  symbol  serializeName  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializeName,  f.name);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializeName,  f.name);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    serializedName);    	non-compiled	[CE]  cannot  find  symbol  serializeName	129	None	replace
794	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializedName,  f.class,  f.name);  [CE]  cannot  find  symbol  serializedName  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializedName,  f.class,  f.name);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(serializedName,  f.class,  f.name);	  SerializedName    annotation    =    f.getAnnotation(serializedName.class,    f.name);    	non-compiled	[CE]  cannot  find  symbol  serializedName	52	None	replace
795	[BUG]  [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(f.class,  f.name);  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(f.class,  f.name);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialize.getAnnotation(f.class,  f.name);	  SerializedName    annotation    =    f.getAnnotation(serializedName.class,    f.name);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
796	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedNames.getAnnotation(f.class,  f.name);  [CE]  cannot  find  symbol  [FE]                                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedNames.getAnnotation(f.class,  f.name);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedNames.getAnnotation(f.class,  f.name);	  SerializedName    annotation    =    f.getAnnotation(serializedName.class,    f.name);    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
797	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingStrategy.getAnnotation(Serializable.class);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingStrategy.getAnnotation(Serializable.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingStrategy.getAnnotation(Serializable.class);	  SerializedName    annotation    =    scope.getAnnotation(Serializable.class);    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
798	[BUG]  [BUGGY]  SerializedName  annotation  =  scope.getAnnotation(SerializedName.class,  null);  [CE]  cannot  find  symbol  scope  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  scope.getAnnotation(SerializedName.class,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  scope.getAnnotation(SerializedName.class,  null);	  SerializedName    annotation    =    serializedName.getAnnotation(SerializedName.class,    null);    	non-compiled	[CE]  cannot  find  symbol  scope	16	None	replace
799	[BUG]  [BUGGY]  SerializedName  annotation  =  constructor.getAnnotation(SerializedName.class,  null);  [CE]  cannot  find  symbol  constructor  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  constructor.getAnnotation(SerializedName.class,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  constructor.getAnnotation(SerializedName.class,  null);	  SerializedName    annotation    =    serializedName.getAnnotation(SerializedName.class,    null);    	non-compiled	[CE]  cannot  find  symbol  constructor	16	None	replace
800	[BUG]  [BUGGY]  SerializedName  annotation  =  factory.getAnnotation(SerializedName.class,  null);  [CE]  cannot  find  symbol  factory  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  factory.getAnnotation(SerializedName.class,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  factory.getAnnotation(SerializedName.class,  null);	  SerializedName    annotation    =    serializedName.getAnnotation(SerializedName.class,    null);    	non-compiled	[CE]  cannot  find  symbol  factory	16	None	replace
801	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f.value);  [CE]  cannot  find  symbol  value  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f.value);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f.value);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    serializedName);    	non-compiled	[CE]  cannot  find  symbol  value	77	None	replace
802	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  this.type);  [CE]  cannot  find  symbol  type  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  this.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  this.type);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName.type);    	non-compiled	[CE]  cannot  find  symbol  type	4	None	replace
803	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  type);  [CE]  cannot  find  symbol  type  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  type);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName.type);    	non-compiled	[CE]  cannot  find  symbol  type	4	None	replace
804	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  alternates);  [CE]  cannot  find  symbol  alternates  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  alternates);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  alternates);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f,    serializedName);    	non-compiled	[CE]  cannot  find  symbol  alternates	99	None	replace
805	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  unknownName);  [CE]  cannot  find  symbol  unknownName  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  unknownName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  unknownName);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f,    serializedName);    	non-compiled	[CE]  cannot  find  symbol  unknownName	99	None	replace
806	[BUG]  [BUGGY]  SerializedName  annotation  =  serialization.getAnnotation(Serializable.class,  f);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialization.getAnnotation(Serializable.class,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialization.getAnnotation(Serializable.class,  f);	  SerializedName    annotation    =    f.getAnnotation(Serializable.class,    serializedName);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
807	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  _serializedName.name());  [CE]  cannot  find  symbol  _serializedName  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  _serializedName.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  _serializedName.name());	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName.name());    	non-compiled	[CE]  cannot  find  symbol  _serializedName	24	None	replace
808	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  alternates.name());  [CE]  cannot  find  symbol  alternates  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  alternates.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  alternates.name());	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName.name());    	non-compiled	[CE]  cannot  find  symbol  alternates	24	None	replace
809	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  f,  f.getRawClass();  [CE]  ';'  expected  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  f,  f.getRawClass();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  f,  f.getRawClass();	  FieldNamingStrategy    fieldNamingPolicy    =    f.getRawClass();    	non-compiled	[CE]  ';'  expected	60	None	replace
810	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  f.fieldNamingPolicy().getRawClass();  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  f.fieldNamingPolicy().getRawClass();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  f.fieldNamingPolicy().getRawClass();	  FieldNamingStrategy    fieldNamingPolicy    =    f.getRawClass();    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
811	[BUG]  [BUGGY]  SerializedName  annotation  =  factory.getAnnotation(SerializedName.class);  [CE]  cannot  find  symbol  factory  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  factory.getAnnotation(SerializedName.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  factory.getAnnotation(SerializedName.class);	  SerializedName    annotation    =    serializedName.getAnnotation(SerializedName.class);    	non-compiled	[CE]  cannot  find  symbol  factory	41	None	replace
812	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.type,  deserialized);  [CE]  name  has  private  access  in  Field  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.type,  deserialized);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.type,  deserialized);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    f.type);    	non-compiled	[CE]  name  has  private  access  in  Field	80	None	replace
813	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.type,  f.value);  [CE]  name  has  private  access  in  Field  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.type,  f.value);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.type,  f.value);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    f.type);    	non-compiled	[CE]  name  has  private  access  in  Field	80	None	replace
814	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializedName,  f.class,  serializedName);  [CE]  cannot  find  symbol  serializedName  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializedName,  f.class,  serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(serializedName,  f.class,  serializedName);	  SerializedName    annotation    =    f.getAnnotation(serializedName.class,    f);    	non-compiled	[CE]  cannot  find  symbol  serializedName	46	None	replace
815	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  null);  [CE]  name  has  private  access  in  Field  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  null);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serialize,    null);    	non-compiled	[CE]  name  has  private  access  in  Field	14	None	replace
816	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  alternates,  null);  [CE]  cannot  find  symbol  alternates  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  alternates,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  alternates,  null);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serialize,    null);    	non-compiled	[CE]  cannot  find  symbol  alternates	14	None	replace
817	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.value(),  f.type);  [CE]  name  has  private  access  in  Field  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.value(),  f.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.value(),  f.type);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    f.value());    	non-compiled	[CE]  name  has  private  access  in  Field	81	None	replace
818	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.value(),  serializedName);  [CE]  name  has  private  access  in  Field  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.value(),  serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.value(),  serializedName);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    f.value());    	non-compiled	[CE]  name  has  private  access  in  Field	81	None	replace
819	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.value())+  1;  [CE]  name  has  private  access  in  Field  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.value())+  1;  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.value())+  1;	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    f.value());    	non-compiled	[CE]  name  has  private  access  in  Field	81	None	replace
820	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName,  f.class);  [CE]  cannot  find  symbol  SerializedName  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName,  f.class);	  SerializedName    annotation    =    f.getAnnotation(serializedName,    f.class);    	non-compiled	[CE]  cannot  find  symbol  SerializedName	32	None	replace
821	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(class,  f.class);  [CE]  illegal  start  of  expression  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(class,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(class,  f.class);	  SerializedName    annotation    =    f.getAnnotation(serializedName,    f.class);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
822	[BUG]  [BUGGY]  SerializedName  annotation  =  fields[this.fieldNamingPolicy.getAnnotation(Serializable.class);  [CE]  ']'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fields[this.fieldNamingPolicy.getAnnotation(Serializable.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fields[this.fieldNamingPolicy.getAnnotation(Serializable.class);	  SerializedName    annotation    =    this.fieldNamingPolicy.getAnnotation(Serializable.class);    	non-compiled	[CE]  ']'  expected	92	None	replace
823	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  null,  deserializedName);  [CE]  type  has  private  access  in  Field  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  null,  deserializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  null,  deserializedName);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.type,    null);    	non-compiled	[CE]  type  has  private  access  in  Field	134	None	replace
824	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  null,  deserialized);  [CE]  type  has  private  access  in  Field  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  null,  deserialized);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  null,  deserialized);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.type,    null);    	non-compiled	[CE]  type  has  private  access  in  Field	134	None	replace
825	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.value,  deserialized);  [CE]  name  has  private  access  in  Field  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.value,  deserialized);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.value,  deserialized);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    f.value);    	non-compiled	[CE]  name  has  private  access  in  Field	79	None	replace
826	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.value,  alternates);  [CE]  name  has  private  access  in  Field  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.value,  alternates);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.value,  alternates);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    f.value);    	non-compiled	[CE]  name  has  private  access  in  Field	79	None	replace
827	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  f);  [CE]  type  has  private  access  in  Field  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  f);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serialize,    f);    	non-compiled	[CE]  type  has  private  access  in  Field	45	None	replace
828	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  deserializedName,  f);  [CE]  cannot  find  symbol  deserializedName  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  deserializedName,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  deserializedName,  f);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serialize,    f);    	non-compiled	[CE]  cannot  find  symbol  deserializedName	45	None	replace
829	[BUG]  [BUGGY]  SerializedName  annotation  =  f.type.getAnnotation(SerializedName.class,  serializedName);  [CE]  cannot  find  symbol  serializedName  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.type.getAnnotation(SerializedName.class,  serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.type.getAnnotation(SerializedName.class,  serializedName);	  SerializedName    annotation    =    serializedName.getAnnotation(SerializedName.class,    f.type);    	non-compiled	[CE]  cannot  find  symbol  serializedName	2	None	replace
830	[BUG]  [BUGGY]  SerializedName  annotation  =  f.fieldNamingPolicy.getAnnotation(SerializedName.class,  serializedName);  [CE]  cannot  find  symbol  serializedName  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.fieldNamingPolicy.getAnnotation(SerializedName.class,  serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.fieldNamingPolicy.getAnnotation(SerializedName.class,  serializedName);	  SerializedName    annotation    =    serializedName.getAnnotation(SerializedName.class,    f.type);    	non-compiled	[CE]  cannot  find  symbol  serializedName	2	None	replace
831	[BUG]  [BUGGY]  SerializedName  annotation  =  f.serializedName.getAnnotation(SerializedName.class,  serializedName);  [CE]  cannot  find  symbol  serializedName  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.serializedName.getAnnotation(SerializedName.class,  serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.serializedName.getAnnotation(SerializedName.class,  serializedName);	  SerializedName    annotation    =    serializedName.getAnnotation(SerializedName.class,    f.type);    	non-compiled	[CE]  cannot  find  symbol  serializedName	2	None	replace
832	[BUG]  [BUGGY]  FieldNamingStrategy  annotation  =  constructorConstructor.getAnnotation(Constructor.class);  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  annotation  =  constructorConstructor.getAnnotation(Constructor.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  annotation  =  constructorConstructor.getAnnotation(Constructor.class);	  FieldNamingStrategy    annotation    =    f.getAnnotation(Constructor.class);    	non-compiled	[CE]  cannot  find  symbol	121	None	replace
833	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(fieldNamingPolicy.name);  [CE]  cannot  find  symbol  name  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(fieldNamingPolicy.name);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(fieldNamingPolicy.name);	  SerializedName    annotation    =    f.getAnnotation(serializedName);    	non-compiled	[CE]  cannot  find  symbol  name	87	None	replace
834	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  _serializedName.value());  [CE]  cannot  find  symbol  _serializedName  [FE]              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  _serializedName.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  _serializedName.value());	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName.value());    	non-compiled	[CE]  cannot  find  symbol  _serializedName	53	None	replace
835	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  _anonymous0.value());  [CE]  cannot  find  symbol  _anonymous0  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  _anonymous0.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  _anonymous0.value());	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName.value());    	non-compiled	[CE]  cannot  find  symbol  _anonymous0	53	None	replace
836	[BUG]  [BUGGY]  List  <  String>  annotation  =  fieldNamingPolicy.getFieldNames(f,  f.type);  [CE]  type  has  private  access  in  Field  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  List  <  String>  annotation  =  fieldNamingPolicy.getFieldNames(f,  f.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	List  <  String>  annotation  =  fieldNamingPolicy.getFieldNames(f,  f.type);	  List    <    String>    annotation    =    fieldNamingPolicy.getFieldNames(f);    	non-compiled	[CE]  type  has  private  access  in  Field	118	None	replace
837	[BUG]  [BUGGY]  List  <  String>  annotation  =  fieldNamingPolicy.getFieldNames(f,  f.class);  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  List  <  String>  annotation  =  fieldNamingPolicy.getFieldNames(f,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	List  <  String>  annotation  =  fieldNamingPolicy.getFieldNames(f,  f.class);	  List    <    String>    annotation    =    fieldNamingPolicy.getFieldNames(f);    	non-compiled	[CE]  cannot  find  symbol	118	None	replace
838	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  s);  [CE]  cannot  find  symbol  s  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  s);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  s);	  SerializedName    annotation    =    serialize.getAnnotation(SerializedName.class,    f);    	non-compiled	[CE]  cannot  find  symbol  s	10	None	replace
839	[BUG]  [BUGGY]  Collections.  <  String>  boundFields  =  f.getImmediateParentNode();  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  Collections.  <  String>  boundFields  =  f.getImmediateParentNode();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	Collections.  <  String>  boundFields  =  f.getImmediateParentNode();	  Collections.    <    String>    boundFields    =    f.getCollection();    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
840	[BUG]  [BUGGY]  Collections.  <  String>  boundFields  =  f.getImmediateParentPointer();  [CE]  illegal  start  of  expression  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  Collections.  <  String>  boundFields  =  f.getImmediateParentPointer();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	Collections.  <  String>  boundFields  =  f.getImmediateParentPointer();	  Collections.    <    String>    boundFields    =    f.getCollection();    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
841	[BUG]  [BUGGY]  Collections.  <  String>  boundFields  =  f.getCollectionNames();  [CE]  illegal  start  of  expression  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  Collections.  <  String>  boundFields  =  f.getCollectionNames();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	Collections.  <  String>  boundFields  =  f.getCollectionNames();	  Collections.    <    String>    boundFields    =    f.getCollection();    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
842	[BUG]  [BUGGY]  Collections.  <  String>  boundFields  =  f.fieldNames();  [CE]  illegal  start  of  expression  [FE]                                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  Collections.  <  String>  boundFields  =  f.fieldNames();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	Collections.  <  String>  boundFields  =  f.fieldNames();	  Collections.    <    String>    boundFields    =    f.getCollection();    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
843	[BUG]  [BUGGY]  Collections.  <  String>  boundFields  =  f.getRowName();  [CE]  illegal  start  of  expression  [FE]                                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  Collections.  <  String>  boundFields  =  f.getRowName();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	Collections.  <  String>  boundFields  =  f.getRowName();	  Collections.    <    String>    boundFields    =    f.getCollection();    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
844	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  deserialized);  [CE]  type  has  private  access  in  Field  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  deserialized);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  deserialized);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.type,    serialize);    	non-compiled	[CE]  type  has  private  access  in  Field	5	None	replace
845	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  serialize,  deserialized);  [CE]  type  has  private  access  in  Field  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  serialize,  deserialized);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  serialize,  deserialized);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.type,    serialize);    	non-compiled	[CE]  type  has  private  access  in  Field	5	None	replace
846	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  f.type());  [CE]  cannot  find  symbol  [FE]              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  f.type());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  f.type());	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f.value());    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
847	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class,  f.getName()));  [CE]  no  suitable  method  found  for  getAnnotation(Class<FieldNamingStrategy>,String)  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class,  f.getName()));  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class,  f.getName()));	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class);    	non-compiled	[CE]  no  suitable  method  found  for  getAnnotation(Class<FieldNamingStrategy>,String)	19	None	replace
848	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  f.value(),  serializedName);  [CE]  type  has  private  access  in  Field  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  f.value(),  serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  f.value(),  serializedName);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.type,    f.value());    	non-compiled	[CE]  type  has  private  access  in  Field	107	None	replace
849	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  f.value(),  f.unknownType());  [CE]  type  has  private  access  in  Field  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  f.value(),  f.unknownType());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.type,  f.value(),  f.unknownType());	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.type,    f.value());    	non-compiled	[CE]  type  has  private  access  in  Field	107	None	replace
850	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(field,  f.class);  [CE]  cannot  find  symbol  field  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(field,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(field,  f.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(serializedName,    f.class);    	non-compiled	[CE]  cannot  find  symbol  field	43	None	replace
851	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  alternates,  deserialized);  [CE]  name  has  private  access  in  Field  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  alternates,  deserialized);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  alternates,  deserialized);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    alternates);    	non-compiled	[CE]  name  has  private  access  in  Field	130	None	replace
852	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedName,  f.name,  alternates);  [CE]  cannot  find  symbol  serializedName  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedName,  f.name,  alternates);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  serializedName,  f.name,  alternates);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    alternates);    	non-compiled	[CE]  cannot  find  symbol  serializedName	130	None	replace
853	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  alternates,  fieldNamingPolicy);  [CE]  name  has  private  access  in  Field  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  alternates,  fieldNamingPolicy);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  alternates,  fieldNamingPolicy);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.name,    alternates);    	non-compiled	[CE]  name  has  private  access  in  Field	130	None	replace
854	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy,  serializedName);  [CE]  cannot  find  symbol  serializedName  [FE]              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy,  serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  fieldNamingPolicy,  serializedName);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f,    fieldNamingPolicy);    	non-compiled	[CE]  cannot  find  symbol  serializedName	96	None	replace
855	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name(),  null);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name(),  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name(),  null);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName,    null);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
856	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  _serializedName,  null);  [CE]  cannot  find  symbol  _serializedName  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  _serializedName,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  _serializedName,  null);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName,    null);    	non-compiled	[CE]  cannot  find  symbol  _serializedName	12	None	replace
857	[BUG]  [BUGGY]  SerializedName  serializedName  =  f.getAnnotation(serializedName,  this.class);  [CE]  <identifier>  expected  [FE]                                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  serializedName  =  f.getAnnotation(serializedName,  this.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  serializedName  =  f.getAnnotation(serializedName,  this.class);	  SerializedName    serializedName    =    f.getAnnotation(serializedName,    f.class);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
858	[BUG]  [BUGGY]  SerializedName  annotation  =  constructorConstructor.getAnnotation(f,  fieldNamingPolicy);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  constructorConstructor.getAnnotation(f,  fieldNamingPolicy);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  constructorConstructor.getAnnotation(f,  fieldNamingPolicy);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    ObjectConstructor.class);    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
859	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f.type,  this);  [CE]  type  has  private  access  in  Field  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f.type,  this);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f.type,  this);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f.type);    	non-compiled	[CE]  type  has  private  access  in  Field	106	None	replace
860	[BUG]  [BUGGY]  SerializedName  annotation  =  f.fieldNamingPolicy.getAnnotation(SerializedName.class,  f.type);  [CE]  type  has  private  access  in  Field  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.fieldNamingPolicy.getAnnotation(SerializedName.class,  f.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.fieldNamingPolicy.getAnnotation(SerializedName.class,  f.type);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f.type);    	non-compiled	[CE]  type  has  private  access  in  Field	106	None	replace
861	[BUG]  [BUGGY]  SerializedName  annotation  =  f.name.getAnnotation(SerializedName.class,  serializedName);  [CE]  cannot  find  symbol  serializedName  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.name.getAnnotation(SerializedName.class,  serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.name.getAnnotation(SerializedName.class,  serializedName);	  SerializedName    annotation    =    serializedName.getAnnotation(SerializedName.class,    f.name);    	non-compiled	[CE]  cannot  find  symbol  serializedName	48	None	replace
862	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializedNames);  [CE]  cannot  find  symbol  serializedNames  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(serializedNames);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(serializedNames);	  SerializedName    annotation    =    serializedNames.getAnnotation(f.class);    	non-compiled	[CE]  cannot  find  symbol  serializedNames	124	None	replace
863	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  f.type,  deserialized);  [CE]  type  has  private  access  in  Field  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  f.type,  deserialized);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  f.type,  deserialized);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    f.type);    	non-compiled	[CE]  type  has  private  access  in  Field	100	None	replace
864	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.class,  null,  serializedName);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.class,  null,  serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.class,  null,  serializedName);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    f.type);    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
865	[BUG]  [BUGGY]  SerializedName  annotation  =  f.serialize.getAnnotation(SerializedName.class,  f.name);  [CE]  name  has  private  access  in  Field  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.serialize.getAnnotation(SerializedName.class,  f.name);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.serialize.getAnnotation(SerializedName.class,  f.name);	  SerializedName    annotation    =    serialize.getAnnotation(SerializedName.class,    f.name);    	non-compiled	[CE]  name  has  private  access  in  Field	51	None	replace
866	[BUG]  [BUGGY]  SerializedName  annotation  =  f.name.getAnnotation(SerializedName.class,  serialize);  [CE]  cannot  find  symbol  serialize  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.name.getAnnotation(SerializedName.class,  serialize);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.name.getAnnotation(SerializedName.class,  serialize);	  SerializedName    annotation    =    serialize.getAnnotation(SerializedName.class,    f.name);    	non-compiled	[CE]  cannot  find  symbol  serialize	51	None	replace
867	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName,  f,  true);  [CE]  cannot  find  symbol  SerializedName  [FE]              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName,  f,  true);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName,  f,  true);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName,    f.class);    	non-compiled	[CE]  cannot  find  symbol  SerializedName	40	None	replace
868	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  _serializedName,  f);  [CE]  cannot  find  symbol  _serializedName  [FE]              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  _serializedName,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  _serializedName,  f);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName,    f);    	non-compiled	[CE]  cannot  find  symbol  _serializedName	44	None	replace
869	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  id,  f);  [CE]  cannot  find  symbol  id  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  id,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  id,  f);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName,    f);    	non-compiled	[CE]  cannot  find  symbol  id	44	None	replace
870	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.serializedName,  f);  [CE]  cannot  find  symbol  serializedName  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.serializedName,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.serializedName,  f);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName,    f);    	non-compiled	[CE]  cannot  find  symbol  serializedName	44	None	replace
871	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  getFieldNamingPolicyFor(f);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  getFieldNamingPolicyFor(f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  getFieldNamingPolicyFor(f);	  FieldNamingStrategy    fieldNamingPolicy    =    getFieldNamingPolicy();    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
872	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  getFieldNamingPolicy(f.getAccessible());  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  getFieldNamingPolicy(f.getAccessible());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  getFieldNamingPolicy(f.getAccessible());	  FieldNamingStrategy    fieldNamingPolicy    =    getFieldNamingPolicy();    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
873	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  alternates);  [CE]  cannot  find  symbol  alternates  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  alternates);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  alternates);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    serializedName);    	non-compiled	[CE]  cannot  find  symbol  alternates	77	None	replace
874	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  alternate);  [CE]  cannot  find  symbol  alternate  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  alternate);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  alternate);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    serializedName);    	non-compiled	[CE]  cannot  find  symbol  alternate	77	None	replace
875	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  alternate);  [CE]  cannot  find  symbol  alternate  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  alternate);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  alternate);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f,    serializedName);    	non-compiled	[CE]  cannot  find  symbol  alternate	99	None	replace
876	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  equals);  [CE]  cannot  find  symbol  equals  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  equals);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  equals);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f,    serializedName);    	non-compiled	[CE]  cannot  find  symbol  equals	99	None	replace
877	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  delegate);  [CE]  cannot  find  symbol  delegate  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  delegate);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f,  delegate);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f,    serializedName);    	non-compiled	[CE]  cannot  find  symbol  delegate	99	None	replace
878	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.findAnnotation(FieldNamingStrategy.class,  f);  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.findAnnotation(FieldNamingStrategy.class,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.findAnnotation(FieldNamingStrategy.class,  f);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(FieldNamingStrategy.class);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
879	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f,  f.type());  [CE]  cannot  find  symbol  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f,  f.type());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedName.getAnnotation(SerializedName.class,  f,  f.type());	  SerializedName    annotation    =    serializedName.getAnnotation(SerializedName.class,    f.value());    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
880	[BUG]  [BUGGY]  ObjectConstructor  constructor  =  f.construct(this);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  ObjectConstructor  constructor  =  f.construct(this);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	ObjectConstructor  constructor  =  f.construct(this);	  ObjectConstructor    constructor    =    f.getConstructor();    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
881	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.asSerializedName);  [CE]  name  has  private  access  in  Field  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.asSerializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.asSerializedName);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName,    f.name);    	non-compiled	[CE]  name  has  private  access  in  Field	47	None	replace
882	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.serialization);  [CE]  name  has  private  access  in  Field  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.serialization);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.name,  f.serialization);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName,    f.name);    	non-compiled	[CE]  name  has  private  access  in  Field	47	None	replace
883	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.serializedName);  [CE]  cannot  find  symbol  serializedName  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.serializedName);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.value);    	non-compiled	[CE]  cannot  find  symbol  serializedName	83	None	replace
884	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.serializers);  [CE]  cannot  find  symbol  serializers  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.serializers);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  f.serializers);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    f.value);    	non-compiled	[CE]  cannot  find  symbol  serializers	83	None	replace
885	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  this.serializedName);  [CE]  cannot  find  symbol  serializedName  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  this.serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  this.serializedName);	  SerializedName    annotation    =    f.getAnnotation(FieldNamingStrategy.class,    serializedName);    	non-compiled	[CE]  cannot  find  symbol  serializedName	22	None	replace
886	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  alternates);  [CE]  cannot  find  symbol  alternates  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  alternates);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(FieldNamingStrategy.class,  alternates);	  SerializedName    annotation    =    f.getAnnotation(FieldNamingStrategy.class,    serializedName);    	non-compiled	[CE]  cannot  find  symbol  alternates	22	None	replace
887	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  $anonymous1,  f);  [CE]  cannot  find  symbol  $anonymous1  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  $anonymous1,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  $anonymous1,  f);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    $anonymous1);    	non-compiled	[CE]  cannot  find  symbol  $anonymous1	11	None	replace
888	[BUG]  [BUGGY]  SerializedName  annotation  =  scope.getAnnotation(SerializedName.class,  f.serializedName);  [CE]  cannot  find  symbol  serializedName  [FE]              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  scope.getAnnotation(SerializedName.class,  f.serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  scope.getAnnotation(SerializedName.class,  f.serializedName);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    this.serializedName);    	non-compiled	[CE]  cannot  find  symbol  serializedName	109	None	replace
889	[BUG]  [BUGGY]  SerializedName  annotation  =  this.serializer.getAnnotation(SerializedName.class,  f);  [CE]  cannot  find  symbol  serializer  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  this.serializer.getAnnotation(SerializedName.class,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  this.serializer.getAnnotation(SerializedName.class,  f);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    this.serializedName);    	non-compiled	[CE]  cannot  find  symbol  serializer	109	None	replace
890	[BUG]  [BUGGY]  SerializedName  annotation  =  this.fieldNamingPolicy.getAnnotation(SerializedName.class,  f.serializedName);  [CE]  cannot  find  symbol  serializedName  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  this.fieldNamingPolicy.getAnnotation(SerializedName.class,  f.serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  this.fieldNamingPolicy.getAnnotation(SerializedName.class,  f.serializedName);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    this.serializedName);    	non-compiled	[CE]  cannot  find  symbol  serializedName	109	None	replace
891	[BUG]  [BUGGY]  SerializedName  annotation  =  typeFactory.getAnnotation(SerializedName.class,  f);  [CE]  cannot  find  symbol  typeFactory  [FE]                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  typeFactory.getAnnotation(SerializedName.class,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  typeFactory.getAnnotation(SerializedName.class,  f);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    deserializedName);    	non-compiled	[CE]  cannot  find  symbol  typeFactory	9	None	replace
892	[BUG]  [BUGGY]  SerializedName  annotation  =  deserialized.getAnnotation(SerializedName.class,  f.value());  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  deserialized.getAnnotation(SerializedName.class,  f.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  deserialized.getAnnotation(SerializedName.class,  f.value());	  SerializedName    annotation    =    serialized.getAnnotation(SerializedName.class,    f.value());    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
893	[BUG]  [BUGGY]  List  <  String>  annotation  =  constructorConstructor.getAnnotation(Function.class);  [CE]  cannot  find  symbol  [FE]                                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  List  <  String>  annotation  =  constructorConstructor.getAnnotation(Function.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	List  <  String>  annotation  =  constructorConstructor.getAnnotation(Function.class);	  List    <    String>    annotation    =    f.getAnnotation(Constructor.class);    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
894	[BUG]  [BUGGY]  Collection  <  String>  annotation  =  constructor.getAnnotation(Constructor.class);  [CE]  cannot  find  symbol  [FE]                                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  Collection  <  String>  annotation  =  constructor.getAnnotation(Constructor.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	Collection  <  String>  annotation  =  constructor.getAnnotation(Constructor.class);	  List    <    String>    annotation    =    f.getAnnotation(Constructor.class);    	non-compiled	[CE]  cannot  find  symbol	122	None	replace
895	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  _serializedName.type);  [CE]  cannot  find  symbol  _serializedName  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  _serializedName.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  _serializedName.type);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName.type);    	non-compiled	[CE]  cannot  find  symbol  _serializedName	4	None	replace
896	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  Object.class);  [CE]  no  suitable  method  found  for  getAnnotation(Class<SerializedName>,Class<Object>)  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  Object.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  Object.class);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName.type);    	non-compiled	[CE]  no  suitable  method  found  for  getAnnotation(Class<SerializedName>,Class<Object>)	4	None	replace
897	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  _type);  [CE]  cannot  find  symbol  _type  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  _type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  _type);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serializedName.type);    	non-compiled	[CE]  cannot  find  symbol  _type	4	None	replace
898	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class),  f,  deserialized);  [CE]  ';'  expected  [FE]              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class),  f,  deserialized);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class),  f,  deserialized);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class),    f);    	non-compiled	[CE]  ';'  expected	105	None	replace
899	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.findAnnotation(Serializable.class);  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.findAnnotation(Serializable.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.findAnnotation(Serializable.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(Serializable.class);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
900	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.findAnnotation(Serializable.class,  f);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.findAnnotation(Serializable.class,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.findAnnotation(Serializable.class,  f);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(Serializable.class);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
901	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f.fieldNamingStrategy);  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f.fieldNamingStrategy);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f.fieldNamingStrategy);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    this.fieldNamingStrategy);    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	126	None	replace
902	[BUG]  [BUGGY]  SerializedName  annotation  =  this.fieldNamingStrategy.getAnnotation(f,  f);  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  this.fieldNamingStrategy.getAnnotation(f,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  this.fieldNamingStrategy.getAnnotation(f,  f);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    this.fieldNamingStrategy);    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	126	None	replace
903	[BUG]  [BUGGY]  SerializedName  serializedName  =  serializer.getAnnotation(f.class);  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  serializedName  =  serializer.getAnnotation(f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  serializedName  =  serializer.getAnnotation(f.class);	  SerializedName    serializedName    =    f.getAnnotation(serializedName.class);    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
904	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  getFieldNamingPolicy(f,  f.class);  [CE]  cannot  find  symbol  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  getFieldNamingPolicy(f,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  getFieldNamingPolicy(f,  f.class);	  FieldNamingStrategy    fieldNamingPolicy    =    getFieldNamingPolicy(f);    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
905	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  deserialize);  [CE]  cannot  find  symbol  deserialize  [FE]            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  deserialize);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f,  deserialize);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    f);    	non-compiled	[CE]  cannot  find  symbol  deserialize	39	None	replace
906	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.findAnnotation(Factory.class,  f);  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.findAnnotation(Factory.class,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.findAnnotation(Factory.class,  f);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(Factory.class);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
907	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.findAnnotation(Factory.class);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.findAnnotation(Factory.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.findAnnotation(Factory.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(Factory.class);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
908	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class),  f.value());  [CE]  no  suitable  method  found  for  getAnnotation(Class<FieldNamingStrategy>)  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class),  f.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class),  f.value());	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f.getAnnotation(FieldNamingStrategy.class));    	non-compiled	[CE]  no  suitable  method  found  for  getAnnotation(Class<FieldNamingStrategy>)	21	None	replace
909	[BUG]  [BUGGY]  FieldNamingStrategy  annotation  =  fieldNamingPolicy.getAnnotation(f,  f.class);  [CE]  cannot  find  symbol  [FE]                              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  annotation  =  fieldNamingPolicy.getAnnotation(f,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  annotation  =  fieldNamingPolicy.getAnnotation(f,  f.class);	  FieldNamingStrategy    annotation    =    fieldNamingPolicy.getAnnotation(f);    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
910	[BUG]  [BUGGY]  FieldNamingStrategy  annotation  =  fieldNamingPolicy.getAnnotation(f,  f.intern());  [CE]  cannot  find  symbol  [FE]                                ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  annotation  =  fieldNamingPolicy.getAnnotation(f,  f.intern());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  annotation  =  fieldNamingPolicy.getAnnotation(f,  f.intern());	  FieldNamingStrategy    annotation    =    fieldNamingPolicy.getAnnotation(f);    	non-compiled	[CE]  cannot  find  symbol	120	None	replace
911	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName,  f.class,  serializedName);  [CE]  cannot  find  symbol  SerializedName  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName,  f.class,  serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName,  f.class,  serializedName);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    serializedName);    	non-compiled	[CE]  cannot  find  symbol  SerializedName	42	None	replace
912	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f));  [CE]  ';'  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f));  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f));	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    serializedName);    	non-compiled	[CE]  ';'  expected	42	None	replace
913	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f;  [CE]  ')'  expected  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f;  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  f;	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(SerializedName.class,    serializedName);    	non-compiled	[CE]  ')'  expected	42	None	replace
914	[BUG]  [BUGGY]  List  <  String>  fieldNames  =  f.getFieldNames(this);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  List  <  String>  fieldNames  =  f.getFieldNames(this);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	List  <  String>  fieldNames  =  f.getFieldNames(this);	  List    <    String>    fieldNames    =    f.getFieldNames();    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
915	[BUG]  [BUGGY]  List  <  String>  fieldNames  =  f.getFieldNames(field);  [CE]  cannot  find  symbol  field  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  List  <  String>  fieldNames  =  f.getFieldNames(field);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	List  <  String>  fieldNames  =  f.getFieldNames(field);	  List    <    String>    fieldNames    =    f.getFieldNames();    	non-compiled	[CE]  cannot  find  symbol  field	89	None	replace
916	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  f,  f.getDeclaredFields();  [CE]  ';'  expected  [FE]                                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  f,  f.getDeclaredFields();  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  f,  f.getDeclaredFields();	  FieldNamingStrategy    fieldNamingPolicy    =    f.getDeclaredFields();    	non-compiled	[CE]  ';'  expected	64	None	replace
917	[BUG]  [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  f.getDeclaredFields(true);  [CE]  cannot  find  symbol  [FE]                                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  fieldNamingPolicy  =  f.getDeclaredFields(true);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  fieldNamingPolicy  =  f.getDeclaredFields(true);	  FieldNamingStrategy    fieldNamingPolicy    =    f.getDeclaredFields();    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
918	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  s.value());  [CE]  cannot  find  symbol  s  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  s.value());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  s.value());	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    serialize.value());    	non-compiled	[CE]  cannot  find  symbol  s	58	None	replace
919	[BUG]  [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(serializedName.class);  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serialize.getAnnotation(serializedName.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serialize.getAnnotation(serializedName.class);	  SerializedName    annotation    =    scope.getAnnotation(serializedName.class);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
920	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName,  f.class,  null);  [CE]  cannot  find  symbol  SerializedName  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName,  f.class,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName,  f.class,  null);	  SerializedName    annotation    =    f.getAnnotation(serializedName,    f.class,    null);    	non-compiled	[CE]  cannot  find  symbol  SerializedName	15	None	replace
921	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(class,  f.class,  null);  [CE]  illegal  start  of  expression  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(class,  f.class,  null);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(class,  f.class,  null);	  SerializedName    annotation    =    f.getAnnotation(serializedName,    f.class,    null);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
922	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(fieldNamingStrategy.class);  [CE]  cannot  find  symbol  [FE]            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(fieldNamingStrategy.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(fieldNamingStrategy.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(serializedName.class);    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
923	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.findAnnotation(serializedName,  f.class);  [CE]  cannot  find  symbol  serializedName  [FE]              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.findAnnotation(serializedName,  f.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.findAnnotation(serializedName,  f.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(serializedName.class);    	non-compiled	[CE]  cannot  find  symbol  serializedName	104	None	replace
924	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  null,  serializedName);  [CE]  cannot  find  symbol  serializedName  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  null,  serializedName);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(SerializedName.class,  null,  serializedName);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    fieldNamingPolicy);    	non-compiled	[CE]  cannot  find  symbol  serializedName	102	None	replace
925	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(serializedName.class,  null,  f);  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(serializedName.class,  null,  f);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(serializedName.class,  null,  f);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    fieldNamingPolicy);    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
926	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  alternate);  [CE]  cannot  find  symbol  alternate  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  alternate);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  alternate);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    serializedName);    	non-compiled	[CE]  cannot  find  symbol  alternate	13	None	replace
927	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  f.name());  [CE]  cannot  find  symbol  [FE]                      ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  f.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  f.name());	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    f.value());    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
928	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  f.type());  [CE]  cannot  find  symbol  [FE]                        ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  f.type());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  null,  f.type());	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    null,    f.value());    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
929	[BUG]  [BUGGY]  FieldNamingStrategy  annotation  =  f.getAnnotation(JsonString.class,  f.type);  [CE]  cannot  find  symbol  [FE]                                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  FieldNamingStrategy  annotation  =  f.getAnnotation(JsonString.class,  f.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	FieldNamingStrategy  annotation  =  f.getAnnotation(JsonString.class,  f.type);	  FieldNamingStrategy    annotation    =    f.getAnnotation(JsonString.class);    	non-compiled	[CE]  cannot  find  symbol	123	None	replace
930	[BUG]  [BUGGY]  SerializedName  annotation  =  serializedFactory.getAnnotation(SerializedName.class,  f,  this.fieldNamingPolicy.name());  [CE]  cannot  find  symbol  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  serializedFactory.getAnnotation(SerializedName.class,  f,  this.fieldNamingPolicy.name());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  serializedFactory.getAnnotation(SerializedName.class,  f,  this.fieldNamingPolicy.name());	  SerializedName    annotation    =    serializedFactory.getAnnotation(SerializedName.class,    f.name());    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
931	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f.fieldNamingStrategy());  [CE]  cannot  find  symbol  [FE]                  ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f.fieldNamingStrategy());  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f.fieldNamingStrategy());	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    this.fieldNamingStrategy.class);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
932	[BUG]  [BUGGY]  ObjectConstructor  constructor  =  fieldNamingPolicy.getConstructor(f,  f.type);  [CE]  type  has  private  access  in  Field  [FE]                          ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  ObjectConstructor  constructor  =  fieldNamingPolicy.getConstructor(f,  f.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	ObjectConstructor  constructor  =  fieldNamingPolicy.getConstructor(f,  f.type);	  ObjectConstructor    constructor    =    fieldNamingPolicy.getConstructor(f);    	non-compiled	[CE]  type  has  private  access  in  Field	90	None	replace
933	[BUG]  [BUGGY]  ObjectConstructor  constructor  =  fieldNamingPolicy.getConstructor(f,  _typeFactory);  [CE]  cannot  find  symbol  _typeFactory  [FE]                            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  ObjectConstructor  constructor  =  fieldNamingPolicy.getConstructor(f,  _typeFactory);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	ObjectConstructor  constructor  =  fieldNamingPolicy.getConstructor(f,  _typeFactory);	  ObjectConstructor    constructor    =    fieldNamingPolicy.getConstructor(f);    	non-compiled	[CE]  cannot  find  symbol  _typeFactory	90	None	replace
934	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f,  this.fieldNamingStrategy);  [CE]  cannot  find  symbol  fieldNamingStrategy  [FE]            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f,  this.fieldNamingStrategy);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  f,  this.fieldNamingStrategy);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    f.class);    	non-compiled	[CE]  cannot  find  symbol  fieldNamingStrategy	72	None	replace
935	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.findAnnotation(f,  FieldNamingStrategy.class);  [CE]  cannot  find  symbol  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.findAnnotation(f,  FieldNamingStrategy.class);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.findAnnotation(f,  FieldNamingStrategy.class);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    FieldNamingStrategy.class);    	non-compiled	[CE]  cannot  find  symbol	20	None	replace
936	[BUG]  [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  this.fieldNames);  [CE]  cannot  find  symbol  fieldNames  [FE]            ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  this.fieldNames);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  f.getAnnotation(SerializedName.class,  this.fieldNames);	  SerializedName    annotation    =    f.getAnnotation(SerializedName.class,    alternates);    	non-compiled	[CE]  cannot  find  symbol  fieldNames	108	None	replace
937	[BUG]  [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  this.class,  f.type);  [CE]  <identifier>  expected  [FE]                    ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  this.class,  f.type);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  fieldNamingPolicy.getAnnotation(f,  this.class,  f.type);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    this.class);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
938	[BUG]  [BUGGY]  SerializedName  annotation  =  _objectConstructor.getAnnotation(f,  fieldNamingPolicy);  [CE]  cannot  find  symbol  _objectConstructor  [FE]              ComparisonFailure      [CONTEXT]      private  List<String>  getFieldNames(Field  f)  {      [BUGGY]  SerializedName  annotation  =  _objectConstructor.getAnnotation(f,  fieldNamingPolicy);  [BUGGY]      if  (annotation  ==  null)  {  String  name  =  fieldNamingPolicy.translateName(f);  return  Collections.singletonList(name);  }  String  serializedName  =  annotation.value();  String[]  alternates  =  annotation.alternate();  if  (alternates.length  ==  0)  {  return  Collections.singletonList(serializedName);  }  [CLASS]  ReflectiveTypeAdapterFactory  1  BoundField  Adapter  [METHOD]  getFieldNames  [RETURN_TYPE]  List  Field  f  [VARIABLES]  ConstructorConstructor  constructorConstructor  Field  f  boolean  $anonymous1  $anonymous2  deserialized  serialize  serialized  SerializedName  annotation  ObjectConstructor  constructor  List  fieldNames  String  $anonymous0  alternate  name  serializedName  String[]  alternates  Excluder  excluder  Map  boundFields  FieldNamingStrategy  fieldNamingPolicy  	projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java	0.3333333333333333	72	72	1	replace	SerializedName  annotation  =  _objectConstructor.getAnnotation(f,  fieldNamingPolicy);	  SerializedName    annotation    =    fieldNamingPolicy.getAnnotation(f,    _objectConstructor.class);    	non-compiled	[CE]  cannot  find  symbol  _objectConstructor	127	None	replace
