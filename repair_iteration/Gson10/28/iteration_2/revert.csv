projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&raw!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||declaredType.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null?null:raw.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=Object.class&&declaredType.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.isAssignableFrom(raw)){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.getSuperclass()!=context.getSuperclass()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.isArray()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&raw!=Object.class){while(raw!=null&&raw!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&raw!=Object.class){while(raw!=null&&raw>=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&raw!=Object.class){Field[]fields=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&raw!=Object.class){while(raw!=null&&raw==Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&raw!=Object.class){while(raw==null&&raw!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&raw!=Object.class){While(raw!=null&&raw!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&raw!=Object.class){while(raw!=null&&raw>>Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType==Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Field.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Type.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null&&declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||declaredType==Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null||declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||raw!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null){while(raw!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null){while(raw!=null&&declaredType.getGenericType()!=type.getGenericType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null){while(raw!=null&&declaredType.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null){while(raw!=null&&declaredType.getGenericType()==type.getGenericType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null){while(raw!=null&&declaredType.equals(type.getGenericType())){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null){while(raw!=null&&declaredType.getGenericType()!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null){while(raw!=null&&declaredType.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null){while(raw!=null&&declaredType.getDeclaredFields().length>0){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Object.class){while(raw!=null&&declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Object.class){Field[]fields=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Object.class){while(raw==null&&declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Object.class){while(raw!=null&&declaredType==Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Object.class){while(raw!=null&&declaredType>=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Object.class){While(raw!=null&&declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Object.class){for(raw!=null&&declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||declaredType!=Object.class){while(raw!=null||declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||declaredType!=Object.class){while(raw==null||declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||declaredType!=Object.class){Field[]fields=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||declaredType!=Object.class){while(raw!=null||declaredType==Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||declaredType!=Object.class){While(raw!=null||declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||declaredType!=Object.class){Field[]fieldNames=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||declaredType!=Object.class){while(raw!=null||declaredType>=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null||raw.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&declaredType.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(type!=null||declaredType.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=type.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Constructor<?>factory=context.getConstructor();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=raw.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Constructor<?>constructor=context.getConstructor();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=context.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Collections.sort(result);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148result.put(type,declaredType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(type!=null&&declaredType.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(context!=null&&declaredType.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(result!=null&&declaredType.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(constructor!=null&&declaredType.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null?null:raw,declaredType.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null?null:declaredType.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null?null:raw.type.getRawClass()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null?null:raw.getClass()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=Object.class&&raw.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(type!=Object.class&&declaredType.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(constructor!=Object.class&&declaredType.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(class!=Object.class&&declaredType.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(collection!=Object.class&&declaredType.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null){Field[]fields=raw.getDeclaredFields();for(inti=0;i<fields.length;i++){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null){Field[]fields=raw.getDeclaredFields();for(inti=0;i<fields.length;++i){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null){Field[]fields=raw.getDeclaredFields();while(raw!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null){Field[]fields=raw.getDeclaredFields();for(inti=0;i<fields.size();i++){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null){Field[]fields=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null){Field[]fields=raw.getDeclaredFields();for(inti=0;i<fields.size();++i){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null){Field[]fields=raw.getDeclaredFields();for(inti=0;i<fieldNames.length;i++){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Object.class){Field[]fields=raw.getDeclaredFields();while(raw!=null&&declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Object.class){Field[]fieldNames=raw.getDeclaredFields();while(raw!=null&&declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null&&declaredType!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType==null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(excludedType!=null&&declaredType.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&raw!=Object.class){Field[]fieldNames=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&raw!=Object.class){Field[]fields=raw.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&raw!=Object.class){Field[]raw=context.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&raw!=Object.class){Field[]fieldNames=raw.getFieldNames();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||declaredType!=Object.class){Field[]fields=raw.getDeclaredFields();while(raw!=null||declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||declaredType!=Object.class){Field[]fieldNames=raw.getDeclaredFields();while(raw!=null||declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148ObjectConstructorconstructor=context.getObjectConstructor();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Constructor<?>factory=context.getConstructor(declaredType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&raw!=Object.class){while(raw>=null&&raw!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=Object.class&&declaredType.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||declaredType!=Object.class){while(raw>=null||declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||declaredType!=Object.class){while(raw!=null||declaredType>>Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.isUnknownType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.isAssignableFrom(type)){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Object.class){while(raw!=null&&declaredType>>Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Object.class){while(raw>=null&&declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=declaredType.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148result.put(type.getName(),declaredType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=declaredType.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null){while(raw!=null&&declaredType.getGenericType()!=context.getGenericType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null){while(raw!=null&&declaredType.isAssignableFrom(type)){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null){while(raw!=null&&declaredType.getGenericType()==null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(resolvedType!=null&&declaredType.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fieldNames=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Object.class){Field[]fieldNames=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(fieldNames!=null||declaredType!=Object.class){Field[]fieldNames=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(fieldNames==null||declaredType!=Object.class){Field[]fieldNames=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(fieldNames!=null||declaredType!=Object.class){Field[]rawFields=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw.isUnknownType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(type!=null&&declaredType.isUnknownType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(result!=null&&declaredType.isUnknownType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(constructor!=null&&declaredType.isUnknownType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType==null&&raw.isUnknownType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&declaredType.isUnknownType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(delimatedType!=null&&raw.isUnknownType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType==Field.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=raw.getDeclaredFields();for(inti=0;i<fields.size();i++){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=declaredType.getDeclaredFields();for(inti=0;i<fields.size();i++){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=context.getDeclaredFields();for(inti=0;i<fields.size();i++){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=raw.getDeclaredFields();for(inti=0;i<fieldNames.size();i++){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=field.getDeclaredFields();for(inti=0;i<fields.size();i++){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=declaredType.getFields();for(inti=0;i<fields.size();i++){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=result.getDeclaredFields();for(inti=0;i<fields.size();i++){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(fieldNames!=null||declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(fieldNames==null||declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Constructor<?>factory=context.getConstructor(type);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Constructor<?>factory=context.getConstructor(declaredType,raw);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Constructor<?>factory=context.getConstructor(declaredType,field);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Constructor<?>factory=declaredType.getConstructor();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Constructor<?>factory=context.getConstructor(type,declaredType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Constructor<?>factory=type.getConstructor(declaredType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||declaredType!=Field.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Collections.sort(result,declaredType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Collections.sort(boundFields);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Collections.sort(declaredType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Collections.sort(fieldNames);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Collections.sort(fields);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Collections.sort(sortedType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw.getDeclaredFields().length>0){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw.isConstructor()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw.getDeclaredFields().size()>0){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw.isFunction()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw.getDeclaredFields().isEmpty()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=raw.getDeclaredFields();for(inti=0;i<fields.size();++i){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=declaredType.getDeclaredFields();for(inti=0;i<fields.size();++i){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=context.getDeclaredFields();for(inti=0;i<fields.size();++i){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=raw.getDeclaredFields();for(inti=0;i<fieldNames.size();++i){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=field.getDeclaredFields();for(inti=0;i<fields.size();++i){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=result.getDeclaredFields();for(inti=0;i<fields.size();++i){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=declaredType.getFields();for(inti=0;i<fields.size();++i){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw==null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(result==null&&declaredType!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||declaredType!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw!=null&&declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(type!=null&&declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType==null&&raw.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(type!=null&&raw.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=Object.class&&raw.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=Object.class||raw.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType==Object.class&&raw.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&declaredType.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(class!=Object.class&&declaredType.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Constructor<?>factory=type.getConstructor();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Constructor<?>factory=raw.getConstructor();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Constructor<?>factory=field.getConstructor();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null?null:declaredType.getRawClass()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null?null:raw.getRawClass()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null?null:raw.type.getRawClass()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=context.getFields(declaredType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=context.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=type.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=result.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null?null:raw.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null?null:declaredType.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(type!=null?null:declaredType.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=field.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=sortedType.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=Object.class&&raw.isPrimitive()){while(declaredType!=Object.class&&raw.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=Object.class&&raw.isPrimitive()){while(declaredType>=Object.class&&raw.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=Object.class&&raw.isPrimitive()){While(declaredType!=Object.class&&raw.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=Object.class&&raw.isPrimitive()){Field[]fields=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=Object.class&&raw.isPrimitive()){while(declaredType==Object.class&&raw.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=Object.class&&raw.isPrimitive()){Field[]fieldNames=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=Object.class&&raw.isPrimitive()){while(declaredType!=Object.class&&raw.isPrimitive()||raw.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null&&declaredType==Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null?null:raw.getClass()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null?null:declaredType.getClass()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(fields!=null||declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(fields==null||declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=field.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=result.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(fields!=null||declaredType!=Object.class){Field[]fields=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(fields==null||declaredType!=Object.class){Field[]fields=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||raw!=Object.class){while(raw!=null||raw!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||raw!=Object.class){while(raw!=null||raw==Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||raw!=Object.class){while(raw!=null||raw>=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||raw!=Object.class){Field[]fields=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||raw!=Object.class){while(raw==null||raw!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||raw!=Object.class){Field[]fields=context.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148While(raw!=null||declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=raw.getDeclaredFields();for(inti=0;i<fieldNames.length;i++){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=declaredType.getDeclaredFields();for(inti=0;i<fieldNames.length;i++){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=context.getDeclaredFields();for(inti=0;i<fieldNames.length;i++){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fieldNames=raw.getDeclaredFields();for(inti=0;i<fieldNames.length;i++){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=declaredType.getFields();for(inti=0;i<fieldNames.length;i++){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=result.getDeclaredFields();for(inti=0;i<fieldNames.length;i++){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=fieldNames.getDeclaredFields();for(inti=0;i<raw.length;i++){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw.isArray()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(type!=null&&declaredType.isArray()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(result!=null&&declaredType.isArray()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(constructor!=null&&declaredType.isArray()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(delimatedType!=null&&raw.isArray()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType==null&&raw.isArray()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw!=Object.class){while(declaredType!=null&&raw!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw!=Object.class){while(declaredType!=null&&raw>=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw!=Object.class){while(declaredType!=null&&raw==Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw!=Object.class){while(declaredType==null&&raw!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw!=Object.class){while(declaredType!=null&&raw>>Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw!=Object.class){While(declaredType!=null&&raw!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw!=Object.class){while(declaredType>=null&&raw!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw!=Object.class){Field[]fields=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||declaredType==null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(delimatedType!=null&&raw!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=null&&raw.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw.isAssignableFrom(type)){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(type!=null&&declaredType.isAssignableFrom(raw)){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&declaredType.isAssignableFrom(raw)){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(constructor!=null&&declaredType.isAssignableFrom(raw)){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(result!=null&&declaredType.isAssignableFrom(type)){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(context!=null&&declaredType.isAssignableFrom(raw)){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(delimatedType!=null&&declaredType.isAssignableFrom(raw)){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType==Type.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||declaredType!=Type.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Type.class||context.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null){while(raw==null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null){while(raw!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null){Field[]fields=raw.getDeclaredFields();for(inti=0;i<fields.length;i++){Class<?>raw=type.getRawClass();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null){Field[]fields=raw.getDeclaredFields();for(inti=0;i<fields.length;i++){Field[]fields=field.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null){Field[]fields=raw.getDeclaredFields();for(inti=0;i<fields.length;i++){Class<?>raw=declaredType.getRawClass();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null){Field[]fields=raw.getDeclaredFields();for(inti=0;i<fields.length;i++){Class<?>raw=type.getRawClass();if(raw!=null){continue;}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null){Field[]fields=raw.getDeclaredFields();for(inti=0;i<fields.length;i++){Field[]fields=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null){Field[]fields=raw.getDeclaredFields();for(inti=0;i<fields.length;i++){Class<?>raw=declaredType.getRawClass();if(raw!=null){continue;}
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148for(raw!=null&&declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148for(raw==null&&declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&constructor.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&context.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(fields!=null&&declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=null.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(type!=null&&declaredType.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(result!=null&&declaredType.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(constructor!=null&&declaredType.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(delimatedType!=null&&raw.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType==null&&raw.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw!=null&&declaredType.getGenericType()==type.getGenericType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(type!=null&&declaredType.getGenericType()==raw.getGenericType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw!=null&&raw.getGenericType()==type.getGenericType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(type!=null&&declaredType.getGenericType()==type.getGenericType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(type!=null&&declaredType.getGenericType()==field.getGenericType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.getGenericType()==type.getGenericType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.getGenericType()!=type.getGenericType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw.isInterface()){while(declaredType!=null&&raw.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw.isInterface()){Field[]fields=raw.getDeclaredFields();while(declaredType!=null&&raw.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw.isInterface()){While(declaredType!=null&&raw.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw.isInterface()){while(declaredType==null&&raw.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw.isInterface()){Field[]fields=raw.getDeclaredFields();for(Field[]fields=raw.getFields();fieldNames!=null&&field.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw.isInterface()){Field[]fields=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw.isInterface()){Field[]fields=raw.getDeclaredFields();for(Field[]fields=declaredType.getFields();fields!=null&&raw.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null&&declaredType.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Constructor<?>constructor=context.getConstructor(declaredType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Constructor<?>constructor=declaredType.getConstructor();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Constructor<?>constructor=type.getConstructor();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Constructor<?>constructor=raw.getConstructor();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Constructor<?>constructor=context.getConstructor(type);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Constructor<?>constructor=field.getConstructor();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&declaredType.isConstructor()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&type.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null||declaredType.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&result.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148While(raw!=null&&declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(result.class!=Object.class&&declaredType.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&declaredType==Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&declaredType!=Field.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null||declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&declaredType!=Type.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw!=null&&raw.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw!=null&&declaredType.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(result==null&&declaredType.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(field!=null&&declaredType.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(fields!=null&&declaredType!=Object.class){Field[]fields=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Field.class){Field[]fields=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(type!=null&&declaredType!=Object.class){Field[]fields=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null&&declaredType!=Object.class){while(raw==null&&declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null&&declaredType!=Object.class){while(raw!=null&&declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null&&declaredType!=Object.class){Field[]fields=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null&&declaredType!=Object.class){Field[]fields=raw.getDeclaredFields();while(raw!=null&&declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null&&declaredType!=Object.class){Field[]fields=raw.getDeclaredFields();while(raw==null&&declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null&&declaredType!=Object.class){Field[]fieldNames=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.getGenericType()!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw!=null&&raw.getGenericType()!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw!=null&&raw.getGenericType()==null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.getGenericType()==null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw!=null&&declaredType.getGenericType()==null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(result==null&&declaredType.getGenericType()!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw!=null&&declaredType.getGenericType()!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(fieldNames!=null&&declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fieldNames=raw.getDeclaredFields();while(raw!=null&&declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fieldNames=raw.getDeclaredFields();while(fieldNames!=null&&declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(type!=null&&declaredType.getGenericType()!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(field!=null&&declaredType.getGenericType()!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&declaredType!=Object.class){while(declaredType!=null&&declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&declaredType!=Object.class){while(declaredType!=null&&declaredType==Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&declaredType!=Object.class){while(declaredType!=null&&declaredType>=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&declaredType!=Object.class){while(declaredType==null&&declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&declaredType!=Object.class){While(declaredType!=null&&declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&declaredType!=Object.class){while(declaredType!=null&&declaredType>>Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&declaredType!=Object.class){while(declaredType>=null&&declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&declaredType!=Object.class){Field[]fields=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148result.put(declaredType,type);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148result.put(type,declaredType.getGenericType());
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148result.put(context,declaredType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148result.put(type,declaredType.getDeclaredType());
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148result.put(type,declaredType.getGenericValue());
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148result.put(type,declaredType,raw);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]raw=context.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Object.class){Field[]raw=context.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.isPrimitive()){Field[]raw=context.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.isInterface()){Field[]raw=context.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType==Object.class){Field[]raw=context.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.isPrimitive()){Field[]fieldNames=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.isInterface()){Field[]fieldNames=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.isEnum()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=Object.class&&type.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(type!=Object.class||declaredType.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(type!=Object.class&&declaredType.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=Object.class||declaredType.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw!=null&&raw.isAssignableFrom(type)){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw!=null&&declaredType.isAssignableFrom(type)){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(field!=null&&declaredType.isAssignableFrom(raw)){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(result==null&&declaredType.isAssignableFrom(raw)){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw.isAssignableFrom(raw)){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(result!=null&&declaredType.isAssignableFrom(raw)){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(delimatedType!=null&&raw.isAssignableFrom(raw)){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.getGenericType()!=context.getGenericType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(context!=null&&declaredType.getGenericType()!=context.getGenericType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw!=null&&declaredType.getGenericType()!=context.getGenericType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw!=context.getGenericType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(result==null&&declaredType.getGenericType()!=context.getGenericType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(type!=null&&declaredType.getGenericType()!=context.getGenericType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(field!=null&&declaredType.getGenericType()!=context.getGenericType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Type.class){while(raw!=null&&declaredType!=Type.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Type.class){Field[]fields=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Type.class){while(raw==null&&declaredType!=Type.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Type.class){while(raw!=null&&declaredType==Type.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Type.class){While(raw!=null&&declaredType!=Type.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Type.class){while(raw!=null&&declaredType>=Type.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Type.class){Field[]fields=context.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Object.class){Field[]fields=raw.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.isPrimitive()){Field[]fields=raw.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType==Object.class){Field[]fields=raw.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.isInterface()){Field[]fields=raw.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null||declaredType!=Object.class){while(raw==null||declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null||declaredType!=Object.class){Field[]fields=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null||declaredType!=Object.class){while(raw!=null||declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null||declaredType!=Object.class){Field[]fieldNames=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null||declaredType!=Object.class){Field[]fields=context.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null||declaredType!=Object.class){Field[]fields=raw.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null||declaredType!=Object.class){Field[]fields=context.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null&&raw!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||raw.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=Object.class&&constructor.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.equals(type.getGenericType())){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(field!=null&&declaredType.equals(type.getGenericType())){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw!=null&&declaredType.equals(type.getGenericType())){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(type!=null&&declaredType.equals(raw.getGenericType())){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.equals(type.getDeclaredType())){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(result==null&&declaredType.equals(type.getGenericType())){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.equals(type.getReturnType())){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null||type.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null||context.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null&&declaredType!=null){while(raw==null&&declaredType!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null&&declaredType!=null){while(raw!=null&&declaredType!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null&&declaredType!=null){while(raw!=null&&declaredType==null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null&&declaredType!=null){while(raw>=null&&declaredType!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null&&declaredType!=null){While(raw==null&&declaredType!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null&&declaredType!=null){while(raw==null&&declaredType>=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null&&declaredType!=null){while(raw!=null&&declaredType>=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null&&declaredType!=null){While(raw!=null&&declaredType!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=raw.getDeclaredFields();for(inti=0;i<fields.length;++i){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=declaredType.getDeclaredFields();for(inti=0;i<fields.length;++i){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=context.getDeclaredFields();for(inti=0;i<fields.length;++i){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=field.getDeclaredFields();for(inti=0;i<fields.length;++i){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=declaredType.getFields();for(inti=0;i<fields.length;++i){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=result.getDeclaredFields();for(inti=0;i<fields.length;++i){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=type.getDeclaredFields();for(inti=0;i<fields.length;++i){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fieldNames=raw.getFieldNames();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Object.class){Field[]fieldNames=raw.getFieldNames();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.isPrimitive()){Field[]fieldNames=raw.getFieldNames();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.isInterface()){Field[]fieldNames=raw.getFieldNames();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Object.class){Field[]fields=raw.getFieldNames();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148result.put(declaredType.getName(),type);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148result.put(type.getName(),field);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148result.put(type.getName(),declaredType,raw);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148result.put(type.getName(),declaredType,field);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148result.put(type.getName(),raw);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148result.put(type.getLocalName(),declaredType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(fields!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=raw.getDeclaredFields();while(fields!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=null){while(raw!=null&&declaredType!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=null){while(raw!=null&&declaredType==null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=null){while(raw==null&&declaredType!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=null){while(raw>=null&&declaredType!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=null){While(raw!=null&&declaredType!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=null){while(raw!=null&&declaredType>=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=null){while(raw>>null&&declaredType!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=null){while(raw!=null&&declaredType>>null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType==null&&declaredType.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw!=null&&raw.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw!=null&&declaredType.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(field!=null&&declaredType.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(result==null&&declaredType.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=raw.getDeclaredFields();for(inti=0;i<fields.length;i++){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=declaredType.getDeclaredFields();for(inti=0;i<fields.length;i++){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=context.getDeclaredFields();for(inti=0;i<fields.length;i++){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=declaredType.getFields();for(inti=0;i<fields.length;i++){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=field.getDeclaredFields();for(inti=0;i<fields.length;i++){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=result.getDeclaredFields();for(inti=0;i<fields.length;i++){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=type.getDeclaredFields();for(inti=0;i<fields.length;i++){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType==Object.class&&declaredType.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=Field.class&&declaredType.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType==null&&context.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(type!=null&&declaredType!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(constructor!=null&&declaredType!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.getDeclaredFields().length>0){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(result==null&&declaredType.getDeclaredFields().length>0){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(type!=null&&declaredType.getDeclaredFields().length>0){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(result!=null&&declaredType.getDeclaredFields().length>0){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(field!=null&&declaredType.getDeclaredFields().length>0){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(constructor!=null&&declaredType.getDeclaredFields().length>0){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148ObjectConstructorconstructor=context.getObjectConstructor(declaredType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148ObjectConstructorconstructor=declaredType.getObjectConstructor();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148ObjectConstructorconstructor=type.getObjectConstructor();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148ObjectConstructorconstructor=raw.getObjectConstructor();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148ObjectConstructorconstructor=context.getObjectConstructor(type);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(context!=null&&declaredType.getSuperclass()!=context.getSuperclass()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw.getSuperclass()!=context.getSuperclass()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(context!=null&&declaredType.getSuperclass()!=raw.getSuperclass()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(context==null&&declaredType.getSuperclass()!=context.getSuperclass()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(context!=null&&declaredType.getSuperclass()!=field.getSuperclass()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&context.getSuperclass()!=raw.getSuperclass()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Field.class){while(raw!=null&&declaredType!=Field.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Field.class){while(raw==null&&declaredType!=Field.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Field.class){while(raw!=null&&declaredType==Field.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Field.class){While(raw!=null&&declaredType!=Field.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Field.class){while(raw!=null&&declaredType>=Field.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Field.class){Field[]fieldNames=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType==Object.class){while(raw!=null&&declaredType==Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType==Object.class){Field[]fields=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType==Object.class){Field[]fields=raw.getDeclaredFields();while(raw!=null&&declaredType==Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType==Object.class){while(raw==null&&declaredType==Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType==Object.class){Field[]fieldNames=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType==Object.class){Field[]fields=context.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType==Object.class){Field[]fields=raw.getDeclaredFields();for(Field[]fields=raw.getDeclaredFields();field<null&&fieldType==Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&field.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null||raw.isInterface()){while(declaredType!=null||raw.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null||raw.isInterface()){Field[]fields=raw.getDeclaredFields();for(Field[]fields=declaredType.getFields();fieldNames!=null||raw.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null||raw.isInterface()){Field[]fields=raw.getDeclaredFields();for(Field[]fields=raw.getFields();fieldNames!=null||raw.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null||raw.isInterface()){Field[]fields=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null||raw.isInterface()){Field[]fields=raw.getDeclaredFields();for(Field[]fields=raw.getDeclaredFields();fieldNames!=null||raw.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null||raw.isInterface()){Field[]fields=raw.getDeclaredFields();for(Field[]fields=declaredType.getFields();fields!=null||raw.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw==Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&result!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null?null:raw,declaredType.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null?null:raw.getDeclaredFields(),declaredType.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null?null:declaredType,raw.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw!=null&&declaredType.getGenericType()!=type.getGenericType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(type!=null&&declaredType.getGenericType()!=type.getGenericType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(type!=null&&declaredType.getGenericType()!=raw.getGenericType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(type!=null&&declaredType.getGenericType()!=field.getGenericType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(result==null&&declaredType.getGenericType()!=type.getGenericType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(field!=null&&declaredType.getGenericType()!=type.getGenericType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||declaredType==Object.class){while(raw!=null||declaredType==Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||declaredType==Object.class){Field[]fields=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||declaredType==Object.class){while(raw==null||declaredType==Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||declaredType==Object.class){Field[]fields=raw.getDeclaredFields();while(raw!=null||declaredType==Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||declaredType==Object.class){Field[]fields=context.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||declaredType==Object.class){Field[]fieldNames=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||declaredType==Object.class){Field[]fields=raw.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType==null){while(raw!=null&&declaredType==null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType==null){while(raw==null&&declaredType==null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType==null){while(raw>=null&&declaredType==null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType==null){While(raw!=null&&declaredType==null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType==null){while(raw>>null&&declaredType==null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType==null){while(raw!=null&&declaredType!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType==null){while(raw!=null&&declaredType>=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType==null){while(raw==null&&declaredType!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.isInterface()){Field[]fields=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(fields!=null){Field[]fields=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null){Field[]fields=raw.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.isPrimitive()){Field[]fields=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=null){for(raw!=null&&declaredType!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=Object.class&&raw.isPrimitive()){Field[]fields=raw.getDeclaredFields();while(declaredType!=Object.class&&raw.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=Object.class&&raw.isPrimitive()){Object.class&&raw.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=Object.class&&raw.isPrimitive()){Field[]fields=raw.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw!=Field.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null&&declaredType!=Field.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw!=Type.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw>=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw!=null&&raw.getGenericType()!=type.getGenericType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.getGenericType()!=field.getGenericType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(result!=null&&declaredType.getGenericType()!=type.getGenericType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw.isInterface()){Field[]fieldNames=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw.isInterface()){ObjectConstructorconstructor=context.getObjectConstructor();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw.isInterface()){while(declaredType!=null&&raw.isAbstract()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=raw.getFields(declaredType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||raw!=Object.class){While(raw!=null||raw!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||raw!=Object.class){Field[]fieldNames=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||raw!=Object.class){Field[]fields=raw.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148ObjectConstructorconstructor=field.getObjectConstructor();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148ObjectConstructorconstructor=context.getNativeObjectConstructor();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(result!=null&&declaredType.getSuperclass()!=context.getSuperclass()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&field.getSuperclass()!=context.getSuperclass()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null||declaredType!=Object.class){Field[]raw=context.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null||declaredType!=Object.class){ObjectConstructorconstructor=context.getObjectConstructor();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null||declaredType!=Object.class){Field[]fieldNames=raw.getFieldNames();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(fieldNames!=null&&raw!=Object.class){Field[]fieldNames=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148While(raw!=null&&declaredType!=Object.class){Field[]fieldNames=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&raw.isInterface()){Field[]fields=raw.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&raw.getClass()!=Object.class){Field[]fields=raw.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(fieldNames!=null&&raw!=Object.class){Field[]fields=raw.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148result.put(type.getName(),fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148result.put(type.getName(),declaredType+1);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(constructor!=null&&declaredType.getGenericType()!=context.getGenericType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(result!=null&&declaredType.getGenericType()!=context.getGenericType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw!=null&&raw.getGenericType()!=context.getGenericType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.getGenericType()==context.getGenericType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(fieldNames==null&&declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw!=null.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(fieldNames!=null&&declaredType!=Object.class){Field[]fieldNames=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&declaredType!=Object.class){Field[]fieldNames=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while((declaredType!=null&&declaredType.isInterface())||raw.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=null){Field[]fields=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null){Field[]fields=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(fieldNames!=null){Field[]fields=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(fieldNames!=null&&raw!=Object.class){Field[]fieldNames=raw.getFieldNames();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&raw.isInterface()){Field[]fieldNames=raw.getFieldNames();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType==Object.class){Field[]fieldNames=raw.getFieldNames();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null&&declaredType.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(result!=Object.class&&declaredType.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declareType!=null&&context.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&raw.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(fieldNames!=null&&declaredType!=Object.class){Field[]fields=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(fieldNames!=null){Field[]fields=raw.getDeclaredFields();for(inti=0;i<fields.size();++i){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(fields!=null){Field[]fields=raw.getDeclaredFields();for(inti=0;i<fields.size();++i){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fieldNames=raw.getDeclaredFields();for(inti=0;i<fields.size();++i){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(result!=null&&declaredType!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(fieldNames!=null){Field[]fields=raw.getDeclaredFields();for(inti=0;i<fieldNames.length;i++){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=raw.getFields();for(inti=0;i<fieldNames.length;i++){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=fieldNames.getDeclaredFields();for(inti=0;i<fieldNames.length;i++){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw!=Object.class){for(declaredType!=null&&raw!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Constructor<?>factory=context.getFactory();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Constructor<?>factory=context.getOwnerConstructor();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Constructor<?>factory=context.getOwnConstructor();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType==null){Field[]fields=raw.getDeclaredFields();while(raw!=null&&declaredType==null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType==null){Field[]fields=raw.getDeclaredFields();for(raw!=null&&declaredType==null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType==null){for(raw!=null&&declaredType==null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType==null){ObjectConstructorconstructor=context.getObjectConstructor();while(raw!=null&&declaredType==null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(fieldNames!=null||declaredType!=Object.class){Field[]fields=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=declarationType.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(fieldNames!=null&&raw!=Object.class){Field[]fields=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148While(raw!=null&&declaredType!=Object.class){Field[]fields=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null&&declaredType.equals(type.getGenericType())){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.equals(type.getEnumType())){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=null&&raw.getClass()!=context){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(result!=null&&declaredType==null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(type!=null&&declaredType==null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null){Field[]fields=raw.getDeclaredFields();for(inti=0;i<fields.length;++i){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null){Field[]fields=raw.getDeclaredFields();for(inti=0;i<fields.length;i++){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null){Field[]fields=raw.getDeclaredFields();while(raw==null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null){ObjectConstructorconstructor=context.getObjectConstructor();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null){Field[]fields=raw.getDeclaredFields();for(inti=0;i<fields.length;i++){Field[]fields=newField[fieldNames.size()];
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null){Field[]fields=raw.getDeclaredFields();for(inti=0;i<fields.length;i++){Field[]fields=raw.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType==Object.class){Field[]fields=raw.getDeclaredFields();if(field!=null&&fieldType==Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Type.class){ObjectConstructorconstructor=context.getObjectConstructor();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Type.class){while(raw!=null&&declaredType!=Type.Class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Type.class){Field[]fields=raw.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||declaredType==Object.class){Field[]raw=context.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=context.getFields(raw);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148for(inti=0;i<raw.size();i++){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148for(inti=0;i<raw.getTypes().length;i++){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148for(inti=0;i<raw.getFieldsCount();i++){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148for(inti=0;i<raw.getTypes().size();i++){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148for(inti=0;i<raw.size();++i){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Collections.sort(result),declaredType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Collections.sort(sortedType,result);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(fields==null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null||raw.isInterface()){Field[]fields=raw.getDeclaredFields();while(declaredType!=null||raw.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null||raw.isInterface()){While(declaredType!=null||raw.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null||raw.isInterface()){while(declaredType!=null&&raw.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null||raw.isInterface()){Field[]fieldNames=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null||raw.isInterface()){Field[]fields=raw.getDeclaredFields();while(declaredType!=null&&raw.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=Object.class&&declaredType.equals(type.getGenericType())){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(fieldNames!=null){Field[]fields=raw.getDeclaredFields();for(inti=0;i<fields.length;i++){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(fields!=null){Field[]fields=raw.getDeclaredFields();for(inti=0;i<fields.length;i++){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fieldNames=raw.getDeclaredFields();for(inti=0;i<fields.length;i++){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&raw.isInterface()){Field[]raw=context.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null&&declaredType!=Object.class){Field[]raw=context.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType==null&&raw!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Field.class){for(raw!=null&&declaredType!=Field.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Field.class){ObjectConstructorconstructor=context.getObjectConstructor();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Field.class){Field[]raw=context.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(fieldNames!=null){Field[]fields=raw.getDeclaredFields();for(inti=0;i<fields.length;++i){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(fields!=null){Field[]fields=raw.getDeclaredFields();for(inti=0;i<fields.length;++i){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fieldNames=raw.getDeclaredFields();for(inti=0;i<fields.length;++i){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Integer.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(result!=null&&declaredType.getGenericType()==type.getGenericType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.getGenericType()==field.getGenericType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null&&declaredType!=Object.class){Field[]fields=raw.getDeclaredFields();if(field==null&&fieldType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null&&declaredType!=Object.class){Field[]fields=raw.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null||declaredType!=Field.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&declaredType!=Object.class){for(declaredType!=null&&declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null&&declaredType!=null){for(raw==null&&declaredType!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null&&declaredType!=null){Field[]fields=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null&&declaredType!=null){while(raw==null&&declaredType>>null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null&&declaredType!=null){while(raw==null&&declaredType!=null);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&field.isAssignableFrom(type)){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw.equals(type)){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(fieldNames!=null){Field[]fields=raw.getDeclaredFields();for(inti=0;i<fields.size();i++){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(fields!=null){Field[]fields=raw.getDeclaredFields();for(inti=0;i<fields.size();i++){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fieldNames=raw.getDeclaredFields();for(inti=0;i<fields.size();i++){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw.getDeclaredType().isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(result!=null&&declaredType.getGenericType()!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Constructor<?>factory=context.getFactory().getConstructor(declaredType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Constructor<?>factory=field.getConstructor(declaredType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declareType!=null&&raw.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declareType!=null&&raw.isArray()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null&&declaredType.getDeclaredFields().length>0){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(delimatedType!=null&&raw.getDeclaredFields().length>0){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declareType!=null&&raw.isUnknownType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&field.isUnknownType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(result!=null&&declaredType.getGenericType()==null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148result.put(type,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148result.put(type,declaredType+1);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148result.put(declaredType,field);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=Object.class&&raw.isPrimitive()){while(declaredType>>Object.class&&raw.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148result.put(declaredType.getName(),declaredType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148result.put(type.getSimpleName(),declaredType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw.isAssignableFrom(relatedType)){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw.isAssignableFrom(excluder)){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw.isAssignableFrom(lockedType)){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null||declaredType!=Object.class){While(raw==null||declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null||declaredType!=Object.class){while(raw==null||declaredType>=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null||declaredType!=Object.class){while(raw==null||declaredType>>Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null||declaredType!=Object.class){while(raw>=null||declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(resolvedType!=null&&declaredType.isArray()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(dumpedType!=null&&declaredType.isArray()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(relativeType!=null&&declaredType.isArray()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&raw.getDeclaredFields()!=null){Field[]fields=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||raw!=Object.class){while(raw!=null||raw>>Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||raw!=Object.class){while(raw>=null||raw!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.isPrimitive()){Field[]fields=raw.getDeclaredFields();for(inti=0;i<fields.size();++i){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw.isInterface()){while(declaredType>=null&&raw.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw.isInterface()){while(declaredType>>null&&raw.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Field.class){while(raw!=null&&declaredType>>Field.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Field.class){while(raw>=null&&declaredType!=Field.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(result==null&&declaredType!=null&&raw.getGenericType()==type.getGenericType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(delimatedType!=null&&raw.getGenericType()==type.getGenericType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Type.class){while(raw!=null&&declaredType>>Type.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Type.class){while(raw>=null&&declaredType!=Type.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.isPrimitive()){Field[]fields=raw.getDeclaredFields();for(inti=0;i<fields.size();i++){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=Object.class&&declaredType.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType==null){while(raw[Delete]null&&declaredType==null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType==null){while(raw[BUGGY]null&&declaredType==null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.isPrimitive()){Field[]fields=raw.getDeclaredFields();for(inti=0;i<fields.length;i++){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(resolvedType!=null&&raw!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null?null:declaredType.class,raw){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=declarationType.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&result.isAssignableFrom(type)){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(resolvedType!=null&&declaredType.isAssignableFrom(type)){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(type.isPrimitive()&&declaredType.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.isSubtype(type.getGenericType())){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.isAssignableFrom(type.getGenericType())){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.equals(type.getRawClass())){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(result==null&&declaredType.getGenericType()==null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(fields!=null&&raw!=Object.class){Field[]fields=raw.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148While(raw!=null&&declaredType!=Object.class){Field[]fields=raw.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Field.class){Field[]fields=raw.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.isPrimitive()){Field[]fields=raw.getDeclaredFields();for(inti=0;i<fields.length;++i){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(result==null&&declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(resolvedType!=null&&declaredType.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(dumpedType!=null&&declaredType.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw!=Object.class){while(declaredType>>null&&raw!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(delimatedType!=null&&raw.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null&&declaredType!=null){while(raw==null&&declaredType[BUGGY]null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null&&declaredType!=null){while(raw==null|&declaredType!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=null&&declaredType.getClass()!=raw.getClass()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=null&&declaredType.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(context!=null&&declaredType.isConstructor()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(resolvedType!=null&&declaredType.isUnknownType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(dumpedType!=null&&declaredType.isUnknownType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.getDeclaredType()!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(resolvedType!=null&&declaredType.getSuperclass()!=context.getSuperclass()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(exportedType!=null&&raw.getSuperclass()!=context.getSuperclass()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(constructor!=null&&declaredType.getSuperclass()!=context.getSuperclass()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType==null||raw.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null||declaredType==Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null){while(raw==null||declaredType.getGenericType()!=context.getGenericType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null){while(raw==null||declaredType.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null){while(raw==null||declaredType.getGenericType()!=ObjectConstructor.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null){while(raw==null||declaredType.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null){while(raw==null||declaredType.getGenericType()!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null){while(raw==null||declaredType.getGenericType()!=ObjectConstructor.TYPE_ARRAY){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null){while(raw==null||declaredType.getGenericType()!=ObjectConstructor.UNKNOWN){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null||raw.isInterface()){while(declaredType>=null||raw.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null||raw.isInterface()){while(declaredType==null||raw.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null||raw.isInterface()){while(declaredType!=null||raw.isAbstract()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null||raw.isInterface()){while(declaredType>>null||raw.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Constructor<?>factory=context.getConstructor(declaredType,false);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Constructor<?>factory=context.getConstructorFor(declaredType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(result==null&&declaredType!=null&&raw.getGenericType()!=type.getGenericType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(delimatedType!=null&&raw.getGenericType()!=type.getGenericType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148While(raw!=null&&declaredType!=Object.class){Field[]raw=context.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null||declaredType.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null||declaredType.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&declaredType!=Object.class){while(declaredType>>null&&declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(fields!=null&&raw!=Object.class){Field[]fields=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType==Object.class){While(raw!=null&&declaredType==Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType==Object.class){while(raw>=null&&declaredType==Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType==Object.class){while(raw>>null&&declaredType==Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType==Object.class){while(raw!=null&&declaredType>=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||declaredType==Object.class){While(raw!=null||declaredType==Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||declaredType==Object.class){while(raw>=null||declaredType==Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||declaredType==Object.class){while(raw>>null||declaredType==Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||declaredType==Object.class){while(raw!=null||declaredType>=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&declaredType.isInterface()&&raw!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&declaredType.isPrimitive()&&raw!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw!=Object.class&&declaredType.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null&&declaredType!=Object.class){While(raw==null&&declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null&&declaredType!=Object.class){while(raw==null&&declaredType>=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null&&declaredType!=Object.class){while(raw==null&&declaredType>>Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null&&declaredType!=Object.class){for(raw==null&&declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=null&&raw.getDeclaredType()!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Object.class){for(raw==null&&declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Field.class){for(raw==null&&declaredType!=Field.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148ObjectConstructorconstructor=result.getObjectConstructor();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Constructor<?>factory=context.getDeclaredType();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Constructor<?>constructor=context.getConstructorFor(declaredType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Constructor<?>constructor=result.getConstructor();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(result==null&&declaredType==null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType==null&&raw.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(fieldNames!=null&&declaredType!=Field.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Collections.sort(resultFields);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Collections.sort(result,"resulting");
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(dumpedType!=null&&declaredType!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(delimatedType!=null&&raw==null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(type==null&&declaredType!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148result.put(declaredType,declaredType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148result.put(exportedType,declaredType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148result.put(declaredType,fieldType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Field.class&&raw.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(result!=null&&declaredType!=Field.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.getDeclaredFields().length==0){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.hasDeclaredFields()){
