projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&raw!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||declaredType.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null?null:raw.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=Object.class&&declaredType.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.isAssignableFrom(raw)){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.getSuperclass()!=context.getSuperclass()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.isArray()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&raw!=Object.class){while(raw!=null&&raw!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&raw!=Object.class){while(raw!=null&&raw>=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&raw!=Object.class){Field[]fields=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&raw!=Object.class){while(raw!=null&&raw==Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&raw!=Object.class){while(raw==null&&raw!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&raw!=Object.class){While(raw!=null&&raw!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&raw!=Object.class){while(raw!=null&&raw>>Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType==Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Field.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Type.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null&&declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||declaredType==Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null||declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||raw!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null){while(raw!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null){while(raw!=null&&declaredType.getGenericType()!=type.getGenericType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null){while(raw!=null&&declaredType.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null){while(raw!=null&&declaredType.getGenericType()==type.getGenericType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null){while(raw!=null&&declaredType.equals(type.getGenericType())){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null){while(raw!=null&&declaredType.getGenericType()!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null){while(raw!=null&&declaredType.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null){while(raw!=null&&declaredType.getDeclaredFields().length>0){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Object.class){while(raw!=null&&declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Object.class){Field[]fields=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Object.class){while(raw==null&&declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Object.class){while(raw!=null&&declaredType==Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Object.class){while(raw!=null&&declaredType>=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Object.class){While(raw!=null&&declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Object.class){for(raw!=null&&declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||declaredType!=Object.class){while(raw!=null||declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||declaredType!=Object.class){while(raw==null||declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||declaredType!=Object.class){Field[]fields=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||declaredType!=Object.class){while(raw!=null||declaredType==Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||declaredType!=Object.class){While(raw!=null||declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||declaredType!=Object.class){Field[]fieldNames=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||declaredType!=Object.class){while(raw!=null||declaredType>=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null||raw.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&declaredType.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(type!=null||declaredType.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=type.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Constructor<?>factory=context.getConstructor();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=raw.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Constructor<?>constructor=context.getConstructor();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=context.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Collections.sort(result);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148result.put(type,declaredType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(type!=null&&declaredType.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(context!=null&&declaredType.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(result!=null&&declaredType.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(constructor!=null&&declaredType.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null?null:raw,declaredType.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null?null:declaredType.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null?null:raw.type.getRawClass()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null?null:raw.getClass()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=Object.class&&raw.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(type!=Object.class&&declaredType.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(constructor!=Object.class&&declaredType.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(class!=Object.class&&declaredType.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(collection!=Object.class&&declaredType.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null){Field[]fields=raw.getDeclaredFields();for(inti=0;i<fields.length;i++){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null){Field[]fields=raw.getDeclaredFields();for(inti=0;i<fields.length;++i){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null){Field[]fields=raw.getDeclaredFields();while(raw!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null){Field[]fields=raw.getDeclaredFields();for(inti=0;i<fields.size();i++){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null){Field[]fields=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null){Field[]fields=raw.getDeclaredFields();for(inti=0;i<fields.size();++i){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null){Field[]fields=raw.getDeclaredFields();for(inti=0;i<fieldNames.length;i++){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Object.class){Field[]fields=raw.getDeclaredFields();while(raw!=null&&declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Object.class){Field[]fieldNames=raw.getDeclaredFields();while(raw!=null&&declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw==null&&declaredType!=null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType==null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(excludedType!=null&&declaredType.isInterface()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&raw!=Object.class){Field[]fieldNames=raw.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&raw!=Object.class){Field[]fields=raw.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&raw!=Object.class){Field[]raw=context.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&raw!=Object.class){Field[]fieldNames=raw.getFieldNames();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&raw!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||declaredType!=Object.class){Field[]fields=raw.getDeclaredFields();while(raw!=null||declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||declaredType!=Object.class){Field[]fieldNames=raw.getDeclaredFields();while(raw!=null||declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148ObjectConstructorconstructor=context.getObjectConstructor();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Constructor<?>factory=context.getConstructor(declaredType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&raw!=Object.class){while(raw>=null&&raw!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=Object.class&&declaredType.isPrimitive()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||declaredType!=Object.class){while(raw>=null||declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null||declaredType!=Object.class){while(raw!=null||declaredType>>Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.isUnknownType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType.isAssignableFrom(type)){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Object.class){while(raw!=null&&declaredType>>Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null&&declaredType!=Object.class){while(raw>=null&&declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(declaredType!=null&&declaredType!=Object.class){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=declaredType.getDeclaredFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148result.put(type.getName(),declaredType);
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148Field[]fields=declaredType.getFields();
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null){while(raw!=null&&declaredType.getGenericType()!=context.getGenericType()){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null){while(raw!=null&&declaredType.isAssignableFrom(type)){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(raw!=null){while(raw!=null&&declaredType.getGenericType()==null){
projects/Gson10/gson/src/main/java/com/google/gson/internal/bind/ReflectiveTypeAdapterFactory.java148while(resolvedType!=null&&declaredType.isInterface()){
