projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589closeCopiedEntry(is2PhaseSource);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeCopiedEntry(is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeCopiedEntry(is2PhaseSource);}else{putArchiveEntry(ae,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeCopiedEntry(is2PhaseSource);}else{addRawArchiveEntry(ae,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeCopiedEntry(is2PhaseSource);}else{putRawArchiveEntry(ae,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeCopiedEntry(is2PhaseSource);}else{addRawArchiveEntry(entry,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeCopiedEntry(is2PhaseSource);}else{addRawArchiveEntry(null,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589addRawArchiveEntry(is2PhaseSource);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeCopiedEntry(is2PhaseSource);}else{rawStream.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeCopiedEntry(is2PhaseSource);}else{addRawArchiveEntry(entry,rawStream);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeCopiedEntry(is2PhaseSource);}else{updateZipInputStream(rawStream);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource!=null){closeCopiedEntry(is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589removeExtraField(Zip64ExtendedInformationExtraField.HEADER_ID);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource!=false){closeCopiedEntry(is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource==null){closeCopiedEntry(is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource!=false){closeArchiveEntry(is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource==false){closeCopiedEntry(is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource!=true){closeCopiedEntry(is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource>=false){closeCopiedEntry(is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource!=false){closeRawArchiveEntry(is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589CloseCopiedEntry(is2PhaseSource);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589luate(rawStream,is2PhaseSource)){closeCopiedEntry(is2PhaseSource);}else{addRawArchiveEntry(entry,rawStream);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeCopiedEntry(is2PhaseSource);}else{addRawArchiveEntry(rawStream,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeArchiveEntry(is2PhaseSource);}else{addRawArchiveEntry(entry,rawStream);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589luate(rawStream,is2PhaseSource){closeCopiedEntry(is2PhaseSource);}else{addRawArchiveEntry(entry,rawStream);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeArchiveEntry(is2PhaseSource);}else{addRawArchiveEntry(rawStream,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeCopiedEntry(ae);}else{addRawArchiveEntry(rawStream,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeArchiveEntry(is2PhaseSource);}else{putRawArchiveEntry(ae,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeRawArchiveEntry(is2PhaseSource);}else{putRawArchiveEntry(ae,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeCurrentEntry(is2PhaseSource);}else{putRawArchiveEntry(ae,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeCopiedEntry(ae);}else{putRawArchiveEntry(ae,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeCopiedEntry(is2PhaseSource);}else{putRawArchiveEntry(ae,IS2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589luate(rawStream,is2PhaseSource)){closeCopiedEntry(is2PhaseSource);}else{rawStream.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource||isCrc){closeCopiedEntry(is2PhaseSource);}else{rawStream.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeCopiedEntry(ae);}else{rawStream.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeArchiveEntry(is2PhaseSource);}else{rawStream.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeCopiedEntry(ae,is2PhaseSource);}else{rawStream.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589putArchiveEntry(ae,is2PhaseSource);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){addRawArchiveEntry(is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589addRawArchiveEntry(is2PhaseSource,ae);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589putArchiveEntry(is2PhaseSource);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589addRawArchiveEntry(is2PhaseSource,entry);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589addRawArchiveEntry(is2PhaseSource,ae.getCompressedSize());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589addRawArchiveEntry(entry);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589luate(is2PhaseSource){closeCopiedEntry(is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeArchiveEntry(is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeCopiedEntry(ae);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeArchiveEntry(is2PhaseSource);}else{putArchiveEntry(ae,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeCopiedEntry(ae);}else{putArchiveEntry(ae,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeCurrentEntry(is2PhaseSource);}else{putArchiveEntry(ae,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeRawArchiveEntry(is2PhaseSource);}else{putArchiveEntry(ae,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeCopiedEntry(ae,is2PhaseSource);}else{putArchiveEntry(ae,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeArchiveEntry(is2PhaseSource);}else{addRawArchiveEntry(null,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeRawArchiveEntry(is2PhaseSource);}else{addRawArchiveEntry(null,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeCopiedEntry(ae);}else{addRawArchiveEntry(null,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeArchiveEntry();}else{addRawArchiveEntry(null,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeCopiedEntry(is2PhaseSource);}else{addRawArchiveEntry(false,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource!=null){closeArchiveEntry(is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource>=null){closeCopiedEntry(is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(ae!=null){closeCopiedEntry(is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeArchiveEntry(is2PhaseSource);}else{addRawArchiveEntry(ae,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeRawArchiveEntry(is2PhaseSource);}else{addRawArchiveEntry(ae,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeStdArchiveEntry(is2PhaseSource);}else{addRawArchiveEntry(ae,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeCopiedEntry(ae);}else{addRawArchiveEntry(ae,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeArchiveEntry();}else{addRawArchiveEntry(ae,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeArchiveEntry(is2PhaseSource);}else{addRawArchiveEntry(entry,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeRawArchiveEntry(is2PhaseSource);}else{addRawArchiveEntry(entry,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeCopiedEntry(ae);}else{addRawArchiveEntry(entry,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeCopiedEntry(i,is2PhaseSource);}else{addRawArchiveEntry(i,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeArchiveEntry();}else{addRawArchiveEntry(entry,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589removeExtraField(Zip64ExtendedInformationExtraField.HEADER_ID,ae);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589removeExtraField(Zip64ExtendedInformationExtraField.HEADER_ID,ae.getCompressedSize());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589removeExtraField(Zip64ExtendedInformationExtraField.HEADER_ID,ae.getSize());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589removeExtraField(Zip64ExtendedInformationExtraField.HEADER_ID,is2PhaseSource);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589removeExtraField(Zip64ExtendedInformationExtraField.HEADER_ID,rawStream);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589removeExtraField(Zip64ExtendedInformationExtraField.HEADER_ID,zipEncoding);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589removeExtraField(Zip64ExtendedInformationExtraField.HEADER_ID);putArchiveEntry(ae,is2PhaseSource);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589removeExtraField(Zip64ExtendedInformationExtraField.HEADER_ID);if(is2PhaseSource){putArchiveEntry(ae,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589removeExtraField(Zip64ExtendedInformationExtraField.HEADER_ID);addRawArchiveEntry(ae,is2PhaseSource);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589removeExtraField(Zip64ExtendedInformationExtraField.HEADER_ID);addRawArchiveEntry(is2PhaseSource,rawStream);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589luate(rawStream,is2PhaseSource)){closeCopiedEntry(is2PhaseSource);}else{updateZipInputStream(rawStream);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource||is2PhaseSource){closeCopiedEntry(is2PhaseSource);}else{updateZipInputStream(rawStream);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589luate(rawStream,is2PhaseSource){closeCopiedEntry(is2PhaseSource);}else{updateZipInputStream(rawStream);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeCopiedEntry(ae);}else{updateZipInputStream(rawStream);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeCopiedEntry(ae,is2PhaseSource);}else{updateZipInputStream(rawStream);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource==null){closeArchiveEntry(is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(isCrc){closeCopiedEntry(is2PhaseSource);}else{addRawArchiveEntry(ae,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource||is2PhaseSource){closeCopiedEntry(is2PhaseSource);}else{addRawArchiveEntry(ae,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeArchiveEntry(ae);}else{addRawArchiveEntry(ae,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeCopiedEntry(ae,is2PhaseSource);}else{addRawArchiveEntry(ae,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource||is2PhaseSource){closeCopiedEntry(is2PhaseSource);}else{addRawArchiveEntry(entry,rawStream);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeCopiedEntry(ae);}else{addRawArchiveEntry(entry,rawStream);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(isCrc){closeCopiedEntry(is2PhaseSource);}else{addRawArchiveEntry(entry,rawStream);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(isCrc){closeCopiedEntry(isCrc);}else{addRawArchiveEntry(entry,rawStream);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeCopiedEntry(ae,is2PhaseSource);}else{addRawArchiveEntry(entry,rawStream);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(isCrc){closeCopiedEntry(is2PhaseSource);}else{putRawArchiveEntry(ae,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeRawArchiveEntry(ae,is2PhaseSource);}else{putRawArchiveEntry(ae,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeRawArchiveEntry(ae);}else{putRawArchiveEntry(ae,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeCopiedEntry(ae,is2PhaseSource);}else{putRawArchiveEntry(ae,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(!isEnabled){if(is2PhaseSource){closeCopiedEntry(is2PhaseSource);}else{updateZipInputStream(rawStream);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeArchiveEntry(is2PhaseSource);}else{updateZipInputStream(rawStream);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(isCrc){closeCopiedEntry(is2PhaseSource);}else{updateZipInputStream(rawStream);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource||is2PhaseSource){closeCopiedEntry(is2PhaseSource);}else{rawStream.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589luate(rawStream,is2PhaseSource){closeCopiedEntry(is2PhaseSource);}else{rawStream.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(!isEnabled){if(is2PhaseSource){closeCopiedEntry(is2PhaseSource);}else{addRawArchiveEntry(null,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(isCrc){closeCopiedEntry(is2PhaseSource);}else{addRawArchiveEntry(null,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeRawArchiveEntry(null,is2PhaseSource);}else{addRawArchiveEntry(null,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeArchiveEntry(null,is2PhaseSource);}else{addRawArchiveEntry(null,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589removeExtraField(Zip64ExtendedInformationExtraField.HEADER_ID+1);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589ae.removeExtraField(Zip64ExtendedInformationExtraField.HEADER_ID);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589removeExtraField(Zip64ExtendedInformationExtraField.HEADER_IDE);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(isCrc){closeCopiedEntry(is2PhaseSource);}else{addRawArchiveEntry(entry,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource||is2PhaseSource){closeCopiedEntry(is2PhaseSource);}else{addRawArchiveEntry(entry,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeCopiedEntry(ae,is2PhaseSource);}else{addRawArchiveEntry(entry,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeCopiedEntry(ae);}else{addRawArchiveEntry(entry,ae);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){putArchiveEntry(ae,is2PhaseSource);copyFromZipInputStream(rawStream);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589removeExtraField(Zip64ExtendedInformationExtraField.HEADER_ID);addRawArchiveEntry(ae,rawStream);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589removeExtraField(Zip64ExtendedInformationExtraField.HEADER_ID);addRawEntry(ae,rawStream);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(!isEnabled){if(is2PhaseSource){closeCopiedEntry(is2PhaseSource);}else{putArchiveEntry(ae,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(isCrc){closeCopiedEntry(is2PhaseSource);}else{putArchiveEntry(ae,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeCopiedEntry();}else{putArchiveEntry(ae,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(isResource){closeCopiedEntry(isResource);}else{putArchiveEntry(ae,isResource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource!=null){closeCrcEntry(is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource!=null){addRawArchiveEntry(is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeCrcEntry(is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589removeCopiedEntry(is2PhaseSource);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeCopiedEntry(ae,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589addRawArchiveEntry(ae);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589addRawInternalEntry(is2PhaseSource);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){addRawArchiveEntry(is2PhaseSource);}else{thrownewIllegalStateException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){addRawArchiveEntry(is2PhaseSource);}else{rawStream.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){addRawArchiveEntry(is2PhaseSource);}else{updateZipInputStream(rawStream);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource>0){closeCopiedEntry(is2PhaseSource);}else{putArchiveEntry(ae,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeArchiveEntry(ae);}else{putArchiveEntry(ae,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeArchiveEntry();}else{putArchiveEntry(ae,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource!=null){closeCopiedEntry(is2PhaseSource);}else{putArchiveEntry(ae,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource||is2PhaseSource){closeArchiveEntry(is2PhaseSource);}else{addRawArchiveEntry(entry,rawStream);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeArchiveEntry(ae);}else{addRawArchiveEntry(entry,rawStream);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeArchiveEntry();}else{addRawArchiveEntry(entry,rawStream);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeArchiveEntry(ae,rawStream);}else{addRawArchiveEntry(entry,rawStream);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589putCrc(Zip64ExtendedInformationExtraField.HEADER_ID);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589putNextEntry(Zip64ExtendedInformationExtraField.HEADER_ID,ae);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589putNextEntry(Zip64ExtendedInformationExtraField.HEADER_ID,entry);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(ae==null){closeCopiedEntry(is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource!=null){closeCopiedEntry(ae);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeArchiveEntry(ae);}else{putRawArchiveEntry(ae,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeArchiveEntry();}else{putRawArchiveEntry(ae,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource>0){closeCopiedEntry(is2PhaseSource);}else{putRawArchiveEntry(ae,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeArchiveEntry(ae,is2PhaseSource);}else{putRawArchiveEntry(ae,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){addRawArchiveEntry(Zip64ExtendedInformationExtraField.HEADER_ID);}else{addRawArchiveEntry(Zip64ExtendedInformationExtraField.HEADER_ID
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){addRawArchiveEntry(Zip64ExtendedInformationExtraField.HEADER_ID);}else{addRawArchiveEntry(Zip64ExtendedInformationExtraField.HEADER_ID,
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(!isEnabled(Zip64ExtendedInformationExtraField.HEADER_ID)){thrownewIllegalStateException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){addRawArchiveEntry(Zip64ExtendedInformationExtraField.HEADER_ID);}else{addRawArchiveEntry(Zip64ExtendedInformationExtraField.HEADER_ID,entry
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(!isEnabled(Zip64ExtendedInformationExtraField.HEADER_ID)){addRawArchiveEntry(entry);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(!isEnabled(Zip64ExtendedInformationExtraField.HEADER_ID)){addRawArchiveEntry(entry,zipEncoding);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource!=null&&is2PhaseSource){closeCopiedEntry(is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource!=null&&is2PhaseSource.length>0){closeCopiedEntry(is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource!=null&&is2PhaseSource.getCompressedSize()>=ArchiveEntry.SIZE_UNKNOWN){closeCopiedEntry(is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource!=null&&is2PhaseSource){closeArchiveEntry(is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource!=null&&is2PhaseSource.getCompressedSize()==ArchiveEntry.SIZE_UNKNOWN){closeCopiedEntry(is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeArchiveEntry(ae);}else{updateZipInputStream(rawStream);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource||isCrc){closeCopiedEntry(is2PhaseSource);}else{updateZipInputStream(rawStream);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource>0){closeCopiedEntry(is2PhaseSource);}else{updateZipInputStream(rawStream);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeArchiveEntry(ae,is2PhaseSource);}else{updateZipInputStream(rawStream);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource>0){closeArchiveEntry(is2PhaseSource);}else{addRawArchiveEntry(null,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource<=0){closeCopiedEntry(is2PhaseSource);}else{addRawArchiveEntry(null,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource!=null){closeArchiveEntry(is2PhaseSource);}else{addRawArchiveEntry(null,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeArchiveEntry(ae);}else{addRawArchiveEntry(null,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589removeExtraField(Zip64ExtendedInformationExtraField.HEADER_ID+comment);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource||is2PhaseSource){closeArchiveEntry(is2PhaseSource);}else{addRawArchiveEntry(entry,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource>0){closeArchiveEntry(is2PhaseSource);}else{addRawArchiveEntry(entry,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeArchiveEntry(ae);}else{addRawArchiveEntry(entry,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(ae!=null){closeCopiedEntry(is2PhaseSource);}else{addRawArchiveEntry(entry,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeArchiveEntry(ae);}else{rawStream.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource>0){closeCopiedEntry(is2PhaseSource);}else{rawStream.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeEntry(is2PhaseSource);}else{rawStream.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(!isEnabled(Zip64ExtendedInformationExtraField.HEADER_ID)){closeCopiedEntry(is2PhaseSource);}else{addRawArchiveEntry(ae,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeArchiveEntry(ae,is2PhaseSource);}else{addRawArchiveEntry(ae,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource||is2PhaseSource){closeArchiveEntry(is2PhaseSource);}else{addRawArchiveEntry(ae,is2PhaseSource);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeArchiveEntry(ae);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java589if(is2PhaseSource){closeArchiveEntry(ae,is2PhaseSource);}
