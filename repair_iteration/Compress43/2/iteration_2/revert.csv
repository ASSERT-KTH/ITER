projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.entry.getSize();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getKey();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getValue();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytes();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getParent().getSize();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getSize();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getSize()+1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getData();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getChars();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytesRead();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getImplicitReturn();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getSize();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getSize()/1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getSize()-1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531EntryEntry.bytesRead=entry.getSize();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getValue()+1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getValue()-1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getValue();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getShortValue();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getKey()+1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getKey()-1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getKey();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytes(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getBytes();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytes()+1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytes(0);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531EntryEntry.bytesRead=entry.getBytes();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getNext().getSize();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getParent().getSize()+1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getValue().getSize();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getParent().getSize()-1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getParent().getBytesRead();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getKey().getSize();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getParent();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getData();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getImplicitReturn()+1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getImplicitSize();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getImplicitValue();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getImplicitStart();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getImplicitReturn();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getImplicitReturn()-1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=checkIfNeedsZip64(activeMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){finalZip64ModeactiveMode=zip64Mode.getActiveMode();closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){finalZip64ModeactiveMode=getActiveMode();closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=checkIfNeedsZip64(activeMode);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){finalZip64ModeactiveMode=getActiveMode();closeEntry(activeMode,phased);}else{checkIfNeedsZip64(activeMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){finalZip64ModeactiveMode=zip64Mode.getActiveMode();closeEntry(activeMode,phased);}else{checkIfNeedsZip64(activeMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=checkIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytesRead(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytesRead(0);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytesRead()+1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytesRead()-1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytesRead(peek);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytesRead(true);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getShort();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytes("UTF-8");
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getCompressedSize();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){checkIfNeedsZip64(phased);finalZip64ModeactiveMode=getActiveZip64Mode(activeMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){checkIfNeedsZip64(phased);}else{Zip64ModeactiveMode=getActiveZip64Mode(activeMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=getActiveZip64Mode(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){checkIfNeedsZip64(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){checkIfNeedsZip64(phased);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){checkIfNeedsZip64(phased);finalZip64ModeactiveMode=getActiveZip64Mode(activeMode,phased);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){checkIfNeedsZip64(phased);}else{Zip64ModeactiveMode=getActiveZip64Mode(activeMode);closeEntry(activate,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getBytes(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entryentry=entry.getSize();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entries.getSize();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getParent().getChars(0,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getParent().getSize();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getImplicitSecond();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getBytesRead();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getBytesRead(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getImplicitInput();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getSecond().getSize();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytes()-1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytesInput();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getEnd();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getEncoding();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entryentry=entry.getValue();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64Modemode=zip64Mode.getMode();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64Modemode=zip64Mode.getMode();checkIfNeedsZip64(mode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64Modemode=zip64Mode.getMode();checkIfNeedsZip64(mode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Zip64Modemode=zip64Mode.getMode();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64Modemode=getMode();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=zip64Mode.getActiveMode();closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64Modemode=zip64Mode.getMode();closeEntry(mode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getTime();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entryentry.bytesRead=entry.getSize();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=getActiveMode();closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry<Zip64Mode>activeMode=getActiveMode();closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=getActualZip64Mode();closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){finalZip64ModeactiveMode=getActiveMode();closeEntry(activateMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getSize()+1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getCompressedSize();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getKey()+1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getKey()-1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getShort();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=getActiveZip64Mode(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=getActiveZip64Mode(phased-1);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){finalZip64ModeactiveMode=getActiveZip64Mode(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=getActiveZip64Mode(entry.phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=getActiveZip64Mode(phased,phased);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){checkIfNeedsZip64();finalZip64ModeactiveMode=getActiveZip64Mode(activeMode,phased);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531checkIfNeedsZip64(phased);finalZip64ModeactiveMode=getActiveZip64Mode(activeMode,phased);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=getActiveZip64Mode(phased);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){checkIfNeedsZip64(phased);finalZip64ModeactiveMode=getActiveZip64Mode(activeMode,phased);closeEntry(activateMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entryentry=this.entry.getSize();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entryentry=entry.getEntry();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entryentry=this.entry.getEntry();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entryentry=this.entry.getValue();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entryentry=entry.getKey();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entryentry=_entry.getSize();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=zip64Mode.getBytesRead(peek);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytesRead(peek,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytesRead(peek+1);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytesRead(peek-1);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getNext().getSize();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getValue().getSize();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getParent().getSize()+1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getKey().getSize();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getParent().getBytesRead();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getParent().getSize()-1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entries.getBytes();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getBytes(0);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=this.entry.getBytes();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getBytesInput();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entity.getBytes();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getImplicitSize()+1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getImplicitSize()-1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getImplicitSize()+BUFFER_SIZE;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getImplicitSize()*BUFFER_SIZE;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getImplicitSize();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytesRead()/1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytesRead(phased)+1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytesRead()*1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getParent().getSize()/1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getParent().getSize()*2+1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getNext().getSize()+1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getValue().getSize()+1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytes(DEFAULT_ENCODING);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getBytes("UTF-8");
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytes("US-ASCII");
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entryentry.bytesRead=entry.getKey();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entryentry.bytesRead=entry.getBytes();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entryentry.bytesRead=entry.getValue();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entryentry.bytesRead=entry.getSize()+1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entryentry.bytesRead=entry.getCompressedSize();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entryentry.bytesRead=entry.getImplicitReturn();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getKey().getSize()+1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getKey().toLowerCase();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getKey().getBytes();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getKey().toString();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getKey().getValue();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=phased.getBytes();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=phased.getBytes(entry.bytes);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=phased.getBytes(entry);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=phased?getZip64Mode():entry.getBytes(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalintphased=entry.getBytes(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=phased?getCurrentEntry().getBytes(phased):null;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=phased.getBytes(entry.block);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getImplicitReturn()*1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=checkIfNeedsZip64(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=checkIfNeedsZip64(activatedMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=getActiveZip64Mode(activeMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=checkIfNeedsZip64(mode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getImplicitInput();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getImplicitInput()-1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getImplicitInput()+1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getCompressedSize()+1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getCompressedSize()-1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getValue()+1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getValue()-1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getDecodedValue();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getNext();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getHeaderSize();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=phased.getBytesRead(entry);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=phased.getBytesRead(entry.phase);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=phased?getBytesRead(entry):entry.getBytesRead(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=phased?getBytesRead(entry.getKey()):entry.getBytesRead(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=phased?getBytesRead(entry.getValue()):entry.getBytesRead(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=phased.getBytesRead();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getValue()/1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getValue()*1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531EntryEntry.bytesRead=entry.getBytesRead();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531EntryEntry.bytesRead=entry.getKey();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531EntryEntry.bytesRead=entry.getValue();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531EntryEntry.bytesRead=entry.getSize()+1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531EntryEntry.bytesRead=entry.getStart();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getParent();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getEntry();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){finalZip64Modemode=zip64Mode.getMode();checkIfNeedsZip64(mode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64Modemode=this.zip64Mode.getMode();checkIfNeedsZip64(mode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64Modemode=getZip64Mode();checkIfNeedsZip64(mode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64Modemode=phased.getMode();checkIfNeedsZip64(mode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64Modemode=phased.getMode();checkIfNeedsZip64(mode,zip64Mode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531checkIfNeedsZip64(mode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalbooleanphased=checkIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finallyNeedsZip64=checkIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Preconditions.checkState(phased){checkIfNeedsZip64(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased&&checkIfNeedsZip64){checkIfNeedsZip64(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531checkIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){checkIfNeedsZip64(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytes(1);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytes(2);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytes(4);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){finalZip64ModeactiveMode=getActiveMode();closeEntry(activeMode,phased);}else{CheckIfNeedsZip64(activeMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){finalZip64ModeactiveMode=getActiveMode();closeEntry(activateMode,phased);}else{checkIfNeedsZip64(activeMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){finalZip64ModeactiveMode=getActiveMode();closeEntry(activeMode,phased);}else{checkIfNeedsZip64(activityMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getSecond().getStart();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getSecond().getBytes();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getSecond().getSize()+1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getSecond().getLength();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getSecond().getTime();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getSecond().getHeight();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getImplicitValue()+1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getImplicitValue()-1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getImplicitKey();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getImplicitChar();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getImplicitValue();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){Zip64ModeactiveMode=zip64Mode.getActiveMode();closeEntry(activeMode,phased);}else{checkIfNeedsZip64(activeMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){finalZip64ModeactiveMode=zip64Mode.getActiveMode();closeEntry(activateMode,phased);}else{checkIfNeedsZip64(activeMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){finalZip64ModeactiveMode=zip64Mode.getActiveMode();closeEntry(activeMode,phased);}else{CheckIfNeedsZip64(activeMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=phased.getParent().getChars(0);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=phased.getParent().getChars(0,entry.bytesRead);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getParent().getChars(0,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getNext().getChars(0,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=phased?entry.getParent().getChars(0,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entity.getParent().getChars(0,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Zip64Modemode=this.zip64Mode.getMode();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Zip64Modemode=phased?zip64Mode.getMode():null;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Zip64Modemode=phased?zip64Mode.getMode():DEFLATED;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Zip64Modemode=getZip64Mode();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Zip64Modemode=currentEntry.getMode();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Zip64Modemode=activeMode.getMode();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getImplicitSecond()+1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getImplicitSecond()-1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getImplicitSecond();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531EntryEntry.bytesRead=entry.getImplicitSecond();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){checkIfNeedsZip64();finalZip64ModeactiveMode=getActiveZip64Mode(activeMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531checkIfNeedsZip64(phased);finalZip64ModeactiveMode=getActiveZip64Mode(activeMode);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){checkIfNeedsZip64(phased);finalZip64ModeactiveMode=getActiveZip64Mode(activeMode);closeEntry(activateMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){finalZip64ModeactiveMode=checkIfNeedsZip64(activeMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=checkIfNeedsZip64(phased);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=checkIfNeedsZip64(mode);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=checkIfNeedsZip64(activatedMode);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=checkIfNeedsZip64(activeMode,phased);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64Modemode=getZip64Mode();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){finalZip64Modemode=getMode();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){finalZip64Modemode=getMode();}else{checkIfNeedsZip64(mode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){finalZip64Modemode=getMode();}else{closeZip64Mode(mode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64Modemode=getMode(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getKey()/1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getImplicitReturn()+1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getImplicitReturn()-1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getImplicitStart();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getImplicitFile();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytes(phased)-1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytes()*1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getEndTime();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=this.zip64Mode.getActiveMode();closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Zip64ModeactiveMode=zip64Mode.getActiveMode();closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=mode.getActiveMode();closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=getActiveZip64Mode(zip64Mode);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytesWriteEncoding();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytes().length-1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getSize()*1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){finalZip64Modemode=zip64Mode.getMode();closeEntry(mode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64Modemode=this.zip64Mode.getMode();closeEntry(mode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64Modemode=phased.getMode();closeEntry(mode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64Modemode=getZip64Mode();closeEntry(mode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){finalZip64Modemode=zip64Mode.getMode();closeEntry(mode,phased);}else{checkIfNeedsZip64(mode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){finalZip64Modemode=zip64Mode.getMode();closeEntry(mode,phased);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getBytesRead(0);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getBytesRead()+1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getBytesRead()-1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getBytesRead(peek);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getBytesRead(true);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getSize()/2;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getLength()/1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytes()/1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getByteValue();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getImplicitStart()+1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getImplicitStart()-1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getImplicitEnd();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531EntryEntry.bytesRead=entry.getImplicitStart();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531EntryEntry.bytesRead=entry.getBytes(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531EntryEntry.bytesRead=entry.getBytes(0);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531EntryEntry.bytesRead=entries.getBytes();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531EntryEntry.bytesRead=entry.getBytes(phased?1:0);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531EntryEntry.bytesRead=entry.getBytes(phased).getBytes();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531EntryEntry.bytesRead=entity.getBytes();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getNext().getSize()-1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getNext().getCompressedSize();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){Zip64ModeactiveMode=zip64Mode.getActiveMode();closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry<Zip64Mode>activeMode=zip64Mode.getActiveMode();closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=zip64Mode.getActiveMode();closeEntry(activeMode,Phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalbooleanphased=checkIfNeedsZip64(phased);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){checkIfNeedsZip64();closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finallyNeedsZip64=checkIfNeedsZip64(phased);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531checkIfNeedsZip64(phased);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=checkIfNeedsZip64(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=getZip64Mode(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=checkForNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=phased?entries.getSize():BUFFER_SIZE;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entries.getBytesRead();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entries.getSize()+1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=phased?entries.getSize():0;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=phased?entries.getSize():1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getValue().getSize()-1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getParent().getSize()*2-1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getNext().getBytesRead();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getParent().getBytesRead(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getValue().getBytesRead();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getParent().getBytesRead()+1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getParent().getBytesRead()-1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytesRead(1);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytesRead(2);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entryentry=entry.getBytesRead(0);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytesRead(phased?BUFFER_SIZE:BUFFER_SIZE)-1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytesRead(phased)-1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=phased.getBytesRead(entry.bytes);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=phased.getBytesRead();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=phased?getBytesRead(entry.bytes):entry.getBytesRead(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=phased.getBytesRead(entry);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=phased?getBytesRead(entry):entry.getBytesRead(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=phased?getBytesRead(entry.block):entry.getBytesRead(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=phased?getBytesRead(entry.key):entry.getBytesRead(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getValue().getBytes();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getValue().getStart();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getValue().getItemCount();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entryentry=zip64Mode.getValue();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entryentry=_entry.getValue();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entryentry=currentEntry.getValue();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entryentry=this.entry.getKey();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entryentry=getEntry();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getStart();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getEnd()+1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getEnd()-1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=zipEncoding.getEncoding();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getEncoding();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entryentry=zipEncoding.getEntry();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531EntryEntry.bytesRead=entry.getEncoding();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getImplicitReturn()/1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getImplicitReturn()+2;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){checkIfNeedsZip64();}else{Zip64ModeactiveMode=getActiveZip64Mode(activeMode);closeEntry(activate,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){checkIfNeedsZip64(phased);}else{Zip64ModeactiveMode=getActiveZip64Mode(activeMode);closeEntry(active,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=phased.getBytes(entry);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=phased.getBytes(entry.phase);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=phased.getBytes();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=phased.getBytes(entry.block);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=phased.getBytes(entry.cloneTree());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=phased?entry.getBytes(phased):null;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getByte();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getInt();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytes(phased)+1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){checkIfNeedsZip64();}else{Zip64ModeactiveMode=getActiveZip64Mode(activeMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){checkIfNeedsZip64(phased);}else{Zip64ModeactiveMode=getLocalZip64Mode(activeMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){checkIfNeedsZip64(phased);}else{Zip64ModeactiveMode=getActiveZip64Mode(activeMode);closeEntry(activeMode,Phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytesRead(false);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytesRead(true,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytesRead(false,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytesRead(booleanPhase);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){finalZip64Modemode=zip64Mode.getMode();checkIfNeedsZip64(mode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64Modemode=this.zip64Mode.getMode();checkIfNeedsZip64(mode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64Modemode=getZip64Mode();checkIfNeedsZip64(mode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Zip64Modemode=zip64Mode.getMode();checkIfNeedsZip64(mode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){finalZip64Modemode=zip64Mode.getMode();checkIfNeedsZip64(mode);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64Modemode=this.zip64Mode.getMode();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64Modemode=phased?zip64Mode.getMode():null;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64Modemode=currentZip64Mode.getMode();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64Modemode=_zip64Mode.getMode();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64Modemode=zip64Mode.cloneTree();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=checkIfNeedsZip64(module);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=getIfNeedsZip64(activeMode);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getValue().getChars();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getValue().getChars(0,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getValue().getTime();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entries.getValue();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=getActiveZip64Mode(activeMode,phased);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){checkIfNeedsZip64(phased);finalZip64ModeactiveMode=getActiveZip64Mode(activeMode,phased);closeEntry(activeMode,Phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getImplicitOutput();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=encoding.getImplicitValue();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getSecond().getChars(0,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getSecond().getImplicitReturn();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getChars(0,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getStart();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(zip64Mode!=null){finalZip64ModeactiveMode=zip64Mode.getActiveMode();closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=getZip64Mode();closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531EntryEntry.bytesRead=entry.getImplicitReturn();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getParent().getSize()*1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531EntryEntry.bytesRead=entry.getBytesISOControl();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531EntryEntry.bytesRead=entry.getBytesWriteEncoding();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=getActiveZip64Mode(activeMode);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){checkIfNeedsZip64(locked);finalZip64ModeactiveMode=getActiveZip64Mode(activeMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=zip64Mode.getBytes(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=this.zip64Mode.getBytes(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=encoding.getBytes(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=phased.getBytes(entry.cloneTree());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytesOutput();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){checkIfNeedsZip64();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getKey().getLength();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entryentry=getEntry().getSize();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entryentry=this.zip64Mode.getSize();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getSecond();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entryentry=entry.getBytesRead();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=getActiveZip64Mode(phased+1);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=getNewZip64Mode(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entryentry=this.zip64Mode.getValue();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entryentry=getEntry(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entryentry=encoding.getValue();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){finalZip64ModeactiveMode=getActiveZip64Mode(zip64Mode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){finalZip64ModeactiveMode=zip64Mode.getActiveMode();closeEntry(activateMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){zip64Mode=zip64Mode.getActiveMode();closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){finalZip64ModeactiveMode=getActiveZip64Mode();closeEntry(activeMode,phased);}else{checkIfNeedsZip64(activeMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){finalZip64ModeactiveMode=getActiveZip64Mode(entry.entry);closeEntry(activeMode,phased);}else{checkIfNeedsZip64(activeMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){finalZip64ModeactiveMode=getActiveZip64Mode();closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=getActiveZip64Mode();closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=getActiveZip64Mode(entry.entry);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getLength()-1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=getIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=getIfNeedsZip64Mode(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=checkIfNeedsZip64(module);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getNext().getBytesRead();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getChars();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getParent().getTime();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=encoding.getBytes();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getBytesWriteEncoding();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytes(phased?BUFFER_SIZE:BUFFER_SIZE)-1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytes(phased?BUFFER_SIZE-1:BUFFER_SIZE);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=getActiveZip64Mode(entry.getKey());closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=phased?getBytesRead(phased):entry.getBytesRead(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=PhasedUtilities.getBytesRead(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=PhasedEntry.getBytesRead(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getBytesRead(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531EntryEntry.bytesRead=entry.getChars();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){finalZip64Modemode=zip64Mode.getMode();checkIfNeedsZip64(mode,phased);}else{
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64Modemode=getZip64Mode(zip64Mode);closeEntry(mode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64Modemode=_zip64Mode.getMode();closeEntry(mode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=getIfNeedsZip64(activeMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64Modemode=getZip64Mode(zip64Mode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64Modemode=zip64Mode.clone();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getChars()/1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytesRead(phased?BUFFER_SIZE-1:BUFFER_SIZE)-1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getByteChar();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=encoding.getBytesRead(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=phased.getBytesRead(entry.block);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalintphased=entry.getBytesRead(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=phased.getBytesRead(entry.phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){finalZip64ModeactiveMode=zip64Mode.getActiveMode();closeEntry(activeMode,Phased);}else{checkIfNeedsZip64(activeMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entries.getBytes();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Preconditions.checkState(phased){checkIfNeedsZip64(phased);}else{Zip64ModeactiveMode=getActiveZip64Mode(activeMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){checkIfNeedsZip64(activeMode);}else{Zip64ModeactiveMode=getActiveZip64Mode(activeMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){checkIfNeedsZip64(phased);}else{Zip64ModeactiveMode=getActiveZip64Mode(activeMode);closeEntry(activateMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getBytesRead(false);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Preconditions.checkState(phased){checkIfNeedsZip64(phased);}else{Zip64ModeactiveMode=getActiveZip64Mode(activeMode);closeEntry(activate,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){checkIfNeedsZip64(activeMode);}else{Zip64ModeactiveMode=getActiveZip64Mode(activeMode);closeEntry(activate,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=getActiveZip64Mode(activeMode);closeEntry(activate,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getTime();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytes("UTF-8").reset();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytes(".UTF-8");
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytes("UTF-8").trim();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=this.zip64Mode.getBytes(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=zip64Mode.getBytes(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=phased.getBytes(entry.phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=currentEntry.getBytes(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=phased.getParent().getChars(0,entry.getValue());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=phased.getParent().getChars(0,entry.getName());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=phased.getParent().getChars(0,entry.getChronology());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=phased.getParent().getChars(0,entry.getChars());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=phased.getParent().getChars(0,entry.getSize());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entries.getBytesRead();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getSecond();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64Modemode=getZip64Mode(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64Modemode=zip64Mode();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64Modemode=getMode().cloneTree();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getIntValue();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getImplicitStart()+BUFFER_SIZE;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getImplicitStart()+2;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entries.getLength();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entries.getBytes(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entries.getByteArray();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Zip64Modemode=currentZip64Mode.getMode();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Zip64Modemode=phased.getZip64Mode();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entryentry=entry.getImplicitReturn();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entryentry=entry.getBytes(1);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entryentry=entry.getBytes();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){CheckIfNeedsZip64(phased);}else{Zip64ModeactiveMode=getActiveZip64Mode(activeMode);closeEntry(activate,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getEncoding()+1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(stepd){checkIfNeedsZip64(phased);finalZip64ModeactiveMode=getActiveZip64Mode(activeMode,phased);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(zip64Mode!=null){finalZip64Modemode=zip64Mode.getMode();checkIfNeedsZip64(mode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531intmode=zip64Mode.getMode();checkIfNeedsZip64(mode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getSize().getSize();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytesRead(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytesRead(phased-1);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=this.zip64Mode.getBytesRead(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=zip64Mode.getBytesRead(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytesRead(phased+1);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){finalZip64Modemode=getMode();}else{checkIfNeedsZip64(mode);closeEntry(mode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64Modemode=getMode(entry.getKey());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64Modemode=getMode(entry.getValue());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=zip64Mode.getBytesRead(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=this.zip64Mode.getBytesRead(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getBytesRead(phased-1);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entity.getBytesRead(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(zip64Mode!=null){finalZip64Modemode=zip64Mode.getMode();checkIfNeedsZip64(mode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64Modemode=zip64Mode.cloneTree();checkIfNeedsZip64(mode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(zip64Mode!=null){finalZip64Modemode=zip64Mode.getMode();checkIfNeedsZip64(mode);}else{break;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(zip64Mode!=null){finalZip64ModeactiveMode=zip64Mode.getActiveMode();closeEntry(activeMode,phased);}else{checkIfNeedsZip64(activeMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){finalZip64ModeactiveMode=zip64Mode.getActualMode();closeEntry(activeMode,phased);}else{checkIfNeedsZip64(activeMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getKey().getImplicitReturn();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytesRead(null);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytesRead(boolean);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531EntryEntry.bytesRead=entry.getBytesInput();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531EntryEntry.bytesRead=entry.getBytes(step);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531EntryEntry.bytesRead=entry.getBytes(zone);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(!phased){finalZip64ModeactiveMode=checkIfNeedsZip64(activeMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531intactiveMode=checkIfNeedsZip64(activeMode);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytes(phased?BUFFER_SIZE:1);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytes(phased).getBytes()-1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getSecond()-1;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entryentry=this.zip64Mode.getEntry();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entryentry=zip64Mode.getEntry();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytesRead(phased?DEFAULT_ENCODING:DEFAULT_ENCODING);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytesRead(phased?BUFFER_SIZE:1);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(!phased){checkIfNeedsZip64(phased);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){checkIfNeedsZip64(closeCopiedEntry);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){checkIfNeedsZip64(locked);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entryentry=entry.getParent().getSize();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entryentry.bytesRead=entry.getParent().getSize();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getNext().getImplicitReturn();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getSecond().getChars(0,BUFFER_SIZE);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531EntryEntry.bytesRead=entry.getCompressedSize();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getBytes(phased?DEFLATED:DEFLATED);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getBytes(phased).getBytes();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getImplicitSize()-BUFFER_SIZE;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytes()/BUFFER_SIZE;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytes()/2;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entryentry.bytesRead=entry.getBytesRead();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getValue().toString();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){finalZip64ModeactiveMode=getActiveZip64Mode(entry.entry);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){finalZip64ModeactiveMode=getActiveZip64Mode(entry.getKey());closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){finalZip64ModeactiveMode=getActiveZip64Mode(entry);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytesRead(-1);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finallyNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytesRead(comment);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64Modemode=getZip64Mode(entry.getMode());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64Modemode=zip64Mode.cloneTarget();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(zip64Mode!=null){finalZip64ModeactiveMode=zip64Mode.getActiveMode();closeEntry(activeMode,phased);}else{checkIfNeedsZip64(activeMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getBytes(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entity.getBytes(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entries.getBytes(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getKey().getBytesRead();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getSecond().getBytesRead();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=checkIfNeedsZip64(activateMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=checkIfNeedsZip64(activeMode?getActiveZip64Mode():null);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getParent().getChars(0,phased-1);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getParent().getChars(0,phased,DEFAULT_ENCODING);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getParent().getChars(0,phased,encoding);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getParent().getChars(0,phased+1);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytes(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytes(phased&BUFFER_SIZE);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531entry.bytesRead=entry.getBytes(phased-1);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entry.bytesRead=entry.getSecond().getSize();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){finalZip64ModeactiveMode=getActualZip64Mode();closeEntry(activeMode,phased);}else{checkIfNeedsZip64(activeMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=getActiveZip64Mode(entry);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=getActiveZip64Mode(entry.mode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=getActiveZip64Mode(entry.phase);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=getActiveZip64Mode(entry.module);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64ModeactiveMode=getActiveZip64Mode(entry.block);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entryentry=getEntry(entry.getImplicitStart());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(zip64Mode!=null){finalZip64Modemode=zip64Mode.getMode();closeEntry(mode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531finalZip64Modemode=getZip64Mode(entry.getMode());closeEntry(mode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531intmode=zip64Mode.getMode();closeEntry(mode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Zip64Modemode=zip64Mode.getMode();closeEntry(mode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Entryentry=entry.getBytes("UTF-8");
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531zip64Mode=zip64Mode.getActiveMode();closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531this.zip64Mode=zip64Mode.getActiveMode();closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Zip64Modemode=zip64Mode.cloneTree();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531Zip64Modemode=entry.getMode();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){CheckIfNeedsZip64(phased);}else{Zip64ModeactiveMode=getActiveZip64Mode(activeMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java531if(phased){checkIfNeedsZip64(phased);}else{Zip64ModeactiveMode=getActiveZip64Mode(activeMode);closeEntry(activatedMode,phased);}
