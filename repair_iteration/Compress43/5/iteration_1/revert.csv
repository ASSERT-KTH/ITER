projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(actuallyNeedsZip64,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(actuallyNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(actuallyNeedsZip64,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(actuallyNeedsZip64,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(actuallyNeedsZip64,phased);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(newZip64Mode(effectiveMode,phased));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanactualNeedsZip64=checkIfNeedsZip64(actualMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanactualNeedsZip64=checkIfNeedsZip64(actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(actualNeedsZip64!=phased){closeEntry(phased,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(actualNeedsZip64==phased){closeEntry(phased,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,phased,trueNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry.bytesRead,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,phased,actuallyNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,phased,false);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry.bytesRead,phased);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyNeedsZip64=checkIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(zip64Mode,phased);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry,phased);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry.bytesRead,phased);}else{Zip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){zip64Mode=checkIfNeedsZip64(effectiveMode);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,phased));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,phased));}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeeffectiveMode=newZip64Mode(effectiveMode,phased));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,phased));}else{entry.bytesRead.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeeffectiveMode=newZip64Mode(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,phased));}else{entry.bytesRead=zip64Mode;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(actualMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry,phased);}else{zip64Mode=getCopiedZip64Mode(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry,phased);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(actuallyNeedsZip64,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=verifyIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(actuallyNeedsZip64,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534stopCopiedEntry(actuallyNeedsZip64,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyNeedsZip64=checkIfNeedsZip64(percentageNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(phased,actuallyNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(phased,trueNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(phased,true);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(phased,false);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(phased+1);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(actualNeedsZip64!=phased){closeCopiedEntry(phased,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(actualNeedsZip64==phased){closeCopiedEntry(phased,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(actualNeedsZip64!=phased){closeCopiedEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(actualMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(actualNeedsZip64==phased){closeCopiedEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(actualMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(actualNeedsZip64!=phased){closeCopiedEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanactuallyNeedsZip64=checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanactuallyNeedsZip64=checkIfNeedsZip64(actualMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanactuallyNeedsZip64=checkIfNeedsZip64(effectMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanactuallyNeedsZip64=checkIfNeedsZip64(efficientMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanactualNeedsZip64=checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry.bytesRead,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalphased){closeEntry(actuallyNeedsZip64,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(effectiveMode,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(actuallyNeedsZip64,effectiveMode);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){for(finalZip64ModeactiveMode:activeModes){checkIfNeedsZip64(activeMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64Modemode=checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);}else{zip64Mode=getCopiedZip64Mode(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534zip64Mode=checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(!phased){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(entry,phased);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(zip64Mode,phased);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(entry.bytesRead,phased);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry.bytesRead,phased);}else{zip64Mode=getCopiedZip64Mode(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry.bytesRead,entry.phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(actuallyNeedsZip64,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(effectiveMode,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(phased){closeEntry(actuallyNeedsZip64,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(phased,actualNeedsZip64,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(phased,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(actualNeedsZip64!=phased){closeEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(actualMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(actualNeedsZip64!=phased){closeEntry(phased,actualNeedsZip64);}else{zip64Mode=getCopiedZip64Mode(actualMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(actualNeedsZip64!=phased){closeEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsCip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkPasedZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsChanged(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry,phased);}else{zip64Mode=getPaddedZip64Mode(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry,phased);}else{zip64Mode=getCopiedZip64Mode(entry.blocksRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(entry.bytesRead,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsPaint(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsSip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=getIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){closeEntry(newZip64Mode(effectiveMode,phased));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,phased));}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,phased));}else{zip64Mode=getPaddedZip64Mode(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(phased,actualNeedsZip64,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(phased,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(phased,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534phased=closePhaseEntry(actuallyNeedsZip64,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(newZip64Mode(effectiveMode,phased));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(newZip64Mode(activeMode,phased));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){closeEntry(newZip64Mode(effectiveMode,phased));}else{entry.bytesRead=zip64Mode;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){closeEntry(newZip64Mode(effectiveMode,phased));}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,phased));}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,phased,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(Zip64Mode.DEFAULT_ENCODING,phased);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(Zip64Mode.DEFAULT_ENCODING,zip64Mode);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(zip64Mode,phased);}else{Zip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534stopCopiedEntry(phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(entry.bytesRead,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(entry,phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(phased,trueNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(phased,actualNeedsZip64,trueNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);}else{entry.bytesRead=entry.getSize();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);}else{entry.bytesRead=entry.getBytesRead();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);}else{entry.bytesRead=entry.getByteRead();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);}else{zip64Mode=newZip64Mode();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){finalbooleanphased=checkIfNeedsZip64(actuallyNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){finalbooleanphased=checkIfNeedsZip64(actuallyNeedsZip64);}else{Zip64Modemode=getMode();closeCopiedEntry(mode,mode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){finalbooleanphased=checkIfNeedsZip64(actuallyNeedsZip64);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){finalbooleanphased=checkIfNeedsZip64(actuallyNeedsZip64);}else{Zip64Modemode=getMode();closeCopiedEntry(mode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){finalbooleanphased=checkIfNeedsZip64(actuallyNeedsZip64);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry,phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534openEntry(entry.bytesRead,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534CloseEntry(entry.bytesRead,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry,phased);}else{zip64Mode=getCopiedZip64Mode(entry.getName());}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(activeMode,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(entry,phased);}else{checkIfNeedsZip64(effectiveMode);}
