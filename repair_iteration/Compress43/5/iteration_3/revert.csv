projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(actuallyNeedsZip64,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(actuallyNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(actuallyNeedsZip64,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(actuallyNeedsZip64,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(actuallyNeedsZip64,phased);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(newZip64Mode(effectiveMode,phased));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanactualNeedsZip64=checkIfNeedsZip64(actualMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanactualNeedsZip64=checkIfNeedsZip64(actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(actualNeedsZip64!=phased){closeEntry(phased,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(actualNeedsZip64==phased){closeEntry(phased,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,phased,trueNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry.bytesRead,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,phased,actuallyNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,phased,false);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry.bytesRead,phased);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyNeedsZip64=checkIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(zip64Mode,phased);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry,phased);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry.bytesRead,phased);}else{Zip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){zip64Mode=checkIfNeedsZip64(effectiveMode);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,phased));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,phased));}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeeffectiveMode=newZip64Mode(effectiveMode,phased));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,phased));}else{entry.bytesRead.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeeffectiveMode=newZip64Mode(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,phased));}else{entry.bytesRead=zip64Mode;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(actualMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry,phased);}else{zip64Mode=getCopiedZip64Mode(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry,phased);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(actuallyNeedsZip64,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=verifyIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(actuallyNeedsZip64,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534stopCopiedEntry(actuallyNeedsZip64,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyNeedsZip64=checkIfNeedsZip64(percentageNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(phased,actuallyNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(phased,trueNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(phased,true);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(phased,false);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(phased+1);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(actualNeedsZip64!=phased){closeCopiedEntry(phased,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(actualNeedsZip64==phased){closeCopiedEntry(phased,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(actualNeedsZip64!=phased){closeCopiedEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(actualMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(actualNeedsZip64==phased){closeCopiedEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(actualMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(actualNeedsZip64!=phased){closeCopiedEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanactuallyNeedsZip64=checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanactuallyNeedsZip64=checkIfNeedsZip64(actualMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanactuallyNeedsZip64=checkIfNeedsZip64(effectMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanactuallyNeedsZip64=checkIfNeedsZip64(efficientMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanactualNeedsZip64=checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry.bytesRead,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalphased){closeEntry(actuallyNeedsZip64,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(effectiveMode,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(actuallyNeedsZip64,effectiveMode);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){for(finalZip64ModeactiveMode:activeModes){checkIfNeedsZip64(activeMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64Modemode=checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);}else{zip64Mode=getCopiedZip64Mode(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534zip64Mode=checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(!phased){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(entry,phased);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(zip64Mode,phased);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(entry.bytesRead,phased);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry.bytesRead,phased);}else{zip64Mode=getCopiedZip64Mode(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry.bytesRead,entry.phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(actuallyNeedsZip64,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(effectiveMode,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(phased){closeEntry(actuallyNeedsZip64,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(phased,actualNeedsZip64,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(phased,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(actualNeedsZip64!=phased){closeEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(actualMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(actualNeedsZip64!=phased){closeEntry(phased,actualNeedsZip64);}else{zip64Mode=getCopiedZip64Mode(actualMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(actualNeedsZip64!=phased){closeEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsCip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkPasedZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsChanged(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry,phased);}else{zip64Mode=getPaddedZip64Mode(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry,phased);}else{zip64Mode=getCopiedZip64Mode(entry.blocksRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(entry.bytesRead,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsPaint(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsSip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=getIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){closeEntry(newZip64Mode(effectiveMode,phased));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,phased));}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,phased));}else{zip64Mode=getPaddedZip64Mode(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(phased,actualNeedsZip64,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(phased,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(phased,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534phased=closePhaseEntry(actuallyNeedsZip64,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(newZip64Mode(effectiveMode,phased));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(newZip64Mode(activeMode,phased));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){closeEntry(newZip64Mode(effectiveMode,phased));}else{entry.bytesRead=zip64Mode;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){closeEntry(newZip64Mode(effectiveMode,phased));}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,phased));}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,phased,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(Zip64Mode.DEFAULT_ENCODING,phased);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(Zip64Mode.DEFAULT_ENCODING,zip64Mode);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(zip64Mode,phased);}else{Zip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534stopCopiedEntry(phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(entry.bytesRead,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(entry,phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(phased,trueNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(phased,actualNeedsZip64,trueNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);}else{entry.bytesRead=entry.getSize();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);}else{entry.bytesRead=entry.getBytesRead();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);}else{entry.bytesRead=entry.getByteRead();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);}else{zip64Mode=newZip64Mode();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){finalbooleanphased=checkIfNeedsZip64(actuallyNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){finalbooleanphased=checkIfNeedsZip64(actuallyNeedsZip64);}else{Zip64Modemode=getMode();closeCopiedEntry(mode,mode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){finalbooleanphased=checkIfNeedsZip64(actuallyNeedsZip64);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){finalbooleanphased=checkIfNeedsZip64(actuallyNeedsZip64);}else{Zip64Modemode=getMode();closeCopiedEntry(mode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){finalbooleanphased=checkIfNeedsZip64(actuallyNeedsZip64);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry,phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534openEntry(entry.bytesRead,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534CloseEntry(entry.bytesRead,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry,phased);}else{zip64Mode=getCopiedZip64Mode(entry.getName());}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(activeMode,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(entry,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=actualNeedsZip64!=phased){closeCopiedEntry(phased,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=actualNeedsZip64==phased){closeCopiedEntry(phased,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534CloseCopiedEntry(phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=actualNeedsZip64!=phased){closeCopiedEntry(phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyNeedsZip64=checkIfNeedsZip64(actualMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanfinallyNeedsZip64=checkIfNeedsZip64(percentageNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanactuallyNeedsZip64=checkIfNeedsZip64(percentageNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanfinallyNeedsZip64=checkIfNeedsZip64(actualMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyNeedsZip64=checkIfNeedsZip64(effectMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){zip64Mode=getCopiedZip64Mode(entry.blocksRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){zip64Mode=getCopiedZip64Mode(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyNeedsZip64){closeEntry(entry,phased);}else{zip64Mode=getCopiedZip64Mode(entry.blocksRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry,phased);}else{Zip64ModeeffectiveMode=getCopiedZip64Mode(entry.blocksRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanactuallyNeedsZip64=checkIfNeedsZip64(activeMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanactuallyNeedsZip64=checkIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanactuallyNeedsZip64=getIfNeedsZip64(actualMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanactuallyNeedsZip64=checkIfNeedsZip64(actualMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,checkIfNeedsZip64));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64&&phased){closeEntry(newZip64Mode(effectiveMode,phased));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,checkedIfNeedsZip64));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyPhased){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&effectiveMode!=zip64Mode){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&checkIfNeedsZip64(effectiveMode)){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyPased){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyPhased){closeEntry(zip64Mode,phased);}else{Zip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(zip64Mode,effectiveMode);}else{Zip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(zip64Mode,phased);}else{Zip64ModeeffectiveMode=checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=phased?checkIfNeedsZip64(phased):checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534phased=closePhaseEntry(phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534phased=closeCopiedEntry(phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534phased=closePhaseEntry(entry.bytesRead,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534phased=closePhaseEntry(actuallyNeedsZip64,phased,checkIfNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534phased=closePhaseEntry(actuallyNeedsZip64,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534phased=closePhaseEntry(percentageNeedsZip64,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534phased=closePhaseEntry(actuallyNeedsZip64,phased,trueNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=actualNeedsZip64==phased){closeEntry(phased,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=actualNeedsZip64!=phased){closeEntry(phased,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=actualNeedsZip64==phased){closeEntry(phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=actualNeedsZip64!=phased){closeEntry(phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalphased=checkIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&actualNeedsZip64!=phased){closeCopiedEntry(phased,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalphased=closeCopiedEntry(phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=closeCopiedEntry(phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(phased,actualNeedsZip64,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyPased){closeCopiedEntry(phased,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(entry.bytesRead,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(phased,actualNeedsZip64,trueNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(actualMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=actualNeedsZip64!=phased){closeEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(actualMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=actualNeedsZip64==phased){closeEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(actualMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){checkIfNeedsZip64(actualNeedsZip64);}else{checkIfNeedsZip64(actualMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalphased=phased?checkIfNeedsZip64(phased):checkIfNeedsZip64(actualMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=actualNeedsZip64!=phased){closeEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(activeMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(effectiveMode,actualNeedsZip64);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry.bytesRead,effectiveMode);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=phased?checkIfNeedsZip64(effectiveMode):checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){checkIfNeedsZip64(effectiveMode);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){checkIfNeedsZip64(effectiveMode,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=phased?checkIfNeedsZip64(effectiveMode):checkIfNeedsZip64;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(phased,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(phased,realNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(phased,efectivNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyPhased){closeEntry(zip64Mode,phased);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(zip64Mode,effectiveMode);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(zip64Mode,phased);}else{zip64Mode=checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeeffectiveMode=checkIfNeedsZip64(entry.bytesRead);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeeffectiveMode=checkIfNeedsZip64(activeMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeeffectiveMode=checkIfNeedsZip64(mode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeeffectiveMode=checkIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeeffectiveMode=checkIfNeedsZip64(entry.mode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanactuallyNeedsZip64=getIfNeedsZip64(effectMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanactuallyNeedsZip64=checkIfNeedsZip64(effectMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanactuallyNeedsZip64=checkIfNeedsZip64(positiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(entry.bytesRead,phased,trueNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(entry.bytesRead,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(entry.bytesRead,phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(entry.bytesRead,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(entry.bytesRead,phased,false);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(entry.bytesRead,phased);}else{checkIfNeedsZip64(actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(entry.bytesRead,phased);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(actualMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){if(actualNeedsZip64!=phased){closeCopiedEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(actualMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){if(actualNeedsZip64!=actualNeedsZip64){closeCopiedEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(actualMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=actualNeedsZip64!=phased){closeCopiedEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(actualMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=actualNeedsZip64==phased){closeCopiedEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(actualMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(actualMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){if(actualNeedsZip64!=phased){closeCopiedEntry(phased,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){if(actualNeedsZip64!=actualNeedsZip64){closeCopiedEntry(phased,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(phased){closeEntry(entry,phased);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){preClose(entry,phased);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry.bytesRead,phased);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyPhased){preClose(entry,phased);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){finalbooleanphased=checkIfNeedsZip64(mode);}else{Zip64Modemode=getMode();closeCopiedEntry(mode,mode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){finalbooleanphased=checkIfNeedsZip64(mode,actualNeedsZip64);}else{Zip64Modemode=getMode();closeCopiedEntry(mode,mode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){finalbooleanphased=checkIfNeedsZip64(activeMode);}else{Zip64Modemode=getMode();closeCopiedEntry(mode,mode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(mode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){finalbooleanphased=checkIfNeedsZip64(module);}else{Zip64Modemode=getMode();closeCopiedEntry(mode,mode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanactualNeedsZip64=checkIfNeedsZip64(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanactualNeedsZip64=checkIfNeedsZip64(efficientMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanactualNeedsZip64=checkIfNeedsZip64(activeMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanactualNeedsZip64=checkIfNeedsZip64(efficientMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanactualNeedsZip64=checkIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanactualNeedsZip64=getIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(phased,false,true);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(phased,false,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(phased,false,actuallyNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,phased,falseNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,phased,trueNeedsZip64,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,phased,effectiveMode,trueNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,phased,trueNeedsZip64,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,trueNeedsZip64,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,phased,trueNeedsZip64,trueMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,phased,trueNeedsZip64,false);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanactuallyNeedsZip64=checkIfNeedsZip64(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanactuallyNeedsZip64=phased?checkIfNeedsZip64(effectiveMode):checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanactuallyNeedsZip64=getIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleaneffectiveMode=checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleaneffectiveNeedsZip64=checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534checkIfNeedsZip64(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);}else{thrownewIllegalStateException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyPhased){closeEntry(entry.bytesRead,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){checkIfNeedsZip64(entry.bytesRead,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyPhased){closeEntry(newZip64Mode(effectiveMode,phased));}else{entry.bytesRead=zip64Mode;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,phased));}else{entry.bytesRead=ZIP64Mode;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,phased));}else{entry.bytesRead=true;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,phased));}else{entry.bytesRead=null;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyPhased){closeEntry(entry.bytesRead,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=closePhaseEntry(entry.bytesRead,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=closeEntry(entry.bytesRead,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534phased=closeEntry(entry.bytesRead,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyPhased(entry.bytesRead,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,phased,true);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,phased,false,trueNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534CloseEntry(entry.bytesRead,phased,true);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry.bytesRead,phased,false);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534openEntry(entry.bytesRead,phased,false);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){checkIfNeedsZip64(effectiveMode);}else{entry.bytesRead=entry.getSize();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(!phased){checkIfNeedsZip64(effectiveMode);}else{entry.bytesRead=entry.getSize();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){checkIfNeedsZip64(efficientMode);}else{entry.bytesRead=entry.getSize();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){checkIfNeedsZip64(effectiveMode);}else{entry.bytesRead=entry.getByteRead();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(!phased){checkIfNeedsZip64(effectiveMode);}else{entry.bytesRead=entry.getByteRead();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){checkIfNeedsZip64(efficientMode);}else{entry.bytesRead=entry.getByteRead();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){checkIfNeedsZip64(entry,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){zip64Mode=getCopiedZip64Mode(entry.getName());}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyNeedsZip64){closeEntry(entry,phased);}else{zip64Mode=getCopiedZip64Mode(entry.getName());}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry,phased);}else{Zip64ModeeffectiveMode=getCopiedZip64Mode(entry.getName());}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyNeedsZip64){closeEntry(entry,phased);}else{Zip64ModeeffectiveMode=getCopiedZip64Mode(entry.getName());}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Entry<Zip64Mode>phased=getCopiedZip64Mode(entry.getName());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){zip64Mode=getPaddedZip64Mode(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry,phased);}else{Zip64ModeeffectiveMode=getPaddedZip64Mode(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=getPaddedZip64Mode(entry.bytesRead);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){zip64Mode=getPaddedZip64Mode(entry.bytesRead);}else{Zip64ModeeffectiveMode=getPaddedZip64Mode(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){zip64Mode=getPaddedZip64Mode(entry.bytesRead);}else{zip64Mode=getPaddedZip64Mode(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyPhased){closeEntry(Zip64Mode.DEFAULT_ENCODING,phased);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyPased){closeEntry(Zip64Mode.DEFAULT_ENCODING,phased);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(Zip64Mode.DEFAULT_ENCODING,effectiveMode);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(Zip64Mode.DEFAULT_ENCODING,trueNeedsZip64);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(Zip64Mode.DEFAULT_ENCODING,initialNeedsZip64);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyPased){closeEntry(Zip64Mode.DEFAULT_ENCODING,zip64Mode);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(Zip64Mode.DEFAULT_ENCODING,zip64Mode);}else{Zip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(Zip64Mode.DEFAULT_ENCODING,ZIP64Mode);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(Zip64Mode.DEFAULT_ENCODING,zip64Mode);}else{zip64Mode=checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyPhased){closeEntry(newZip64Mode(effectiveMode,phased));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,trueNeedsZip64));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(phased));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(phased,actualNeedsZip64);}else{zip64Mode=getCopiedZip64Mode(actualMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){if(actualNeedsZip64!=phased){closeEntry(phased,actualNeedsZip64);}else{zip64Mode=getCopiedZip64Mode(actualMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=actualNeedsZip64!=phased){closeEntry(phased,actualNeedsZip64);}else{zip64Mode=getCopiedZip64Mode(actualMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=actualNeedsZip64==phased){closeEntry(phased,actualNeedsZip64);}else{zip64Mode=getCopiedZip64Mode(actualMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){if(actualNeedsZip64!=phased){closeEntry(phased,actualNeedsZip64);}else{Zip64ModeeffectiveMode=getCopiedZip64Mode(actualMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(phased,actualNeedsZip64);}else{Zip64ModeeffectiveMode=getCopiedZip64Mode(actualMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){if(actualNeedsZip64!=phased){closeEntry(phased,actualNeedsZip64);}else{zip64Mode=getCopiedZip64Mode(actualMode);}}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyPhased){closeEntry(newZip64Mode(effectiveMode,phased));}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){zip64Mode=newZip64Mode(effectiveMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,phased),zip64Mode);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(entry.bytesRead,phased));}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){zip64Mode=newZip64Mode(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyPhased){closeEntry(newZip64Mode(effectiveMode,phased));}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalphased){closeEntry(newZip64Mode(effectiveMode,phased));}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){checkIfNeedsZip64(newZip64Mode(effectiveMode,phased));}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,phased),phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyPadded){closeEntry(newZip64Mode(effectiveMode,phased));}else{zip64Mode=getPaddedZip64Mode(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){zip64Mode=getPaddedZip64Mode(effectiveMode);}else{zip64Mode=getPaddedZip64Mode(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,phased));}else{zip64Mode=getPaddedZip64Mode(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,phased),zip64Mode);}else{zip64Mode=getPaddedZip64Mode(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyPadded){closeEntry(newZip64Mode(effectiveMode,phased));}else{zip64Mode=getPaddedZip64Mode(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){zip64Mode=getPaddedZip64Mode(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyPhased){closeEntry(activeMode,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalphased){closeEntry(activeMode,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534phased){closeEntry(activeMode,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyPhased){closeCopiedEntry(newZip64Mode(effectiveMode,phased));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyPhased(newZip64Mode(effectiveMode,phased));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534validatePhase(newZip64Mode(effectiveMode,phased));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(newZip64Mode(entry.bytesRead,phased));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyPhased){closeCopiedEntry(newZip64Mode(activeMode,phased));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalphased=closeCopiedEntry(newZip64Mode(activeMode,phased));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(newZip64Mode(activeMode,trueNeedsZip64));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534phased=closeCopiedEntry(newZip64Mode(activeMode,phased));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(newZip64Mode(activeMode,actualNeedsZip64));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){closeEntry(entry.bytesRead,effectiveMode);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){closeEntry(entry.bytesRead,effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){closeEntry(entry.bytesRead,effectiveMode);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,effectiveMode,trueNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(effectiveMode){closeEntry(entry.bytesRead,effectiveMode);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanactuallyNeedsZip64=getIfNeedsZip64(efficientMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanactuallyNeedsZip64=checkIfNeedsZip64(efficientMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(effectiveMode,actualNeedsZip64,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(entry.bytesRead,phased,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(entry.bytesRead,actualNeedsZip64,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(actualNeedsZip64){closeCopiedEntry(phased,actualNeedsZip64,effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){closeCopiedEntry(phased,actualNeedsZip64,effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyPhased){closeEntry(entry,phased);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry,phased);}else{Zip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyPhased){zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){zip64Mode=checkIfNeedsZip64(effectiveMode);}else{Zip64ModeeffectiveMode=getEffectiveZip64Mode(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsChanged(phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsChanged(phased,trueNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsChanged(phased,false);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsChanged(phased,true);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsChanged(phased,actuallyNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsChanged(phased,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534CloseEntry(entry.bytesRead,actualNeedsZip64,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534CloseEntry(entry.bytesRead,actualNeedsZip64,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534CloseEntry(entry.bytesRead,actualNeedsZip64,trueMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534CloseEntry(entry.bytesRead,effectiveMode,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534CloseEntry(entry.bytesRead,actualNeedsZip64,checkIfNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534CloseEntry(entry.bytesRead,actualNeedsZip64,trueNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534CloseEntry(entry.bytesRead,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanactualNeedsZip64=checkIfNeedsZip64(actualMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanactualNeedsZip64=checkIfNeedsZip64(effectMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanactualNeedsZip64=getIfNeedsZip64(actualMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,actualNeedsZip64,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,actualNeedsZip64,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,actualNeedsZip64,trueMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,actualNeedsZip64,trueNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){finalbooleanphased=checkIfNeedsZip64(mode);}else{Zip64Modemode=getMode();closeCopiedEntry(mode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){finalbooleanphased=checkIfNeedsZip64(activeMode);}else{Zip64Modemode=getMode();closeCopiedEntry(mode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){finalbooleanphased=checkIfNeedsZip64(module);}else{Zip64Modemode=getMode();closeCopiedEntry(mode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){finalZip64Modemode=getMode();closeCopiedEntry(mode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeeffectiveMode=newZip64Mode(activeMode,phased));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeeffectiveMode=newZip64Mode(phased,effectiveMode));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeeffectiveMode=newZip64Mode(mode,phased));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeeffectiveMode=newZip64Mode(entry.bytesRead,phased));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeeffectiveMode=newZip64Mode(effectiveMode,phased,zipEncoding));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=actualNeedsZip64>=phased){closeEntry(phased,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=actualNeedsZip64>>phased){closeEntry(phased,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyPhased){closeEntry(phased,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry.bytesRead,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalphased=closeEntry(phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyPhased(phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyNeedsZip64=checkIfNeedsZip64(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanfinallyNeedsZip64=checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyNeedsZip64=checkIfNeedsZip64(efficientMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyNeedsZip64=checkIfNeedsZip64(effectiveMode,true);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){closeEntry(newZip64Mode(effectiveMode,phased),entry.bytesRead);}else{entry.bytesRead=zip64Mode;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){checkIfNeedsZip64();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){closeEntry(newZip64Mode(effectiveMode,phased));}else{entry.bytesRead=ZIP64Mode;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Zip64ModeeffectiveMode=checkIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534nchMode=checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){zip64Mode=newZip64Mode(effectiveMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){zip64Mode=newZip64Mode(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){closeEntry(newZip64Mode(effectiveMode,phased),zip64Mode);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534stopCopiedEntry(entry.bytesRead,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534stopCopiedEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534stopCopiedEntry(newZip64Mode(effectiveMode,phased));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534stopCopiedEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534stopCopiedEntry(step64Mode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534stopCopiedEntry(entry,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(entry.bytesRead,actualNeedsZip64,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(actualNeedsZip64){closeCopiedEntry(entry.bytesRead,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(entry.bytesRead,actualNeedsZip64,trueMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(entry.bytesRead,trueNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534CloseCopiedEntry(entry.bytesRead,actualNeedsZip64,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){for(finalZip64ModeactiveMode:activeModes){checkIfNeedsZip64(activeMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534for(finalZip64ModeactiveMode:activeModes){checkIfNeedsZip64(activeMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeactiveMode=checkIfNeedsZip64(activeMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeactiveMode=getActiveZip64Mode(entry.bytesRead);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeactiveMode=activeModes.get(activeMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534checkIfNeedsZip64(activeMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Finalbooleanphased=checkIfNeedsZip64(phased,false);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkedIfNeedsZip64(phased,false);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534staticfinalbooleanphased=checkIfNeedsZip64(phased,false);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(phased){checkIfNeedsZip64(effectiveMode,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalPreconditions.checkState(phased){closeEntry(actuallyNeedsZip64,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(phased){closeCopiedEntry(actuallyNeedsZip64,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(phased){closeCopiedEntry(effectiveMode,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalPreconditions.checkState(phased){checkIfNeedsZip64(effectiveMode,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(phased){checkIfNeedsZip64(effectiveMode);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(phased){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanfinallyNeedsZip64=checkIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,phased,effectiveMode,actuallyNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534CloseEntry(entry.bytesRead,phased,effectiveMode,actuallyNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,phased,effectivenessMode,actuallyNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,phased,effectiveMode,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,phased,effectivelyNeedsZip64,trueMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534CloseEntry(entry.bytesRead,phased,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyPhased){closeEntry(entry,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){closeEntry(entry.bytesRead,phased,effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534zip64Mode=checkIfNeedsZip64(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Zip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534zip64Mode=checkIfNeedsZip64(efficientMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534zip64Mode=checkIfNeedsZip64(efficientMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534zip64Mode=checkIfNeedsZip64(activeMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534zip64Mode=checkIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){checkIfNeedsZip64(effectiveMode);}else{zip64Mode=getCopiedZip64Mode(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534zip64Mode=getCopiedZip64Mode(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){checkIfNeedsZip64(effectiveMode);}else{Zip64ModeeffectiveMode=getCopiedZip64Mode(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){checkIfNeedsZip64(effectiveMode);}else{zip64Mode=getCopiedZip64Mode(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsPaint(phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsPaint(phased,trueNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsPaint(phased,false);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsPaint(phased,actuallyNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsPaint(phased,true);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeeffectiveMode=newZip64Mode(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeeffectiveMode=newZip64Mode(phased,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeeffectiveMode=newZip64Mode(mode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeeffectiveMode=newZip64Mode(effectiveMode,phased,trueNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeeffectiveMode=newZip64Mode(effectiveMode,phased,zipEncoding);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeeffectiveMode=newZip64Mode(effectiveMode,phased,checkIfNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalphased){closeCopiedEntry(actuallyNeedsZip64,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534phased){closeCopiedEntry(actuallyNeedsZip64,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(actuallyNeedsZip64,effectiveMode);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyPhased){closeCopiedEntry(effectiveMode,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalphased){closeCopiedEntry(effectiveMode,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(efficientMode,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkPasedZip64(phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkPasedZip64(phased,trueNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkPasedZip64(phased,false);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkPasedZip64(phased,true);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkPasedZip64(phased,actuallyNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(entry,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyPhased){closeEntry(entry,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyNeedsZip64){closeEntry(entry,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalphased){closeEntry(entry,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){checkIfNeedsZip64(effectiveMode);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534zip64Mode.close();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){checkIfNeedsZip64(efficientMode);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534stopCopiedEntry(entry.bytesRead,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534stopCopiedEntry(phased,actualNeedsZip64,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534stopCopiedEntry(phased,trueNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534stopCopiedEntry(phased,actualNeedsZip64,trueMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534stopCopiedEntry(entry,phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534stopCopiedEntry(entry.bytesRead,phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=actualNeedsZip64==phased){closeCopiedEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(activeMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyPhased){closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534phased=checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalphased){closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry,phased,actualNeedsZip64,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry,phased,actualNeedsZip64,trueMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry,phased,actualNeedsZip64,actuallyNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534CloseEntry(entry.bytesRead,phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534openEntry(entry.bytesRead,phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry,phased,actualNeedsZip64,false);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64Modemode=checkIfNeedsZip64(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64Modemode=checkIfNeedsZip64(activeMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64Modemode=checkIfNeedsZip64(efficientMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64Modemode=checkIfNeedsZip64(efficientMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64Modemode=checkIfNeedsZip64(entry.bytesRead);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64Modemode=checkIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534CheckIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased){closeEntry(actuallyNeedsZip64,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased){closeEntry(effectiveMode,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased){closeCopiedEntry(actuallyNeedsZip64,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsSip64(phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsSip64(phased,trueNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsSip64(phased,actuallyNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsSip64(phased,false);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsSip64(phased,true);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){checkIfNeedsZip64(effectiveMode);}else{entry.bytesRead=entry.getBytesRead();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(!phased){checkIfNeedsZip64(effectiveMode);}else{entry.bytesRead=entry.getBytesRead();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){checkIfNeedsZip64(efficientMode);}else{entry.bytesRead=entry.getBytesRead();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534openEntry(entry.bytesRead,actualNeedsZip64,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534openEntry(entry.bytesRead,actualNeedsZip64,trueMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534openEntry(entry.bytesRead,actualNeedsZip64,trueNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534openEntry(entry.bytesRead,trueNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534openEntry(entry.bytesRead,actualNeedsZip64,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534openEntry(entry.bytesRead,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534openEntry(entry.bytesRead,actualNeedsZip64,checkIfNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyPhased){closeEntry(effectiveMode,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry.bytesRead,phased);}else{zip64Mode=checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){zip64Mode=checkIfNeedsZip64(effectiveMode);}else{Zip64ModeeffectiveMode=getEffectiveZip64Mode(entry.bytesRead,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){finalbooleanphased=checkIfNeedsZip64(phased);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){finalbooleanphased=checkIfNeedsZip64(effectiveMode);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyPhased){closeEntry(entry.bytesRead,phased);}else{Zip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry.bytesRead,phased);}else{Zip64ModeeffectiveMode=checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry.bytesRead,Phased);}else{Zip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(entry,phased,actualNeedsZip64,actuallyNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(entry,phased,actualNeedsZip64,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(entry,phased,actualNeedsZip64,trueMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534CloseCopiedEntry(entry.bytesRead,phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(entry,phased,actualNeedsZip64,realMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(entry,phased,actualNeedsZip64,actualMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=actualNeedsZip64!=phased){closeEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=actualNeedsZip64==phased){closeEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){checkIfNeedsZip64(actualNeedsZip64);}else{checkIfNeedsZip64(actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=actualNeedsZip64!=phased){closeEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=actualNeedsZip64==phased){closeEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=actualNeedsZip64!=phased){checkIfNeedsZip64(phased,actualNeedsZip64);}else{checkIfNeedsZip64(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyPhased){zip64Mode=checkIfNeedsZip64(effectiveMode);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){zip64Mode=checkIfNeedsZip64(effectiveMode);}else{Zip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyPhased){zip64Mode=checkIfNeedsZip64(effectiveMode);}else{zip64Mode=checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){zip64Mode=checkIfNeedsZip64(efficientMode);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){zip64Mode=checkIfNeedsZip64(effectiveMode);}else{zip64Mode=checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(phased,trueNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){closeCopiedEntry(phased,trueNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(phased,trueNeedsZip64,false);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(phased,trueNeedsZip64,trueMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(phased,falseNeedsZip64,trueNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=trueNeedsZip64;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(phased,trueNeedsZip64,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyNeedsZip64){closeEntry(entry.bytesRead,phased);}else{zip64Mode=getCopiedZip64Mode(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry.bytesRead,phased);}else{Zip64ModeeffectiveMode=getCopiedZip64Mode(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){zip64Mode=getCopiedZip64Mode(entry.bytesRead);}else{Zip64ModeeffectiveMode=getCopiedZip64Mode(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){zip64Mode=getCopiedZip64Mode(entry.bytesRead);}else{zip64Mode=getCopiedZip64Mode(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(effectiveMode,actualNeedsZip64,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry,actualNeedsZip64,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&zip64Mode!=null){closeEntry(entry,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry,phased);}else{Zip64ModeeffectiveMode=getEffectiveZip64Mode(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&zip64Mode!=null){zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyNeedsZip64){closeEntry(entry,phased);}else{zip64Mode=getCopiedZip64Mode(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry,phased);}else{Zip64ModeeffectiveMode=getCopiedZip64Mode(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=getCopiedZip64Mode(entry.bytesRead);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,phased,actualNeedsZip64,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,phased,actualNeedsZip64,actuallyNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,phased,actualNeedsZip64,trueMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,phased,actualNeedsZip64,efectivMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,phased,actualNeedsZip64,realMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,phased,actualNeedsZip64,false);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyPhased){closeCopiedEntry(entry,phased);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(entry,phased);}else{Zip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyPhased){closeCopiedEntry(entry,phased);}else{Zip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(entry,phased);}else{zip64Mode=checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=getIfNeedsZip64(phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=getIfNeedsZip64(phased,trueNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=getIfNeedsZip64(phased,actuallyNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyPhased){closeEntry(entry.bytesRead,entry.phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=closeEntry(entry.bytesRead,entry.phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyNeedsZip64){closeEntry(entry.bytesRead,entry.phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(entry.bytesRead,entry.phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){closeCopiedEntry(phased,effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){closeCopiedEntry(phased,effectiveMode);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){closeCopiedEntry(phased,effectiveMode);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(effectiveMode!=phased){closeCopiedEntry(phased,effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(effectiveMode!=phased){closeCopiedEntry(phased,effectiveMode);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){closeCopiedEntry(phased,effectiveMode);}else{thrownewIllegalStateException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534phased=checkIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry,actualNeedsZip64,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(actualNeedsZip64){closeEntry(entry,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(actualNeedsZip64){closeEntry(entry,actualNeedsZip64);}else{checkIfNeedsZip64(actualMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(actualNeedsZip64){closeEntry(entry,actualNeedsZip64);}else{checkIfNeedsZip64(actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsCip64(phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsCip64(phased,trueNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsCip64(phased,actuallyNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsCip64(phased,false);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsCip64(phased,true);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanactualNeedsZip64=checkIfNeedsZip64(actualNeedsZip64,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanactualNeedsZip64=checkIfNeedsZip64(actualNeedsZip64+1);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanactualNeedsZip64=checkIfNeedsZip64(actualNeedsZip64),phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanactualNeedsZip64=checkIfNeedsZip64(actualNeedsZip64)&&phased;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanactualNeedsZip64=checkIfNeedsZip64(actualNeedsZip64));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=verifyIfNeedsZip64(phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=verifyIfNeedsZip64(phased,actuallyNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=verifyIfNeedsZip64(phased,true);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=verifyIfNeedsZip64(phased,false);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(entry.bytesRead,phased);}else{Zip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(entry.bytesRead,phased);}else{zip64Mode=checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=closeCopiedEntry(entry.bytesRead,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(entry.bytesRead,Phased);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(entry.bytesRead,phased);}else{ZIP64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(phased,actualMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(phased,actualNeedsZip64,actualMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(phased,actualNeedsZip64,trueMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(phased,trueMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(phased,effectivelyMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(phased+2);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(phased+3);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(phased,actualNeedsZip64+1);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(phased,effectiveMode+1);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkForNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkPasedZip64(actualMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(activeMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyPhased){closeEntry(newZip64Mode(effectiveMode,phased));}else{entry.bytesRead.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,phased),entry.bytesRead);}else{entry.bytesRead.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,phased),false);}else{entry.bytesRead.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){if(actualNeedsZip64!=phased){closeCopiedEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){if(actualNeedsZip64!=actualNeedsZip64){closeCopiedEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=actualNeedsZip64!=phased){closeCopiedEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=actualNeedsZip64==phased){closeCopiedEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=actualNeedsZip64==phased){closeCopiedEntry(phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(!phased){closeEntry(newZip64Mode(effectiveMode,phased));}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(phased){closeEntry(newZip64Mode(effectiveMode,phased));}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyPhased){preClose(newZip64Mode(effectiveMode,phased));}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,phased),trueNeedsZip64);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534phased=closeCopiedEntry(actuallyNeedsZip64,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalphased=closeCopiedEntry(actuallyNeedsZip64,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){finalbooleanphased=checkIfNeedsZip64(zip64Mode);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){finalbooleanphased=checkIfNeedsZip64(entry.bytesRead);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){finalbooleanphased=checkIfNeedsZip64(currentEntry.bytesRead);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){finalbooleanphased=checkIfNeedsZip64(step64Mode);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){finalbooleanphased=checkIfNeedsZip64(plot);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){checkIfNeedsZip64(effectiveMode);}else{zip64Mode=newZip64Mode();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534zip64Mode=newZip64Mode();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Zip64ModeeffectiveMode=getEffectiveZip64Mode(entry.bytesRead);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(phased,trueNeedsZip64,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(entry.bytesRead,actualNeedsZip64,trueNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(phased,actualNeedsZip64,trueMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(phased,actualNeedsZip64,falseNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(phased,actualNeedsZip64,falseNeedsZip64,trueNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(phased,falseNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(phased,trueNeedsZip64,trueMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(phased,trueNeedsZip64,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyPhased){closeCopiedEntry(zip64Mode,phased);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(zip64Mode,effectiveMode);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalphased){closeCopiedEntry(zip64Mode,phased);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(zip64Mode,phased);}else{Zip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closePaddedEntry(newZip64Mode(effectiveMode,phased));}else{zip64Mode=getPaddedZip64Mode(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&zip64Mode!=getPaddedZip64Mode()){closeEntry(newZip64Mode(effectiveMode,phased));}else{zip64Mode=getPaddedZip64Mode(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&checkIfNeedsZip64!=effectiveMode){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&checkIfNeedsZip64==effectiveMode){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){checkIfNeedsZip64(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(actualNeedsZip64!=entry.bytesRead){closeEntry(entry,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(actualNeedsZip64!=entry.bytesRead){closeEntry(entry,actualNeedsZip64);}else{zip64Mode=checkIfNeedsZip64(actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(actualNeedsZip64!=entry.bytesRead){closeEntry(entry,actualNeedsZip64);}else{checkIfNeedsZip64(actualMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(actualNeedsZip64!=entry.bytesRead){closeEntry(entry,actualNeedsZip64);}else{checkIfNeedsZip64(actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(actualNeedsZip64==entry.bytesRead){closeEntry(entry,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyNeedsZip64=checkIfNeedsZip64(efficientMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyNeedsZip64=checkIfNeedsZip64(percentageNeedsZip64,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,phased,checkIfNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,phased,trueNeedsZip64,activeMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,phased,trueNeedsZip64,passiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(phased){closeEntry(entry.bytesRead,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(entry.bytesRead,Phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanactuallyNeedsZip64=checkIfNeedsZip64(efficiencyMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(phased,entry.bytesRead);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(entry.bytesRead,phased);}else{checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(effectiveMode){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(effectiveMode!=null){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(phased,effectiveMode,trueNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(phased,actualNeedsZip64,trueNeedsZip64);}else{checkIfNeedsZip64(actualMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(newZip64Mode(effectiveMode,phased));}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&zip64Mode!=null){closeEntry(newZip64Mode(effectiveMode,phased));}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(!phased){closeEntry(newZip64Mode(effectiveMode,phased));}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalphased=closePhasedEntry(phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased||actualNeedsZip64!=phased){closeEntry(phased,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&actualNeedsZip64!=phased){closeEntry(phased,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&actualNeedsZip64!=null){closeEntry(phased,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&actualNeedsZip64!=null){closeCopiedEntry(phased,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){preClose(newZip64Mode(effectiveMode,phased));}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,phased),phased);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){checkIfNeedsZip64(effectiveMode);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&zip64Mode!=null){closeEntry(entry.bytesRead,phased);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&zip64Mode!=effectiveMode){closeEntry(entry.bytesRead,phased);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(phased){closeEntry(entry.bytesRead,phased);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&zip64Mode!=null){closeEntry(entry.bytesRead,phased);}else{Zip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(phased){closeCopiedEntry(entry,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(entry,phase);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(entry,phased);}else{checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=actualNeedsZip64!=phased){closeCopiedEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=actualNeedsZip64==phased){closeCopiedEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=actualNeedsZip64>=phased){closeCopiedEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(phased,actualNeedsZip64);}else{CheckIfNeedsZip64(actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(activeMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534lastMode=checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534openEntry(entry.getSize(),actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534openEntry(entry.getKey(),actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534openEntry(actualNeedsZip64,entry.bytesRead);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534openEntry(entry.blocksRead,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(phased){closeEntry(entry.bytesRead,phased);}else{Zip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(phased){closeEntry(entry,phased);}else{Zip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsPadding(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&zip64Mode!=null){closeEntry(entry,phased);}else{zip64Mode=getCopiedZip64Mode(entry.blocksRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){preClose();zip64Mode=getCopiedZip64Mode(entry.blocksRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeeffectiveMode=getIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeeffectiveMode=checkIfNeedsZip64(module);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeeffectiveMode=checkIfNeedsZip64(efficientMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(phased){closeCopiedEntry(phased,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(phased,actualNeedsZip64,false);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(phased,actualNeedsZip64,trueMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsSip64(phased+1);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsSip64(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsPip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(activeMode,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(effectiveMode,phased);}else{checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(activeMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(phased,actualNeedsZip64);}else{CheckIfNeedsZip64(actualMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&zip64Mode!=null){closeEntry(entry,phased);}else{zip64Mode=getCopiedZip64Mode(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){preClose();zip64Mode=getCopiedZip64Mode(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&zip64Mode!=null){zip64Mode=getCopiedZip64Mode(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&zip64Mode!=null){closeEntry(entry,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(phased){closeEntry(newZip64Mode(effectiveMode,phased));}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(newZip64Mode(effectiveMode,phased));}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,0,phased));}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,phased));}else{checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,effectiveMode,actuallyNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534openEntry(entry.bytesRead,phased,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,phased,effectivenessMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534CloseEntry(entry.bytesRead,actualNeedsZip64,activeMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534CloseEntry(entry.bytesRead,actualNeedsZip64,forceMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534stopCopiedEntry(phased,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534stopCopiedEntry(phased,actualNeedsZip64,checkIfNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534stopCopiedEntry(phased,actualNeedsZip64,activeMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534startCopiedEntry(phased,actualNeedsZip64,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(entry,phased);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){checkIfNeedsZip64(phased);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534CloseEntry(newZip64Mode(effectiveMode,phased));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(phased,trueNeedsZip64+1);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){checkIfNeedsZip64(effectiveMode,entry.bytesRead);}else{entry.bytesRead=entry.getBytesRead();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){checkIfNeedsZip64(effectiveMode);}else{entry.bytesRead+=entry.getBytesRead();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(phased){closeEntry(activeMode,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(activeMode,phased);}else{checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(phased,currentMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(realNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(phased,actualNeedsZip64);}else{CheckIfNeedsZip64(actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanactuallyNeedsZip64=phased&&checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(newZip64Mode(effectiveMode,phased));}else{entry.bytesRead=zip64Mode;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(phased){closeEntry(newZip64Mode(effectiveMode,phased));}else{entry.bytesRead=zip64Mode;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closePipedEntry(entry,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(entry);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(entry.bytesRead,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(actualNeedsZip64!=entry.bytesRead){closeCopiedEntry(entry.bytesRead,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(actualNeedsZip64!=entry.bytesRead){closeCopiedEntry(entry.bytesRead,actualNeedsZip64);}else{checkIfNeedsZip64(actualMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(actualNeedsZip64!=entry.bytesRead){closeCopiedEntry(entry.bytesRead,actualNeedsZip64);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsChanged(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsChanged(phased+1);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsPased(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased||checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(!phased){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){finalZip64Modephased=checkIfNeedsZip64(phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){finalbooleanphased=checkIfNeedsZip64(phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){finalbooleanphased=checkIfNeedsZip64(effectiveMode);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){finalbooleanphased=checkIfNeedsZip64(partialMode);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){finalbooleanphased=checkIfNeedsZip64(opt64Mode);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&zip64Mode!=null){closeEntry(entry.bytesRead,phased);}else{zip64Mode=getCopiedZip64Mode(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){zip64Mode=getCopiedZip64Mode(entry.bytesRead,phased);}else{zip64Mode=getCopiedZip64Mode(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(phased){closeCopiedEntry(entry,phased);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&zip64Mode!=effectiveMode){closeCopiedEntry(entry,phased);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&zip64Mode!=null){closeCopiedEntry(entry,phased);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(phased){closeCopiedEntry(entry,phased);}else{Zip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanactualNeedsZip64=checkIfNeedsZip64(actualNeedsZip64+phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsCip64(phased+1);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsCopied(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(phased){closeCopiedEntry(newZip64Mode(effectiveMode,phased));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(newZip64Mode(effectiveMode,false));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534CloseCopiedEntry(newZip64Mode(effectiveMode,phased));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(newZip64Mode(effectiveMode,phased),phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(newZip64Mode(effectiveMode,0,phased));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){finalbooleanphased=checkIfNeedsZip64(phased);}else{Zip64Modemode=getMode();closeCopiedEntry(mode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(phased){finalbooleanphased=checkIfNeedsZip64(phased);}else{Zip64Modemode=getMode();closeCopiedEntry(mode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry.bytesRead,phased,false);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry.bytesRead,phased,false);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry.bytesRead,phased,false);}else{zip64Mode=getCopiedZip64Mode(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry.bytesRead,phased,false);}else{zip64Mode=getCopiedZip64Mode(entry.getName());}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyNeedsZip64=checkIfNeedsZip64(phased+1);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(phased){closeEntry(newZip64Mode(effectiveMode,phased));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,false));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode,entry.bytesRead);}else{entry.bytesRead=entry.getSize();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(phased){finalbooleanphased=checkIfNeedsZip64(phased);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(phased){finalbooleanphased=checkIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){finalbooleanphased=checkIfNeedsZip64(period);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(phased){closeEntry(Zip64Mode.DEFAULT_ENCODING,phased);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(Zip64Mode.DEFAULT_ENCODING,0,phased);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(Zip64Mode.DEFAULT_ENCODING,initialized);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64(effectiveMode)){closeCopiedEntry(phased,actualNeedsZip64,effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64(effectiveMode)){closeCopiedEntry(phased,actualNeedsZip64,effectiveMode);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(effectiveMode!=phased){closeCopiedEntry(phased,actualNeedsZip64,effectiveMode);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(phased,effectiveMode,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64(effectiveMode)){closeCopiedEntry(phased,actualNeedsZip64,effectiveMode);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(effectiveMode!=phased){closeCopiedEntry(phased,actualNeedsZip64,effectiveMode);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=verifyIfNeedsZip64(phased+1);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(phased){closeEntry(effectiveMode,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyNeedsZip64=checkIfNeedsZip64(activeMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(effectiveMode!=phased){closeCopiedEntry(phased,effectiveMode);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(effectiveMode==phased){closeCopiedEntry(phased,effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534phased=closePhaseEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534phased=closePhaseEntry(period,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534phased=closePhaseEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534phased=closePhaseEntry(positive,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&zip64Mode!=effectiveMode){zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){zip64Mode=checkIfNeedsZip64(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&zip64Mode!=effectiveMode){closeEntry(entry,phased);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&zip64Mode!=null){closeEntry(entry,phased);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&zip64Mode!=effectiveMode){closeEntry(entry,phased);}else{Zip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closePipedEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64&&phased){closeEntry(newZip64Mode(effectiveMode,phased));}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(!phased){closeEntry(newZip64Mode(effectiveMode,phased));}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry,phased,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry,phased,actualNeedsZip64,activeMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry,phased,actualNeedsZip64,efectivMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry,phased,actualNeedsZip64,realMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closePaddedEntry(entry,phased);}else{zip64Mode=getPaddedZip64Mode(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&zip64Mode!=null){closeEntry(entry,phased);}else{zip64Mode=getPaddedZip64Mode(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&zip64Mode!=getPaddedZip64Mode()){closeEntry(entry,phased);}else{zip64Mode=getPaddedZip64Mode(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(effectiveMode!=entry.bytesRead){closeEntry(entry.bytesRead,effectiveMode);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(effectiveMode!=entry.bytesRead){closeEntry(entry.bytesRead,effectiveMode);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(effectiveMode==entry.bytesRead){closeEntry(entry.bytesRead,effectiveMode);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(effectiveMode!=entry.bytesRead){closeEntry(entry.bytesRead,effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(effectiveMode!=entry.bytesRead){closeEntry(entry.bytesRead,effectiveMode);}else{zip64Mode=getEffectiveZip64Mode(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(effectiveMode==entry.bytesRead){closeEntry(entry.bytesRead,effectiveMode);}else{zip64Mode=getEffectiveZip64Mode(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(phased,actualNeedsZip64);}else{Zip64ModeactiveMode=getCopiedZip64Mode(activeMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(phased,actualNeedsZip64);}else{Zip64ModeeffectiveMode=getCopiedZip64Mode(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode,entry.bytesRead);}else{entry.bytesRead=entry.getByteRead();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,phased,effectiveMode,zip64Mode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,phased,effectiveMode,checkIfNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeactiveMode=checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry.bytesRead,phased,effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,phased,effectiveMode,encoding);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(phased){closeCopiedEntry(newZip64Mode(activeMode,phased));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalphased){closeCopiedEntry(newZip64Mode(activeMode,phased));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(newZip64Mode(activeMode,true));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(newZip64Mode(activeMode,false));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534CloseCopiedEntry(newZip64Mode(activeMode,phased));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){zip64Mode=getCopiedZip64Mode(effectiveMode);}else{zip64Mode=getCopiedZip64Mode(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){zip64Mode=getCopiedZip64Mode(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){zip64Mode=getCopiedZip64Mode(effectiveMode);}else{Zip64ModeeffectiveMode=getCopiedZip64Mode(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeactiveMode=getActiveZip64Mode(activeMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534CheckIfNeedsZip64<=phased||checkIfNeedsZip64{for(finalZip64ModeactiveMode:activeModes){checkIfNeedsZip64(activeMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(newZip64Mode(effectiveMode,phased));}else{entry.bytesRead.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(phased){closeEntry(newZip64Mode(effectiveMode,phased));}else{entry.bytesRead.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,phased),phased);}else{entry.bytesRead.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(!phased){closeEntry(newZip64Mode(effectiveMode,phased));}else{entry.bytesRead.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkPasedZip64(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkPasedZip64(phased+1);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(phased){closeEntry(entry,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=phased?checkIfNeedsZip64(phased):checkIfNeedsZip64;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(effectiveMode!=phased){closeEntry(phased,actualNeedsZip64,effectiveMode);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(effectiveMode!=phased){closeEntry(phased,actualNeedsZip64,effectiveMode);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(effectiveMode!=phased){closeEntry(phased,actualNeedsZip64,effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(effectiveMode!=phased){closeEntry(phased,actualNeedsZip64,effectiveMode);}else{zip64Mode=getCopiedZip64Mode(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,phased,actualNeedsZip64,activeMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){finalbooleanphased=checkIfNeedsZip64(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534lastMode=checkIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeeffectiveMode=newZip64Mode(phased,activeMode));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeeffectiveMode=newZip64Mode(plotsRead,phased));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(entry,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(phased){closeEntry(entry,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534stopCopiedEntry(newZip64Mode(effectiveMode),phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534stopCopiedEntry(newZip64Mode(activeMode,phased));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(phased){finalbooleanphased=checkIfNeedsZip64(phased);}else{Zip64Modemode=getMode();closeCopiedEntry(mode,mode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){finalbooleanphased=checkIfNeedsZip64(phased);}else{Zip64Modemode=getMode();closeCopiedEntry(mode,mode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){finalZip64Modemode=getMode();closeCopiedEntry(mode,mode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(effectiveMode,actualNeedsZip64);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(effectiveMode,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(phased){checkIfNeedsZip64(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(phased){checkIfNeedsZip64(effectiveMode,phased);}else{checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64&&phased){closeEntry(newZip64Mode(effectiveMode,phased));}else{entry.bytesRead=zip64Mode;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,checkedIfNeedsZip64));}else{entry.bytesRead=zip64Mode;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,checkIfNeedsZip64));}else{entry.bytesRead=zip64Mode;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsPaint(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsPaint(phased+1);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkPaint(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(entry,phased,actualNeedsZip64,checkIfNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(entry,phased,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(entry,phased,actualNeedsZip64,activeMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(phased+4);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(phased){closeCopiedEntry(entry.bytesRead,phased);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&zip64Mode!=null){closeCopiedEntry(entry.bytesRead,phased);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&zip64Mode!=effectiveMode){closeCopiedEntry(entry.bytesRead,phased);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased){closeCopiedEntry(effectiveMode,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased){closeCopiedEntry(effectiveMode,phased);}else{checkIfNeedsZip64(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalphased){checkIfNeedsZip64(phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(actualNeedsZip64!=entry.bytesRead){closeEntry(entry.bytesRead,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(actualNeedsZip64!=entry.bytesRead){closeEntry(entry.bytesRead,actualNeedsZip64);}else{checkIfNeedsZip64(actualMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(actualNeedsZip64!=entry.bytesRead){closeEntry(entry.bytesRead,actualNeedsZip64);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(actualNeedsZip64==entry.bytesRead){closeEntry(entry.bytesRead,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(phased){closeCopiedEntry(zip64Mode,phased);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&zip64Mode!=effectiveMode){closeCopiedEntry(zip64Mode,phased);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(phased){closeCopiedEntry(zip64Mode,phased);}else{Zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=getIfNeedsZip64(phased+1);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=getIfNeedsZip64(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=getIfNeedsZip64(phased)&&checkIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(phased,actualNeedsRead);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(phased){closeEntry(zip64Mode,phased);}else{Zip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(Zip64Mode.DEFAULT_ENCODING,DEFAULT_ENCODING);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(Zip64Mode.DEFAULT_ENCODING,activeMode);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(phased){closeEntry(entry.bytesRead,entry.phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=closePhaseEntry(entry.bytesRead,entry.phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyphased){closeEntry(entry.bytesRead,entry.phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){preClose();entry.bytesRead=entry.bytesRead;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(phased){closeEntry(entry.bytesRead,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalphased){closeEntry(entry.bytesRead,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=closePhase(entry.bytesRead,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(phased,falseNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(phased,trueNeedsZip64);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(phased,trueNeedsZip64,checkIfNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(phased,trueNeedsZip64,activeMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&zip64Mode!=effectiveMode){closeEntry(zip64Mode,phased);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(phased){closeEntry(zip64Mode,phased);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(zip64Mode,phase);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(entry,phased);}else{zip64Mode=getCopiedZip64Mode(entry.getName());}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&zip64Mode!=null){closeEntry(entry,phased);}else{zip64Mode=getCopiedZip64Mode(entry.getName());}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&zip64Mode!=getCopiedZip64Mode(entry.getName())){closeEntry(entry,phased);}else{zip64Mode=getCopiedZip64Mode(entry.getName());}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&zip64Mode!=getCopiedZip64Mode()){closeEntry(entry,phased);}else{zip64Mode=getCopiedZip64Mode(entry.getName());}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeeffectiveMode=newZip64Mode(effectiveMode,checkIfNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeeffectiveMode=newZip64Mode(module,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeeffectiveMode=newZip64Mode(effectiveMode,booleanphased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){zip64Mode=newZip64Mode();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){checkIfNeedsZip64(effectiveMode);}else{Zip64ModenewZip64Mode=newZip64Mode();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64Modemode=checkIfNeedsZip64(mode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64Modemode=getIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(effectiveMode,0,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(effectiveMode,phased);}else{CheckIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(effectiveMode,phased);}else{checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&checkIfNeedsZip64){closeEntry(entry,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&checkIfNeedsZip64){closeEntry(entry,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry,0,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry,phase);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64&&effectiveMode!=zip64Mode){checkIfNeedsZip64(effectiveMode);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64&&effectiveMode!=zip64Mode){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64&&zip64Mode!=effectiveMode){checkIfNeedsZip64(effectiveMode);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64&&zip64Mode!=effectiveMode){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(entry,actualNeedsZip64,trueNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(entry,phased,trueNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(phased,actualNeedsZip64,trueNeedsZip64,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534CheckIfNeedsZip64<=checkIfNeedsZip64(activeMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeactiveMode=getActiveZip64Mode(entry);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534CheckIfNeedsZip64<=phased&&checkIfNeedsZip64<>(entry.bytesRead)){checkIfNeedsZip64(activeMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534CheckIfNeedsZip64<=phased||checkIfNeedsZip64<>(activeMode)){checkIfNeedsZip64(activeMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeeffectiveMode=getCopiedZip64Mode(entry.getName());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&zip64Mode!=getCopiedZip64Mode(entry.getName())){closeEntry(entry,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){openEntry(entry,phased);}else{zip64Mode=getCopiedZip64Mode(entry.getName());}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsClosed(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){finalbooleanphased=checkIfNeedsChanged(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(activeMode,phased);}else{CheckIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534openEntry(entry,phased,actualNeedsZip64,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534openZipEntry(entry,phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534CloseEntry(entry,phased,actualNeedsZip64,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){openEntry(entry.bytesRead,phased);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&checkIfNeedsZip64){closeEntry(entry,phased);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry,0,phased);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,effectiveMode,zip64Mode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,effectiveMode,Zip64Mode.NEEDED_OFFSET);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64Modemode=getEffectiveZip64Mode(entry.bytesRead);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(entry,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(phased,actualNeedsZip64,effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(effectiveMode,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(effectiveMode,effectiveMode);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(effectiveMode,effectiveNeedsZip64);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeeffectiveMode=checkIfNeedsZip64(efficientMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(phased,effectivelyNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534openEntry(entry.getKey(),entry.bytesRead,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534openEntry(entry.getValue(),actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534openEntry(entry.getName(),actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){zip64Mode=checkIfNeedsZip64(effectiveMode);}else{Zip64ModeeffectiveMode=getEffectiveZip64Mode(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64&&effectiveMode!=entry.bytesRead){checkIfNeedsZip64(effectiveMode);}else{entry.bytesRead=entry.getByteRead();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64&&effectiveMode!=Zip64Mode.DEFAULT_ENCODING){checkIfNeedsZip64(effectiveMode);}else{entry.bytesRead=entry.getByteRead();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64&&effectiveMode!=Zip64Mode.UNKNOWN){checkIfNeedsZip64(effectiveMode);}else{entry.bytesRead=entry.getByteRead();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64&&effectiveMode!=zip64Mode){checkIfNeedsZip64(effectiveMode);}else{entry.bytesRead=entry.getByteRead();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64&&effectiveMode!=Zip64Mode.DEFAULT){checkIfNeedsZip64(effectiveMode);}else{entry.bytesRead=entry.getByteRead();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&zip64Mode!=effectiveMode){closeEntry(entry,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(phased){closeCopiedEntry(activeMode,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeeffectiveMode=getEffectiveZip64Mode(entry.entry);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(phased){closeCopiedEntry(effectiveMode,phased);}else{checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(zip64Mode!=null){checkIfNeedsZip64(effectiveMode);}else{zip64Mode=getCopiedZip64Mode(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(zip64Mode!=null){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeeffectiveMode=getCopiedZip64Mode(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(zip64Mode!=null){checkIfNeedsZip64(effectiveMode);}else{Zip64ModeeffectiveMode=getCopiedZip64Mode(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,effectiveMode,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534CloseEntry(entry.bytesRead,phased,actualNeedsZip64,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.blocksRead,phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,phased,actualNeedsZip64,effectivelyMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&zip64Mode!=getCopiedZip64Mode()){closeEntry(entry,phased);}else{zip64Mode=getCopiedZip64Mode(entry.blocksRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeeffectiveMode=getCopiedZip64Mode(entry.blocksRead);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){openEntry(entry,phased);}else{zip64Mode=getCopiedZip64Mode(entry.blocksRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry.bytesRead,entry.phased);}else{Zip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry.bytesRead,0,phased);}else{Zip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,effectiveMode,false);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.blocksRead,phased,false);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,true,false);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,phased,false,true);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534phased=closePhaseEntry(entry,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534phased=closePhaseEntry(extendsZip64,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534phased=closePhaseEntry(step,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){closeCopiedEntry(phased,effectiveMode);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(phased,effectiveMode,entry.bytesRead);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){closeCopiedEntry(phased,effectiveMode);}else{thrownewRuntimeException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=closePhaseEntry(entry,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=closeCopiedEntry(actuallyNeedsZip64,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased||checkIfNeedsZip64){closeEntry(newZip64Mode(effectiveMode,phased));}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&checkIfNeedsZip64){closeEntry(newZip64Mode(effectiveMode,phased));}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64&&effectiveMode!=zip64Mode){closeEntry(newZip64Mode(effectiveMode,phased));}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64&&zip64Mode!=effectiveMode){closeEntry(newZip64Mode(effectiveMode,phased));}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64&&zip64Mode!=effectiveMode){closeEntry(newZip64Mode(effectiveMode,phased));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64&&effectiveMode!=zip64Mode){closeEntry(newZip64Mode(effectiveMode,phased));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534CloseEntry(entry.bytesRead,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&zip64Mode!=effectiveMode){closeEntry(zip64Mode,phased);}else{Zip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(zip64Mode,phased);}else{Zip64ModeeffectiveMode=checkIfNeedsZip64(activeMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(zip64Mode,phased);}else{Zip64ModeefficientMode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry.bytesRead,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry,phased);}else{Zip64ModeeffectiveMode=getEffectiveZip64Mode(entry.getValue());}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){checkIfNeedsZip64(effectiveMode,zip64Mode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.getKey(),actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.blocksRead,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,actualNeedsZip64,efectivMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased||actualNeedsZip64==phased){closeCopiedEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(actualMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&actualNeedsZip64==phased){closeCopiedEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(actualMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased||actualNeedsZip64<=0){closeCopiedEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(actualMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(phased,actualNeedsZip64);}else{CheckIfNeedsZip64(actualMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased||actualNeedsZip64!=phased){closeCopiedEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased||actualNeedsZip64!=phased){closeCopiedEntry(phased,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.bytesRead,phased,trueNeedsZip64,effectivelyMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(newZip64Mode(effectiveMode,entry.bytesRead));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(newZip64Mode(effectiveMode,zip64Mode));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=closeCopiedEntry(newZip64Mode(effectiveMode,phased));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534phased=closeCopiedEntry(newZip64Mode(effectiveMode,phased));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64&&effectiveMode!=Zip64Mode.DEFAULT_ENCODING){closeEntry(newZip64Mode(effectiveMode,phased));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased||checkIfNeedsZip64){closeEntry(newZip64Mode(effectiveMode,phased));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64&&effectiveMode.isSupported()){closeEntry(newZip64Mode(effectiveMode,phased));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64&&effectiveMode!=Zip64Mode.DEFAULT){closeEntry(newZip64Mode(effectiveMode,phased));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&zip64Mode!=getCopiedZip64Mode()){closeEntry(entry.bytesRead,phased);}else{zip64Mode=getCopiedZip64Mode(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry.bytesRead,finalphased);}else{zip64Mode=getCopiedZip64Mode(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeeffectiveMode=getCopiedZip64Mode(entry.bytesRead);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeeffectiveMode=getPaddedZip64Mode(entry.bytesRead);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&zip64Mode!=getPaddedZip64Mode()){closeEntry(entry,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(efficientMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534lastModified=phased?checkIfNeedsZip64(phased):checkIfNeedsZip64(actuallyNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){finalbooleanphased=checkIfNeedsZip64(phased,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Phased=checkIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534CloseCopiedEntry(entry.bytesRead,actualNeedsZip64,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(entry.bytesRead,actualNeedsZip64,efectivMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(entry.bytesRead,actualNeedsZip64,activeMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(entry.bytesRead,true);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534stopCopiedEntry(phased,actualNeedsZip64,checkIfNeedsZip64(actualMode));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64&&effectiveMode!=Zip64Mode.DEFAULT_ENCODING){closeEntry(newZip64Mode(effectiveMode,phased));}else{entry.bytesRead=zip64Mode;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64&&effectiveMode.isSupported()){closeEntry(newZip64Mode(effectiveMode,phased));}else{entry.bytesRead=zip64Mode;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64&&effectiveMode!=Zip64Mode.BASE){closeEntry(newZip64Mode(effectiveMode,phased));}else{entry.bytesRead=zip64Mode;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){closeEntry(newZip64Mode(effectiveMode,phased),zip64Mode);}else{entry.bytesRead=zip64Mode;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64&&effectiveMode!=Zip64Mode.DEFAULT){closeEntry(newZip64Mode(effectiveMode,phased));}else{entry.bytesRead=zip64Mode;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased||actualNeedsZip64!=phased){closeEntry(phased,actualNeedsZip64);}else{zip64Mode=getCopiedZip64Mode(actualMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&actualNeedsZip64!=phased){closeEntry(phased,actualNeedsZip64);}else{zip64Mode=getCopiedZip64Mode(actualMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534zip64Mode=getCopiedZip64Mode(actualMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(phased,actualNeedsZip64);}else{Zip64ModecurrentMode=getCopiedZip64Mode(actualMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased||actualNeedsZip64==phased){closeCopiedEntry(phased,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534intphased){closeEntry(actuallyNeedsZip64,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased){closeEntry(entry.bytesRead,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534intphased){closeEntry(effectiveMode,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(phased,actualNeedsZip64,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(phased,actualNeedsZip64,actualNeedsMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534stopCopiedEntry(entry.bytesRead,entry.phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry.bytesRead,entry.phase);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry,entry.bytesRead,entry.phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=getIfNeedsZip64(actualMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534CloseEntry(entry.bytesRead,entry.version,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534CloseEntry(entry.bytesRead,actualNeedsZip64,efectivMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry,phased,effectiveMode,actuallyNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64&&effectiveMode!=Zip64Mode.DEFAULT_ENCODING){checkIfNeedsZip64(effectiveMode);}else{zip64Mode=newZip64Mode();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64&&effectiveMode!=zip64Mode){checkIfNeedsZip64(effectiveMode);}else{zip64Mode=newZip64Mode();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64){checkIfNeedsZip64(efficientMode);}else{zip64Mode=newZip64Mode();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsFinally(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsCircuit(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsClose(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,entry.bytesRead));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,zip64Mode));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=closePhase(newZip64Mode(effectiveMode,phased));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,getPhase()));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,zip64Mode));}else{zip64Mode=getPaddedZip64Mode(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,0,phased));}else{zip64Mode=getPaddedZip64Mode(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,zip64Mode),phased);}else{zip64Mode=getPaddedZip64Mode(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,phased+1));}else{zip64Mode=getPaddedZip64Mode(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(phased,trueNeedsZip64,trueNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(phased,trueNeedsZip64,falseNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased||actualNeedsZip64==phased){closeEntry(phased,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534CloseEntry(phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=closePhasedEntry(phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=closeCopiedEntry(newZip64Mode(activeMode,phased));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(newZip64Mode(activeMode,zip64Mode));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(newZip64Mode(activeMode,activeMode));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(entry,phased);}else{Zip64ModeeffectiveMode=getEffectiveZip64Mode(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&zip64Mode!=effectiveMode){closeCopiedEntry(entry,phased);}else{Zip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,entry.bytesRead));}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,zip64Mode));}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,phased),zip64Mode);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,phased),zipEncoding);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(zip64Mode,phased);}else{zip64Mode=checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyNeedsZip64=checkIfNeedsZip64(finallyNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finallyNeedsZip64=checkIfNeedsZip64(percentageNeedsZip64,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,entry.bytesRead));}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,checkIfNeedsZip64));}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,zip64Mode));}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,phased),entry.bytesRead);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,false));}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,phased),zipEncoding);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry.bytesRead,finalphased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry.bytesRead,entry.phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry.bytesRead,Phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(entry.bytesRead,phased);}else{checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,0,phased));}else{entry.bytesRead=zip64Mode;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,zip64Mode));}else{entry.bytesRead=phased;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,phased),zip64Mode);}else{entry.bytesRead=zip64Mode;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,phased),entry.bytesRead);}else{entry.bytesRead=zip64Mode;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,false));}else{entry.bytesRead=zip64Mode;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,true));}else{entry.bytesRead=zip64Mode;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){finalbooleanphased=getIfNeedsZip64(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&zip64Mode!=getCopiedZip64Mode()){closeEntry(entry,phased);}else{zip64Mode=getCopiedZip64Mode(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&zip64Mode!=getCopiedZip64Mode()){closeEntry(entry,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){finalbooleanphased=checkIfNeedsZip64(phased,false);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry,trueNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534openEntry(entry,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534stopCopiedEntry(step64,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry,effectiveMode,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(entry.bytesRead,0,phased);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeeffectiveMode=newZip64Mode(efficientMode,phased));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeeffectiveMode=newZip64Mode(effectiveMode,mode));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeeffectiveMode=newZip64Mode(effectiveMode,zipEncoding));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534Preconditions.checkState(phased){finalbooleanphased=checkIfNeedsZip64(actuallyNeedsZip64);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){finalbooleanphased=checkIfNeedsZip64(efficientMode);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){finalbooleanphased=checkIfNeedsZip64(activeMode);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(entry,effectiveMode,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(entry.bytesRead,effectiveMode,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64(effectiveMode)){closeCopiedEntry(phased,actualNeedsZip64,effectiveMode);}else{entry.bytesRead=zip64Mode;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanactualNeedsZip64=checkIfNeedsZip64(actualNeedsZip64,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(entry.bytesRead,phased,true);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(zip64Mode,phased);}else{Zip64ModeeffectiveMode=getEffectiveZip64Mode(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeeffectiveMode=newZip64Mode(effectiveMode,zipEncoding);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeeffectiveMode=newZip64Mode(effectiveMode,mode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalZip64ModeeffectiveMode=newZip64Mode(efficientMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64&&effectiveMode!=Zip64Mode.DEFAULT_ENCODING){checkIfNeedsZip64(effectiveMode);}else{entry.bytesRead=entry.getSize();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64&&effectiveMode!=Zip64Mode.UNKNOWN){checkIfNeedsZip64(effectiveMode);}else{entry.bytesRead=entry.getSize();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64&&effectiveMode!=entry.bytesRead){checkIfNeedsZip64(effectiveMode);}else{entry.bytesRead=entry.getSize();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64&&effectiveMode!=Zip64Mode.DEFAULT){checkIfNeedsZip64(effectiveMode);}else{entry.bytesRead=entry.getSize();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64&&effectiveMode!=zip64Mode){checkIfNeedsZip64(effectiveMode);}else{entry.bytesRead=entry.getSize();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(entry,0,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased!=actualNeedsZip64){closeEntry(phased,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased>>actualNeedsZip64){closeEntry(phased,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased>=actualNeedsZip64){closeEntry(phased,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased==actualNeedsZip64){closeEntry(phased,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){finalbooleanphased=checkIfNeedsZip64(currentMode);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){finalbooleanphased=checkIfNeedsZip64(partition);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(Zip64Mode.DEFAULT_ENCODING,code);}else{zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkPasedZip64(phased,zip64Mode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,zip64Mode));}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&zip64Mode!=effectiveMode){closeEntry(newZip64Mode(effectiveMode,phased));}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,0,phased));}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,entry.bytesRead));}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,phased),zip64Mode.clone());}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,false));}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(effectiveMode,0,phased);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(effectiveMode,phased);}else{CheckIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeCopiedEntry(effectiveMode,phase);}else{checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanactuallyNeedsZip64=checkForNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased||actualNeedsZip64!=phased){closeEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased||actualNeedsZip64!=phased){closeEntry(phased,actualNeedsZip64);}else{CheckIfNeedsZip64(actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534while(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534while(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534CloseCopiedEntry(entry,phased,actualNeedsZip64,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(entry,phased,actualNeedsZip64,effectivelyMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeCopiedEntry(entry,phased,actualNeedsZip64,effectMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased||actualNeedsZip64!=phased){closeCopiedEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(actualMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased>0){closeCopiedEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(actualMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534phased=closeCopiedEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(efficientMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){finallyNeedsZip64=checkIfNeedsZip64(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534read(){zip64Mode=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){zip64Mode=checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){finalbooleanphased=checkIfNeedsZip64(effectiveMode);}else{Zip64Modemode=getMode();closeCopiedEntry(mode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&checkIfNeedsZip64(effectiveMode)){thrownewIllegalStateException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased&&checkIfNeedsZip64(effectiveMode)){thrownewIOException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64&&effectiveMode!=Zip64Mode.DEFAULT_ENCODING){checkIfNeedsZip64(effectiveMode);}else{entry.bytesRead=entry.getBytesRead();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64&&effectiveMode!=Zip64Mode.UNKNOWN){checkIfNeedsZip64(effectiveMode);}else{entry.bytesRead=entry.getBytesRead();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64&&effectiveMode!=zip64Mode){checkIfNeedsZip64(effectiveMode);}else{entry.bytesRead=entry.getBytesRead();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64&&effectiveMode!=Zip64Mode.DEFAULT){checkIfNeedsZip64(effectiveMode);}else{entry.bytesRead=entry.getBytesRead();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(checkIfNeedsZip64&&effectiveMode!=Zip64Mode.BIG){checkIfNeedsZip64(effectiveMode);}else{entry.bytesRead=entry.getBytesRead();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(phased||phased+1);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534finalbooleanphased=checkIfNeedsZip64(phased||phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased||actualNeedsZip64!=phased){closeEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(actualMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased||actualNeedsZip64==phased){closeEntry(phased,actualNeedsZip64);}else{checkIfNeedsZip64(actualMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased!=actualNeedsZip64){closeCopiedEntry(phased,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased>>actualNeedsZip64){closeCopiedEntry(phased,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased>=actualNeedsZip64){closeCopiedEntry(phased,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased==actualNeedsZip64){closeCopiedEntry(phased,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(effectiveMode!=zip64Mode){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534checkIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,0,phased));}else{entry.bytesRead.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,false));}else{entry.bytesRead.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534if(phased){closeEntry(newZip64Mode(effectiveMode,phased),entry.blocksRead);}else{entry.bytesRead.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closeEntry(entry.blocksRead,effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534CloseEntry(entry.bytesRead,effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534CloseEntry(entry.bytesRead,phased,effectiveMode,zip64Mode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java534closureEntry(entry.bytesRead,effectiveMode,phased);
