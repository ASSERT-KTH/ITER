projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(entry);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(rawStream);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(rawStream,entry);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(streamStream);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(fileStream);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(entry,rawStream);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(entry.getName());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(toString());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(entry.getKey());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(rawStream.getName());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(rawStream,entry.getName());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(rawStream.getAbsolutePath());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(rawStream.toString());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(zipStream.getName());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(streamStream.getName());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(rawStream.getKey());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(rawStream,entry.getKey());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(rawStream.getValue());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(entry.getKey(),rawStream);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(rawStream.getCrc());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(streamStream,entry);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(rawStream,entry.getVersion());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(rawStream,entry.getValue());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(entry.getValue());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(entry.toString());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(entry.getMethod());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(newFileInputStream(rawStream),entry);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(rawStream,entry.getMethod());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(0);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(fileStream,entry);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577if(rawStream!=null){thrownewIllegalStateException("Zip64ExtendedInformationExtraField.addRawArchiveEntry:"+entry.getKey());}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577EntryMetaDataae=entry.getValue();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577if(rawStream!=null){thrownewIllegalStateException("Zip64ExtendedInformationExtraField.addRawArchiveEntry:"+entry.getName());}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577if(rawStream!=null){thrownewIllegalStateException("Zip64ExtendedInformationExtraField.addRawArchiveEntryforentry:"+entry.getKey());}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577if(rawStream!=null){thrownewIllegalArgumentException("Zip64ExtendedInformationExtraField.addRawArchiveEntry:"+entry.getKey());}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577if(rawStream!=null){thrownewIllegalStateException("Zip64ExtendedInformationExtraField.addRawArchiveEntry:"+entry.getValue());}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(entry,rawStream,this.zipEncoding);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(entry,rawStream,this);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(entry,rawStream,this.zip64Mode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(stream,entry);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(entry,rawStream,true);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(entry,rawStream,zipEncoding);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577Objectae=entry.getValue();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577OutputStreamo=rawStream.getOutputStream();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577OutputStreamo=rawStream.readLine();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577OutputStreamout=rawStream.readLine();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577OutputStreamae=rawStream.getOutputStream();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577OutputStreamout=rawStream.getOutputStream();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577OutputStreamae=rawStream.readLine();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(stream);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(newFileInputStream(rawStream));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(entry.getName(),rawStream);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(toString(),rawStream);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(streamStream,rawStream);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(entry.getMode());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(getCrc());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(entry.getClass());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(rawStream.readLine());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(entry.getResourceName());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577booleanhasZip64Extra(ae)){ae.removeExtraField(Zip64ExtendedInformationExtraField.HEADER_ID);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577booleanhasZip64Extra(ae)){ae.removeExtraField(Zip64ExtendedInformationExtraField.HEADER_ID);putArchiveEntry(entry,is2PhaseSource);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577booleanhasZip64Extra(ae)){ae.removeExtraField(Zip64ExtendedInformationExtraField.HEADER_ID);putArchiveEntry(entry,rawStream);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577booleanhasZip64Extra(ae)){ae.removeExtraField(Zip64ExtendedInformationExtraField.HEADER_ID);putRawArchiveEntry(entry,rawStream);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577booleanhasZip64Extra(ae)){ae.removeExtraField(Zip64ExtendedInformationExtraField.HEADER_ID);addRawArchiveEntry(entry,rawStream);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577booleanhasZip64Extra(ae)){ae.removeExtraField(Zip64ExtendedInformationExtraField.HEADER_ID);putRawArchiveEntry(entry,is2PhaseSource);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577booleanhasZip64Extra(ae)){ae.removeExtraField(Zip64ExtendedInformationExtraField.HEADER_ID);putArchiveEntry(entry,is2);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(entry,rawStream,DEFAULT_ENCODING);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java577finalZipArchiveEntryae=newZipArchiveEntry(rawStream,entry.getEncoding());
