projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530preClose();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530checkIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}else{checkIfNeedsZip64(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}else{thrownewIllegalStateException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}else{thrownewIllegalArgumentException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530checkIfNeedsZip64();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}else{checkIfNeedsZip64(phased);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}else{finalZip64Modemode=getMode();closeEntry(mode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530_reportUnsupportedOperation();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(!phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}else{thrownewRuntimeException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530_reportUndetectableSource();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){_reportUnsupportedOperation();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530_throwUnsupportedOperation();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){_reportUnsupportedOperation();}else{thrownewIllegalStateException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){_reportUnsupportedOperation();}else{thrownewIllegalArgumentException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){_reportUnsupportedOperation();}else{thrownewRuntimeException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530_throwInternal();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530finallyNeedsZip64){preClose();}else{thrownewIllegalStateException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530finallyNeedsZip64){preClose();}elseif(phased){thrownewIllegalStateException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530Preconditions.checkState(phased){preClose();}else{thrownewIllegalStateException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530finallyNeedsZip64){if(phased){preClose();}else{thrownewIllegalStateException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530finalbooleanphased=preClose();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530_reportUndetectableSource(entry.bytesRead);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){_reportUndetectableSource();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530_reportUndetectableSource(n);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530_reportUndetectableSource(entry.bytesRead,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530_reportUndetectableEntry();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530_reportUndetectableSource(false);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530EntryMetaDataentry=getEntry(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){thrownewIllegalStateException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){thrownewIllegalArgumentException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530finalintstate=getState();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530finalintsize=entry.bytesRead.length();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530finalintencoding=getEncoding();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530finalintsize=entry.bytesRead.size();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530finalintencoding=getEncoding(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased&&checkIfNeedsZip64){preClose();}else{checkIfNeedsZip64(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}else{checkIfNeedsZip64(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}else{checkIfNeedsZip64(phased,false);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}else{checkIfNeedsZip64(phased,null);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}else{checkIfNeedsZip64(phased,final);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530Preconditions.checkState(phased,checkIfNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}else{thrownewRuntimeException("");}if(phased){preClose();}else{thrownewRuntimeException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}else{thrownewRuntimeException("");}if(phased){preClose();}else{thrownewRuntimeException("".);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}else{thrownewRuntimeException("");}if(phased){preClose();}else{thrownewRuntimeException(".");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}else{thrownewRuntimeException("");}if(phased){PreClose();}else{thrownewRuntimeException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}else{thrownewRuntimeException("");}if(phased){preClose();}else{thrownewRuntimeException("".equals(entry.bytesRead));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}else{thrownewRuntimeException("");}if(phased){preClose();}else{thrownewRuntimeException(",");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}else{thrownewIllegalArgumentException("");}if(phased){preClose();}else{thrownewIllegalArgumentException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}else{thrownewIllegalArgumentException("");}if(phased){preClose();}else{thrownewIllegalArgumentException("".);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}else{thrownewIllegalArgumentException("");}if(phased){preClose();}else{thrownewIllegalArgumentException(".");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}else{thrownewIllegalArgumentException("");}if(phased){PreClose();}else{thrownewIllegalArgumentException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530finalZip64Modemode=getMode();closeEntry(mode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530Preconditions.checkState(phased){preClose();}else{finalZip64Modemode=getMode();closeEntry(mode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530Preconditions.checkState(phased){preClose();}elseif(!phased){finalZip64Modemode=getMode();closeEntry(mode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}else{finalZip64Modemode=getMode();closeEntry(mode,Phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530Preconditions.checkState(phased){preClose();}else{finalZip64Modemode=getMode();closeEntry(mode,Phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){checkIfNeedsZip64();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530checkIfNeedsZip64(phased,ZipArchiveOutputStream.DEFAULT_ENCODING);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530checkIfNeedsZip64(phased,entry.bytesRead);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530checkIfNeedsZip64(phased,ZipArchiveOutputStream.class);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530checkIfNeedsZip64(phased,zip64Mode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}finalbooleanphased=checkIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}if(phased){PreClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}if(phased){preClose();System.arraycopy(entry.bytesRead,0,entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}finalbooleanphased=checkIfNeedsZip64(phased);preClose();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}If(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}finalbooleanphased=checkIfNeedsZip64(phased);Preconditions.checkState(!phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530finallyNeedsZip64){preClose();}else{thrownewRuntimeException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530Preconditions.checkState(phased){preClose();}else{thrownewRuntimeException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530finallyNeedsZip64){preClose();}elseif(phased){thrownewRuntimeException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530Preconditions.checkState(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530finalbooleanphased=phased?checkIfNeedsZip64(phased):checkIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){checkIfNeedsZip64(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530Preconditions.checkState(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530finalbooleanphased=phased?checkIfNeedsZip64(phased):preClose();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}else{thrownewIllegalStateException("");}if(phased){preClose();}else{thrownewIllegalStateException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}else{thrownewIllegalStateException("");}if(phased){preClose();}else{thrownewIllegalStateException("".);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}else{thrownewIllegalStateException("");}if(phased){preClose();}else{thrownewIllegalStateException(".");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}else{thrownewIllegalStateException("");}if(phased){PreClose();}else{thrownewIllegalStateException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}else{thrownewIllegalStateException("");}If(phased){preClose();}else{thrownewIllegalStateException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530finallyNeedsZip64){preClose();}else{thrownewIllegalArgumentException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530finallyNeedsZip64){preClose();}elseif(phased){thrownewIllegalArgumentException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530Preconditions.checkState(phased){preClose();}else{thrownewIllegalArgumentException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530finallyNeedsZip64){if(phased){preClose();}else{thrownewIllegalArgumentException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530Preconditions.checkState(!phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530checkIfNeedsZip64(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(!phased){preClose();}if(!phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(!phased){preClose();}if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(!phased){preClose();}if(!phased){PreClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(!phased){preClose();}If(!phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(!phased){preClose();}if(!phased){startClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(!phased){preClose();}if(!phased){getClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(!phased){preClose();}if(!phased){preClose();return;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}else{checkIfNeedsZip64(phased,phased);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased&&checkIfNeedsZip64){preClose();}else{checkIfNeedsZip64(phased);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530checkIfNeedsZip64(phased);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased&&checkIfNeedsZip64){preClose();}else{checkIfNeedsZip64(phased,phased);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530finalbooleanphased=checkIfNeedsZip64(phased);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}else{checkIfNeedsZip64(phased,closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530checkIfNeedsZip64(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530checkIfNeedsZip64(phased,true);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530checkIfNeedsZip64(phased,false);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530checkIfNeedsZip64(phased,0);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530checkIfNeedsZip64(phased,newZipArchiveOutputStream());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530checkIfNeedsZip64(phased,null);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased&&checkIfNeedsZip64!=null){preClose();}else{checkIfNeedsZip64(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased&&checkIfNeedsZip64running){preClose();}else{checkIfNeedsZip64(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased&&checkIfNeedsZip64<=null){preClose();}else{checkIfNeedsZip64(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased&&checkIfNeedsZip64){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){checkIfNeedsZip64(phased);preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased&&checkIfNeedsZip64){preClose();}else{thrownewIllegalArgumentException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased&&isEnabled(Feature.QUOTE_FIELD_NAMES)){preClose();}else{thrownewIllegalArgumentException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased&&isEnabled(Feature.QUOTE_FIELD_NAMES)){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530checkIfNeedsZip64(phased,ZipArchiveOutputStream.DEFAULT_ENCODEABLE);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530checkIfNeedsZip64(phased,ZipArchiveOutputStream.UTF8);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530checkIfNeedsZip64(phased,ZipArchiveOutputStream.UNKNOWN);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){System.err.println("Currententry:n"+zip64Mode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){System.err.println("Currententry:"+phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){System.err.println("Currententryhasbeenphased:"+phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){System.err.println("Failedtocloseentry.");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased&&checkIfNeedsZip64){preClose();}else{thrownewRuntimeException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}else{thrownewRuntimeException("");}if(phased){preClose();}else{thrownewRuntimeException("",phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}else{thrownewRuntimeException("");}If(phased){preClose();}else{thrownewRuntimeException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530finalZip64Modephased=getMode();closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}else{finalZip64Modemode=getMode();CloseEntry(mode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased&&getUnicodeExtraFieldPolicy()!=null){preClose();}else{checkIfNeedsZip64(phased);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased&&getUnicodeExtraFieldPolicy()==null){preClose();}else{checkIfNeedsZip64(phased);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased&&getUnicodeExtraFieldPolicy()!=null){preClose();}else{checkIfNeedsZip64(phased,phased);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}else{thrownewIllegalStateException("");}if(phased){preClose();}else{thrownewIllegalStateException(""));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){_reportUnsupportedOperation();}else{checkIfNeedsZip64(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}else{thrownewIllegalArgumentException("");}If(phased){preClose();}else{thrownewIllegalArgumentException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(!phased){preClose();}finalbooleanphased=checkIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(!phased){preClose();}finalbooleanphased=checkIfNeedsZip64(phased);Preconditions.checkNotNull(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(!phased){preClose();}finalbooleanphased=checkIfNeedsZip64(phased);Preconditions.checkState(!phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(!phased){preClose();}finalbooleanphased=checkIfNeedsZip64(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(!phased){preClose();}finalbooleanphased=checkIfNeedsZip64(phased);preClose();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530_reportUndetectableSource(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530_throwUndetectableSource();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530_reportUndetectableSource(pending);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}finalbooleanphased=checkIfNeedsZip64(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}for(finalbooleanphased:phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased&&checkIfNeedsZip64){preClose();}else{thrownewIllegalStateException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased&&isEnabled(Feature.AUTO_CLOSE_SIZE)){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased&&isEnabled(Feature.QUOTE_ENCODE)){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(!phased){_reportUndetectableSource();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530_reportUndetectableSource(entry.sourceName,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530_reportUndetectableSource(entry);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}if(phased){Preconditions.checkIfNeedsZip64(phased);preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}if(phased){Preconditions.checkState(entry.bytesRead==null);preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}if(phased){Preconditions.checkState(entry.bytesRead!=null);preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}if(phased){Preconditions.checkNotNull(entry.bytesRead);preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}if(phased){Preconditions.checkState(entry.bytesRead==null);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){startClose();}else{finalZip64Modemode=getMode();closeEntry(mode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){checkIfNeedsZip64(mode);closeEntry(mode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased&&entry.bytesRead!=null){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased&&entry.bytesRead==null){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){closeEntry();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530finalbooleanphased=phased?checkIfNeedsZip64(phased):closeCopiedEntry(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530finalbooleanphased=phased?checkIfNeedsZip64(phased):closeCopiedEntry();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){finalintentry.bytesRead=entry.getSize();if(entry.bytesRead==0){closeEntry(entry.bytesRead,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){finalintentry.bytesRead=entry.getSize();closeEntry(entry.bytesRead,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){finalintentry.bytesRead=zip64Mode.getSize();closeEntry(entry.bytesRead,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530intentry.bytesRead=entry.getSize();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){finalintentry.bytesRead=entry.getSize();if(entry.bytesRead==0){closeEntry(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){thrownewRuntimeException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){finalintentry.bytesRead=entry.getSize();if(entry.bytesRead==0){return;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased&&entry.bytesRead!=null){preClose();}else{checkIfNeedsZip64(phased);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}else{checkIfNeedsZip64(phased,closeEntry.bytesRead);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}else{checkIfNeedsZip64(phased,closeEntry);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased&&entry.bytesRead!=null){preClose();}else{thrownewIllegalStateException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased&&entry.bytesRead==null){preClose();}else{thrownewIllegalStateException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased&&isEnabled(Feature.AUTO_CLOSE_SIZE)){preClose();}else{thrownewIllegalStateException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(!phased){_reportUnsupportedOperation();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530StaxUtil.throwUnsupportedOperationException("");
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530StaxUtil.throwUnsupportedOperation(newRuntimeException(""));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){super.closeCopiedEntry();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){startCopied();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased&&entry.bytesRead!=null){preClose();}else{thrownewIllegalArgumentException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased&&entry.bytesRead==null){preClose();}else{thrownewIllegalArgumentException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(checkIfNeedsZip64(phased)){checkIfNeedsZip64();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}else{thrownewRuntimeException("");}if(phased){preClose();}else{thrownewRuntimeException(""));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased&&entry.bytesRead!=null){preClose();}else{checkIfNeedsZip64(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased&&checkIfNeedsZip64.isEmpty()){preClose();}else{checkIfNeedsZip64(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased&&checkIfNeedsZip64){preClose();}else{checkIfNeedsZip64(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(phased){preClose();}else{thrownewIllegalArgumentException("");}if(phased){preClose();}else{thrownewIllegalArgumentException(""));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(!phased){preClose();}Integerentry=getEntry(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(!phased){preClose();}intencoding=getEncoding();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530if(!phased){preClose();}intencoding=zipEncoding.getEncoding();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java530checkIfNeedsZip64(phased,Zip64Mode.DEFAULT_ENCODING);
