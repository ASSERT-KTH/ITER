projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(phased);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(finalZip64ModeactiveMode:getActiveZip64Modes()){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(effectiveMode);if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}else{entry.bytesRead=entry.read();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(activeMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(mode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(efficientMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(effectMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased&&checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalphased=checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(phased,true);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(phased,false);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(phased);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalZip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(mode);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(activeMode);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(activeMode);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(mode);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535CheckIfNeedsZip64(effectiveMode);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(activeMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(efficientMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(mode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(efficientMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){CheckIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalintcheckIfNeedsZip64=checkIfNeedsZip64(entry.bytesRead);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalZip64Modemode=checkIfNeedsZip64(effectiveMode);if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(!phased){finalZip64Modemode=checkIfNeedsZip64(effectiveMode);if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(activeMode);if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(effectiveMode,phased);if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(activeMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(efficientMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(phased,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalphased=checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535phased=checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64();closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){CheckIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535CheckIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalphased=checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535phased=checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64();closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){CheckIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535checkIfNeedsZip64(effectiveMode);closeEntry(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);closeEntry(phased,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(effectiveMode);closeEntry(phased,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(phased);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(phased);closeEntry(phased,phased);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(phased);closeEntry(phased,phased);}else{thrownewIllegalStateException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(phased);closeEntry(phased,phased);}else{thrownewIllegalArgumentException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsCip64(phased);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535checkIfNeedsZip64(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(!phased){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeactiveMode=getActiveZip64Modes();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(!phased){for(finalZip64ModeactiveMode:getActiveZip64Modes()){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeactiveMode=getActiveZip64Mode(entry.bytesRead);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeactiveMode=getActiveZip64Mode();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}else{entry.bytesRead=entry.read();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}else{entry.bytesRead=entry.read();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entry.bytesRead;i++){finalZip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entry.bytesRead;i++){checkIfNeedsZip64(entry.bytesRead,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entry.bytesRead;i++){checkIfNeedsZip64(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entry.bytesRead;i++){finalZip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,phased);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(phased){for(finalZip64ModeactiveMode:getActiveZip64Modes()){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(finalZip64ModeactiveMode:getActiveZip64Modes()){checkIfNeedsZip64(activeMode);preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(finalZip64ModeactiveMode:getActiveZip64Modes()){checkIfNeedsZip64(activeMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeactiveMode=getActiveZip64Modes().clone();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){CheckIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getEffectiveZip64Mode(entry);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535CheckIfNeedsZip64(effectiveMode);closeEntry(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535checkIfNeedsZip64(effectiveMode);closeEntry(phased,zip64Mode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535checkIfNeedsZip64(effectiveMode);closeEntry(phased,activeMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(phased);closeCopiedEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(phased);closePaddedEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsPadding(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsCip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsPhase(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64Mode(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64Mode(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}else{Zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,phased);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closePaddedEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(effectiveMode){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(activeMode){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(module);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode,phased);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closePaddingEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){checkIfNeedsZip64();closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(module);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=getIfNeedsZip64(effectiveMode);if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(efficientMode);if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased&&checkIfNeedsZip64(effectiveMode)){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsCip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsSip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsChanged(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsPhase(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=getIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){preClose();}else{checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);}else{zip64Mode=getCopiedZip64Mode(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);}else{Preconditions.checkState(!phased);preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){CheckIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}else{entry.bytesRead=entry.read();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535checkIfNeedsZip64(effectiveMode);closeEntry(phased,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);}else{entry.bytesRead=entry.read();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getEffectiveZip64Mode(entry.entry);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(efficientMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(stepd){finalZip64Modemode=checkIfNeedsZip64(effectiveMode);if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535intmode=checkIfNeedsZip64(effectiveMode);if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64&&effectiveMode!=zip64Mode){checkIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535checkIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getEffectiveZip64Mode(entry.getValue());closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);}else{entry.bytesRead=entry.getSize();closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(stepd){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64&&effectiveMode!=zip64Mode){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getEffectiveZip64Mode(entry);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeactiveMode=getActiveZip64Modes();preClose();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(finalZip64ModeactiveMode:getActualZip64Modes()){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(finalZip64ModeactiveMode:getActiveZip64Mode()){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(effectiveMode!=zip64Mode){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);}else{zip64Mode.closeEntry();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(!phased){finalZip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(efficientMode);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(!phased){finalbooleanphased=checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(stepd){finalbooleanphased=checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(efficientMode);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(efficientMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,closeEntry(activeMode,phased));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(activeMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checked){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(entry.bytesRead!=null){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535inti=0;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64&&effectiveMode!=zip64Mode){checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64&&effectiveMode!=Zip64Mode.DEFAULT_ENCODING){checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode,closeEntry(activeMode,phased));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64&&effectiveMode!=Zip64Mode.DEFAULT_ENCODING){CheckIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64&&effectiveMode!=zip64Mode){checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64&&effectiveMode!=Zip64Mode.DEFAULT_ENCODING){checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(!phased){checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(!phased){finalbooleanphased=checkIfNeedsZip64(phased);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535intphased=checkIfNeedsZip64(phased);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(phased);closeEntry(phased,phased);}else{zip64Mode.close();}
