projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(phased);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(finalZip64ModeactiveMode:getActiveZip64Modes()){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(effectiveMode);if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}else{entry.bytesRead=entry.read();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(activeMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(mode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(efficientMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(effectMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased&&checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalphased=checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(phased,true);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(phased,false);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(phased);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalZip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(mode);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(activeMode);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(activeMode);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(mode);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535CheckIfNeedsZip64(effectiveMode);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(activeMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(efficientMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(mode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(efficientMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){CheckIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalintcheckIfNeedsZip64=checkIfNeedsZip64(entry.bytesRead);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalZip64Modemode=checkIfNeedsZip64(effectiveMode);if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(!phased){finalZip64Modemode=checkIfNeedsZip64(effectiveMode);if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(activeMode);if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(effectiveMode,phased);if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(activeMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(efficientMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(phased,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalphased=checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535phased=checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64();closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){CheckIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535CheckIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalphased=checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535phased=checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64();closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){CheckIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535checkIfNeedsZip64(effectiveMode);closeEntry(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);closeEntry(phased,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(effectiveMode);closeEntry(phased,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(phased);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(phased);closeEntry(phased,phased);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(phased);closeEntry(phased,phased);}else{thrownewIllegalStateException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(phased);closeEntry(phased,phased);}else{thrownewIllegalArgumentException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsCip64(phased);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535checkIfNeedsZip64(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(!phased){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeactiveMode=getActiveZip64Modes();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(!phased){for(finalZip64ModeactiveMode:getActiveZip64Modes()){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeactiveMode=getActiveZip64Mode(entry.bytesRead);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeactiveMode=getActiveZip64Mode();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}else{entry.bytesRead=entry.read();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}else{entry.bytesRead=entry.read();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entry.bytesRead;i++){finalZip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entry.bytesRead;i++){checkIfNeedsZip64(entry.bytesRead,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entry.bytesRead;i++){checkIfNeedsZip64(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entry.bytesRead;i++){finalZip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,phased);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(phased){for(finalZip64ModeactiveMode:getActiveZip64Modes()){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(finalZip64ModeactiveMode:getActiveZip64Modes()){checkIfNeedsZip64(activeMode);preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(finalZip64ModeactiveMode:getActiveZip64Modes()){checkIfNeedsZip64(activeMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeactiveMode=getActiveZip64Modes().clone();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){CheckIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getEffectiveZip64Mode(entry);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535CheckIfNeedsZip64(effectiveMode);closeEntry(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535checkIfNeedsZip64(effectiveMode);closeEntry(phased,zip64Mode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535checkIfNeedsZip64(effectiveMode);closeEntry(phased,activeMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(phased);closeCopiedEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(phased);closePaddedEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsPadding(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsCip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsPhase(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64Mode(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64Mode(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}else{Zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,phased);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closePaddedEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(effectiveMode){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(activeMode){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(module);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode,phased);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closePaddingEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){checkIfNeedsZip64();closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(module);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=getIfNeedsZip64(effectiveMode);if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(efficientMode);if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased&&checkIfNeedsZip64(effectiveMode)){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsCip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsSip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsChanged(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsPhase(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=getIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){preClose();}else{checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);}else{zip64Mode=getCopiedZip64Mode(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);}else{Preconditions.checkState(!phased);preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){CheckIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}else{entry.bytesRead=entry.read();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535checkIfNeedsZip64(effectiveMode);closeEntry(phased,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);}else{entry.bytesRead=entry.read();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getEffectiveZip64Mode(entry.entry);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(efficientMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(stepd){finalZip64Modemode=checkIfNeedsZip64(effectiveMode);if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535intmode=checkIfNeedsZip64(effectiveMode);if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64&&effectiveMode!=zip64Mode){checkIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535checkIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getEffectiveZip64Mode(entry.getValue());closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);}else{entry.bytesRead=entry.getSize();closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(stepd){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64&&effectiveMode!=zip64Mode){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getEffectiveZip64Mode(entry);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeactiveMode=getActiveZip64Modes();preClose();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(finalZip64ModeactiveMode:getActualZip64Modes()){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(finalZip64ModeactiveMode:getActiveZip64Mode()){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(effectiveMode!=zip64Mode){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);}else{zip64Mode.closeEntry();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(!phased){finalZip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(efficientMode);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(!phased){finalbooleanphased=checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(stepd){finalbooleanphased=checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(efficientMode);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(efficientMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,closeEntry(activeMode,phased));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(activeMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checked){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(entry.bytesRead!=null){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535inti=0;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64&&effectiveMode!=zip64Mode){checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64&&effectiveMode!=Zip64Mode.DEFAULT_ENCODING){checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode,closeEntry(activeMode,phased));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64&&effectiveMode!=Zip64Mode.DEFAULT_ENCODING){CheckIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64&&effectiveMode!=zip64Mode){checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64&&effectiveMode!=Zip64Mode.DEFAULT_ENCODING){checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(!phased){checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(!phased){finalbooleanphased=checkIfNeedsZip64(phased);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535intphased=checkIfNeedsZip64(phased);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(phased);closeEntry(phased,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(effectiveMode);closeEntry(phased,entry.bytesRead);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64();closeEntry(effectiveMode,phased);}else{entry.bytesRead=entry.read();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,phased);closeEntry(efficientMode,phased);}else{entry.bytesRead=entry.read();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeactiveMode=checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalCheckIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535CheckIfNeedsZip64(effectiveMode,phased);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalZip64Modemode=checkIfNeedsZip64(activeMode);if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(mode);if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(!phased){finalZip64Modemode=checkIfNeedsZip64(activeMode);if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(module,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeactiveMode=getActiveZip64Mode(entry.bytesRead,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeactiveMode=getActiveZip64Mode(entry.getValue());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeactiveMode=getActiveZip64Mode(entry.blocksRead);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeactiveMode=getActiveZip64Mode(entry.getKey());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeactiveMode=getActiveZip64Mode(entry.bytesRead-1);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(phased,zip64Mode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getEffectiveZip64Mode(entry.bytesRead);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(phased,zip64Mode);}else{thrownewIllegalStateException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(phased,zip64Mode);}else{thrownewIllegalArgumentException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getEffectiveZip64Mode(entry.getValue());closeEntry(effectiveMode,zip64Mode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getEffectiveZip64Mode(entry.bytesRead);closeEntry(effectiveMode,zip64Mode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){CheckIfNeedsZip64(effectiveMode);closeEntry(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalCheckIfNeedsZip64(effectiveMode);closeEntry(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(effectiveMode);closeEntry(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(!phased){CheckIfNeedsZip64(effectiveMode);closeEntry(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){CheckIfNeedsZip64(effectiveMode,zip64Mode);closeEntry(effectiveMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64=checkIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){CheckIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){CheckIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}else{Zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeactiveMode=checkIfNeedsZip64(activeMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeactiveMode=checkIfNeedsZip64(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(activatedMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){intmode=checkIfNeedsZip64(effectiveMode);if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalintmode=checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalintmode=checkIfNeedsZip64(effectiveMode);if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535intmode=checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535longmode=checkIfNeedsZip64(effectiveMode);if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535intmode=checkIfNeedsZip64(effectiveMode,phased);if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(phased,false,true);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Finalbooleanphased=checkIfNeedsZip64(phased,true);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(efficiencyMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(phased,effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(!phased){checkIfNeedsZip64(effectiveMode);closeEntry(phased,effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(phased,effectiveMode);}else{thrownewIllegalStateException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getEffectiveZip64Mode(entry.bytesRead);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalphased=checkIfNeedsZip64(efficientMode);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64=checkIfNeedsZip64(phased);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535phased=checkIfNeedsZip64(efficientMode);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased&&effectiveMode!=Zip64Mode.DEFAULT_ENCODING){checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased&&effectiveMode!=Zip64Mode.DEFAULT_ENCODING){CheckIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535phased=checkIfNeedsZip64(phased);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(phased,actualNeedsZip64);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64();closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalphased=checkIfNeedsZip64(phased);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalphased=checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalphased=checkIfNeedsZip64(activeMode);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(activeMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(phased,activeMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Finalbooleanphased=checkIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(mode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(mode);closeEntry(phased,phased);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkForNeedsZip64(phased);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(!checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode,phased);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64){checkIfNeedsZip64(efficientMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entry.bytesRead;i++){finalZip64ModeeffectiveMode=checkIfNeedsZip64(efficientMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entry.bytesRead;i++){finalZip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);closeEntry(activatedMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entry.bytesRead;i++){finalZip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);closeEntry(module,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entry.bytesRead;i++){finalZip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,Phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased){checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finallyNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535phased){checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64=checkIfNeedsZip64(effectiveMode,closeEntry(activeMode,phased));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalphased=checkIfNeedsZip64(effectiveMode,closeEntry(activeMode,phased));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535phased=checkIfNeedsZip64(effectiveMode,closeEntry(activeMode,phased));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535checkIfNeedsZip64(effectiveMode,closeEntry(activeMode,phased));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64=checkIfNeedsZip64(effectiveMode,closeEntry(phased));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64){checkIfNeedsZip64(effectiveMode,closeEntry(activeMode,phased));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(!phased){checkIfNeedsZip64(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(phased,finallyNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(phased,initialized);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);}else{entry.bytesRead=entry.read();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64||checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}else{entry.bytesRead=entry.read();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(entry.bytesRead,phased);}else{entry.bytesRead=entry.read();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}else{entry.bytesRead=entry.read();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64){checkIfNeedsZip64(efficientMode);closeEntry(effectiveMode,phased);}else{entry.bytesRead=entry.read();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalZip64Modemode=getIfNeedsZip64(effectiveMode);if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=getIfNeedsZip64(entry.bytesRead);if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=getIfNeedsZip64(activeMode);if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(efficiencyMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(phased,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(mode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(efficientMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(effectiveMode,Phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entries.length;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entry.bytesRead;++i){checkedIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getFixedZip64Mode(entry);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getEffectiveZip64Mode(entry.getKey());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getEffectiveZip64Mode(entry.getValue());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getActualZip64Mode(entry);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getEffectiveZip64Mode(entry.key);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535checkIfNeedsZip64();closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535CheckIfNeedsZip64();closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(entry.bytesRead!=null){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(entry.bytesRead==null){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(entry.bytesRead==null){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(entry.bytesRead!=null){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535safelyNeedsZip64){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535safelyNeedsZip64=checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535CheckIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64=checkIfNeedsZip64(effectiveMode,phased);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalphased=checkIfNeedsZip64(effectiveMode,phased);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535phased=checkIfNeedsZip64(effectiveMode,phased);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535checkIfNeedsZip64(effectiveMode,phased);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){CheckIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalCheckIfNeedsZip64(effectiveMode);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getEffectiveZip64Mode(entry.getKey());closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(!phased){for(finalZip64ModeactiveMode:getActiveZip64Mode()){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(phased){for(finalZip64ModeactiveMode:getActiveZip64Mode()){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeactiveMode:getActiveZip64Mode()){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64();closeEntry(effectiveMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);}else{Zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkForNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=verifyIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(module,phased);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalZip64ModeeffectiveMode=checkIfNeedsZip64(module);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalZip64Modemode=checkIfNeedsZip64(effectiveMode,phased);if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(effectMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalZip64ModeeffectiveMode=checkIfNeedsZip64(phased);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkPasedZip64(phased);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535checkIfNeedsZip64(phased);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(!phased){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64Mode(entry.bytesRead,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entries.bytesRead;++i){checkIfNeedsZip64Mode(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entries.length;++i){checkIfNeedsZip64Mode(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entry.bytesRead+1;++i){checkIfNeedsZip64Mode(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535For(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64Mode(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsCip64(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsCip64(phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsCip64(phased,true);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsCip64(phased,false);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalphased){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64=checkIfNeedsZip64(entry.bytesRead);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(entry.bytesRead,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entries.length;++i){checkIfNeedsZip64(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalphased){for(inti=0;i<entry.bytesRead;++i){closeEntry(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(efficientMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(efficientMode);closeEntry(phased,phased);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(efficientMode);closeEntry(phased,phased);}else{thrownewIllegalStateException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(efficientMode);closeEntry(phased,phased);}else{thrownewIllegalArgumentException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(efficientMode);closeEntry(phased,phased);}else{
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Context.checkState(phased){for(finalZip64ModeactiveMode:getActiveZip64Modes()){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(phased){for(finalZip64ModeactiveMode:getActiveZip64Modes()){checkIfNeedsZip64(activeMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(phased){for(finalZip64ModeactiveMode:getActiveZip64Modes()){checkIfNeedsZip64(activeMode);preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(!phased){checkIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(!phased){finalbooleanphased=checkIfNeedsZip64(phased);closeEntry(phased,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(phased,zip64Mode);closeEntry(phased,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(phased);closeEntry(phased,phased);}else{Zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64();closeEntry(phased,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalZip64ModeeffectiveMode=getEffectiveZip64Mode(entry);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalZip64ModeeffectiveMode=getEffectiveZip64Mode(entry.entry);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getFixedZip64Mode(entry);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64=checkIfNeedsZip64(efficientMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64){checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalphased=checkIfNeedsZip64(efficientMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalphased=checkIfNeedsZip64(phased);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalphased=checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalphased=checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalinti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535inti=0;i<entry.bytesRead+1;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Integeri=0;i<entry.bytesRead;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535chari=entry.bytesRead;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535inti=0;i<entry.bytesRead-1;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){inti=0;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalinti=0;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535inti=0;++i){checkIfNeedsZip64(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Integeri=0;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535longi=0;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(!phased){checkIfNeedsZip64(effectiveMode);closeEntry(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(efficientMode);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Zip64ModeeffectiveMode=getEffectiveZip64Mode(entry.bytesRead);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Zip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(effectiveMode);closeEntry(phased,effectiveNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64=checkIfNeedsZip64(phased);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalphased=checkIfNeedsZip64(effectiveMode);closeEntry(phased,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);closeEntry(phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);closeEntry(actuallyNeedsZip64,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Finalbooleanphased=checkIfNeedsZip64(phased,false);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535staticfinalbooleanphased=checkIfNeedsZip64(phased,false);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkedIfNeedsZip64(phased,false);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalphased=checkIfNeedsZip64();closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535checkIfNeedsZip64();closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64){checkIfNeedsZip64();closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535phased=checkIfNeedsZip64();closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535CheckIfNeedsZip64();closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535phased=checkIfNeedsZip64(phased);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535safelyNeedsZip64){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535safelyNeedsZip64){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535safelyNeedsZip64){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535checkIfNeedsZip64(entry.bytesRead);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalphased=checkIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalphased=checkIfNeedsZip64(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalphased=checkIfNeedsZip64(activeMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalphased=checkIfNeedsZip64(efficientMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535CheckIfNeedsZip64(effectiveMode,closeEntry(activeMode,phased));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode,closeEntry(activeMode,phased));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalCheckIfNeedsZip64<=checkIfNeedsZip64(effectiveMode,closeEntry(activeMode,phased));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64=checkIfNeedsZip64(effectiveMode,closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalphased=checkIfNeedsZip64(effectiveMode,closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535phased=checkIfNeedsZip64(effectiveMode,closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535checkIfNeedsZip64(effectiveMode,closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64=checkIfNeedsZip64(effectiveMode,closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64){checkIfNeedsZip64(effectiveMode,closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64=checkIfNeedsZip64(phased);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64();closeEntry(phased,phased);}else{thrownewIllegalArgumentException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(phased);closeEntry(phased,phased);}else{thrownewIllegalArgumentException("".);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64=getCopiedZip64Mode(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(zip64Mode);}else{zip64Mode=getCopiedZip64Mode(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){zip64Mode=getCopiedZip64Mode(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,zip64Mode);}else{zip64Mode=getCopiedZip64Mode(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){zip64Mode=getCopiedZip64Mode(effectiveMode);}else{zip64Mode=getCopiedZip64Mode(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased&&checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=getIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=getIfNeedsZip64(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=getIfNeedsZip64(entry.bytesRead);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=getIfNeedsZip64(activeMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=getIfNeedsZip64(entry.mode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535phased=checkIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(!phased);preClose();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,phased);}else{Preconditions.checkState(!phased);preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(!phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535preClose();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalZip64ModeactiveMode=getActiveZip64Modes();preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeactiveMode=getActiveZip64Mode(entry.bytesRead);preClose();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalZip64ModeactiveMode=getActiveZip64Modes();preClose();}else{checkIfNeedsZip64(activeMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalZip64ModeactiveMode=getActiveZip64Modes();preClose();}else{entry.bytesRead=entry.getSize();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalZip64ModeactiveMode=getActiveZip64Modes();preClose();}else{entry.bytesRead=entry.getSize();closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalZip64Modemode=checkIfNeedsZip64(efficientMode);if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalZip64ModeeffectiveMode=checkIfNeedsZip64(activeMode);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeactiveMode=checkIfNeedsZip64(activeMode);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalintcheckIfNeedsZip64=checkIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalintcheckIfNeedsZip64=checkIfNeedsZip64(entry.bytesRead,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalintcheckIfNeedsZip64=checkIfNeedsZip64(finallyNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalintcheckIfNeedsZip64=checkIfNeedsZip64(checkIfNeedsZip64(entry.bytesRead));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalintcheckIfNeedsZip64=checkIfNeedsZip64(checkIfNeedsZip64(phased));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbytecheckIfNeedsZip64=checkIfNeedsZip64(entry.bytesRead);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64){for(inti=0;i<entry.bytesRead;++i){closeEntry(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(entry.bytesRead,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entries.length;++i){checkIfNeedsZip64(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64){checkIfNeedsZip64(efficientMode);closeEntry(effectiveMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}else{Zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(actuallyNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(phased,true);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(phased);closeEntry(phased,phased);}else{thrownewIllegalStateException("".);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased&&checkIfNeedsZip64(effectiveMode,phased)){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased&&checkIfNeedsZip64(effectiveMode)||checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased&&checkIfNeedsZip64(efficientMode)){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased&&checkIfNeedsZip64()){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);closePaddedEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalphased=checkIfNeedsZip64(effectiveMode);closePaddedEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535phased=checkIfNeedsZip64(effectiveMode);closePaddedEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535checkIfNeedsZip64(effectiveMode);closePaddedEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64();closePaddedEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){CheckIfNeedsZip64(effectiveMode);closePaddedEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64=checkIfNeedsZip64(effectiveMode,phased);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535checkIfNeedsZip64(effectiveMode,phased);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(effectiveMode,phased);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){CheckIfNeedsZip64(effectiveMode,phased);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,phased);closeEntry(effectiveMode,phased);}else{entry.bytesRead=entry.read();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalphased=checkIfNeedsZip64(effectiveMode);closeEntry(phased,entry.bytesRead);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsChanged(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsChanged(phased,true);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsChanged(phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsChanged(phased,false);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsChanged();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsSip64(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsSip64(phased,true);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsSip64(phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsSip64(phased,false);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeactiveMode=getActiveZip64Mode(entry.name);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeactiveMode=getActiveZip64Mode(entry.mode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64=checkIfNeedsZip64(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535phased=checkIfNeedsZip64(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);closeEntry(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(phased,true);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(phased,effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased&&effectiveMode!=Zip64Mode.DEFAULT_ENCODING){checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64&&effectiveMode!=Zip64Mode.DEFAULT_END){checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64&&effectiveMode!=Zip64Mode.DEFAULT_ENCODING){checkIfNeedsZip64(efficientMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalphased){for(inti=0;i<entry.bytesRead;i++){checkIfNeedsZip64(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalphased){for(inti=0;i<entry.bytesRead;i++){closeEntry(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalphased){for(inti=0;i<entry.bytesRead;i++){checkIfNeedsZip64(entry.bytesRead,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64(effectiveMode)){closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(!phased){checkIfNeedsZip64(effectiveMode);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(phased){checkIfNeedsZip64(effectiveMode);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,phased);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(activeMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(!phased){finalbooleanphased=checkIfNeedsZip64(activeMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(activeMode);closeEntry(phased,phased);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(phased,activeMode);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(activeMode);closeEntry(phased,phased);}else{thrownewIllegalStateException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(phased,actuallyNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(phased,actualNeedsZip64,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(phased,trueNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(actuallyNeedsZip64,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(actuallyNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(phased,actualLYNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsPhase(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsPhase(phased,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsPhase(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsPhase(period);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfPhase(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsCip64(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsCip64(activeMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsCip64(efficientMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);closeEntry(phased,true);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsCip64(phased);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsCip64(phased);closeEntry(phased,phased);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsCip64(phased);closeEntry(phased,phased);}else{thrownewIllegalStateException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsCip64(phased);closeEntry(phased,phased);}else{thrownewIllegalArgumentException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getIfNeedsZip64(entry.bytesRead);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getIfNeedsZip64(step);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getIfNeedsZip64(activeMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getIfNeedsZip64(entry.mode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getIfNeedsZip64(mode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64();closeEntry(phased,phased);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64=checkIfNeedsZip64(phased);closeEntry(actuallyNeedsZip64,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(effectiveMode);closeEntry(phased,activeMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(phased,activeMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(!phased){checkIfNeedsZip64(effectiveMode);closeEntry(phased,activeMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535checkIfNeedsZip64(activeMode);closeEntry(phased,activeMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64||checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64){checkIfNeedsZip64(efficientMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(efficiencyMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(efficientMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entries.length;++i){checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode,finallyNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(efficientMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode,true);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode,closeEntry(phased));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(!phased){finalZip64Modemode=checkIfNeedsZip64(effectiveMode);if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getEffectiveZip64Mode(entry.getValue(),phased);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalZip64ModeeffectiveMode=getEffectiveZip64Mode(entry.getValue());closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getIfNeedsZip64(entry.getValue());closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64Mode(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64Mode(activeMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64Mode(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entries.bytesRead;++i){checkIfNeedsZip64Mode(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entry.bytesRead-1;++i){checkIfNeedsZip64Mode(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entry.bytesRead+1;++i){checkIfNeedsZip64Mode(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalZip64ModeeffectiveMode=checkIfNeedsZip64(efficientMode);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalphased=checkIfNeedsZip64(efficientMode);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535phased=checkIfNeedsZip64(efficientMode);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64&&effectiveMode!=zip64Mode){checkIfNeedsZip64(effectiveMode,phased);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getEffectiveZip64Mode(entry.bytesRead);checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(effectiveMode,finallyNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(effectiveMode,closeEntry(phased));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(effectiveMode,true);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(activatedMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(effectiveMode);closeEntry(phased,effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(phased);closeEntry(phased,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeactiveMode=getActiveZip64Modes();checkIfNeedsZip64(activeMode);preClose();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(finalZip64ModeactiveMode:getActiveZip64Modes()){checkIfNeedsZip64(activeMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(finalZip64ModeactiveMode:getActiveZip64Modes()){checkIfNeedsZip64(activeMode,phased);preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(actuallyNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getEffectiveZip64Mode(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);}else{Zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64){checkIfNeedsZip64(efficientMode);closeEntry(efficientMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(efficiencyMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getFixedZip64Mode(entry.entry);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getIfNeedsZip64(entry.entry);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64();closeEntry(effectiveMode,phased);}else{Zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalintphased=checkIfNeedsZip64(phased);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){intphased=checkIfNeedsZip64(phased);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535booleanphased=checkIfNeedsZip64(phased);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){intphased=checkIfNeedsZip64(phased);closeEntry(phased,phased);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){intphased=checkIfNeedsZip64(phased);closeEntry(phased,phased);}else{thrownewIllegalStateException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64=checkIfNeedsZip64(activeMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64=checkIfNeedsZip64(efficientMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64){preClose();}else{checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(!phased){preClose();}else{checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(phased,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(phased);closePaddedEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(phased);closePaddedEntry(phased,phased);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsCip64(phased);closePaddedEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(phased);closePaddedEntry(phased,phased);}else{thrownewIllegalStateException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(phased);closePaddedEntry(phased,phased);}else{thrownewIllegalArgumentException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64&&effectiveMode!=zip64Mode){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64&&effectiveMode!=zip64Mode){checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64&&effectiveMode!=zip64Mode){checkIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64&&effectiveMode!=zip64Mode){checkIfNeedsZip64(effectiveMode);closeEntry(false,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64&&effectiveMode!=zip64Mode){checkIfNeedsZip64(effectiveMode);closeEntry(closeEntry,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entry.bytesRead;i++){finalZip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entry.bytesRead;i++){finalZip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entry.bytesRead;i++){finalZip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);closeEntry(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entry.bytesRead;i++){finalZip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);closeEntry(
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64=checkIfNeedsZip64(entry.bytesRead,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64){for(inti=0;i<entry.bytesRead;i++){checkIfNeedsZip64(entry.bytesRead,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalintphased=checkIfNeedsZip64(entry.bytesRead,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entry.bytesRead;i++){checkIfNeedsZip64(entry.bytesRead,Phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalphased=checkIfNeedsZip64(entry.bytesRead,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(phased);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(activeMode);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(efficientMode);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsPhase(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsPhase(phased,actualNeedsZip64);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsPhase(phased,true);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsPhase(phased,false);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkPhase(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64!=effectiveMode){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64!=effectiveMode){checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(!phased){for(finalZip64ModeactiveMode:getActiveZip64Modes()){checkIfNeedsZip64(activeMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(finalZip64ModeactiveMode:getActiveZip64Modes()){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(phased);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(mode);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalintphased=checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entries.bytesRead;++i){checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(efficiencyMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entry.bytesRead+1;++i){checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entry.bytesRead-1;++i){checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535phased=checkIfNeedsZip64(effectiveMode);closeEntry(phased,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsPadding(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsPadding(phased,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsPadding();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsPadding(activeMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsPadding(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Finalbooleanphased=checkIfNeedsPadding(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalphased=checkIfNeedsZip64(effectiveMode,phased);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535phased=checkIfNeedsZip64(effectiveMode,phased);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalZip64ModeeffectiveMode=checkIfNeedsZip64(mode);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(mode,phased);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){phased=checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);}else{zip64Mode.closeEntry();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);}else{zip64Mode.closeEntry();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535zip64Mode.closeEntry();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);closePaddingEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalphased=checkIfNeedsZip64(effectiveMode);closePaddingEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535phased=checkIfNeedsZip64(effectiveMode);closePaddingEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64();closePaddingEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64){checkIfNeedsZip64(effectiveMode);closePaddingEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,phased);closePaddingEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanfinallyNeedsZip64){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalintfinallyNeedsZip64){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535catch(finallyNeedsZip64){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(effectiveMode,true);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeactiveMode=getActualZip64Modes();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(!phased){for(finalZip64ModeactiveMode:getActualZip64Modes()){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeactiveMode=getActualZip64Mode(entry.bytesRead);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);}else{entry.bytesRead=entry.getSize();closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535entry.bytesRead=entry.getSize();closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);}else{entry.bytesRead=entry.getSize();closeEntry(efficientMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){phased=checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535PhasedEntryphased=checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(!phased){checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535checkIfNeedsZip64(phased);closeEntry(activeMode,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}else{entry.bytesRead=zip64Mode;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}else{thrownewIllegalStateException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeactiveMode=getActiveZip64Mode(0);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(phased);closeEntry(efficientMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalactiveMode=checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanfinallyNeedsZip64){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finallyNeedsZip64){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64){checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalphased=checkIfNeedsZip64();closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535phased=checkIfNeedsZip64();closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalphased=checkIfNeedsZip64(effectiveMode,closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(effectiveMode,closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535phased=checkIfNeedsZip64(effectiveMode,closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,closeEntry(phased,actualNeedsZip64);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeactiveMode=getActiveZip64Modes();checkIfNeedsZip64(activeMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeactiveMode:getActiveZip64Modes()){checkIfNeedsZip64(activeMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(phased);closeCopiedEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(phased);closeCopiedEntry(phased,phased);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(phased);closeCopiedEntry(phased,phased);}else{thrownewIllegalStateException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(phased);closeCopiedEntry(phased,phased);}else{thrownewIllegalArgumentException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535phased=checkIfNeedsZip64(phased);closeCopiedEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeactiveMode=getActiveZip64Mode(entry.bytesRead).clone();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeactiveMode=getActiveZip64Mode(entry.bytesRead,phased).clone();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeactiveMode=getActiveZip64Mode().clone();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entry.bytesRead-1;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entries.bytesRead;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entry.bytesRead&&++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entry.bytesRead+1;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(mode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);closeEntry(phased,effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);closeEntry(phased,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64=checkIfNeedsZip64(effectiveMode,phased);closeEntry(phased,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(efficientMode);closeEntry(effectiveMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entries.bytesRead;++i){checkIfNeedsZip64(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entry.bytesRead-1;++i){checkIfNeedsZip64(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entry.bytesRead+1;++i){checkIfNeedsZip64(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535For(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=1;i<entry.bytesRead;++i){checkIfNeedsZip64(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535CheckIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(module);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entry.bytesRead&&++i){checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsPhase(phased,activeMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsFinally(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535chari=0;i<entry.bytesRead;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=getIfNeedsZip64(phased,false);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(efficientMode);}else{Preconditions.checkState(!phased);preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){CheckIfNeedsZip64(effectiveMode,phased);closeEntry(effectiveMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(!phased){CheckIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){CheckIfNeedsZip64(efficientMode);closeEntry(effectiveMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(phased,Phased.DEFAULT_ENCODEABLE);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsCircuit){checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsFile64){checkIfNeedsFile64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsFinally){checkIfNeedsFinally(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsRead){checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(activeMode);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}else{
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=getIfNeedsZip64(mode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=getZip64Mode(mode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,phased);closeEntry(efficientMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalphased=checkIfNeedsZip64(mode);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535PhasedZip64phased=checkIfNeedsZip64(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(phased){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,phased);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64();closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(finalZip64ModeactiveMode:getActiveZip64Modes()){checkIfNeedsZip64(effectiveMode);preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(finalZip64ModeactiveMode:getActiveZip64Modes()){checkIfNeedsZip64(activateMode);preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(activeMode){finalZip64Modemode=checkIfNeedsZip64(activeMode);if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}else{
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(activeMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Integerphased=checkIfNeedsZip64(phased);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535longphased=checkIfNeedsZip64(phased);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){intphased=checkIfNeedsZip64(phased);closeEntry(phased,phased);}else{
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(phased){for(inti=0;i<entry.bytesRead;i++){finalZip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entry.bytesRead;i++){finalZip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);closeEntry(phased
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(efficiencyMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(effectiveMode){checkIfNeedsZip64(effectiveMode);closeEntry(phased,effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(activeMode){checkIfNeedsZip64(effectiveMode);closeEntry(phased,effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(phased,effectiveMode);}else{
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsSip64(phased);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(mode);closeEntry(phased,phased);}else{
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(!phased){checkIfNeedsZip64(effectiveMode);closeEntry(phased,zip64Mode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}else{zip64Mode=newZip64Mode();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}else{zip64Mode=null;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}else{zip64Mode=true;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(activateMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}else{entry.bytesRead=entry.read();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(phased,entry.bytesRead);}else{entry.bytesRead=entry.read();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode,phased);closeEntry(effectiveMode,phased);}else{entry.bytesRead=entry.read();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsRead){checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}else{entry.bytesRead=entry.read();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64||checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}else{entry.bytesRead=entry.read();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64||phased>checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}else{entry.bytesRead=entry.read();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsPadding(efficientMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsPhase(efficientMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(phased,effectiveMode);}else{entry.bytesRead=entry.read();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}else{entry.bytesRead=entry.read();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalZip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased&&checkIfNeedsZip64(effectiveMode)||checkIfNeedsZip64(effectiveMode)){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased&&checkIfNeedsZip64(activeMode)){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(phased&&checkIfNeedsZip64){for(finalZip64ModeactiveMode:getActiveZip64Modes()){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(phased){for(finalZip64ModeactiveMode:getFullZip64Modes()){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(phased&&activeMode!=getActiveZip64Modes()){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535checkIfNeedsZip64(effectiveMode);closeCopiedEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}else{
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535CheckIfNeedsZip64(effectiveMode,phased);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535validatePaint(effectiveMode,phased);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,phased);closeEntry(phased,Phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Phasedphased=checkIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);}else{entry.bytesRead=zip64Mode;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535checkIfNeedsZip64(effectiveMode);closeCopiedEntry(efficientMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);}else{
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(!phased){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(phased){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfPadding(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsChanged(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsPadded(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535checkIfNeedsZip64(efficientMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(efficiencyMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}else{entry.bytesRead=zip64Mode;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535checkIfNeedsZip64(effectiveMode);closeCopiedEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}else{
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closePaddedEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){CheckIfNeedsZip64(effectiveMode,phased);closeEntry(effectiveMode,phased);}else{entry.bytesRead=entry.read();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){CheckIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);}else{entry.bytesRead=entry.read();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){CheckIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}else{entry.bytesRead=entry.read();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(!phased){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535phased=CheckIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(activeMode){checkIfNeedsZip64(effectiveMode);closeEntry(phased,activeMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(phased,activeMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(phased,activeMode);}else{thrownewIllegalStateException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(activeMode){checkIfNeedsZip64(effectiveMode);closeEntry(phased,activeMode);}else{thrownewIllegalStateException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(phased,activeMode);}else{
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(effectiveMode);closePaddingEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsPadding(effectiveMode);closePaddingEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkNotNull(effectiveMode);closePaddingEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(effectiveMode!=null);closePaddingEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(phased){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=phased&&checkIfNeedsZip64(entry.bytesRead);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entry.bytesRead+1;++i){checkIfNeedsZip64(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=phased?checkIfNeedsZip64(phased):checkIfNeedsZip64(entry.bytesRead);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsPip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsCopied(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(phased){for(inti=0;i<entry.bytesRead;i++){checkIfNeedsZip64(entry.bytesRead,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entries.length;i++){checkIfNeedsZip64(entry.bytesRead,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entry.bytesRead;i++){checkIfNeedsZip64(entry,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entry.bytesRead;i++){checkIfNeedsZip64(entry.bitsRead,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(phased){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}else{Zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,phased);closeEntry(effectiveMode,phased);}else{Zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(efficientMode);closeEntry(effectiveMode,phased);}else{Zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanfinallyNeedsZip64){checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(effectiveMode!=Zip64Mode.DEFAULT_ENCODING){checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(activeMode!=Zip64Mode.DEFAULT_ENCODING){checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsPaint(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsCopied(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64||checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsRead){checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsFile64){checkIfNeedsFile64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsFinally){checkIfNeedsFinally(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,phased);}else{Zip64ModeactiveMode=getActiveZip64Mode(activeMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,phased);}else{Zip64ModeeffectiveMode=getEffectiveZip64Mode(entry.bytesRead);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,phased);}else{Zip64ModeactiveMode=zip64Mode;closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,phased);}else{Zip64ModeeffectiveMode=zip64Mode;closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(phased,actualNeedsZip64+1);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalphased=checkIfNeedsZip64(mode);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalphased=checkIfNeedsZip64(activeMode);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsCip64(phased);closeCopiedEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(phased);closeCopiedEntry(phased,phased);}else{
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsSip64(phased);closeCopiedEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getIfNeedsZip64(efficientMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsCip64(phased);closeEntry(phased,phased);}else{
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(phased){for(inti=0;i<entry.bytesRead;i++){checkIfNeedsZip64(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entries.length;i++){checkIfNeedsZip64(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entry.bytesRead;i++){CheckIfNeedsZip64(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entry.bitsRead;i++){checkIfNeedsZip64(entry.bitsRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getOptionalZip64Mode(entry);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entry.length;++i){checkIfNeedsZip64Mode(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(phased,efficientMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535booleanphased=checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64=checkIfNeedsZip64(efficientMode);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(efficiencyMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeactiveMode=getActiveZip64Mode(entry.entry);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeactiveMode=getActiveZip64Mode(entry.getName());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(!phased){CheckIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){CheckIfNeedsZip64(effectiveMode);closePaddingEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){CheckIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}else{
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){CheckIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}else{thrownewIllegalStateException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535checkIfNeedsZip64(effectiveMode);closeCopiedEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalintcheckIfNeedsZip64=checkIfNeedsZip64(phased,entry.bytesRead);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalintcheckIfNeedsZip64=checkIfNeedsZip64(phased?entry.bytesRead:entry.bytes);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalintcheckIfNeedsZip64=checkIfNeedsZip64(checkIfNeedsZip64,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Integermode=checkIfNeedsZip64(effectiveMode);if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535phased=checkIfNeedsZip64(effectiveMode);closeCopiedEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535PhasedEntryphased=checkIfNeedsZip64(effectiveMode);closePaddedEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){CheckIfNeedsZip64(effectiveMode,phased);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(phased){finalbooleanphased=checkIfNeedsZip64(phased);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Phasedphased=checkIfNeedsZip64(phased);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535PhasedZip64phased=checkIfNeedsZip64(effectiveMode,closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(!phased){checkIfNeedsZip64(effectiveMode,closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,closeCopiedEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entry.bytesRead&&++i){checkIfNeedsZip64(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entries.length;++i){checkIfNeedsZip64(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsPased(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsChanged(phased+1);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(!phased){if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64&&effectiveMode!=zip64Mode){checkIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getEffectiveZip64Mode(entry.getValue());closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closePaintEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}else{entry.bytesRead=zip64Mode;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(phased){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entry.bytesRead+1;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeactiveMode=getActiveZip64Mode(entry);preClose();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeactiveMode=getActiveZip64Mode(entry.getKey());preClose();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeactiveMode=getActiveZip64Mode(entry.getValue());preClose();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(phased,phased);closeEntry(phased,phased);}else{thrownewIllegalArgumentException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getIfNeedsZip64Mode(entry.getValue());closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getFixedZip64Mode(entry.getValue());closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalfinallyNeedsZip64){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(efficientMode);closeEntry(phased,phased);}else{entry.bytesRead=zip64Mode;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(phased,effectiveMode);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=getIfNeedsZip64Mode(effectiveMode);if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=getIfNeedsZip64(effectiveMode,phased);if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(phased){for(finalZip64ModeactiveMode:getActualZip64Modes()){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(finalZip64ModeactiveMode:getEffectiveZip64Modes()){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(finalZip64ModeactiveMode:getActualZip64Mode()){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}else{
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64=checkIfNeedsZip64(activeMode);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}else{entry.bytesRead=zip64Mode;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535safelyNeedsZip64=checkIfNeedsZip64(effectiveMode,closeEntry(activeMode,phased));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535safelyNeedsZip64(effectiveMode,closeEntry(activeMode,phased));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535PhasedZip64Entryphased=checkIfNeedsZip64(effectiveMode,closeEntry(activeMode,phased));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535PhasedZip64Entryphased=checkIfNeedsZip64(effectiveMode,closeEntry(phased,activeMode));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535checkIfNeedsZip64();closePaddingEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(effectiveMode,closePhased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(effectiveMode,0);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(effectiveMode,closed);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(effectiveMode,closePhase);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=getIfNeedsZip64(efficientMode);if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);}else{
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64=checkIfNeedsZip64(phased);closeEntry(efficientMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);closeEntry(propertyNeedsZip64,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(phased);closeEntry(phased,Phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64();closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getIfNeedsZip64(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getIfNeedsZip64(module);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(mode);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535checkIfNeedsZip64(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535PhasedZip64Entryphased=checkIfNeedsZip64(effectiveMode,closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535lastModified=checkIfNeedsZip64(effectiveMode,closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535lastModified=phased?checkIfNeedsZip64(effectiveMode,closeEntry(activeMode,phased):null;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535lastModified=phased?checkIfNeedsZip64(effectiveMode,closeEntry(activeMode,phased):false;
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,phased);closeEntry(effectiveMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(effectiveMode!=zip64Mode){checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(activeMode!=zip64Mode){checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(effectiveMode){checkIfNeedsZip64(effectiveMode);closeEntry(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closePaddedEntry(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closePaddingEntry(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closePaintEntry(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getEffectiveZip64Mode(entry.getValue());closeEntry(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsPaint(phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64();closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(phased){checkIfNeedsZip64();closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64();closePaddedEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsPhase(phased+1);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfPhase(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){CheckIfNeedsZip64(effectiveMode,phased);closeEntry(efficientMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){CheckIfNeedsZip64(effectiveMode);closeEntry(phased,effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(!phased){checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsPaint(activeMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(entry.bytesRead!=null){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(entry.bytesRead==null){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(phased){if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(finalZip64ModeactiveMode:getFullZip64Mode()){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535phased=checkIfNeedsZip64(activeMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsPadded(phased);closePaddedEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(phased);closePaddedEntry(phased,phased);}else{
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsChanged(phased);closePaddedEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);}else{Zip64Mode.closeEntry();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64&&effectiveMode!=Zip64Mode.DEFAULT_ENCODING){checkIfNeedsZip64(effectiveMode);closeEntry(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64&&effectiveMode!=Zip64Mode.DEFAULT){checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535validatePasedEntry(effectiveMode,closeEntry(activeMode,phased));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535checkIfNeedsZip64(effectiveMode,closeEntry(phased));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(!phased){if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64&&zip64Mode!=null){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(!phased&&checkIfNeedsZip64){for(finalZip64ModeactiveMode:getActiveZip64Modes()){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(!phased&&getActiveZip64Modes().length>0){for(finalZip64ModeactiveMode:getActiveZip64Modes()){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(!phased){for(finalZip64ModeactiveMode:getFullZip64Modes()){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased&&zip64Mode!=null){checkIfNeedsZip64(effectiveMode);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased&&zip64Mode!=effectiveMode){checkIfNeedsZip64(effectiveMode);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased&&zip64Mode!=null){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased||zip64Mode!=null){checkIfNeedsZip64(effectiveMode);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){CheckIfNeedsZip64(effectiveMode);closeEntry(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(effectiveMode){CheckIfNeedsZip64(effectiveMode);closeEntry(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closePaddedEntry(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closePaddingEntry(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){CheckIfNeedsZip64(effectiveMode);closePaddingEntry(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535phased=checkIfNeedsZip64(activeMode);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535PhasedEntryphased=checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535phased=checkIfNeedsZip64(effectiveMode);closeEntry(phased,activeMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=getIfNeedsZip64(efficientMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64&&effectiveMode!=Zip64Mode.DEFAULT){CheckIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(efficientMode);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(phased){checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64&&effectiveMode!=zip64Mode){checkIfNeedsZip64(effectiveMode);closeEntry(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64&&effectiveMode!=zip64Mode){checkIfNeedsZip64(effectiveMode);closeEntry(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64&&effectiveMode!=zip64Mode){checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getOptionalZip64Mode(entry);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getIfNeedsZip64Mode(entry);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getActiveZip64Mode(entry);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,false);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){CheckIfNeedsZip64(effectiveMode);}else{entry.bytesRead=entry.getSize();closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);}else{entry.bytesRead=entry.getSize();closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){CheckIfNeedsZip64(effectiveMode);}else{entry.bytesRead=entry.getSize();closeEntry(efficientMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}else{
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);closePaddedEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(entry.bytesRead!=-1){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(entry.bytesRead!=BUFFER_SIZE);for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(activateMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(phased,phased);closeEntry(phased,phased);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(phased);closeEntry(phased,Phased);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(activeMode);closeEntry(phased,phased);}else{
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(activeMode);closeEntry(phased,phased);}else{Zip64ModeactiveMode=getActiveZip64Mode(activeMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(activeMode);closeEntry(phased,phased);}else{entry.bytesRead=zip64Mode;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(activeMode!=zip64Mode){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(effectiveMode!=zip64Mode){checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entry.bytesRead&&++i){checkIfNeedsZip64Mode(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getOptionalZip64Mode(entry.entry);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getIfNeedsZip64Mode(entry.entry);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(activeMode){finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);closeEntry(phased,effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(activeMode){finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535activeMode=checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535safelyNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(finalZip64ModeactiveMode:getActiveZip64Modes()){checkIfNeedsZip64(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(finalZip64ModeactiveMode:getActiveZip64Modes()){checkIfNeedsZip64(activateMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(finalZip64ModeactiveMode:getActiveZip64Modes()){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(finalZip64ModeactiveMode:getActiveZip64Mode()){checkIfNeedsZip64(activeMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(effectiveMode,phased);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanfinallyNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeactiveMode=getActiveZip64Modes().toArray(newZip64Mode[0]);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeactiveMode=getActiveZip64Mode(entry.keySet()).clone();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(mode);closeEntry(efficientMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(efficientMode);closeEntry(phased,effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(phased){preClose();}else{checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(phased||phased){preClose();}else{checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){preClose();}else{CheckIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){preClose();}else{checkIfNeedsZip64(effectiveMode,phased);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){preClose();}else{checkIfNeedsZip64(effectiveMode);closeEntry(phased,Phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(zip64Mode!=null){finalbooleanphased=checkIfNeedsZip64(phased);closeEntry(phased,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(effectiveMode);closePaddedEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,phased);closePaddedEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(effectiveMode!=null);closePaddedEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkNotNull(effectiveMode);closePaddedEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(phased,phased);closeEntry(phased,phased);}else{thrownewIllegalStateException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeactiveMode=getActiveZip64Mode(entry);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeactiveMode=getActiveZip64Mode(entry.keySet());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(efficientMode);}else{zip64Mode=getCopiedZip64Mode(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);}else{zip64Mode=getCopiedZip64Mode(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);}else{Zip64ModeeffectiveMode=getCopiedZip64Mode(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(module);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Entry<Zip64Mode>phased=checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(effectiveMode);closeEntry(phased,Phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(effectiveMode);closeEntry(phased,Phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(phased),false);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){CheckIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(!phased){CheckIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){CheckIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}else{
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535CheckIfNeedsZip64(phased);closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,phased);closeEntry(efficientMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(!phased){checkIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(efficiencyMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535CheckIfNeedsZip64.for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entry.bytesRead;++i){CheckIfNeedsZip64(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode,closePhased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode,0);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode,closed);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(phased){for(inti=0;i<entry.bytesRead;i++){finalZip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);closeEntry(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entry.bytesRead;i++){finalZip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);closeEntry(phased,
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(phased){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}else{entry.bytesRead=entry.read();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(phased){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(phased){checkIfNeedsZip64();closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64();closeCopiedEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){CheckIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getEffectiveZip64Mode(entry.getValue(),mode);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){finalZip64ModeeffectiveMode=getEffectiveZip64Mode(entry.getValue());closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535lastMode=checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64&&effectiveMode!=Zip64Mode.DEFAULT_END){CheckIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){finalZip64ModeeffectiveMode=getEffectiveZip64Mode(entry.entry);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getActualZip64Mode(entry.entry);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getEffectiveZip64Mode(entry.key);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checked){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535inti=0;++i){checkIfNeedsZip64(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535CheckIfNeedsZip64<=checkIfNeedsZip64(entry.bytesRead);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(!phased){finalbooleanphased=checkIfNeedsZip64(phased);closeEntry(phased,phased);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalintphased=checkIfNeedsZip64(phased);closeEntry(phased,phased);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(phased,true);closeEntry(phased,phased);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(stepd){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(stepd){checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){CheckIfNeedsZip64(effectiveMode,closeEntry(efficientMode,phased));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entries.length;++i){checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(efficientMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535readEntry(entry.bytesRead,phased){checkIfNeedsZip64(effectiveMode,closeEntry(activeMode,phased));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535lastModified=checkIfNeedsZip64(effectiveMode,closeEntry(activeMode,phased));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535stopCopiedEntry(effectiveMode,closeEntry(activeMode,phased));
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,closeEntry(activeMode,PhaseDateTimeUtils.currentTimeMillis()));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(efficientMode,closeEntry(activeMode,phased));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){CheckIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}else{entry.bytesRead=zip64Mode;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}else{entry.bytesRead=zip64Mode;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){finalZip64ModeeffectiveMode=getEffectiveZip64Mode(entry);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getEffectiveZip64Mode(entry.name);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){CheckIfNeedsZip64();closeEntry(effectiveMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(efficientMode);closeEntry(effectiveMode,phased);}else{entry.bytesRead=entry.read();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,closeEntry(effectiveMode,phased));}else{entry.bytesRead=entry.read();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(1);closeEntry(effectiveMode,phased);}else{entry.bytesRead=entry.read();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(phased);for(finalZip64ModeactiveMode:getActiveZip64Modes()){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(phased){finalZip64ModeactiveMode=getActiveZip64Modes();preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(phased&&getActiveZip64Modes().length>0){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(effectiveMode!=zip64Mode){finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);closeEntry(phased,effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);closeEntry(phased,effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(effectiveMode!=null){finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);closeEntry(phased,effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(effectiveMode!=zip64Mode){finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalintphased=checkIfNeedsZip64(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(closePickerMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(zip64Mode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535checkIfNeedsZip64(effectiveMode);closeEntry(closePickerMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(closePickerMode,phased);}else{zip64Mode=null;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeactiveMode=getActiveZip64Mode(entry.getName()).clone();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeactiveMode=getActiveZip64Modes().toArray(newZip64Mode[size()]);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(efficientMode);}else{Zip64Modemode=zip64Mode.getMode();closeEntry(mode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(efficientMode);}else{Zip64Modemode=getMode();closeEntry(mode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=getIfNeedsZip64(efficientMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=getIfNeedsZip64(efficientMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64||checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64&&effectiveMode!=Zip64Mode.DEFAULT_ENCODING){checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64&&effectiveMode!=Zip64Mode.DEFAULT_ENCODE){checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,zip64Mode);closeEntry(effectiveMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalintphased=checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(!phased){finalbooleanphased=checkIfNeedsCip64(phased);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535intphased=checkIfNeedsCip64(phased);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsCip64(phased);closeEntry(phased,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64&&effectiveMode==Zip64Mode.DEFAULT_ENCODING){checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64&&effectiveMode!=Zip64Mode.DEFAULT){checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){phased=checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}else{entry.bytesRead=zip64Mode;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){phased=checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode,entry.bytesRead);}else{entry.bytesRead=entry.getSize();closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Entry.bytesRead=entry.getSize();closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);}else{entry.bytesRead=entry.getSize();closeEntry(efficientMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalZip64Modemode=checkIfNeedsZip64(effectiveMode);closeEntry(mode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){phased=checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){phased=checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}else{entry.bytesRead=zip64Mode;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(efficiencyMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535CheckIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased&&effectiveMode!=zip64Mode){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64&&effectiveMode!=zip64Mode){checkIfNeedsZip64(efficientMode);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64(effectiveMode)){finalbooleanphased=checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(effectiveMode!=null){finalbooleanphased=checkIfNeedsZip64(effectiveMode);closeEntry(phased,effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){finalbooleanphased=checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(phased,true);closeEntry(phased,phased);}else{thrownewIllegalArgumentException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getIfNeedsZip64(efficientMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(stepd){checkIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(efficiencyMode,phased);}else{entry.bytesRead=entry.read();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,closeEntry(efficientMode,phased));}else{entry.bytesRead=entry.read();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(efficientMode,Phased);}else{entry.bytesRead=entry.read();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64&&checkIfNeedsZip64()){checkIfNeedsZip64();closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64&&checkIfNeedsZip64){checkIfNeedsZip64();closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(!phased){checkIfNeedsZip64();closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64||phased){checkIfNeedsZip64();closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(phased,false);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,false);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,locked);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,true);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,newZip64Mode());closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(!phased){finalZip64Modemode=checkIfNeedsZip64(efficientMode);if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535intmode=checkIfNeedsZip64(efficientMode);if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(phased);}else{thrownewIllegalStateException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64Mode(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entries.length;++i){checkIfNeedsZip64Mode(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsChanged(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535chari=0;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535inti=0;++i){checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalZip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64&&effectiveMode!=Zip64Mode.DEFAULT_ENCODE){checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64Mode(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entry.entry.bytesRead;++i){checkIfNeedsZip64Mode(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entry.bytesRead;++i){checkifNeedsZip64Mode(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(efficiencyMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64&&activeMode!=zip64Mode){checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64&&effectiveMode!=Zip64Mode.DEFAULT_ENCODE){checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535zip64Mode=getCopiedZip64Mode(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsPhase(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entries.size();++i){checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entry.bytesRead+1;++i){checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64();closeEntry(phased,Phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64();closeEntry(phased,Phased.INTERNAL_ATTRIBUTES_OFFSET);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64();closeEntry(phased,Phased.DEFAULT_ENCODING);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64();closedEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(!phased){finalbooleanphased=checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(stepd){finalbooleanphased=checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(efficientMode!=zip64Mode){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(effectiveMode!=zip64Mode){checkIfNeedsZip64(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased&&checkIfNeedsZip64||checkIfNeedsZip64(effectiveMode)){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased&&checkIfNeedsZip64){checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(finalZip64ModeactiveMode:getActiveZip64Mode()){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535lastMode=getActiveZip64Mode();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(activeMode);closeEntry(phased,phased);}else{Zip64ModeactiveMode=getActiveZip64Mode(activeMode);closeEntry(activeMode,
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(activeMode);closeEntry(phased,phased);}else{Zip64ModeactiveMode=getActiveZip64Mode(activeMode);closeEntry(activeMod
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535intphased=checkIfNeedsZip64(activeMode);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsCip64(efficiencyMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased&&checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,closeEntry);}else{preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){preClose();}else{checkIfNeedsZip64(efficientMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){preClose();}else{checkIfNeedsZip64(effectiveMode);CloseEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(entry.bytesRead!=null){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(entry.bytesRead!=null){for(inti=0;i<entries.length;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(!phased){finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);}else{Preconditions.checkState(!phased);closeEntry(actuallyNeedsZip64,phased);preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeactiveMode=getActiveZip64Mode(entry.getSize());
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64&&checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64||checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,locked);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,true);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,closeEntry.bytesRead);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finallyNeedsZip64){checkIfNeedsZip64(efficientMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(effectiveMode,closeEntry);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(effectiveMode,closeEntryPhase);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(effectiveMode,closeEntry.bytesRead);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(phased,Phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64&&effectiveMode!=zip64Mode){checkIfNeedsZip64(effectiveMode);}else{zip64Mode.closeEntry();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(zip64Mode!=null){checkIfNeedsZip64(effectiveMode);}else{zip64Mode.closeEntry();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64&&effectiveMode!=zip64Mode){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64&&zip64Mode!=effectiveMode){checkIfNeedsZip64(effectiveMode);}else{zip64Mode.closeEntry();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(mode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entries.size();++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entry.bitsRead;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64&&effectiveMode!=Zip64Mode.DEFAULT_ENCODING){checkIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64&&effectiveMode!=Zip64Mode.DEFAULT_ENCODE){checkIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(!phased){finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}else{zip64Mode=zip64Mode;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(!phased){finalbooleanphased=checkIfNeedsZip64(phased);closeCopiedEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535intphased=checkIfNeedsZip64(phased);closeCopiedEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64||closeEntry(effectiveMode,phased)){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}else{entry.bytesRead=entry.read();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64&&effectiveMode!=zip64Mode){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}else{entry.bytesRead=entry.read();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64||closeEntry(effectiveMode,phased)){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalintcheckIfNeedsZip64=checkIfNeedsZip64(checkIfNeedsZip64(entry.bytesRead),phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalintcheckIfNeedsZip64=checkIfNeedsZip64(step);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}else{Zip64ModeactiveMode=getEffectiveZip64Mode(entry.
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535catch(Throwablet){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(effectiveMode,Phased.DEFAULT_ENCODING);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(effectiveMode!=zip64Mode){checkIfNeedsZip64(effectiveMode);closeEntry(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checked){checkIfNeedsZip64(effectiveMode);closeEntry(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535inti=1;i<entry.bytesRead;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535bytei=0;i<entry.bytesRead;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalintphased=checkIfNeedsZip64(phased);closeEntry(phased,phased);}else{thrownewIllegalStateException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(finalZip64ModeactiveMode:getActiveZip64Modes()){checkIfNeedsZip64(activeMode);Preconditions.checkState(!phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){CheckIfNeedsZip64(effectiveMode,closeEntry(effectiveMode,phased));}else{entry.bytesRead=entry.read();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){CheckIfNeedsZip64();closeEntry(effectiveMode,phased);}else{entry.bytesRead=entry.read();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){CheckIfNeedsZip64(effectiveMode,closeEntry(effectiveMode,phased);}else{entry.bytesRead=entry.read();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){CheckIfNeedsZip64(effectiveMode,closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){CheckIfNeedsZip64(effectiveMode,closeEntry(activeMode,phased));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){CheckIfNeedsZip64();closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535stopCopiedEntry(effectiveMode,closeEntry(activeMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(efficientMode,closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,closeEntry(activeMode,false);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(activeMode,closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(static){finalbooleanphased=checkIfNeedsZip64(phased);closeEntry(phased,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(zip64Mode!=null){finalbooleanphased=checkIfNeedsZip64(phased);closeEntry(phased,phased);}else{Zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(zip64Mode!=null){finalbooleanphased=checkIfNeedsZip64(phased);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(zip64Mode);closeEntry(phased,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(activeMode){checkIfNeedsZip64(effectiveMode);closeEntry(phased,activeMode);}else{entry.bytesRead=zip64Mode;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(!phased){finalZip64ModeactiveMode=getActiveZip64Modes();preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Preconditions.checkState(!phased&&getActiveZip64Modes().length>0){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(!phased){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,phased);}else{Zip64Modemode=zip64Mode.getMode();closeEntry(mode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,phased);}else{zip64Mode.closeEntry();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535checkIfNeedsZip64(effectiveMode,closePhased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalZip64ModeactiveMode=getActiveZip64Modes();preClose();}else{entry.bytesRead=entry.getSize();closeEntry(activeMode,activeMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeactiveMode=getActualZip64Modes();preClose();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535lastMode=getActualZip64Modes();
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checked){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checked){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checked){for(inti=0;i<entries.length;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checked){for(inti=0;i<entries.size();++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){intphased=checkIfNeedsZip64(phased);closeEntry(phased,phased);}else{entry.bytesRead=entry.read();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(!phased){finalZip64Modemode=getIfNeedsZip64(effectiveMode);if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){finalZip64Modemode=getIfNeedsZip64(effectiveMode);if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(stepd){finalZip64Modemode=getIfNeedsZip64(effectiveMode);if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(phased,actualMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64&&effectiveMode!=Zip64Mode.DEFAULT_ENCODING){checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64&&effectiveMode!=Zip64Mode.DEFAULT_ENCODE){checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsSip64(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(!phased){finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entry.bytesRead;i++){finalZip64ModeeffectiveMode=checkIfNeedsZip64(efficientMode);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(!phased){finalbooleanphased=checkIfNeedsZip64(efficientMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalintphased=checkIfNeedsZip64(phased);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(phased,true);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entry.length;++i){checkIfNeedsZip64(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entries.size();++i){checkIfNeedsZip64(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entries.size;++i){checkIfNeedsZip64(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finallyNeedsZip64=checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(!phased){finalZip64ModeeffectiveMode=checkIfNeedsZip64(activeMode);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getIfNeedsZip64(effectMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(efficientMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,closeEntry);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,true);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,null);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,closed);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535PhasedZip64Entryphased=checkIfNeedsZip64(effectiveMode,closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,closeEntry(phased,currentEntry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){CheckIfNeedsZip64(effectiveMode,closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){CheckIfNeedsZip64(effectiveMode,closeEntry(effectiveMode,phased));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){CheckIfNeedsZip64(efficientMode);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsPhase(step);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode,closePhase);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode,closeEntryPhase);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(effectiveMode,closeEntry);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(efficientMode,closePhased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(efficientMode,closePhase);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64Modemode=checkIfNeedsZip64(efficientMode,closed);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535phased=checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(efficientMode);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,closeEntry(effectiveMode,phased));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(activeMode){checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}else{Zip64ModeactiveMode=getEffectiveZip64Mode(entry.bytesRead);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(phased,true);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkifNeedsZip64(phased,false);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(efficientMode);closeEntry(effectiveMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(!phased){finalbooleanphased=checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(!phased){finalZip64ModeeffectiveMode=checkIfNeedsZip64(efficientMode);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<this.entry.bytesRead;++i){checkIfNeedsZip64(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entry.length;++i){checkIfNeedsZip64(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entry.keysRead;++i){checkIfNeedsZip64(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535phased=checkIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(efficiencyMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(efficientMode);closeEntry(efficientMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,Phased);}else{Zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64&&effectiveMode!=phased){checkIfNeedsZip64(effectiveMode,phased);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64&&effectiveMode==phased){checkIfNeedsZip64(effectiveMode,phased);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode,false);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(!phased){finalbooleanphased=checkIfNeedsZip64(mode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsZip64(moded);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535intphased=checkIfNeedsZip64(mode);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535Entry<K,V>phased=checkIfNeedsZip64(phased);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsCip64(phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getEffectiveZip64Mode(entry.block);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getEffectiveZip64Mode(entry.name);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=getEffectiveZip64Mode(entry.entry);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsSip64(phased);closePaddedEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535intphased=checkIfNeedsZip64(phased);closePaddedEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased&&zip64Mode!=effectiveMode){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased||zip64Mode!=null){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closePaddingEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,closePaddingEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(efficientMode);closePaddingEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closePaddingEntry(phased,Phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64&&effectiveMode!=Zip64Mode.DEFAULT_ENCODING){checkIfNeedsZip64(effectiveMode,closeEntry(activeMode,phased));}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64&&effectiveMode!=Zip64Mode.DEFAULT_ENCODING){checkIfNeedsZip64(efficientMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64&&effectiveMode!=Zip64Mode.DEFAULT_END){checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeeffectiveMode=checkIfNeedsZip64(activeMode,true);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entry.length;i++){checkIfNeedsZip64(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entries.size();i++){checkIfNeedsZip64(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entry.bytesRead;i++){closeEntry(entry.bytesRead);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64&&effectiveMode!=Zip64Mode.DEFAULT_ENCODING){checkIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){checkIfNeedsZip64(efficientMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(effectiveMode!=zip64Mode){checkIfNeedsZip64(effectiveMode);closeEntry(phased,effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(effectiveMode!=Zip64Mode.DEFAULT_ENCODING){checkIfNeedsZip64(effectiveMode);closeEntry(phased,effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(effectiveMode!=Zip64Mode.NONE){checkIfNeedsZip64(effectiveMode);closeEntry(phased,effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(effectiveMode!=zip64Mode){checkIfNeedsZip64(effectiveMode);closeEntry(phased,effectiveMode);}else{thrownewIllegalStateException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(effectiveMode!=zip64Mode){checkIfNeedsZip64(effectiveMode);closeEntry(phased,effectiveMode);}else{thrownewRuntimeException("");}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){CheckIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}else{entry.bytesRead=zip64Mode;}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535booleanphased){for(inti=0;i<entry.bytesRead;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalintfinallyNeedsZip64=checkIfNeedsZip64(effectiveMode);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535for(inti=0;i<entries.length;++i){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(efficientMode);closeEntry(efficientMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,zip64Mode);closeEntry(efficientMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64();closedEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64();closeEntry(activateMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64();closeEntry(activeMode,Phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(!phased){finalbooleanphased=checkIfNeedsZip64(effectiveMode);closeEntry(efficientMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsPadding(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalbooleanphased=checkIfNeedsPadding(step);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased||checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode);closePaddedEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode,closePaddedEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(efficientMode);closePaddedEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){checkIfNeedsZip64(effectiveMode);closePaddedEntry(phased,Phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64&&effectiveMode!=zip64Mode){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64||zip64Mode!=null){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){if(checkIfNeedsZip64&&zip64Mode!=null){checkIfNeedsZip64(effectiveMode);closeEntry(effectiveMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(!phased){finalphased=checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalPhasedphased=checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalphased=checkIfNeedsZip64(effectiveMode);closeEntry(phased,phased);}else{zip64Mode.close();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entries.size();i++){checkIfNeedsZip64(entry.bytesRead,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535intphased=checkIfNeedsZip64(entry.bytesRead,phased);
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){for(inti=0;i<entry.keySet();i++){checkIfNeedsZip64(entry.keySet(),phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(!phased){finalZip64Modemode=checkIfNeedsZip64(effectiveMode,phased);if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(stepd){finalZip64Modemode=checkIfNeedsZip64(effectiveMode,phased);if(phased){preClose();}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(!phased){finalphased=checkIfNeedsZip64(effectiveMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(activeMode);}else{Zip64ModeactiveMode=getActiveZip64Mode(activeMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(activeMode);}else{Zip64ModeactiveMode=getActualZip64Mode(activeMode);closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(activeMode);}else{Zip64ModeactiveMode=getActiveZip64Mode(activeMode);closeEntry(activeMode,activeMode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(phased){finalbooleanphased=checkIfNeedsZip64(activeMode);}else{closeEntry(activeMode,phased);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535if(checkIfNeedsZip64){checkIfNeedsZip64(effectiveMode,closeEntry(activeMode,phased),zip64Mode);}
projects/Compress43/src/main/java/org/apache/commons/compress/archivers/zip/ZipArchiveOutputStream.java535finalZip64ModeactiveMode=closeEntry(activeMode,phased);
