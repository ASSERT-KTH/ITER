bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] } catch (Exception unexpectedException) { [FE] RuntimeException [CONTEXT] public void traverse(Node root) { try { inputId = NodeUtil.getInputId(root); sourceName = ""; curNode = root; pushScope(root); traverseBranch(root, null); popScope(); [BUGGY] } catch (Exception unexpectedException) { [BUGGY] throwUnexpectedException(unexpectedException); } } [CLASS] NodeTraversal AbstractPostOrderCallback AbstractScopedCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback [METHOD] traverse [RETURN_TYPE] void  Node root [VARIABLES] ScopedCallback scopeCallback AbstractCompiler compiler Callback callback cb Set nodeTypes boolean include DiagnosticType NODE_TRAVERSAL_ERROR Node curNode n parent root InputId inputId ScopeCreator scopeCreator String MISSING_SOURCE label message sourceName Deque cfgs scopeRoots scopes Exception unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	279	279	1	replace	
2	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] public void traverse(Node root) { try { inputId = NodeUtil.getInputId(root); sourceName = ""; curNode = root; pushScope(root); traverseBranch(root, null); popScope(); [BUGGY] [BUGGY] } catch (Exception unexpectedException) { throwUnexpectedException(unexpectedException); } } [CLASS] NodeTraversal AbstractPostOrderCallback AbstractScopedCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback [METHOD] traverse [RETURN_TYPE] void  Node root [VARIABLES] ScopedCallback scopeCallback AbstractCompiler compiler Callback callback cb Set nodeTypes boolean include DiagnosticType NODE_TRAVERSAL_ERROR Node curNode n parent root InputId inputId ScopeCreator scopeCreator String MISSING_SOURCE label message sourceName Deque cfgs scopeRoots scopes Exception unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	279	279	1	add	
3	[BUG] [BUGGY] throwUnexpectedException(unexpectedException); [FE] RuntimeException [CONTEXT] public void traverse(Node root) { try { inputId = NodeUtil.getInputId(root); sourceName = ""; curNode = root; pushScope(root); traverseBranch(root, null); popScope(); } catch (Exception unexpectedException) { [BUGGY] throwUnexpectedException(unexpectedException); [BUGGY] } } [CLASS] NodeTraversal AbstractPostOrderCallback AbstractScopedCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback [METHOD] traverse [RETURN_TYPE] void  Node root [VARIABLES] ScopedCallback scopeCallback AbstractCompiler compiler Callback callback cb Set nodeTypes boolean include DiagnosticType NODE_TRAVERSAL_ERROR Node curNode n parent root InputId inputId ScopeCreator scopeCreator String MISSING_SOURCE label message sourceName Deque cfgs scopeRoots scopes Exception unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	
4	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] public void traverse(Node root) { try { inputId = NodeUtil.getInputId(root); sourceName = ""; curNode = root; pushScope(root); traverseBranch(root, null); popScope(); } catch (Exception unexpectedException) { [BUGGY] [BUGGY] throwUnexpectedException(unexpectedException); } } [CLASS] NodeTraversal AbstractPostOrderCallback AbstractScopedCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback [METHOD] traverse [RETURN_TYPE] void  Node root [VARIABLES] ScopedCallback scopeCallback AbstractCompiler compiler Callback callback cb Set nodeTypes boolean include DiagnosticType NODE_TRAVERSAL_ERROR Node curNode n parent root InputId inputId ScopeCreator scopeCreator String MISSING_SOURCE label message sourceName Deque cfgs scopeRoots scopes Exception unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	add	
5	[BUG] [BUGGY] String message = unexpectedException.getMessage(); [FE] RuntimeException [CONTEXT] private void throwUnexpectedException(Exception unexpectedException) {   [BUGGY] String message = unexpectedException.getMessage(); [BUGGY]     if (inputId != null) { message = unexpectedException.getMessage() + "\n" + formatNodeContext("Node", curNode) + (curNode == null ? "" : [CLASS] NodeTraversal AbstractPostOrderCallback AbstractScopedCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback [METHOD] throwUnexpectedException [RETURN_TYPE] void  Exception unexpectedException [VARIABLES] ScopedCallback scopeCallback AbstractCompiler compiler Callback callback cb Set nodeTypes boolean include DiagnosticType NODE_TRAVERSAL_ERROR Node curNode n parent InputId inputId ScopeCreator scopeCreator String MISSING_SOURCE message sourceName Deque cfgs scopeRoots scopes Exception unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	244	244	1	replace	
6	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] private void throwUnexpectedException(Exception unexpectedException) {   [BUGGY] [BUGGY] String message = unexpectedException.getMessage();    if (inputId != null) { message = unexpectedException.getMessage() + "\n" + formatNodeContext("Node", curNode) + (curNode == null ? "" : [CLASS] NodeTraversal AbstractPostOrderCallback AbstractScopedCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback [METHOD] throwUnexpectedException [RETURN_TYPE] void  Exception unexpectedException [VARIABLES] ScopedCallback scopeCallback AbstractCompiler compiler Callback callback cb Set nodeTypes boolean include DiagnosticType NODE_TRAVERSAL_ERROR Node curNode n parent InputId inputId ScopeCreator scopeCreator String MISSING_SOURCE message sourceName Deque cfgs scopeRoots scopes Exception unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	244	244	1	add	
7	[BUG] [BUGGY] if (inputId != null) { [FE] RuntimeException [CONTEXT] private void throwUnexpectedException(Exception unexpectedException) {   String message = unexpectedException.getMessage();    [BUGGY] if (inputId != null) { [BUGGY] message = unexpectedException.getMessage() + "\n" + formatNodeContext("Node", curNode) + (curNode == null ? "" : formatNodeContext("Parent", curNode.getParent())); } compiler.throwInternalError(message, unexpectedException); } [CLASS] NodeTraversal AbstractPostOrderCallback AbstractScopedCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback [METHOD] throwUnexpectedException [RETURN_TYPE] void  Exception unexpectedException [VARIABLES] ScopedCallback scopeCallback AbstractCompiler compiler Callback callback cb Set nodeTypes boolean include DiagnosticType NODE_TRAVERSAL_ERROR Node curNode n parent InputId inputId ScopeCreator scopeCreator String MISSING_SOURCE message sourceName Deque cfgs scopeRoots scopes Exception unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	
8	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] private void throwUnexpectedException(Exception unexpectedException) {   String message = unexpectedException.getMessage();    [BUGGY] [BUGGY] if (inputId != null) { message = unexpectedException.getMessage() + "\n" + formatNodeContext("Node", curNode) + (curNode == null ? "" : formatNodeContext("Parent", curNode.getParent())); } compiler.throwInternalError(message, unexpectedException); } [CLASS] NodeTraversal AbstractPostOrderCallback AbstractScopedCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback [METHOD] throwUnexpectedException [RETURN_TYPE] void  Exception unexpectedException [VARIABLES] ScopedCallback scopeCallback AbstractCompiler compiler Callback callback cb Set nodeTypes boolean include DiagnosticType NODE_TRAVERSAL_ERROR Node curNode n parent InputId inputId ScopeCreator scopeCreator String MISSING_SOURCE message sourceName Deque cfgs scopeRoots scopes Exception unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	
9	[BUG] [BUGGY] compiler.throwInternalError(message, unexpectedException); [FE] RuntimeException [CONTEXT]   if (inputId != null) { message = unexpectedException.getMessage() + "\n" + formatNodeContext("Node", curNode) + (curNode == null ? "" : formatNodeContext("Parent", curNode.getParent())); } [BUGGY] compiler.throwInternalError(message, unexpectedException); [BUGGY] } [CLASS] NodeTraversal AbstractPostOrderCallback AbstractScopedCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback [METHOD] throwUnexpectedException [RETURN_TYPE] void  Exception unexpectedException [VARIABLES] ScopedCallback scopeCallback AbstractCompiler compiler Callback callback cb Set nodeTypes boolean include DiagnosticType NODE_TRAVERSAL_ERROR Node curNode n parent InputId inputId ScopeCreator scopeCreator String MISSING_SOURCE message sourceName Deque cfgs scopeRoots scopes Exception unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	257	257	1	replace	
10	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT]   if (inputId != null) { message = unexpectedException.getMessage() + "\n" + formatNodeContext("Node", curNode) + (curNode == null ? "" : formatNodeContext("Parent", curNode.getParent())); } [BUGGY] [BUGGY] compiler.throwInternalError(message, unexpectedException); } [CLASS] NodeTraversal AbstractPostOrderCallback AbstractScopedCallback AbstractShallowCallback AbstractShallowStatementCallback AbstractNodeTypePruningCallback [METHOD] throwUnexpectedException [RETURN_TYPE] void  Exception unexpectedException [VARIABLES] ScopedCallback scopeCallback AbstractCompiler compiler Callback callback cb Set nodeTypes boolean include DiagnosticType NODE_TRAVERSAL_ERROR Node curNode n parent InputId inputId ScopeCreator scopeCreator String MISSING_SOURCE message sourceName Deque cfgs scopeRoots scopes Exception unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	257	257	1	add	
11	[BUG] [BUGGY] node.setLength(source.getLength()); [FE] RuntimeException [CONTEXT] private void maybeSetLengthFrom(Node node, AstNode source) { if (config.isIdeMode) { [BUGGY] node.setLength(source.getLength()); [BUGGY] } } [CLASS] IRFactory TransformDispatcher [METHOD] maybeSetLengthFrom [RETURN_TYPE] void  Node node AstNode source [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES ES5_RESERVED_KEYWORDS ES5_STRICT_RESERVED_KEYWORDS parsedComments reservedKeywords boolean Config config Node irNode newBlock node rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String SUSPICIOUS_COMMENT_WARNING comment sourceName sourceString value StaticSourceFile sourceFile TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo rootNodeJsDoc AstNode source  	projects/Closure37/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5773502691896258	361	361	1	replace	
12	[BUG] [BUGGY] [FE] RuntimeException [CONTEXT] private void maybeSetLengthFrom(Node node, AstNode source) { if (config.isIdeMode) { [BUGGY] [BUGGY] node.setLength(source.getLength()); } } [CLASS] IRFactory TransformDispatcher [METHOD] maybeSetLengthFrom [RETURN_TYPE] void  Node node AstNode source [VARIABLES] ErrorReporter errorReporter Set ALLOWED_DIRECTIVES ES5_RESERVED_KEYWORDS ES5_STRICT_RESERVED_KEYWORDS parsedComments reservedKeywords boolean Config config Node irNode newBlock node rootNodeJsDocHolder templateNode FileLevelJsDocBuilder fileLevelJsDocBuilder String SUSPICIOUS_COMMENT_WARNING comment sourceName sourceString value StaticSourceFile sourceFile TransformDispatcher transformDispatcher JSDocInfo fileOverviewInfo jsDocInfo rootNodeJsDoc AstNode source  	projects/Closure37/src/com/google/javascript/jscomp/parsing/IRFactory.java	0.5773502691896258	361	361	1	add	
