bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  timeout  [FE]    RuntimeException  [CONTEXT]  private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();      [BUGGY]  if(unexpectedException!=  null)  {  [BUGGY]  message  =  unexpectedException.getMessage()  +   "\n "  +  formatNodeContext( "Node ",  curNode)  +  (curNode  ==  null  ?   " "  :  formatNodeContext( "Parent ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException!=  null)  {	if  (inputId  !=  null)  {  	compilable	timeout	7	1	replace
2	[BUG]  [BUGGY]  if(unexpectedException!=  null)  {  timeout  [FE]    RuntimeException  [CONTEXT]  private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();      [BUGGY]  if(unexpectedException!=  null)  {  [BUGGY]  message  =  unexpectedException.getMessage()  +   "\n "  +  formatNodeContext( "Node ",  curNode)  +  (curNode  ==  null  ?   " "  :  formatNodeContext( "Parent ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null)  {	if  (inputId  !=  null)  {  	compilable	timeout	7	1	replace
3	[BUG]  [BUGGY]  if(unknownException!=  null)  {  [CE]  cannot  find  symbol  unknownException  [FE]      RuntimeException  [CONTEXT]  private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();      [BUGGY]  if(unknownException!=  null)  {  [BUGGY]  message  =  unexpectedException.getMessage()  +   "\n "  +  formatNodeContext( "Node ",  curNode)  +  (curNode  ==  null  ?   " "  :  formatNodeContext( "Parent ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null)  {	if  (inputId  !=  null)  {  	non-compiled	[CE]  cannot  find  symbol  unknownException	7	None	replace
4	[BUG]  [BUGGY]  timeout  [FE]        RuntimeException  [CONTEXT]  private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();      [BUGGY]  if(inputId  ==  null)  {  [BUGGY]  message  =  unexpectedException.getMessage()  +   "\n "  +  formatNodeContext( "Node ",  curNode)  +  (curNode  ==  null  ?   " "  :  formatNodeContext( "Parent ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId  ==  null)  {	if  (inputId  !=  null)  {  	compilable	timeout	7	1	replace
5	[BUG]  [BUGGY]  if(inputId  ==  null)  {  timeout  [FE]        RuntimeException  [CONTEXT]  private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();      [BUGGY]  if(inputId  ==  null)  {  [BUGGY]  message  =  unexpectedException.getMessage()  +   "\n "  +  formatNodeContext( "Node ",  curNode)  +  (curNode  ==  null  ?   " "  :  formatNodeContext( "Parent ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId  ==  null)  {	if  (inputId  !=  null)  {  	compilable	timeout	7	1	replace
6	[BUG]  [BUGGY]  if(unknownException.getMessage()!=  null)  {  [CE]  cannot  find  symbol  unknownException  [FE]          RuntimeException  [CONTEXT]  private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();      [BUGGY]  if(unknownException.getMessage()!=  null)  {  [BUGGY]  message  =  unexpectedException.getMessage()  +   "\n "  +  formatNodeContext( "Node ",  curNode)  +  (curNode  ==  null  ?   " "  :  formatNodeContext( "Parent ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.getMessage()!=  null)  {	if  (inputId  !=  null)  {  	non-compiled	[CE]  cannot  find  symbol  unknownException	7	None	replace
7	[BUG]  [BUGGY]  timeout  [FE]            RuntimeException  [CONTEXT]  private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();      [BUGGY]  if(unexpectedException.getMessage()!=  null)  {  [BUGGY]  message  =  unexpectedException.getMessage()  +   "\n "  +  formatNodeContext( "Node ",  curNode)  +  (curNode  ==  null  ?   " "  :  formatNodeContext( "Parent ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException.getMessage()!=  null)  {	if  (inputId  !=  null)  {  	compilable	timeout	7	1	replace
8	[BUG]  [BUGGY]  if(unexpectedException.getMessage()!=  null)  {  timeout  [FE]            RuntimeException  [CONTEXT]  private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();      [BUGGY]  if(unexpectedException.getMessage()!=  null)  {  [BUGGY]  message  =  unexpectedException.getMessage()  +   "\n "  +  formatNodeContext( "Node ",  curNode)  +  (curNode  ==  null  ?   " "  :  formatNodeContext( "Parent ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()!=  null)  {	if  (inputId  !=  null)  {  	compilable	timeout	7	1	replace
9	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]              RuntimeException  [CONTEXT]  private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();      [BUGGY]    [BUGGY]  message  =  unexpectedException.getMessage()  +   "\n "  +  formatNodeContext( "Node ",  curNode)  +  (curNode  ==  null  ?   " "  :  formatNodeContext( "Parent ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	  	if  (inputId  !=  null)  {  	non-compiled	[CE]  <identifier>  expected	7	None	replace
10	[BUG]  [BUGGY]  timeout  [FE]    RuntimeException  [CONTEXT]  private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();      [BUGGY]  if(inputId!=  null  &&  inputId.equals( " "))  {  [BUGGY]  message  =  unexpectedException.getMessage()  +   "\n "  +  formatNodeContext( "Node ",  curNode)  +  (curNode  ==  null  ?   " "  :  formatNodeContext( "Parent ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId!=  null  &&  inputId.equals( " "))  {	if  (inputId  !=  null)  {  	compilable	timeout	7	1	replace
11	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals( " "))  {  timeout  [FE]    RuntimeException  [CONTEXT]  private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();      [BUGGY]  if(inputId!=  null  &&  inputId.equals( " "))  {  [BUGGY]  message  =  unexpectedException.getMessage()  +   "\n "  +  formatNodeContext( "Node ",  curNode)  +  (curNode  ==  null  ?   " "  :  formatNodeContext( "Parent ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  inputId.equals( " "))  {	if  (inputId  !=  null)  {  	compilable	timeout	7	1	replace
12	[BUG]  [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  Feature  [FE]      RuntimeException  [CONTEXT]  private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();      [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]  message  =  unexpectedException.getMessage()  +   "\n "  +  formatNodeContext( "Node ",  curNode)  +  (curNode  ==  null  ?   " "  :  formatNodeContext( "Parent ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	if  (inputId  !=  null)  {  	non-compiled	[CE]  cannot  find  symbol  Feature	7	None	replace
13	[BUG]  [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  Feature  [FE]        RuntimeException  [CONTEXT]  private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();      [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]  message  =  unexpectedException.getMessage()  +   "\n "  +  formatNodeContext( "Node ",  curNode)  +  (curNode  ==  null  ?   " "  :  formatNodeContext( "Parent ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	if  (inputId  !=  null)  {  	non-compiled	[CE]  cannot  find  symbol  Feature	7	None	replace
14	[BUG]  [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  Feature  [FE]          RuntimeException  [CONTEXT]  private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();      [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]  message  =  unexpectedException.getMessage()  +   "\n "  +  formatNodeContext( "Node ",  curNode)  +  (curNode  ==  null  ?   " "  :  formatNodeContext( "Parent ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	if  (inputId  !=  null)  {  	non-compiled	[CE]  cannot  find  symbol  Feature	7	None	replace
15	[BUG]  [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  Feature  [FE]            RuntimeException  [CONTEXT]  private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();      [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]  message  =  unexpectedException.getMessage()  +   "\n "  +  formatNodeContext( "Node ",  curNode)  +  (curNode  ==  null  ?   " "  :  formatNodeContext( "Parent ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	if  (inputId  !=  null)  {  	non-compiled	[CE]  cannot  find  symbol  Feature	7	None	replace
