bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  timeout  [FE]        RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId!=  null  &&  inputId.equals( "n "))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId!=  null  &&  inputId.equals( "n "))  {	  if(inputId!=    null    &&    inputId.equals(   "   "))    {    timeout    	compilable	timeout	11	1	replace
2	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals( "n "))  {  timeout  [FE]        RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId!=  null  &&  inputId.equals( "n "))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  inputId.equals( "n "))  {	  if(inputId!=    null    &&    inputId.equals(   "   "))    {    timeout    	compilable	timeout	11	1	replace
3	[BUG]  [BUGGY]  timeout  [FE]          RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unexpectedException!=  null  &&  inputId.equals( "   "))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException!=  null  &&  inputId.equals( "   "))  {	  if(inputId!=    null    &&    inputId.equals(   "   "))    {    timeout    	compilable	timeout	11	1	replace
4	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  inputId.equals( "   "))  {  timeout  [FE]          RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unexpectedException!=  null  &&  inputId.equals( "   "))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  inputId.equals( "   "))  {	  if(inputId!=    null    &&    inputId.equals(   "   "))    {    timeout    	compilable	timeout	11	1	replace
5	[BUG]  [BUGGY]  timeout  [FE]            RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  inputId.equals( "   "))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException.getMessage()!=  null  &&  inputId.equals( "   "))  {	  if(inputId!=    null    &&    inputId.equals(   "   "))    {    timeout    	compilable	timeout	11	1	replace
6	[BUG]  [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  inputId.equals( "   "))  {  timeout  [FE]            RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  inputId.equals( "   "))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()!=  null  &&  inputId.equals( "   "))  {	  if(inputId!=    null    &&    inputId.equals(   "   "))    {    timeout    	compilable	timeout	11	1	replace
7	[BUG]  [BUGGY]  timeout  [FE]              RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId!=  null  ||  inputId.equals( "   "))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId!=  null  ||  inputId.equals( "   "))  {	  if(inputId!=    null    &&    inputId.equals(   "   "))    {    timeout    	compilable	timeout	11	1	replace
8	[BUG]  [BUGGY]  if(inputId!=  null  ||  inputId.equals( "   "))  {  timeout  [FE]              RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId!=  null  ||  inputId.equals( "   "))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  ||  inputId.equals( "   "))  {	  if(inputId!=    null    &&    inputId.equals(   "   "))    {    timeout    	compilable	timeout	11	1	replace
9	[BUG]  [BUGGY]  timeout  [FE]                RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId!=  null  &&  inputId.equals( "* "))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId!=  null  &&  inputId.equals( "* "))  {	  if(inputId!=    null    &&    inputId.equals(   "   "))    {    timeout    	compilable	timeout	11	1	replace
10	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals( "* "))  {  timeout  [FE]                RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId!=  null  &&  inputId.equals( "* "))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  inputId.equals( "* "))  {	  if(inputId!=    null    &&    inputId.equals(   "   "))    {    timeout    	compilable	timeout	11	1	replace
11	[BUG]  [BUGGY]  timeout  [FE]                  RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unexpectedException.getMessage()  ==  null  &&  inputId.equals( "   "))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException.getMessage()  ==  null  &&  inputId.equals( "   "))  {	  if(inputId!=    null    &&    inputId.equals(   "   "))    {    timeout    	compilable	timeout	11	1	replace
12	[BUG]  [BUGGY]  if(unexpectedException.getMessage()  ==  null  &&  inputId.equals( "   "))  {  timeout  [FE]                  RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unexpectedException.getMessage()  ==  null  &&  inputId.equals( "   "))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()  ==  null  &&  inputId.equals( "   "))  {	  if(inputId!=    null    &&    inputId.equals(   "   "))    {    timeout    	compilable	timeout	11	1	replace
13	[BUG]  [BUGGY]  if(unexpectedException.getMessage()!=  null)  {  if(unexpectedException.getMessage()!=  null)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unexpectedException.getMessage()!=  null)  {  if(unexpectedException.getMessage()!=  null)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()!=    null)    {    if(unexpectedException.getMessage()!=  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	7	None	add
14	[BUG]  [BUGGY]  if(unexpectedException.getMessage()!=  null)  {  if(unexpectedException.getMessage()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                  RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unexpectedException.getMessage()!=  null)  {  if(unexpectedException.getMessage()  ==  null)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()!=    null)    {    if(unexpectedException.getMessage()  ==  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	7	None	add
15	[BUG]  [BUGGY]  if(unexpectedException.getMessage()!=  null)  {  if(unexpectedException.getMessage()  >=  null)  {  [CE]  illegal  start  of  expression  [FE]                    RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unexpectedException.getMessage()!=  null)  {  if(unexpectedException.getMessage()  >=  null)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()!=    null)    {    if(unexpectedException.getMessage()  >=  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	7	None	add
16	[BUG]  [BUGGY]  if(unexpectedException.getMessage()!=  null)  {  If(unexpectedException.getMessage()!=  null)  {  [CE]  [FE]                      RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unexpectedException.getMessage()!=  null)  {  If(unexpectedException.getMessage()!=  null)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()!=    null)    {    If(unexpectedException.getMessage()!=  null)  {	  timeout    	non-compiled	[CE]  	7	None	add
17	[BUG]  [BUGGY]  if(unexpectedException.getMessage()!=  null)  {  if(unexpectedException.getMessage()  >>  null)  {  [CE]  illegal  start  of  expression  [FE]                        RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unexpectedException.getMessage()!=  null)  {  if(unexpectedException.getMessage()  >>  null)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()!=    null)    {    if(unexpectedException.getMessage()  >>  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	7	None	add
18	[BUG]  [BUGGY]  if(unexpectedException.getMessage()!=  null)  {  if(unexpectedException.getMessage()  [BUGGY]  null)  {  [CE]  [FE]                          RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unexpectedException.getMessage()!=  null)  {  if(unexpectedException.getMessage()  [BUGGY]  null)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()!=    null)    {    if(unexpectedException.getMessage()  [BUGGY]  null)  {	  timeout    	non-compiled	[CE]  	7	None	add
19	[BUG]  [BUGGY]  timeout  [FE]            RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unexpectedException  ==  null)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException  ==  null)  {	  if(inputId    ==    null)    {    timeout    	compilable	timeout	5	1	replace
20	[BUG]  [BUGGY]  if(unexpectedException  ==  null)  {  timeout  [FE]            RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unexpectedException  ==  null)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException  ==  null)  {	  if(inputId    ==    null)    {    timeout    	compilable	timeout	5	1	replace
21	[BUG]  [BUGGY]  timeout  [FE]              RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(curNode  ==  null)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(curNode  ==  null)  {	  if(inputId    ==    null)    {    timeout    	compilable	timeout	5	1	replace
22	[BUG]  [BUGGY]  if(curNode  ==  null)  {  timeout  [FE]              RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(curNode  ==  null)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode  ==  null)  {	  if(inputId    ==    null)    {    timeout    	compilable	timeout	5	1	replace
23	[BUG]  [BUGGY]  if(unknownException.getMessage()!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  unknownException  [FE]          RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unknownException.getMessage()!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.getMessage()!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(inputId!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	12	None	replace
24	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  Feature  [FE]            RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(inputId!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	12	None	replace
25	[BUG]  [BUGGY]  if(unknownException.getMessage()  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  unknownException  [FE]              RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unknownException.getMessage()  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.getMessage()  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(inputId!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	12	None	replace
26	[BUG]  [BUGGY]  if(inputId  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  Feature  [FE]                RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(inputId!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	12	None	replace
27	[BUG]  [BUGGY]  if(message!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  Feature  [FE]                  RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(message!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(inputId!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	12	None	replace
28	[BUG]  [BUGGY]  if(sourceName!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  Feature  [FE]                    RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(sourceName!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(sourceName!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(inputId!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	12	None	replace
29	[BUG]  [BUGGY]  if(curNode.getMessage()!=  null)  {  [CE]  cannot  find  symbol  [FE]              RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(curNode.getMessage()!=  null)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode.getMessage()!=  null)  {	  if(unknownException.getMessage()!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
30	[BUG]  [BUGGY]  if(node.getMessage()!=  null)  {  [CE]  cannot  find  symbol  node  [FE]                RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(node.getMessage()!=  null)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(node.getMessage()!=  null)  {	  if(unknownException.getMessage()!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  node	6	None	replace
31	[BUG]  [BUGGY]  if(exception.getMessage()!=  null)  {  [CE]  cannot  find  symbol  exception  [FE]                  RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(exception.getMessage()!=  null)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(exception.getMessage()!=  null)  {	  if(unknownException.getMessage()!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  exception	6	None	replace
32	[BUG]  [BUGGY]  if(null.getMessage()!=  null)  {  [CE]  <null>  cannot  be  dereferenced  [FE]                    RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(null.getMessage()!=  null)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(null.getMessage()!=  null)  {	  if(unknownException.getMessage()!=    null)    {    	non-compiled	[CE]  <null>  cannot  be  dereferenced	6	None	replace
33	[BUG]  [BUGGY]  if(currentException.getMessage()!=  null)  {  [CE]  cannot  find  symbol  currentException  [FE]                      RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(currentException.getMessage()!=  null)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(currentException.getMessage()!=  null)  {	  if(unknownException.getMessage()!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  currentException	6	None	replace
34	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "   "))  {  if(inputId!=  null  &&  inputId.equals( "   "))  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "   "))  {  if(inputId!=  null  &&  inputId.equals( "   "))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "   "))    {    if(inputId!=  null  &&  inputId.equals( "   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	10	None	add
35	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "   "))  {  if(inputId!=  null  &&  inputId.equals( ".   "))  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "   "))  {  if(inputId!=  null  &&  inputId.equals( ".   "))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "   "))    {    if(inputId!=  null  &&  inputId.equals( ".   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	10	None	add
36	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "   "))  {  if(inputId  ==  null  &&  inputId.equals( "   "))  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "   "))  {  if(inputId  ==  null  &&  inputId.equals( "   "))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "   "))    {    if(inputId  ==  null  &&  inputId.equals( "   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	10	None	add
37	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "   "))  {  If(inputId!=  null  &&  inputId.equals( "   "))  {  [CE]  [FE]              RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "   "))  {  If(inputId!=  null  &&  inputId.equals( "   "))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "   "))    {    If(inputId!=  null  &&  inputId.equals( "   "))  {	  timeout    	non-compiled	[CE]  	10	None	add
38	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "   "))  {  if(inputId!=  null  &&  inputId.equals( "))  {  [CE]  unclosed  string  literal  [FE]                RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "   "))  {  if(inputId!=  null  &&  inputId.equals( "))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "   "))    {    if(inputId!=  null  &&  inputId.equals( "))  {	  timeout    	non-compiled	[CE]  unclosed  string  literal	10	None	add
39	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "   "))  {  if(inputId  >=  null  &&  inputId.equals( "   "))  {  [CE]  illegal  start  of  expression  [FE]                  RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "   "))  {  if(inputId  >=  null  &&  inputId.equals( "   "))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "   "))    {    if(inputId  >=  null  &&  inputId.equals( "   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	10	None	add
40	[BUG]  [BUGGY]  if(unknownException.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  unknownException  [FE]            RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unknownException.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	13	None	replace
41	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  Feature  [FE]              RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	13	None	replace
42	[BUG]  [BUGGY]  if(unknownException.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  unknownException  [FE]                RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unknownException.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	13	None	replace
43	[BUG]  [BUGGY]  if(inputId  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  Feature  [FE]                  RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	13	None	replace
44	[BUG]  [BUGGY]  if(message!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  Feature  [FE]                    RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(message!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	13	None	replace
45	[BUG]  [BUGGY]  if(inputId!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  Feature  [FE]                      RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	13	None	replace
46	[BUG]  [BUGGY]  if(unknownException.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  unknownException  [FE]                RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unknownException.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	15	None	replace
47	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  Feature  [FE]                  RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	15	None	replace
48	[BUG]  [BUGGY]  if(unknownException.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  unknownException  [FE]                    RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unknownException.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	15	None	replace
49	[BUG]  [BUGGY]  if(inputId!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  Feature  [FE]                      RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	15	None	replace
50	[BUG]  [BUGGY]  if(message!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  Feature  [FE]                        RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(message!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	15	None	replace
51	[BUG]  [BUGGY]  if(inputId  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  Feature  [FE]                          RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	15	None	replace
52	[BUG]  [BUGGY]  String  sourceName  =  curNode.getString();  [CE]  <identifier>  expected  [FE]                  RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  String  sourceName  =  curNode.getString();  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	String  sourceName  =  curNode.getString();	      	non-compiled	[CE]  <identifier>  expected	9	None	replace
53	[BUG]  [BUGGY]  Node  curNode  =  curNode.getParent();  [CE]  <identifier>  expected  [FE]                    RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  Node  curNode  =  curNode.getParent();  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  curNode.getParent();	      	non-compiled	[CE]  <identifier>  expected	9	None	replace
54	[BUG]  [BUGGY]  Node  curNode  =  curNode.getNext();  [CE]  <identifier>  expected  [FE]                      RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  Node  curNode  =  curNode.getNext();  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  curNode.getNext();	      	non-compiled	[CE]  <identifier>  expected	9	None	replace
55	[BUG]  [BUGGY]  Node  curNode  =  parent.getParent();  [CE]  <identifier>  expected  [FE]                        RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  Node  curNode  =  parent.getParent();  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  parent.getParent();	      	non-compiled	[CE]  <identifier>  expected	9	None	replace
56	[BUG]  [BUGGY]  String  sourceName  =  cb.getSourceName();  [CE]  <identifier>  expected  [FE]                          RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  String  sourceName  =  cb.getSourceName();  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	String  sourceName  =  cb.getSourceName();	      	non-compiled	[CE]  <identifier>  expected	9	None	replace
57	[BUG]  [BUGGY]  Node  curNode  =  nodeTypes.get(message);  [CE]  <identifier>  expected  [FE]                            RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  Node  curNode  =  nodeTypes.get(message);  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  nodeTypes.get(message);	      	non-compiled	[CE]  <identifier>  expected	9	None	replace
58	[BUG]  [BUGGY]  Node  curNode  =  n.getParent();  [CE]  <identifier>  expected  [FE]                              RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  Node  curNode  =  n.getParent();  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  n.getParent();	      	non-compiled	[CE]  <identifier>  expected	9	None	replace
59	[BUG]  [BUGGY]  timeout  [FE]        RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unexpectedException!=  null  &&  curNode  ==  null)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException!=  null  &&  curNode  ==  null)  {	  if(unexpectedException!=    null)    {    timeout    	compilable	timeout	2	1	replace
60	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  curNode  ==  null)  {  timeout  [FE]        RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unexpectedException!=  null  &&  curNode  ==  null)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  curNode  ==  null)  {	  if(unexpectedException!=    null)    {    timeout    	compilable	timeout	2	1	replace
61	[BUG]  [BUGGY]  timeout  [FE]          RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unexpectedException!=  null  &&  curNode!=  null)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException!=  null  &&  curNode!=  null)  {	  if(unexpectedException!=    null)    {    timeout    	compilable	timeout	2	1	replace
62	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  curNode!=  null)  {  timeout  [FE]          RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unexpectedException!=  null  &&  curNode!=  null)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  curNode!=  null)  {	  if(unexpectedException!=    null)    {    timeout    	compilable	timeout	2	1	replace
63	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isInternalError(message))  {  [CE]  cannot  find  symbol  [FE]            RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unexpectedException!=  null  &&  isInternalError(message))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isInternalError(message))  {	  if(unexpectedException!=    null)    {    timeout    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
64	[BUG]  [BUGGY]  timeout  [FE]              RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unexpectedException!=  null  &&  message.length()  >  0)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException!=  null  &&  message.length()  >  0)  {	  if(unexpectedException!=    null)    {    timeout    	compilable	timeout	2	1	replace
65	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  message.length()  >  0)  {  timeout  [FE]              RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unexpectedException!=  null  &&  message.length()  >  0)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  message.length()  >  0)  {	  if(unexpectedException!=    null)    {    timeout    	compilable	timeout	2	1	replace
66	[BUG]  [BUGGY]  timeout  [FE]                RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unexpectedException  ==  null  &&  curNode!=  null)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException  ==  null  &&  curNode!=  null)  {	  if(unexpectedException!=    null)    {    timeout    	compilable	timeout	2	1	replace
67	[BUG]  [BUGGY]  if(unexpectedException  ==  null  &&  curNode!=  null)  {  timeout  [FE]                RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unexpectedException  ==  null  &&  curNode!=  null)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException  ==  null  &&  curNode!=  null)  {	  if(unexpectedException!=    null)    {    timeout    	compilable	timeout	2	1	replace
68	[BUG]  [BUGGY]  timeout  [FE]                  RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unexpectedException!=  null  &&  unexpectedException.getMessage().length()  >  0)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException!=  null  &&  unexpectedException.getMessage().length()  >  0)  {	  if(unexpectedException!=    null)    {    timeout    	compilable	timeout	2	1	replace
69	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  unexpectedException.getMessage().length()  >  0)  {  timeout  [FE]                  RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unexpectedException!=  null  &&  unexpectedException.getMessage().length()  >  0)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  unexpectedException.getMessage().length()  >  0)  {	  if(unexpectedException!=    null)    {    timeout    	compilable	timeout	2	1	replace
70	[BUG]  [BUGGY]  if(curNode  ==  null?   "   "  :  formatNodeContext( "Node   ",  curNode)  +  (curNode  ==  null?   "   "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [CE]  [FE]                RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(curNode  ==  null?   "   "  :  formatNodeContext( "Node   ",  curNode)  +  (curNode  ==  null?   "   "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode  ==  null?   "   "  :  formatNodeContext( "Node   ",  curNode)  +  (curNode  ==  null?   "   "  :  formatNodeContext( "Parent   ",  curNode.getParent()));	  if(unexpectedException.getMessage()!=    null)    {    timeout    	non-compiled	[CE]  	8	None	replace
71	[BUG]  [BUGGY]  if(curNode!=  null?   "   "  :  formatNodeContext( "Node   ",  curNode)  +  (curNode  ==  null?   "   "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [CE]  [FE]                  RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(curNode!=  null?   "   "  :  formatNodeContext( "Node   ",  curNode)  +  (curNode  ==  null?   "   "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null?   "   "  :  formatNodeContext( "Node   ",  curNode)  +  (curNode  ==  null?   "   "  :  formatNodeContext( "Parent   ",  curNode.getParent()));	  if(unexpectedException.getMessage()!=    null)    {    timeout    	non-compiled	[CE]  	8	None	replace
72	[BUG]  [BUGGY]  if(unexpectedException.getMessage()!=  null?   "n "  :  formatNodeContext( "Node   ",  curNode)  +  (curNode  ==  null?   "   "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [CE]  [FE]                    RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unexpectedException.getMessage()!=  null?   "n "  :  formatNodeContext( "Node   ",  curNode)  +  (curNode  ==  null?   "   "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()!=  null?   "n "  :  formatNodeContext( "Node   ",  curNode)  +  (curNode  ==  null?   "   "  :  formatNodeContext( "Parent   ",  curNode.getParent()));	  if(unexpectedException.getMessage()!=    null)    {    timeout    	non-compiled	[CE]  	8	None	replace
73	[BUG]  [BUGGY]  if(unexpectedException!=  null)  {  if(unexpectedException!=  null)  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unexpectedException!=  null)  {  if(unexpectedException!=  null)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=    null)    {    if(unexpectedException!=  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
74	[BUG]  [BUGGY]  if(unexpectedException!=  null)  {  if(unexpectedException  ==  null)  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unexpectedException!=  null)  {  if(unexpectedException  ==  null)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=    null)    {    if(unexpectedException  ==  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
75	[BUG]  [BUGGY]  if(unexpectedException!=  null)  {  If(unexpectedException!=  null)  {  [CE]  [FE]            RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unexpectedException!=  null)  {  If(unexpectedException!=  null)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=    null)    {    If(unexpectedException!=  null)  {	  timeout    	non-compiled	[CE]  	1	None	add
76	[BUG]  [BUGGY]  if(unexpectedException!=  null)  {  if(unexpectedException  >=  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unexpectedException!=  null)  {  if(unexpectedException  >=  null)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=    null)    {    if(unexpectedException  >=  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
77	[BUG]  [BUGGY]  if(unexpectedException!=  null)  {  if(unexpectedException  >>  null)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unexpectedException!=  null)  {  if(unexpectedException  >>  null)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=    null)    {    if(unexpectedException  >>  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
78	[BUG]  [BUGGY]  if(inputId  ==  null)  {  if(inputId  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId  ==  null)  {  if(inputId  ==  null)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId    ==    null)    {    if(inputId  ==  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	4	None	add
79	[BUG]  [BUGGY]  if(inputId  ==  null)  {  if(inputId!=  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId  ==  null)  {  if(inputId!=  null)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId    ==    null)    {    if(inputId!=  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	4	None	add
80	[BUG]  [BUGGY]  if(inputId  ==  null)  {  If(inputId  ==  null)  {  [CE]  [FE]                RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId  ==  null)  {  If(inputId  ==  null)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId    ==    null)    {    If(inputId  ==  null)  {	  timeout    	non-compiled	[CE]  	4	None	add
81	[BUG]  [BUGGY]  if(inputId  ==  null)  {  if(inputId  >=  null)  {  [CE]  illegal  start  of  expression  [FE]                  RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId  ==  null)  {  if(inputId  >=  null)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId    ==    null)    {    if(inputId  >=  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	4	None	add
82	[BUG]  [BUGGY]  if(inputId  ==  null)  {  if(inputId  [BUGGY]  null)  {  [CE]  [FE]                    RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId  ==  null)  {  if(inputId  [BUGGY]  null)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId    ==    null)    {    if(inputId  [BUGGY]  null)  {	  timeout    	non-compiled	[CE]  	4	None	add
83	[BUG]  [BUGGY]  if(inputId  ==  null)  {  if(inputId  >>  null)  {  [CE]  illegal  start  of  expression  [FE]                      RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId  ==  null)  {  if(inputId  >>  null)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId    ==    null)    {    if(inputId  >>  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	4	None	add
84	[BUG]  [BUGGY]  if(unknownException.getMessage()!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  unknownException  [FE]              RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unknownException.getMessage()!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.getMessage()!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(inputId!=    null    &&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	14	None	replace
85	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  Feature  [FE]                RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(inputId!=    null    &&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	14	None	replace
86	[BUG]  [BUGGY]  if(unknownException.getMessage()  ==  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  unknownException  [FE]                  RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unknownException.getMessage()  ==  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.getMessage()  ==  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(inputId!=    null    &&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	14	None	replace
87	[BUG]  [BUGGY]  if(message!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  Feature  [FE]                    RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(message!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(inputId!=    null    &&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	14	None	replace
88	[BUG]  [BUGGY]  if(inputId!=  null  ||  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  Feature  [FE]                      RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId!=  null  ||  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  ||  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(inputId!=    null    &&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	14	None	replace
89	[BUG]  [BUGGY]  timeout  [FE]          RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(message!=  null)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(message!=  null)  {	  if(unknownException!=    null)    {    	compilable	timeout	3	1	replace
90	[BUG]  [BUGGY]  if(message!=  null)  {  timeout  [FE]          RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(message!=  null)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message!=  null)  {	  if(unknownException!=    null)    {    	compilable	timeout	3	1	replace
91	[BUG]  [BUGGY]  timeout  [FE]            RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(curNode!=  null)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(curNode!=  null)  {	  if(unknownException!=    null)    {    	compilable	timeout	3	1	replace
92	[BUG]  [BUGGY]  if(curNode!=  null)  {  timeout  [FE]            RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(curNode!=  null)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null)  {	  if(unknownException!=    null)    {    	compilable	timeout	3	1	replace
93	[BUG]  [BUGGY]  if(unknownException  ==  null)  {  [CE]  cannot  find  symbol  unknownException  [FE]              RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unknownException  ==  null)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException  ==  null)  {	  if(unknownException!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	3	None	replace
94	[BUG]  [BUGGY]  if(node!=  null)  {  [CE]  cannot  find  symbol  node  [FE]                RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(node!=  null)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(node!=  null)  {	  if(unknownException!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  node	3	None	replace
95	[BUG]  [BUGGY]  timeout  [FE]            RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId!=  null  ||  message.length()  ==  0)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId!=  null  ||  message.length()  ==  0)  {	  if(inputId    ==    null)    {    timeout    	compilable	timeout	5	1	replace
96	[BUG]  [BUGGY]  if(inputId!=  null  ||  message.length()  ==  0)  {  timeout  [FE]            RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId!=  null  ||  message.length()  ==  0)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  ||  message.length()  ==  0)  {	  if(inputId    ==    null)    {    timeout    	compilable	timeout	5	1	replace
97	[BUG]  [BUGGY]  timeout  [FE]              RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId  ==  null  ||  message.length()  ==  0)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId  ==  null  ||  message.length()  ==  0)  {	  if(inputId    ==    null)    {    timeout    	compilable	timeout	5	1	replace
98	[BUG]  [BUGGY]  if(inputId  ==  null  ||  message.length()  ==  0)  {  timeout  [FE]              RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId  ==  null  ||  message.length()  ==  0)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId  ==  null  ||  message.length()  ==  0)  {	  if(inputId    ==    null)    {    timeout    	compilable	timeout	5	1	replace
99	[BUG]  [BUGGY]  if(unknownException.equals(message)&&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  unknownException  [FE]              RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unknownException.equals(message)&&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.equals(message)&&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(inputId!=    null    &&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	14	None	replace
100	[BUG]  [BUGGY]  if(curNode!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  Feature  [FE]                RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(curNode!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(inputId!=    null    &&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	14	None	replace
101	[BUG]  [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.WARNING_TO_STREAM))  {  [CE]  cannot  find  symbol  Feature  [FE]                  RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.WARNING_TO_STREAM))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  isEnabled(Feature.WARNING_TO_STREAM))  {	  if(inputId!=    null    &&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	14	None	replace
102	[BUG]  [BUGGY]  if(unexpectedException!=  null)  {  if(unexpectedException  [BUGGY]  null)  {  [CE]  [FE]        RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unexpectedException!=  null)  {  if(unexpectedException  [BUGGY]  null)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=    null)    {    if(unexpectedException  [BUGGY]  null)  {	  timeout    	non-compiled	[CE]  	1	None	add
103	[BUG]  [BUGGY]  if(curNode!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  Feature  [FE]                RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(curNode!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	15	None	replace
104	[BUG]  [BUGGY]  if(unknownException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  unknownException  [FE]                  RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unknownException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	15	None	replace
105	[BUG]  [BUGGY]  timeout  [FE]                RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unexpectedException.getMessage()  ==  null)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException.getMessage()  ==  null)  {	  if(unexpectedException.getMessage()!=    null)    {    timeout    	compilable	timeout	8	1	replace
106	[BUG]  [BUGGY]  if(unexpectedException.getMessage()  ==  null)  {  timeout  [FE]                RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unexpectedException.getMessage()  ==  null)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()  ==  null)  {	  if(unexpectedException.getMessage()!=    null)    {    timeout    	compilable	timeout	8	1	replace
107	[BUG]  [BUGGY]  if(curNode  ==  null?   "   "  :  formatNodeContext( "Node ")+  (curNode  ==  null?   "   "  :  formatNodeContext( "Parent "),  curNode.getParent()));  [CE]  [FE]                  RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(curNode  ==  null?   "   "  :  formatNodeContext( "Node ")+  (curNode  ==  null?   "   "  :  formatNodeContext( "Parent "),  curNode.getParent()));  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode  ==  null?   "   "  :  formatNodeContext( "Node ")+  (curNode  ==  null?   "   "  :  formatNodeContext( "Parent "),  curNode.getParent()));	  if(unexpectedException.getMessage()!=    null)    {    timeout    	non-compiled	[CE]  	8	None	replace
108	[BUG]  [BUGGY]  if(unknownException!=  null  ||  message.length()  ==  0)  {  [CE]  cannot  find  symbol  unknownException  [FE]          RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unknownException!=  null  ||  message.length()  ==  0)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  ||  message.length()  ==  0)  {	  if(unknownException!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	3	None	replace
109	[BUG]  [BUGGY]  if(buffer.getMessage()!=  null)  {  [CE]  cannot  find  symbol  buffer  [FE]              RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(buffer.getMessage()!=  null)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(buffer.getMessage()!=  null)  {	  if(unknownException.getMessage()!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  buffer	6	None	replace
110	[BUG]  [BUGGY]  if(unknownException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  unknownException  [FE]            RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unknownException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	13	None	replace
111	[BUG]  [BUGGY]  if(curNode!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  Feature  [FE]              RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(curNode!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	13	None	replace
112	[BUG]  [BUGGY]  Node  curNode  =  cfgs.getCurrentNode(n);  [CE]  <identifier>  expected  [FE]                  RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  Node  curNode  =  cfgs.getCurrentNode(n);  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  cfgs.getCurrentNode(n);	      	non-compiled	[CE]  <identifier>  expected	9	None	replace
113	[BUG]  [BUGGY]  Node  curNode  =  cfgs.getCurrentNode();  [CE]  <identifier>  expected  [FE]                    RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  Node  curNode  =  cfgs.getCurrentNode();  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  cfgs.getCurrentNode();	      	non-compiled	[CE]  <identifier>  expected	9	None	replace
114	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "   "))  {  if(inputId!=  null  &&  inputId.equals( ",   "))  {  [CE]  illegal  start  of  expression  [FE]        RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "   "))  {  if(inputId!=  null  &&  inputId.equals( ",   "))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "   "))    {    if(inputId!=  null  &&  inputId.equals( ",   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	10	None	add
115	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "   "))  {  if(inputId!=  null  &&  inputId.equals(. "   "))  {  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "   "))  {  if(inputId!=  null  &&  inputId.equals(. "   "))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "   "))    {    if(inputId!=  null  &&  inputId.equals(. "   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	10	None	add
116	[BUG]  [BUGGY]  if(inputId  ==  null)  {  if(inputId  ==  null  ||  inputId  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId  ==  null)  {  if(inputId  ==  null  ||  inputId  ==  null)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId    ==    null)    {    if(inputId  ==  null  ||  inputId  ==  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	4	None	add
117	[BUG]  [BUGGY]  if(inputId  ==  null)  {  if(inputId  ==  null  ||  inputId!=  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId  ==  null)  {  if(inputId  ==  null  ||  inputId!=  null)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId    ==    null)    {    if(inputId  ==  null  ||  inputId!=  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	4	None	add
118	[BUG]  [BUGGY]  if(inputId  ==  null)  {  if(inputId  ==  null  ||  message!=  null)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId  ==  null)  {  if(inputId  ==  null  ||  message!=  null)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId    ==    null)    {    if(inputId  ==  null  ||  message!=  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	4	None	add
119	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [CE]  cannot  find  symbol  Feature  [FE]        RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {	  if(unexpectedException!=    null)    {    timeout    	non-compiled	[CE]  cannot  find  symbol  Feature	2	None	replace
120	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_RESULT))  {  [CE]  cannot  find  symbol  Feature  [FE]          RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_RESULT))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_RESULT))  {	  if(unexpectedException!=    null)    {    timeout    	non-compiled	[CE]  cannot  find  symbol  Feature	2	None	replace
121	[BUG]  [BUGGY]  timeout  [FE]            RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unexpectedException!=  null  ||  message.length()  ==  0)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException!=  null  ||  message.length()  ==  0)  {	  if(unexpectedException!=    null)    {    timeout    	compilable	timeout	2	1	replace
122	[BUG]  [BUGGY]  if(unexpectedException!=  null  ||  message.length()  ==  0)  {  timeout  [FE]            RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unexpectedException!=  null  ||  message.length()  ==  0)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  ||  message.length()  ==  0)  {	  if(unexpectedException!=    null)    {    timeout    	compilable	timeout	2	1	replace
123	[BUG]  [BUGGY]  timeout  [FE]        RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId  ==  null  &&  inputId.equals( " "))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId  ==  null  &&  inputId.equals( " "))  {	  if(inputId!=    null    &&    inputId.equals(   "   "))    {    timeout    	compilable	timeout	11	1	replace
124	[BUG]  [BUGGY]  if(inputId  ==  null  &&  inputId.equals( " "))  {  timeout  [FE]        RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId  ==  null  &&  inputId.equals( " "))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId  ==  null  &&  inputId.equals( " "))  {	  if(inputId!=    null    &&    inputId.equals(   "   "))    {    timeout    	compilable	timeout	11	1	replace
125	[BUG]  [BUGGY]  timeout  [FE]          RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId!=  null  &&  message.equals( "   "))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId!=  null  &&  message.equals( "   "))  {	  if(inputId!=    null    &&    inputId.equals(   "   "))    {    timeout    	compilable	timeout	11	1	replace
126	[BUG]  [BUGGY]  if(inputId!=  null  &&  message.equals( "   "))  {  timeout  [FE]          RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId!=  null  &&  message.equals( "   "))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  message.equals( "   "))  {	  if(inputId!=    null    &&    inputId.equals(   "   "))    {    timeout    	compilable	timeout	11	1	replace
127	[BUG]  [BUGGY]  if(unknownException!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  unknownException  [FE]          RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unknownException!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(inputId!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	12	None	replace
128	[BUG]  [BUGGY]  if(curNode!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  Feature  [FE]            RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(curNode!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(inputId!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	12	None	replace
129	[BUG]  [BUGGY]  if(unknownException.equals(message)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  unknownException  [FE]                RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unknownException.equals(message)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.equals(message)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	15	None	replace
130	[BUG]  [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME,  message))  {  [CE]  cannot  find  symbol  Feature  [FE]                  RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME,  message))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME,  message))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	15	None	replace
131	[BUG]  [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.WARNING_SOURCE))  {  [CE]  cannot  find  symbol  Feature  [FE]                    RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.WARNING_SOURCE))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.WARNING_SOURCE))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	15	None	replace
132	[BUG]  [BUGGY]  if(unknownException.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  unknownException  [FE]                      RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unknownException.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	15	None	replace
133	[BUG]  [BUGGY]  if(inputId  ==  null)  {  if(inputId  ==  null  ||  inputId.equals( " "))  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId  ==  null)  {  if(inputId  ==  null  ||  inputId.equals( " "))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId    ==    null)    {    if(inputId  ==  null  ||  inputId.equals( " "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	4	None	add
134	[BUG]  [BUGGY]  if(unknownException!=  null  &&!include)  {  [CE]  cannot  find  symbol  unknownException  [FE]          RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unknownException!=  null  &&!include)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  &&!include)  {	  if(unknownException!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	3	None	replace
135	[BUG]  [BUGGY]  if(unknownException!=  null  &&!included)  {  [CE]  cannot  find  symbol  unknownException  [FE]            RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unknownException!=  null  &&!included)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  &&!included)  {	  if(unknownException!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	3	None	replace
136	[BUG]  [BUGGY]  if(unknownException!=  null  &&  message.length()  >  0)  {  [CE]  cannot  find  symbol  unknownException  [FE]              RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unknownException!=  null  &&  message.length()  >  0)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  &&  message.length()  >  0)  {	  if(unknownException!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	3	None	replace
137	[BUG]  [BUGGY]  if(unknownException!=  null  &&  unexpectedException.length()  >  0)  {  [CE]  cannot  find  symbol  unknownException  [FE]                RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unknownException!=  null  &&  unexpectedException.length()  >  0)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  &&  unexpectedException.length()  >  0)  {	  if(unknownException!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	3	None	replace
138	[BUG]  [BUGGY]  if(unknownException!=  null  &&  unexpectedException.equals(message))  {  [CE]  cannot  find  symbol  unknownException  [FE]                  RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unknownException!=  null  &&  unexpectedException.equals(message))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  &&  unexpectedException.equals(message))  {	  if(unknownException!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	3	None	replace
139	[BUG]  [BUGGY]  if(unknownException!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  unknownException  [FE]                    RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unknownException!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(unknownException!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	3	None	replace
140	[BUG]  [BUGGY]  if(unknownException.equals(message)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  unknownException  [FE]            RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unknownException.equals(message)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.equals(message)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	13	None	replace
141	[BUG]  [BUGGY]  if(unknownException.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  unknownException  [FE]              RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unknownException.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	13	None	replace
142	[BUG]  [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  message))  {  [CE]  cannot  find  symbol  Feature  [FE]                RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  message))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  message))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	13	None	replace
143	[BUG]  [BUGGY]  Node  curNode  =  n.getFirstChild();  [CE]  <identifier>  expected  [FE]                  RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  Node  curNode  =  n.getFirstChild();  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  n.getFirstChild();	      	non-compiled	[CE]  <identifier>  expected	9	None	replace
144	[BUG]  [BUGGY]  Node  curNode  =  cfgs.getScopeRoot(n);  [CE]  <identifier>  expected  [FE]                    RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  Node  curNode  =  cfgs.getScopeRoot(n);  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  cfgs.getScopeRoot(n);	      	non-compiled	[CE]  <identifier>  expected	9	None	replace
145	[BUG]  [BUGGY]  Node  curNode  =  getCurrentNode();  [CE]  <identifier>  expected  [FE]                      RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  Node  curNode  =  getCurrentNode();  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  getCurrentNode();	      	non-compiled	[CE]  <identifier>  expected	9	None	replace
146	[BUG]  [BUGGY]  Node  curNode  =  cb.getCurrentNode();  [CE]  <identifier>  expected  [FE]                        RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  Node  curNode  =  cb.getCurrentNode();  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  cb.getCurrentNode();	      	non-compiled	[CE]  <identifier>  expected	9	None	replace
147	[BUG]  [BUGGY]  if(included  ||  inputId!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  included  [FE]          RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(included  ||  inputId!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(included  ||  inputId!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(inputId!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  included	12	None	replace
148	[BUG]  [BUGGY]  if(unknownException.equals(message)&&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  unknownException  [FE]            RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unknownException.equals(message)&&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.equals(message)&&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(inputId!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	12	None	replace
149	[BUG]  [BUGGY]  if(included  ||  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  included  [FE]              RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(included  ||  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(included  ||  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(inputId!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  included	12	None	replace
150	[BUG]  [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.QUOTE_TO_STREAM))  {  [CE]  cannot  find  symbol  Feature  [FE]              RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.QUOTE_TO_STREAM))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  isEnabled(Feature.QUOTE_TO_STREAM))  {	  if(inputId!=    null    &&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	14	None	replace
151	[BUG]  [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.AUTO_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  Feature  [FE]                RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.AUTO_PASSED_TO_STREAM))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  isEnabled(Feature.AUTO_PASSED_TO_STREAM))  {	  if(inputId!=    null    &&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	14	None	replace
152	[BUG]  [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NODE))  {  [CE]  cannot  find  symbol  Feature  [FE]                  RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NODE))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NODE))  {	  if(inputId!=    null    &&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	14	None	replace
153	[BUG]  [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.VISIBILITY_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  Feature  [FE]                    RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.VISIBILITY_PASSED_TO_STREAM))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  isEnabled(Feature.VISIBILITY_PASSED_TO_STREAM))  {	  if(inputId!=    null    &&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	14	None	replace
154	[BUG]  [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.QUOTE_SOURCE))  {  [CE]  cannot  find  symbol  Feature  [FE]                      RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.QUOTE_SOURCE))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  isEnabled(Feature.QUOTE_SOURCE))  {	  if(inputId!=    null    &&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	14	None	replace
155	[BUG]  [BUGGY]  timeout  [FE]        RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId!=  null  &&  inputId.equals( "- "))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId!=  null  &&  inputId.equals( "- "))  {	  if(inputId!=    null    &&    inputId.equals(   "   "))    {    timeout    	compilable	timeout	11	1	replace
156	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals( "- "))  {  timeout  [FE]        RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId!=  null  &&  inputId.equals( "- "))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  inputId.equals( "- "))  {	  if(inputId!=    null    &&    inputId.equals(   "   "))    {    timeout    	compilable	timeout	11	1	replace
157	[BUG]  [BUGGY]  timeout  [FE]          RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId!=  null  &&  inputId.equals( "+ "))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId!=  null  &&  inputId.equals( "+ "))  {	  if(inputId!=    null    &&    inputId.equals(   "   "))    {    timeout    	compilable	timeout	11	1	replace
158	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals( "+ "))  {  timeout  [FE]          RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId!=  null  &&  inputId.equals( "+ "))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  inputId.equals( "+ "))  {	  if(inputId!=    null    &&    inputId.equals(   "   "))    {    timeout    	compilable	timeout	11	1	replace
159	[BUG]  [BUGGY]  timeout  [FE]            RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId!=  null  &&  inputId.equals( "/ "))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId!=  null  &&  inputId.equals( "/ "))  {	  if(inputId!=    null    &&    inputId.equals(   "   "))    {    timeout    	compilable	timeout	11	1	replace
160	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals( "/ "))  {  timeout  [FE]            RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(inputId!=  null  &&  inputId.equals( "/ "))  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  inputId.equals( "/ "))  {	  if(inputId!=    null    &&    inputId.equals(   "   "))    {    timeout    	compilable	timeout	11	1	replace
161	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  (curNode  ==  null?   "   "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [CE]  [FE]        RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unexpectedException!=  null  &&  (curNode  ==  null?   "   "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  (curNode  ==  null?   "   "  :  formatNodeContext( "Parent   ",  curNode.getParent()));	  if(unexpectedException!=    null)    {    timeout    	non-compiled	[CE]  	2	None	replace
162	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&!included)  {  [CE]  cannot  find  symbol  included  [FE]          RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unexpectedException!=  null  &&!included)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&!included)  {	  if(unexpectedException!=    null)    {    timeout    	non-compiled	[CE]  cannot  find  symbol  included	2	None	replace
163	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  (curNode  ==  null?   "   "  :  formatNodeContext( "Parent "),  curNode.getParent()));  [CE]  [FE]            RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(unexpectedException!=  null  &&  (curNode  ==  null?   "   "  :  formatNodeContext( "Parent "),  curNode.getParent()));  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  (curNode  ==  null?   "   "  :  formatNodeContext( "Parent "),  curNode.getParent()));	  if(unexpectedException!=    null)    {    timeout    	non-compiled	[CE]  	2	None	replace
164	[BUG]  [BUGGY]  if(message.getMessage()!=  null)  {  [CE]  cannot  find  symbol  [FE]              RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(message.getMessage()!=  null)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message.getMessage()!=  null)  {	  if(unknownException.getMessage()!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
165	[BUG]  [BUGGY]  if(includeNodeContext)  {  [CE]  cannot  find  symbol  includeNodeContext  [FE]            RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(includeNodeContext)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includeNodeContext)  {	  if(inputId    ==    null)    {    timeout    	non-compiled	[CE]  cannot  find  symbol  includeNodeContext	5	None	replace
166	[BUG]  [BUGGY]  if(included)  {  [CE]  cannot  find  symbol  included  [FE]              RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(included)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(included)  {	  if(inputId    ==    null)    {    timeout    	non-compiled	[CE]  cannot  find  symbol  included	5	None	replace
167	[BUG]  [BUGGY]  if(include)  {  [CE]  cannot  find  symbol  include  [FE]                RuntimeException    [CONTEXT]    private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();        [BUGGY]  if(include)  {  [BUGGY]    message  =  unexpectedException.getMessage()  +     "\n   "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null  ?     "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(include)  {	  if(inputId    ==    null)    {    timeout    	non-compiled	[CE]  cannot  find  symbol  include	5	None	replace
