bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  timeout  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException!=  null  &&  message.length()  ==  0)  {	  if(unexpectedException!=    null    &&    message.length()    >    0)    {    timeout    	compilable	timeout	65	1	replace
2	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  message.length()  ==  0)  {  timeout  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  message.length()  ==  0)  {	  if(unexpectedException!=    null    &&    message.length()    >    0)    {    timeout    	compilable	timeout	65	1	replace
3	[BUG]  [BUGGY]  timeout  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message!=  null  &&  message.length()  >  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(message!=  null  &&  message.length()  >  0)  {	  if(unexpectedException!=    null    &&    message.length()    >    0)    {    timeout    	compilable	timeout	65	1	replace
4	[BUG]  [BUGGY]  if(message!=  null  &&  message.length()  >  0)  {  timeout  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message!=  null  &&  message.length()  >  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message!=  null  &&  message.length()  >  0)  {	  if(unexpectedException!=    null    &&    message.length()    >    0)    {    timeout    	compilable	timeout	65	1	replace
5	[BUG]  [BUGGY]  timeout  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  message.length()  >=  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException!=  null  &&  message.length()  >=  0)  {	  if(unexpectedException!=    null    &&    message.length()    >    0)    {    timeout    	compilable	timeout	65	1	replace
6	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  message.length()  >=  0)  {  timeout  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  message.length()  >=  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  message.length()  >=  0)  {	  if(unexpectedException!=    null    &&    message.length()    >    0)    {    timeout    	compilable	timeout	65	1	replace
7	[BUG]  [BUGGY]  timeout  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  message.length()  <=  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException!=  null  &&  message.length()  <=  0)  {	  if(unexpectedException!=    null    &&    message.length()    >    0)    {    timeout    	compilable	timeout	65	1	replace
8	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  message.length()  <=  0)  {  timeout  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  message.length()  <=  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  message.length()  <=  0)  {	  if(unexpectedException!=    null    &&    message.length()    >    0)    {    timeout    	compilable	timeout	65	1	replace
9	[BUG]  [BUGGY]  timeout  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException  ==  null  &&  message.length()  >  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException  ==  null  &&  message.length()  >  0)  {	  if(unexpectedException!=    null    &&    message.length()    >    0)    {    timeout    	compilable	timeout	65	1	replace
10	[BUG]  [BUGGY]  if(unexpectedException  ==  null  &&  message.length()  >  0)  {  timeout  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException  ==  null  &&  message.length()  >  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException  ==  null  &&  message.length()  >  0)  {	  if(unexpectedException!=    null    &&    message.length()    >    0)    {    timeout    	compilable	timeout	65	1	replace
11	[BUG]  [BUGGY]  timeout  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  curNode.getType()  ==  Token.NAME)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException!=  null  &&  curNode.getType()  ==  Token.NAME)  {	  if(unexpectedException!=    null    &&    message.length()    >    0)    {    timeout    	compilable	timeout	65	1	replace
12	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  curNode.getType()  ==  Token.NAME)  {  timeout  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  curNode.getType()  ==  Token.NAME)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  curNode.getType()  ==  Token.NAME)  {	  if(unexpectedException!=    null    &&    message.length()    >    0)    {    timeout    	compilable	timeout	65	1	replace
13	[BUG]  [BUGGY]  Node  curNode  =  n.getNext();  [CE]  <identifier>  expected  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  n.getNext();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  n.getNext();	  Node    curNode    =    parent.getParent();    	non-compiled	[CE]  <identifier>  expected	55	None	replace
14	[BUG]  [BUGGY]  Node  curNode  =  parent.getNext();  [CE]  <identifier>  expected  [FE]                              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  parent.getNext();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  parent.getNext();	  Node    curNode    =    parent.getParent();    	non-compiled	[CE]  <identifier>  expected	55	None	replace
15	[BUG]  [BUGGY]  Node  curNode  =  node.getParent();  [CE]  <identifier>  expected  [FE]                                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  node.getParent();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  node.getParent();	  Node    curNode    =    parent.getParent();    	non-compiled	[CE]  <identifier>  expected	55	None	replace
16	[BUG]  [BUGGY]  if(inputId!=  null  &&  message.equals(   "     "))  {  if(inputId!=  null  &&  message.equals( "   "))  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  message.equals(   "     "))  {  if(inputId!=  null  &&  message.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    message.equals(   "       "))    {    if(inputId!=  null  &&  message.equals( "   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	125	None	add
17	[BUG]  [BUGGY]  if(inputId!=  null  &&  message.equals(   "     "))  {  if(inputId!=  null  &&  message.equals( ".   "))  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  message.equals(   "     "))  {  if(inputId!=  null  &&  message.equals( ".   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    message.equals(   "       "))    {    if(inputId!=  null  &&  message.equals( ".   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	125	None	add
18	[BUG]  [BUGGY]  if(inputId!=  null  &&  message.equals(   "     "))  {  if(inputId  ==  null  &&  message.equals( "   "))  {  [CE]  illegal  start  of  expression  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  message.equals(   "     "))  {  if(inputId  ==  null  &&  message.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    message.equals(   "       "))    {    if(inputId  ==  null  &&  message.equals( "   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	125	None	add
19	[BUG]  [BUGGY]  if(inputId!=  null  &&  message.equals(   "     "))  {  If(inputId!=  null  &&  message.equals( "   "))  {  [CE]  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  message.equals(   "     "))  {  If(inputId!=  null  &&  message.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    message.equals(   "       "))    {    If(inputId!=  null  &&  message.equals( "   "))  {	  timeout    	non-compiled	[CE]  	125	None	add
20	[BUG]  [BUGGY]  if(inputId!=  null  &&  message.equals(   "     "))  {  if(inputId  >=  null  &&  message.equals( "   "))  {  [CE]  illegal  start  of  expression  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  message.equals(   "     "))  {  if(inputId  >=  null  &&  message.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    message.equals(   "       "))    {    if(inputId  >=  null  &&  message.equals( "   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	125	None	add
21	[BUG]  [BUGGY]  if(inputId!=  null  &&  message.equals(   "     "))  {  if(inputId!=  null  &&  message.equals( "))  {  [CE]  unclosed  string  literal  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  message.equals(   "     "))  {  if(inputId!=  null  &&  message.equals( "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    message.equals(   "       "))    {    if(inputId!=  null  &&  message.equals( "))  {	  timeout    	non-compiled	[CE]  unclosed  string  literal	125	None	add
22	[BUG]  [BUGGY]  Node  curNode  =  node.getNext();  [CE]  <identifier>  expected  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  node.getNext();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  node.getNext();	  Node    curNode    =    curNode.getNext();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
23	[BUG]  [BUGGY]  Node  curNode  =  unexpectedException.getNext();  [CE]  <identifier>  expected  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  unexpectedException.getNext();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  unexpectedException.getNext();	  Node    curNode    =    curNode.getNext();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
24	[BUG]  [BUGGY]  timeout  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  ||  inputId.equals( "+ "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId!=  null  ||  inputId.equals( "+ "))  {	  if(inputId!=    null    &&    inputId.equals(   "+   "))    {    timeout    	compilable	timeout	158	1	replace
25	[BUG]  [BUGGY]  if(inputId!=  null  ||  inputId.equals( "+ "))  {  timeout  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  ||  inputId.equals( "+ "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  ||  inputId.equals( "+ "))  {	  if(inputId!=    null    &&    inputId.equals(   "+   "))    {    timeout    	compilable	timeout	158	1	replace
26	[BUG]  [BUGGY]  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  &&  inputId.equals( "+ "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId  ==  null  &&  inputId.equals( "+ "))  {	  if(inputId!=    null    &&    inputId.equals(   "+   "))    {    timeout    	compilable	timeout	158	1	replace
27	[BUG]  [BUGGY]  if(inputId  ==  null  &&  inputId.equals( "+ "))  {  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  &&  inputId.equals( "+ "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId  ==  null  &&  inputId.equals( "+ "))  {	  if(inputId!=    null    &&    inputId.equals(   "+   "))    {    timeout    	compilable	timeout	158	1	replace
28	[BUG]  [BUGGY]  timeout  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  inputId.equals( "+ "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException!=  null  &&  inputId.equals( "+ "))  {	  if(inputId!=    null    &&    inputId.equals(   "+   "))    {    timeout    	compilable	timeout	158	1	replace
29	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  inputId.equals( "+ "))  {  timeout  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  inputId.equals( "+ "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  inputId.equals( "+ "))  {	  if(inputId!=    null    &&    inputId.equals(   "+   "))    {    timeout    	compilable	timeout	158	1	replace
30	[BUG]  [BUGGY]  timeout  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals( "0 "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId!=  null  &&  inputId.equals( "0 "))  {	  if(inputId!=    null    &&    inputId.equals(   "+   "))    {    timeout    	compilable	timeout	158	1	replace
31	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals( "0 "))  {  timeout  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals( "0 "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  inputId.equals( "0 "))  {	  if(inputId!=    null    &&    inputId.equals(   "+   "))    {    timeout    	compilable	timeout	158	1	replace
32	[BUG]  [BUGGY]  if(include  ||  curNode  ==  null)  {  [CE]  cannot  find  symbol  include  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(include  ||  curNode  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(include  ||  curNode  ==  null)  {	  if(include)    {    	non-compiled	[CE]  cannot  find  symbol  include	167	None	replace
33	[BUG]  [BUGGY]  if(include  ||  curNode!=  null)  {  [CE]  cannot  find  symbol  include  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(include  ||  curNode!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(include  ||  curNode!=  null)  {	  if(include)    {    	non-compiled	[CE]  cannot  find  symbol  include	167	None	replace
34	[BUG]  [BUGGY]  if(includes)  {  [CE]  cannot  find  symbol  includes  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includes)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includes)  {	  if(include)    {    	non-compiled	[CE]  cannot  find  symbol  includes	167	None	replace
35	[BUG]  [BUGGY]  if(include  ||  scopeCreator.isInternalError())  {  [CE]  cannot  find  symbol  include  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(include  ||  scopeCreator.isInternalError())  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(include  ||  scopeCreator.isInternalError())  {	  if(include)    {    	non-compiled	[CE]  cannot  find  symbol  include	167	None	replace
36	[BUG]  [BUGGY]  if(include  ||  curNode.getType()  ==  Token.NAME)  {  [CE]  cannot  find  symbol  include  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(include  ||  curNode.getType()  ==  Token.NAME)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(include  ||  curNode.getType()  ==  Token.NAME)  {	  if(include)    {    	non-compiled	[CE]  cannot  find  symbol  include	167	None	replace
37	[BUG]  [BUGGY]  if(nodeTypes.contains(message))  {  [CE]  cannot  find  symbol  nodeTypes  [FE]                              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(nodeTypes.contains(message))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(nodeTypes.contains(message))  {	  if(include)    {    	non-compiled	[CE]  cannot  find  symbol  nodeTypes	167	None	replace
38	[BUG]  [BUGGY]  if(sourceName  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  Feature  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(sourceName  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(sourceName  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(sourceName!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	28	None	replace
39	[BUG]  [BUGGY]  if(sourceName!=  null  ||  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  Feature  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(sourceName!=  null  ||  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(sourceName!=  null  ||  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(sourceName!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	28	None	replace
40	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  message.equals(unknownException))  {  [CE]  cannot  find  symbol  unknownException  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  message.equals(unknownException))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  message.equals(unknownException))  {	  if(unknownException!=    null    &&    unexpectedException.equals(message))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	138	None	replace
41	[BUG]  [BUGGY]  if(unknownException!=  null  &&  message.equals(unexpectedException))  {  [CE]  cannot  find  symbol  unknownException  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException!=  null  &&  message.equals(unexpectedException))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  &&  message.equals(unexpectedException))  {	  if(unknownException!=    null    &&    unexpectedException.equals(message))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	138	None	replace
42	[BUG]  [BUGGY]  if(unknownException!=  null  &&  message.equals(unknownException))  {  [CE]  cannot  find  symbol  unknownException  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException!=  null  &&  message.equals(unknownException))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  &&  message.equals(unknownException))  {	  if(unknownException!=    null    &&    unexpectedException.equals(message))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	138	None	replace
43	[BUG]  [BUGGY]  timeout  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message!=  null  &&  unexpectedException.equals(message))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(message!=  null  &&  unexpectedException.equals(message))  {	  if(unknownException!=    null    &&    unexpectedException.equals(message))    {    	compilable	timeout	138	1	replace
44	[BUG]  [BUGGY]  if(message!=  null  &&  unexpectedException.equals(message))  {  timeout  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message!=  null  &&  unexpectedException.equals(message))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message!=  null  &&  unexpectedException.equals(message))  {	  if(unknownException!=    null    &&    unexpectedException.equals(message))    {    	compilable	timeout	138	1	replace
45	[BUG]  [BUGGY]  if(nodeTypes!=  null  &&  unexpectedException.equals(message))  {  [CE]  cannot  find  symbol  nodeTypes  [FE]                              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(nodeTypes!=  null  &&  unexpectedException.equals(message))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(nodeTypes!=  null  &&  unexpectedException.equals(message))  {	  if(unknownException!=    null    &&    unexpectedException.equals(message))    {    	non-compiled	[CE]  cannot  find  symbol  nodeTypes	138	None	replace
46	[BUG]  [BUGGY]  if(unknownException  ==  null  &&  message.equals(unexpectedException))  {  [CE]  cannot  find  symbol  unknownException  [FE]                                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException  ==  null  &&  message.equals(unexpectedException))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException  ==  null  &&  message.equals(unexpectedException))  {	  if(unknownException!=    null    &&    unexpectedException.equals(message))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	138	None	replace
47	[BUG]  [BUGGY]  if(unexpectedException  ==  null  &&  message.equals(unknownException))  {  [CE]  cannot  find  symbol  unknownException  [FE]                                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException  ==  null  &&  message.equals(unknownException))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException  ==  null  &&  message.equals(unknownException))  {	  if(unknownException!=    null    &&    unexpectedException.equals(message))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	138	None	replace
48	[BUG]  [BUGGY]  if(scopeCreator.getMessage()!=  null)  {  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(scopeCreator.getMessage()!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(scopeCreator.getMessage()!=  null)  {	  if(buffer.getMessage()!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
49	[BUG]  [BUGGY]  if(scope.getMessage()!=  null)  {  [CE]  cannot  find  symbol  scope  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(scope.getMessage()!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(scope.getMessage()!=  null)  {	  if(buffer.getMessage()!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  scope	109	None	replace
50	[BUG]  [BUGGY]  timeout  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(message  ==  null)  {	  if(message!=    null)    {    timeout    	compilable	timeout	90	1	replace
51	[BUG]  [BUGGY]  if(message  ==  null)  {  timeout  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message  ==  null)  {	  if(message!=    null)    {    timeout    	compilable	timeout	90	1	replace
52	[BUG]  [BUGGY]  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message  ==  null  &&  curNode!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(message  ==  null  &&  curNode!=  null)  {	  if(message!=    null)    {    timeout    	compilable	timeout	90	1	replace
53	[BUG]  [BUGGY]  if(message  ==  null  &&  curNode!=  null)  {  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message  ==  null  &&  curNode!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message  ==  null  &&  curNode!=  null)  {	  if(message!=    null)    {    timeout    	compilable	timeout	90	1	replace
54	[BUG]  [BUGGY]  if(includeException)  {  [CE]  cannot  find  symbol  includeException  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includeException)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includeException)  {	  if(inputId    ==    null)    {    if(inputId    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  includeException	78	None	replace
55	[BUG]  [BUGGY]  if(unexpectedException.getMessage()  ==  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  Feature  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()  ==  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()  ==  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(unknownException.getMessage()    ==    null    &&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	86	None	replace
56	[BUG]  [BUGGY]  if(node.getMessage()  ==  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  node  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(node.getMessage()  ==  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(node.getMessage()  ==  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(unknownException.getMessage()    ==    null    &&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  node	86	None	replace
57	[BUG]  [BUGGY]  if(buffer.getMessage()  ==  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  buffer  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(buffer.getMessage()  ==  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(buffer.getMessage()  ==  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(unknownException.getMessage()    ==    null    &&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  buffer	86	None	replace
58	[BUG]  [BUGGY]  if(scopeCreator.getMessage()  ==  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(scopeCreator.getMessage()  ==  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(scopeCreator.getMessage()  ==  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(unknownException.getMessage()    ==    null    &&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
59	[BUG]  [BUGGY]  if(curNode.getMessage()  ==  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  [FE]                              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode.getMessage()  ==  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode.getMessage()  ==  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(unknownException.getMessage()    ==    null    &&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
60	[BUG]  [BUGGY]  if(unexpectedException.getMessage()  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  Feature  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(unknownException.getMessage()    ==    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	25	None	replace
61	[BUG]  [BUGGY]  if(scopeCreator.getMessage()  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(scopeCreator.getMessage()  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(scopeCreator.getMessage()  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(unknownException.getMessage()    ==    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
62	[BUG]  [BUGGY]  if(curNode.getMessage()  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode.getMessage()  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode.getMessage()  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(unknownException.getMessage()    ==    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
63	[BUG]  [BUGGY]  if(node.getMessage()  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  node  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(node.getMessage()  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(node.getMessage()  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(unknownException.getMessage()    ==    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  node	25	None	replace
64	[BUG]  [BUGGY]  if(buffer.getMessage()  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  buffer  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(buffer.getMessage()  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(buffer.getMessage()  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(unknownException.getMessage()    ==    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  buffer	25	None	replace
65	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&!include)  {  [CE]  cannot  find  symbol  include  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&!include)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&!include)  {	  if(unknownException!=    null    &&!include)    {    	non-compiled	[CE]  cannot  find  symbol  include	134	None	replace
66	[BUG]  [BUGGY]  if(includeException!=  null  &&!include)  {  [CE]  cannot  find  symbol  includeException  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includeException!=  null  &&!include)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includeException!=  null  &&!include)  {	  if(unknownException!=    null    &&!include)    {    	non-compiled	[CE]  cannot  find  symbol  includeException	134	None	replace
67	[BUG]  [BUGGY]  if(nodeTypes!=  null  &&!include)  {  [CE]  cannot  find  symbol  nodeTypes  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(nodeTypes!=  null  &&!include)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(nodeTypes!=  null  &&!include)  {	  if(unknownException!=    null    &&!include)    {    	non-compiled	[CE]  cannot  find  symbol  nodeTypes	134	None	replace
68	[BUG]  [BUGGY]  if(exception!=  null  &&!include)  {  [CE]  cannot  find  symbol  exception  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(exception!=  null  &&!include)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(exception!=  null  &&!include)  {	  if(unknownException!=    null    &&!include)    {    	non-compiled	[CE]  cannot  find  symbol  exception	134	None	replace
69	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "*   "))  {  if(inputId!=  null  &&  inputId.equals( "*   "))  {  [CE]  illegal  start  of  expression  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "*   "))  {  if(inputId!=  null  &&  inputId.equals( "*   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "*   "))    {    if(inputId!=  null  &&  inputId.equals( "*   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	9	None	add
70	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "*   "))  {  if(inputId!=  null  &&  inputId.equals( ".*   "))  {  [CE]  illegal  start  of  expression  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "*   "))  {  if(inputId!=  null  &&  inputId.equals( ".*   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "*   "))    {    if(inputId!=  null  &&  inputId.equals( ".*   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	9	None	add
71	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "*   "))  {  if(inputId  ==  null  &&  inputId.equals( "*   "))  {  [CE]  illegal  start  of  expression  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "*   "))  {  if(inputId  ==  null  &&  inputId.equals( "*   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "*   "))    {    if(inputId  ==  null  &&  inputId.equals( "*   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	9	None	add
72	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "*   "))  {  If(inputId!=  null  &&  inputId.equals( "*   "))  {  [CE]  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "*   "))  {  If(inputId!=  null  &&  inputId.equals( "*   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "*   "))    {    If(inputId!=  null  &&  inputId.equals( "*   "))  {	  timeout    	non-compiled	[CE]  	9	None	add
73	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "*   "))  {  if(inputId  >=  null  &&  inputId.equals( "*   "))  {  [CE]  illegal  start  of  expression  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "*   "))  {  if(inputId  >=  null  &&  inputId.equals( "*   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "*   "))    {    if(inputId  >=  null  &&  inputId.equals( "*   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	9	None	add
74	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "*   "))  {  if(inputId!=  null  &&  inputId.equals( "))  {  [CE]  unclosed  string  literal  [FE]                              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "*   "))  {  if(inputId!=  null  &&  inputId.equals( "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "*   "))    {    if(inputId!=  null  &&  inputId.equals( "))  {	  timeout    	non-compiled	[CE]  unclosed  string  literal	9	None	add
75	[BUG]  [BUGGY]  if(unknownException.getMessage()!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  unknownException  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.getMessage()!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.getMessage()!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(inputId!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	45	None	replace
76	[BUG]  [BUGGY]  if(inputId  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  Feature  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(inputId!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	45	None	replace
77	[BUG]  [BUGGY]  if(unexpectedException!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  Feature  [FE]                              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(inputId!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	45	None	replace
78	[BUG]  [BUGGY]  if(unknownException!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  unknownException  [FE]                                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(inputId!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	45	None	replace
79	[BUG]  [BUGGY]  if(unknownException!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM,  message))  {  [CE]  cannot  find  symbol  unknownException  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM,  message))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM,  message))  {	  if(unknownException!=    null    &&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	139	None	replace
80	[BUG]  [BUGGY]  if(unknownException!=  null  &&  isEnabled(Feature.CLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  unknownException  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException!=  null  &&  isEnabled(Feature.CLUSH_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  &&  isEnabled(Feature.CLUSH_PASSED_TO_STREAM))  {	  if(unknownException!=    null    &&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	139	None	replace
81	[BUG]  [BUGGY]  if(exception!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  exception  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(exception!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(exception!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(unknownException!=    null    &&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  exception	139	None	replace
82	[BUG]  [BUGGY]  if(inputId!=  null  ||  message.length()  ==  0)  {  if(inputId!=  null  ||  message.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  ||  message.length()  ==  0)  {  if(inputId!=  null  ||  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    ||    message.length()    ==    0)    {    if(inputId!=  null  ||  message.length()  ==  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	95	None	add
83	[BUG]  [BUGGY]  if(inputId!=  null  ||  message.length()  ==  0)  {  if(inputId  ==  null  ||  message.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  ||  message.length()  ==  0)  {  if(inputId  ==  null  ||  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    ||    message.length()    ==    0)    {    if(inputId  ==  null  ||  message.length()  ==  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	95	None	add
84	[BUG]  [BUGGY]  if(inputId!=  null  ||  message.length()  ==  0)  {  if(inputId  >=  null  ||  message.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  ||  message.length()  ==  0)  {  if(inputId  >=  null  ||  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    ||    message.length()    ==    0)    {    if(inputId  >=  null  ||  message.length()  ==  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	95	None	add
85	[BUG]  [BUGGY]  if(inputId!=  null  ||  message.length()  ==  0)  {  If(inputId!=  null  ||  message.length()  ==  0)  {  [CE]  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  ||  message.length()  ==  0)  {  If(inputId!=  null  ||  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    ||    message.length()    ==    0)    {    If(inputId!=  null  ||  message.length()  ==  0)  {	  timeout    	non-compiled	[CE]  	95	None	add
86	[BUG]  [BUGGY]  if(inputId!=  null  ||  message.length()  ==  0)  {  if(inputId!=  null  ||  message.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  ||  message.length()  ==  0)  {  if(inputId!=  null  ||  message.length()  >=  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    ||    message.length()    ==    0)    {    if(inputId!=  null  ||  message.length()  >=  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	95	None	add
87	[BUG]  [BUGGY]  if(inputId!=  null  ||  message.length()  ==  0)  {  if(inputId  >>  null  ||  message.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  ||  message.length()  ==  0)  {  if(inputId  >>  null  ||  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    ||    message.length()    ==    0)    {    if(inputId  >>  null  ||  message.length()  ==  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	95	None	add
88	[BUG]  [BUGGY]  if(unknownException.equals( " "))  {  [CE]  cannot  find  symbol  unknownException  [FE]            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.equals( " "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.equals( " "))  {	  if(inputId!=    null    &&    inputId.equals(       "       "))    {    if(inputId!=    null    &&    inputId.equals(   ",       "))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	114	None	replace
89	[BUG]  [BUGGY]  timeout  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.equals( " "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException.equals( " "))  {	  if(inputId!=    null    &&    inputId.equals(       "       "))    {    if(inputId!=    null    &&    inputId.equals(   ",       "))    {    	compilable	timeout	114	1	replace
90	[BUG]  [BUGGY]  if(unexpectedException.equals( " "))  {  timeout  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.equals( " "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.equals( " "))  {	  if(inputId!=    null    &&    inputId.equals(       "       "))    {    if(inputId!=    null    &&    inputId.equals(   ",       "))    {    	compilable	timeout	114	1	replace
91	[BUG]  [BUGGY]  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.equals(message))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException.equals(message))  {	  if(inputId!=    null    &&    inputId.equals(       "       "))    {    if(inputId!=    null    &&    inputId.equals(   ",       "))    {    	compilable	timeout	114	1	replace
92	[BUG]  [BUGGY]  if(unexpectedException.equals(message))  {  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.equals(message))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.equals(message))  {	  if(inputId!=    null    &&    inputId.equals(       "       "))    {    if(inputId!=    null    &&    inputId.equals(   ",       "))    {    	compilable	timeout	114	1	replace
93	[BUG]  [BUGGY]  if(unexpectedException.equals(message)&&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  Feature  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.equals(message)&&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.equals(message)&&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(unknownException.equals(message)&&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	148	None	replace
94	[BUG]  [BUGGY]  if(message.equals(unknownException)&&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  unknownException  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message.equals(unknownException)&&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message.equals(unknownException)&&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(unknownException.equals(message)&&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	148	None	replace
95	[BUG]  [BUGGY]  if(message.equals(message)&&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  Feature  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message.equals(message)&&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message.equals(message)&&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(unknownException.equals(message)&&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	148	None	replace
96	[BUG]  [BUGGY]  if(message.equals( "unknownException ")&&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  Feature  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message.equals( "unknownException ")&&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message.equals( "unknownException ")&&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(unknownException.equals(message)&&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	148	None	replace
97	[BUG]  [BUGGY]  if(message.equals(UNKNOWN_SOURCE)&&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  UNKNOWN_SOURCE  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message.equals(UNKNOWN_SOURCE)&&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message.equals(UNKNOWN_SOURCE)&&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(unknownException.equals(message)&&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_SOURCE	148	None	replace
98	[BUG]  [BUGGY]  if(exception.equals(message)&&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  exception  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(exception.equals(message)&&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(exception.equals(message)&&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(unknownException.equals(message)&&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  exception	148	None	replace
99	[BUG]  [BUGGY]  if(unexpectedException.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  Feature  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException.equals(message)&&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	141	None	replace
100	[BUG]  [BUGGY]  if(message.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  Feature  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException.equals(message)&&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	141	None	replace
101	[BUG]  [BUGGY]  if(message.equals(unknownException)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  unknownException  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message.equals(unknownException)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message.equals(unknownException)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException.equals(message)&&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	141	None	replace
102	[BUG]  [BUGGY]  if(message.equals( "unknownException ")&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  Feature  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message.equals( "unknownException ")&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message.equals( "unknownException ")&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException.equals(message)&&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	141	None	replace
103	[BUG]  [BUGGY]  if(message.equals(UNKNOWN_SOURCE)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  UNKNOWN_SOURCE  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message.equals(UNKNOWN_SOURCE)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message.equals(UNKNOWN_SOURCE)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException.equals(message)&&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_SOURCE	141	None	replace
104	[BUG]  [BUGGY]  if(exception.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  exception  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(exception.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(exception.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException.equals(message)&&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  exception	141	None	replace
105	[BUG]  [BUGGY]  if(inputId!=  null  ||  inputId.equals(   "     "))  {  if(inputId!=  null  ||  inputId.equals( "   "))  {  [CE]  illegal  start  of  expression  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  ||  inputId.equals(   "     "))  {  if(inputId!=  null  ||  inputId.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    ||    inputId.equals(   "       "))    {    if(inputId!=  null  ||  inputId.equals( "   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	7	None	add
106	[BUG]  [BUGGY]  if(inputId!=  null  ||  inputId.equals(   "     "))  {  if(inputId!=  null  ||  inputId.equals( ".   "))  {  [CE]  illegal  start  of  expression  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  ||  inputId.equals(   "     "))  {  if(inputId!=  null  ||  inputId.equals( ".   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    ||    inputId.equals(   "       "))    {    if(inputId!=  null  ||  inputId.equals( ".   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	7	None	add
107	[BUG]  [BUGGY]  if(inputId!=  null  ||  inputId.equals(   "     "))  {  if(inputId  ==  null  ||  inputId.equals( "   "))  {  [CE]  illegal  start  of  expression  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  ||  inputId.equals(   "     "))  {  if(inputId  ==  null  ||  inputId.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    ||    inputId.equals(   "       "))    {    if(inputId  ==  null  ||  inputId.equals( "   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	7	None	add
108	[BUG]  [BUGGY]  if(inputId!=  null  ||  inputId.equals(   "     "))  {  if(inputId!=  null  ||  inputId.equals( "))  {  [CE]  unclosed  string  literal  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  ||  inputId.equals(   "     "))  {  if(inputId!=  null  ||  inputId.equals( "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    ||    inputId.equals(   "       "))    {    if(inputId!=  null  ||  inputId.equals( "))  {	  timeout    	non-compiled	[CE]  unclosed  string  literal	7	None	add
109	[BUG]  [BUGGY]  if(inputId!=  null  ||  inputId.equals(   "     "))  {  if(inputId  >=  null  ||  inputId.equals( "   "))  {  [CE]  illegal  start  of  expression  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  ||  inputId.equals(   "     "))  {  if(inputId  >=  null  ||  inputId.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    ||    inputId.equals(   "       "))    {    if(inputId  >=  null  ||  inputId.equals( "   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	7	None	add
110	[BUG]  [BUGGY]  if(inputId!=  null  ||  inputId.equals(   "     "))  {  If(inputId!=  null  ||  inputId.equals( "   "))  {  [CE]  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  ||  inputId.equals(   "     "))  {  If(inputId!=  null  ||  inputId.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    ||    inputId.equals(   "       "))    {    If(inputId!=  null  ||  inputId.equals( "   "))  {	  timeout    	non-compiled	[CE]  	7	None	add
111	[BUG]  [BUGGY]  timeout  [FE]            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  ||  inputId.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId  ==  null  ||  inputId.equals( "   "))  {	  if(inputId    ==    null    &&    inputId.equals(   "   "))    {    timeout    	compilable	timeout	124	1	replace
112	[BUG]  [BUGGY]  if(inputId  ==  null  ||  inputId.equals( "   "))  {  timeout  [FE]            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  ||  inputId.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId  ==  null  ||  inputId.equals( "   "))  {	  if(inputId    ==    null    &&    inputId.equals(   "   "))    {    timeout    	compilable	timeout	124	1	replace
113	[BUG]  [BUGGY]  if(included  ||  curNode!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  included  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(included  ||  curNode!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(included  ||  curNode!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(included    ||    inputId!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  included	147	None	replace
114	[BUG]  [BUGGY]  if(includes  ||  curNode!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  includes  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includes  ||  curNode!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includes  ||  curNode!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(included    ||    inputId!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  includes	147	None	replace
115	[BUG]  [BUGGY]  if(included  ||  sourceName!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  included  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(included  ||  sourceName!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(included  ||  sourceName!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(included    ||    inputId!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  included	147	None	replace
116	[BUG]  [BUGGY]  if(included  ||  message!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  included  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(included  ||  message!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(included  ||  message!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(included    ||    inputId!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  included	147	None	replace
117	[BUG]  [BUGGY]  if(included  ||  parent!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  included  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(included  ||  parent!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(included  ||  parent!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(included    ||    inputId!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  included	147	None	replace
118	[BUG]  [BUGGY]  if(included  ||  curNode  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  included  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(included  ||  curNode  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(included  ||  curNode  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(included    ||    inputId!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  included	147	None	replace
119	[BUG]  [BUGGY]  message  =  unexpectedException.getMessage()  +   "n "  +  formatNodeContext( "Node   ",  curNode)  +  (curNode  ==  null?   "   "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [CE]  <identifier>  expected  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  message  =  unexpectedException.getMessage()  +   "n "  +  formatNodeContext( "Node   ",  curNode)  +  (curNode  ==  null?   "   "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	message  =  unexpectedException.getMessage()  +   "n "  +  formatNodeContext( "Node   ",  curNode)  +  (curNode  ==  null?   "   "  :  formatNodeContext( "Parent   ",  curNode.getParent()));	  if(unexpectedException.getMessage()!=    null)    {    if(unexpectedException.getMessage()!=    null)    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
120	[BUG]  [BUGGY]  Node  curNode  =  cb.next();  [CE]  <identifier>  expected  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  cb.next();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  cb.next();	  Node    curNode    =    cb.getCurrentNode();    	non-compiled	[CE]  <identifier>  expected	146	None	replace
121	[BUG]  [BUGGY]  Node  curNode  =  cb.getNext();  [CE]  <identifier>  expected  [FE]                              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  cb.getNext();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  cb.getNext();	  Node    curNode    =    cb.getCurrentNode();    	non-compiled	[CE]  <identifier>  expected	146	None	replace
122	[BUG]  [BUGGY]  Node  curNode  =  cb.getLastChild();  [CE]  <identifier>  expected  [FE]                                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  cb.getLastChild();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  cb.getLastChild();	  Node    curNode    =    cb.getCurrentNode();    	non-compiled	[CE]  <identifier>  expected	146	None	replace
123	[BUG]  [BUGGY]  Node  curNode  =  cb.node();  [CE]  <identifier>  expected  [FE]                                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  cb.node();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  cb.node();	  Node    curNode    =    cb.getCurrentNode();    	non-compiled	[CE]  <identifier>  expected	146	None	replace
124	[BUG]  [BUGGY]  Node  curNode  =  cb.getCurrentNode()  +  1;  [CE]  <identifier>  expected  [FE]                                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  cb.getCurrentNode()  +  1;  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  cb.getCurrentNode()  +  1;	  Node    curNode    =    cb.getCurrentNode();    	non-compiled	[CE]  <identifier>  expected	146	None	replace
125	[BUG]  [BUGGY]  message  =  unexpectedException.getMessage()  +   "n "  +  formatNodeContext( "Node   ",  curNode)  +  (curNode!=  null?   "   "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [CE]  <identifier>  expected  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  message  =  unexpectedException.getMessage()  +   "n "  +  formatNodeContext( "Node   ",  curNode)  +  (curNode!=  null?   "   "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	message  =  unexpectedException.getMessage()  +   "n "  +  formatNodeContext( "Node   ",  curNode)  +  (curNode!=  null?   "   "  :  formatNodeContext( "Parent   ",  curNode.getParent()));	  if(unexpectedException.getMessage()!=    null)    {    If(unexpectedException.getMessage()!=    null)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
126	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "-   "))  {  if(inputId!=  null  &&  inputId.equals( "-   "))  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "-   "))  {  if(inputId!=  null  &&  inputId.equals( "-   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "-   "))    {    if(inputId!=  null  &&  inputId.equals( "-   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	155	None	add
127	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "-   "))  {  if(inputId!=  null  &&  inputId.equals( ".-   "))  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "-   "))  {  if(inputId!=  null  &&  inputId.equals( ".-   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "-   "))    {    if(inputId!=  null  &&  inputId.equals( ".-   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	155	None	add
128	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "-   "))  {  if(inputId  ==  null  &&  inputId.equals( "-   "))  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "-   "))  {  if(inputId  ==  null  &&  inputId.equals( "-   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "-   "))    {    if(inputId  ==  null  &&  inputId.equals( "-   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	155	None	add
129	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "-   "))  {  If(inputId!=  null  &&  inputId.equals( "-   "))  {  [CE]  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "-   "))  {  If(inputId!=  null  &&  inputId.equals( "-   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "-   "))    {    If(inputId!=  null  &&  inputId.equals( "-   "))  {	  timeout    	non-compiled	[CE]  	155	None	add
130	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "-   "))  {  if(inputId  >=  null  &&  inputId.equals( "-   "))  {  [CE]  illegal  start  of  expression  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "-   "))  {  if(inputId  >=  null  &&  inputId.equals( "-   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "-   "))    {    if(inputId  >=  null  &&  inputId.equals( "-   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	155	None	add
131	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "-   "))  {  if(inputId!=  null  &&  inputId.equals( "))  {  [CE]  unclosed  string  literal  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "-   "))  {  if(inputId!=  null  &&  inputId.equals( "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "-   "))    {    if(inputId!=  null  &&  inputId.equals( "))  {	  timeout    	non-compiled	[CE]  unclosed  string  literal	155	None	add
132	[BUG]  [BUGGY]  if(curNode  ==  null?   "   "  :  formatNodeContext( "Node   ",  curNode)  +  (curNode!=  null?   "   "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [CE]  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode  ==  null?   "   "  :  formatNodeContext( "Node   ",  curNode)  +  (curNode!=  null?   "   "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode  ==  null?   "   "  :  formatNodeContext( "Node   ",  curNode)  +  (curNode!=  null?   "   "  :  formatNodeContext( "Parent   ",  curNode.getParent()));	  if(unexpectedException.getMessage()    ==    null)    {    timeout    	non-compiled	[CE]  	106	None	replace
133	[BUG]  [BUGGY]  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  inputId.equals( "n "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException.getMessage()!=  null  &&  inputId.equals( "n "))  {	  if(unexpectedException.getMessage()!=    null    &&    inputId.equals(   "       "))    {    timeout    	compilable	timeout	6	1	replace
134	[BUG]  [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  inputId.equals( "n "))  {  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  inputId.equals( "n "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()!=  null  &&  inputId.equals( "n "))  {	  if(unexpectedException.getMessage()!=    null    &&    inputId.equals(   "       "))    {    timeout    	compilable	timeout	6	1	replace
135	[BUG]  [BUGGY]  timeout  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  message.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException.getMessage()!=  null  &&  message.equals( "   "))  {	  if(unexpectedException.getMessage()!=    null    &&    inputId.equals(   "       "))    {    timeout    	compilable	timeout	6	1	replace
136	[BUG]  [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  message.equals( "   "))  {  timeout  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  message.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()!=  null  &&  message.equals( "   "))  {	  if(unexpectedException.getMessage()!=    null    &&    inputId.equals(   "       "))    {    timeout    	compilable	timeout	6	1	replace
137	[BUG]  [BUGGY]  timeout  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()!=  null  ||  inputId.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException.getMessage()!=  null  ||  inputId.equals( "   "))  {	  if(unexpectedException.getMessage()!=    null    &&    inputId.equals(   "       "))    {    timeout    	compilable	timeout	6	1	replace
138	[BUG]  [BUGGY]  if(unexpectedException.getMessage()!=  null  ||  inputId.equals( "   "))  {  timeout  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()!=  null  ||  inputId.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()!=  null  ||  inputId.equals( "   "))  {	  if(unexpectedException.getMessage()!=    null    &&    inputId.equals(   "       "))    {    timeout    	compilable	timeout	6	1	replace
139	[BUG]  [BUGGY]  timeout  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  inputId.equals( "* "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException.getMessage()!=  null  &&  inputId.equals( "* "))  {	  if(unexpectedException.getMessage()!=    null    &&    inputId.equals(   "       "))    {    timeout    	compilable	timeout	6	1	replace
140	[BUG]  [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  inputId.equals( "* "))  {  timeout  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  inputId.equals( "* "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()!=  null  &&  inputId.equals( "* "))  {	  if(unexpectedException.getMessage()!=    null    &&    inputId.equals(   "       "))    {    timeout    	compilable	timeout	6	1	replace
141	[BUG]  [BUGGY]  if(inputId.equals(message)&&  message!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  Feature  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId.equals(message)&&  message!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId.equals(message)&&  message!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException.equals(message)&&    inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	140	None	replace
142	[BUG]  [BUGGY]  if(unknownException.equals(message)&&  curNode!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  unknownException  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.equals(message)&&  curNode!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.equals(message)&&  curNode!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException.equals(message)&&    inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	140	None	replace
143	[BUG]  [BUGGY]  if(message.equals(message)&&  curNode!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  Feature  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message.equals(message)&&  curNode!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message.equals(message)&&  curNode!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException.equals(message)&&    inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	140	None	replace
144	[BUG]  [BUGGY]  if(unexpectedException.equals(message)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  Feature  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.equals(message)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.equals(message)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException.equals(message)&&    inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	140	None	replace
145	[BUG]  [BUGGY]  if(unknownException.equals(message)&&  sourceName!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  unknownException  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.equals(message)&&  sourceName!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.equals(message)&&  sourceName!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException.equals(message)&&    inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	140	None	replace
146	[BUG]  [BUGGY]  if(message.equals(message)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  Feature  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message.equals(message)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message.equals(message)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException.equals(message)&&    inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	140	None	replace
147	[BUG]  [BUGGY]  if(unexpectedException.equals(message)&&  curNode!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  Feature  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.equals(message)&&  curNode!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.equals(message)&&  curNode!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException.equals(message)&&    inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	140	None	replace
148	[BUG]  [BUGGY]  if(curNode!=  null?   "null "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "null "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [CE]  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null?   "null "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "null "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null?   "null "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "null "  :  formatNodeContext( "Parent   ",  curNode.getParent()));	  if(curNode!=    null?       "       "    :    formatNodeContext(   "Node       ",    curNode)    +    (curNode    ==    null?       "       "    :    formatNodeContext(   "Parent       ",    curNode.getParent()));    	non-compiled	[CE]  	71	None	replace
149	[BUG]  [BUGGY]  if(curNode!=  null?   "n "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "n "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [CE]  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null?   "n "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "n "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null?   "n "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "n "  :  formatNodeContext( "Parent   ",  curNode.getParent()));	  if(curNode!=    null?       "       "    :    formatNodeContext(   "Node       ",    curNode)    +    (curNode    ==    null?       "       "    :    formatNodeContext(   "Parent       ",    curNode.getParent()));    	non-compiled	[CE]  	71	None	replace
150	[BUG]  [BUGGY]  if(curNode!=  null?   "NULL "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "NULL "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [CE]  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null?   "NULL "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "NULL "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null?   "NULL "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "NULL "  :  formatNodeContext( "Parent   ",  curNode.getParent()));	  if(curNode!=    null?       "       "    :    formatNodeContext(   "Node       ",    curNode)    +    (curNode    ==    null?       "       "    :    formatNodeContext(   "Parent       ",    curNode.getParent()));    	non-compiled	[CE]  	71	None	replace
151	[BUG]  [BUGGY]  if(node!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  node  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(node!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(node!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(curNode!=    null    &&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  node	100	None	replace
152	[BUG]  [BUGGY]  String  sourceName  =  curNode.getSourceName();  [CE]  <identifier>  expected  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  String  sourceName  =  curNode.getSourceName();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	String  sourceName  =  curNode.getSourceName();	  String    sourceName    =    curNode.getString();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
153	[BUG]  [BUGGY]  String  sourceName  =  curNode.getString()  + "n ";  [CE]  <identifier>  expected  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  String  sourceName  =  curNode.getString()  + "n ";  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	String  sourceName  =  curNode.getString()  + "n ";	  String    sourceName    =    curNode.getString();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
154	[BUG]  [BUGGY]  String  sourceName  =  curNode.getLineno();  [CE]  <identifier>  expected  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  String  sourceName  =  curNode.getLineno();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	String  sourceName  =  curNode.getLineno();	  String    sourceName    =    curNode.getString();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
155	[BUG]  [BUGGY]  String  sourceName  =  curNode.getQualifiedName();  [CE]  <identifier>  expected  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  String  sourceName  =  curNode.getQualifiedName();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	String  sourceName  =  curNode.getQualifiedName();	  String    sourceName    =    curNode.getString();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
156	[BUG]  [BUGGY]  String  sourceName  =  n.getString();  [CE]  <identifier>  expected  [FE]                              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  String  sourceName  =  n.getString();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	String  sourceName  =  n.getString();	  String    sourceName    =    curNode.getString();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
157	[BUG]  [BUGGY]  String  sourceName  =  curNode.getString()  + ";n ";  [CE]  <identifier>  expected  [FE]                                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  String  sourceName  =  curNode.getString()  + ";n ";  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	String  sourceName  =  curNode.getString()  + ";n ";	  String    sourceName    =    curNode.getString();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
158	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isInternalError(message,  sourceName))  {  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isInternalError(message,  sourceName))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isInternalError(message,  sourceName))  {	  if(unexpectedException!=    null    &&    isInternalError(message))    {    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
159	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isInternalError(message,  message))  {  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isInternalError(message,  message))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isInternalError(message,  message))  {	  if(unexpectedException!=    null    &&    isInternalError(message))    {    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
160	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isInternalError(message,  MISSING_SOURCE))  {  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isInternalError(message,  MISSING_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isInternalError(message,  MISSING_SOURCE))  {	  if(unexpectedException!=    null    &&    isInternalError(message))    {    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
161	[BUG]  [BUGGY]  if(message!=  null  &&  isInternalError(message))  {  [CE]  cannot  find  symbol  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message!=  null  &&  isInternalError(message))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message!=  null  &&  isInternalError(message))  {	  if(unexpectedException!=    null    &&    isInternalError(message))    {    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
162	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isInternalError(message,  compiler))  {  [CE]  cannot  find  symbol  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isInternalError(message,  compiler))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isInternalError(message,  compiler))  {	  if(unexpectedException!=    null    &&    isInternalError(message))    {    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
163	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isInternalError(message,  scopeCreator))  {  [CE]  cannot  find  symbol  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isInternalError(message,  scopeCreator))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isInternalError(message,  scopeCreator))  {	  if(unexpectedException!=    null    &&    isInternalError(message))    {    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
164	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM,  message))  {  [CE]  cannot  find  symbol  Feature  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM,  message))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM,  message))  {	  if(unexpectedException!=    null    &&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	85	None	replace
165	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NODE))  {  [CE]  cannot  find  symbol  Feature  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NODE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NODE))  {	  if(unexpectedException!=    null    &&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	85	None	replace
166	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_TO_STREAM))  {  [CE]  cannot  find  symbol  Feature  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_TO_STREAM))  {	  if(unexpectedException!=    null    &&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	85	None	replace
167	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.WARNING_TO_STREAM))  {  [CE]  cannot  find  symbol  Feature  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.WARNING_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.WARNING_TO_STREAM))  {	  if(unexpectedException!=    null    &&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	85	None	replace
168	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  curNode!=  null)  {  if(unexpectedException!=  null  &&  curNode!=  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  curNode!=  null)  {  if(unexpectedException!=  null  &&  curNode!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=    null    &&    curNode!=    null)    {    if(unexpectedException!=  null  &&  curNode!=  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	61	None	add
169	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  curNode!=  null)  {  if(unexpectedException  ==  null  &&  curNode!=  null)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  curNode!=  null)  {  if(unexpectedException  ==  null  &&  curNode!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=    null    &&    curNode!=    null)    {    if(unexpectedException  ==  null  &&  curNode!=  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	61	None	add
170	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  curNode!=  null)  {  if(unexpectedException!=  null  &&  curNode  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  curNode!=  null)  {  if(unexpectedException!=  null  &&  curNode  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=    null    &&    curNode!=    null)    {    if(unexpectedException!=  null  &&  curNode  ==  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	61	None	add
171	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  curNode!=  null)  {  If(unexpectedException!=  null  &&  curNode!=  null)  {  [CE]  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  curNode!=  null)  {  If(unexpectedException!=  null  &&  curNode!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=    null    &&    curNode!=    null)    {    If(unexpectedException!=  null  &&  curNode!=  null)  {	  timeout    	non-compiled	[CE]  	61	None	add
172	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  curNode!=  null)  {  if(unexpectedException!=  null  &&  curNode  >=  null)  {  [CE]  illegal  start  of  expression  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  curNode!=  null)  {  if(unexpectedException!=  null  &&  curNode  >=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=    null    &&    curNode!=    null)    {    if(unexpectedException!=  null  &&  curNode  >=  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	61	None	add
173	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  curNode!=  null)  {  if(unexpectedException  >=  null  &&  curNode!=  null)  {  [CE]  illegal  start  of  expression  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  curNode!=  null)  {  if(unexpectedException  >=  null  &&  curNode!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=    null    &&    curNode!=    null)    {    if(unexpectedException  >=  null  &&  curNode!=  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	61	None	add
174	[BUG]  [BUGGY]  timeout  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  ||  curNode!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId  ==  null  ||  curNode!=  null)  {	  if(inputId    ==    null)    {    if(inputId    ==    null    ||    inputId!=    null)    {    	compilable	timeout	117	1	replace
175	[BUG]  [BUGGY]  if(inputId  ==  null  ||  curNode!=  null)  {  timeout  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  ||  curNode!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId  ==  null  ||  curNode!=  null)  {	  if(inputId    ==    null)    {    if(inputId    ==    null    ||    inputId!=    null)    {    	compilable	timeout	117	1	replace
176	[BUG]  [BUGGY]  timeout  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  ||  inputId!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId  ==  null  ||  inputId!=  null)  {	  if(inputId    ==    null)    {    if(inputId    ==    null    ||    inputId!=    null)    {    	compilable	timeout	117	1	replace
177	[BUG]  [BUGGY]  if(inputId  ==  null  ||  inputId!=  null)  {  timeout  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  ||  inputId!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId  ==  null  ||  inputId!=  null)  {	  if(inputId    ==    null)    {    if(inputId    ==    null    ||    inputId!=    null)    {    	compilable	timeout	117	1	replace
178	[BUG]  [BUGGY]  timeout  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  ||  curNode  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId!=  null  ||  curNode  ==  null)  {	  if(inputId    ==    null)    {    if(inputId    ==    null    ||    inputId!=    null)    {    	compilable	timeout	117	1	replace
179	[BUG]  [BUGGY]  if(inputId!=  null  ||  curNode  ==  null)  {  timeout  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  ||  curNode  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  ||  curNode  ==  null)  {	  if(inputId    ==    null)    {    if(inputId    ==    null    ||    inputId!=    null)    {    	compilable	timeout	117	1	replace
180	[BUG]  [BUGGY]  timeout  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  ||  inputId  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId!=  null  ||  inputId  ==  null)  {	  if(inputId    ==    null)    {    if(inputId    ==    null    ||    inputId!=    null)    {    	compilable	timeout	117	1	replace
181	[BUG]  [BUGGY]  if(inputId!=  null  ||  inputId  ==  null)  {  timeout  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  ||  inputId  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  ||  inputId  ==  null)  {	  if(inputId    ==    null)    {    if(inputId    ==    null    ||    inputId!=    null)    {    	compilable	timeout	117	1	replace
182	[BUG]  [BUGGY]  if(unexpectedException  ==  null)  {  if(unexpectedException  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException  ==  null)  {  if(unexpectedException  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException    ==    null)    {    if(unexpectedException  ==  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	19	None	add
183	[BUG]  [BUGGY]  if(unexpectedException  ==  null)  {  if(unexpectedException!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException  ==  null)  {  if(unexpectedException!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException    ==    null)    {    if(unexpectedException!=  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	19	None	add
184	[BUG]  [BUGGY]  if(unexpectedException  ==  null)  {  If(unexpectedException  ==  null)  {  [CE]  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException  ==  null)  {  If(unexpectedException  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException    ==    null)    {    If(unexpectedException  ==  null)  {	  timeout    	non-compiled	[CE]  	19	None	add
185	[BUG]  [BUGGY]  if(unexpectedException  ==  null)  {  if(unexpectedException  >=  null)  {  [CE]  illegal  start  of  expression  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException  ==  null)  {  if(unexpectedException  >=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException    ==    null)    {    if(unexpectedException  >=  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	19	None	add
186	[BUG]  [BUGGY]  if(unexpectedException  ==  null)  {  If(unexpectedException!=  null)  {  [CE]  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException  ==  null)  {  If(unexpectedException!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException    ==    null)    {    If(unexpectedException!=  null)  {	  timeout    	non-compiled	[CE]  	19	None	add
187	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.MISSING_SOURCE))  {  [CE]  cannot  find  symbol  Feature  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.MISSING_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.MISSING_SOURCE))  {	  if(unexpectedException!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	24	None	replace
188	[BUG]  [BUGGY]  if(unexpectedException  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  Feature  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(unexpectedException!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	24	None	replace
189	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE)||  isEnabled(Feature.MISSING_SOURCE))  {  [CE]  cannot  find  symbol  Feature  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE)||  isEnabled(Feature.MISSING_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE)||  isEnabled(Feature.MISSING_SOURCE))  {	  if(unexpectedException!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	24	None	replace
190	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.EMPTY_STRING_AS_NULL_OBJECT))  {  [CE]  cannot  find  symbol  Feature  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.EMPTY_STRING_AS_NULL_OBJECT))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.EMPTY_STRING_AS_NULL_OBJECT))  {	  if(unexpectedException!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	24	None	replace
191	[BUG]  [BUGGY]  timeout  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  ||  curNode  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException!=  null  ||  curNode  ==  null)  {	  if(unexpectedException!=    null)    {    if(unexpectedException    >>    null)    {    	compilable	timeout	77	1	replace
192	[BUG]  [BUGGY]  if(unexpectedException!=  null  ||  curNode  ==  null)  {  timeout  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  ||  curNode  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  ||  curNode  ==  null)  {	  if(unexpectedException!=    null)    {    if(unexpectedException    >>    null)    {    	compilable	timeout	77	1	replace
193	[BUG]  [BUGGY]  Node  curNode  =  cfgs.getScopeRoot(n,  parent);  [CE]  <identifier>  expected  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  cfgs.getScopeRoot(n,  parent);  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  cfgs.getScopeRoot(n,  parent);	  Node    curNode    =    cfgs.getScopeRoot(n);    	non-compiled	[CE]  <identifier>  expected	144	None	replace
194	[BUG]  [BUGGY]  Node  curNode  =  cfgs.getScopeRoot(n,  scopeCreator);  [CE]  <identifier>  expected  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  cfgs.getScopeRoot(n,  scopeCreator);  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  cfgs.getScopeRoot(n,  scopeCreator);	  Node    curNode    =    cfgs.getScopeRoot(n);    	non-compiled	[CE]  <identifier>  expected	144	None	replace
195	[BUG]  [BUGGY]  Node  curNode  =  cfgs.getScopeRoot(parent);  [CE]  <identifier>  expected  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  cfgs.getScopeRoot(parent);  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  cfgs.getScopeRoot(parent);	  Node    curNode    =    cfgs.getScopeRoot(n);    	non-compiled	[CE]  <identifier>  expected	144	None	replace
196	[BUG]  [BUGGY]  Node  curNode  =  scopeCreator.getScopeRoot(n);  [CE]  <identifier>  expected  [FE]                              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  scopeCreator.getScopeRoot(n);  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  scopeCreator.getScopeRoot(n);	  Node    curNode    =    cfgs.getScopeRoot(n);    	non-compiled	[CE]  <identifier>  expected	144	None	replace
197	[BUG]  [BUGGY]  Node  curNode  =  cfgs.getScopeRoot(n,  message);  [CE]  <identifier>  expected  [FE]                                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  cfgs.getScopeRoot(n,  message);  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  cfgs.getScopeRoot(n,  message);	  Node    curNode    =    cfgs.getScopeRoot(n);    	non-compiled	[CE]  <identifier>  expected	144	None	replace
198	[BUG]  [BUGGY]  Node  curNode  =  scopes.getScopeRoot(n);  [CE]  <identifier>  expected  [FE]                                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  scopes.getScopeRoot(n);  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  scopes.getScopeRoot(n);	  Node    curNode    =    cfgs.getScopeRoot(n);    	non-compiled	[CE]  <identifier>  expected	144	None	replace
199	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  message))  {  [CE]  cannot  find  symbol  Feature  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  message))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  message))  {	  if(unexpectedException!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	41	None	replace
200	[BUG]  [BUGGY]  if(unexpectedException  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  Feature  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unexpectedException!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	41	None	replace
201	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.WARNING_SOURCE))  {  [CE]  cannot  find  symbol  Feature  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.WARNING_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.WARNING_SOURCE))  {	  if(unexpectedException!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	41	None	replace
202	[BUG]  [BUGGY]  if(curNode.getMessage()  ==  null)  {  [CE]  cannot  find  symbol  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode.getMessage()  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode.getMessage()  ==  null)  {	  if(null.getMessage()!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
203	[BUG]  [BUGGY]  if(null.getMessage()  ==  null)  {  [CE]  <null>  cannot  be  dereferenced  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(null.getMessage()  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(null.getMessage()  ==  null)  {	  if(null.getMessage()!=    null)    {    	non-compiled	[CE]  <null>  cannot  be  dereferenced	32	None	replace
204	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  (curNode  ==  null?   "null "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [CE]  [FE]            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  (curNode  ==  null?   "null "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  (curNode  ==  null?   "null "  :  formatNodeContext( "Parent   ",  curNode.getParent()));	  if(unexpectedException!=    null    &&    (curNode    ==    null?       "       "    :    formatNodeContext(   "Parent       ",    curNode.getParent()));    	non-compiled	[CE]  	161	None	replace
205	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  (curNode  ==  null?   "NULL "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [CE]  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  (curNode  ==  null?   "NULL "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  (curNode  ==  null?   "NULL "  :  formatNodeContext( "Parent   ",  curNode.getParent()));	  if(unexpectedException!=    null    &&    (curNode    ==    null?       "       "    :    formatNodeContext(   "Parent       ",    curNode.getParent()));    	non-compiled	[CE]  	161	None	replace
206	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  (curNode  ==  null?   "n "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [CE]  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  (curNode  ==  null?   "n "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  (curNode  ==  null?   "n "  :  formatNodeContext( "Parent   ",  curNode.getParent()));	  if(unexpectedException!=    null    &&    (curNode    ==    null?       "       "    :    formatNodeContext(   "Parent       ",    curNode.getParent()));    	non-compiled	[CE]  	161	None	replace
207	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  (curNode  ==  null?   " ".  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [CE]  <identifier>  expected  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  (curNode  ==  null?   " ".  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  (curNode  ==  null?   " ".  :  formatNodeContext( "Parent   ",  curNode.getParent()));	  if(unexpectedException!=    null    &&    (curNode    ==    null?       "       "    :    formatNodeContext(   "Parent       ",    curNode.getParent()));    	non-compiled	[CE]  <identifier>  expected	161	None	replace
208	[BUG]  [BUGGY]  Node  curNode  =  cfgs.getCurrentNode(n,  parent);  [CE]  <identifier>  expected  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  cfgs.getCurrentNode(n,  parent);  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  cfgs.getCurrentNode(n,  parent);	  Node    curNode    =    cfgs.getCurrentNode(n);    	non-compiled	[CE]  <identifier>  expected	112	None	replace
209	[BUG]  [BUGGY]  Node  curNode  =  cfgs.getCurrentNode(n,  message);  [CE]  <identifier>  expected  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  cfgs.getCurrentNode(n,  message);  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  cfgs.getCurrentNode(n,  message);	  Node    curNode    =    cfgs.getCurrentNode(n);    	non-compiled	[CE]  <identifier>  expected	112	None	replace
210	[BUG]  [BUGGY]  Node  curNode  =  cfgs.getCurrentNode(parent);  [CE]  <identifier>  expected  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  cfgs.getCurrentNode(parent);  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  cfgs.getCurrentNode(parent);	  Node    curNode    =    cfgs.getCurrentNode(n);    	non-compiled	[CE]  <identifier>  expected	112	None	replace
211	[BUG]  [BUGGY]  Node  curNode  =  cfgs.getCurrentNode(n,  scopeCreator);  [CE]  <identifier>  expected  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  cfgs.getCurrentNode(n,  scopeCreator);  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  cfgs.getCurrentNode(n,  scopeCreator);	  Node    curNode    =    cfgs.getCurrentNode(n);    	non-compiled	[CE]  <identifier>  expected	112	None	replace
212	[BUG]  [BUGGY]  Node  curNode  =  cfgs.getCurrentNode(n  +  1);  [CE]  <identifier>  expected  [FE]                              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  cfgs.getCurrentNode(n  +  1);  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  cfgs.getCurrentNode(n  +  1);	  Node    curNode    =    cfgs.getCurrentNode(n);    	non-compiled	[CE]  <identifier>  expected	112	None	replace
213	[BUG]  [BUGGY]  Node  curNode  =  cfgs.getCurrentNode(n,  sourceName);  [CE]  <identifier>  expected  [FE]                                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  cfgs.getCurrentNode(n,  sourceName);  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  cfgs.getCurrentNode(n,  sourceName);	  Node    curNode    =    cfgs.getCurrentNode(n);    	non-compiled	[CE]  <identifier>  expected	112	None	replace
214	[BUG]  [BUGGY]  if(unknownException.getMessage()!=  null  &&  isEnabled(Feature.VISIBILITY_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  unknownException  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.getMessage()!=  null  &&  isEnabled(Feature.VISIBILITY_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.getMessage()!=  null  &&  isEnabled(Feature.VISIBILITY_PASSED_TO_STREAM))  {	  if(inputId!=    null    &&    isEnabled(Feature.VISIBILITY_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	153	None	replace
215	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.VISIBILITY_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  Feature  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.VISIBILITY_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.VISIBILITY_PASSED_TO_STREAM))  {	  if(inputId!=    null    &&    isEnabled(Feature.VISIBILITY_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	153	None	replace
216	[BUG]  [BUGGY]  if(message!=  null  &&  isEnabled(Feature.VISIBILITY_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  Feature  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message!=  null  &&  isEnabled(Feature.VISIBILITY_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message!=  null  &&  isEnabled(Feature.VISIBILITY_PASSED_TO_STREAM))  {	  if(inputId!=    null    &&    isEnabled(Feature.VISIBILITY_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	153	None	replace
217	[BUG]  [BUGGY]  if(unknownException.getMessage()  ==  null  &&  isEnabled(Feature.VISIBILITY_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  unknownException  [FE]                              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.getMessage()  ==  null  &&  isEnabled(Feature.VISIBILITY_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.getMessage()  ==  null  &&  isEnabled(Feature.VISIBILITY_PASSED_TO_STREAM))  {	  if(inputId!=    null    &&    isEnabled(Feature.VISIBILITY_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	153	None	replace
218	[BUG]  [BUGGY]  if(inputId  ==  null  &&  isEnabled(Feature.VISIBILITY_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  Feature  [FE]                                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  &&  isEnabled(Feature.VISIBILITY_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId  ==  null  &&  isEnabled(Feature.VISIBILITY_PASSED_TO_STREAM))  {	  if(inputId!=    null    &&    isEnabled(Feature.VISIBILITY_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	153	None	replace
219	[BUG]  [BUGGY]  if(inputId!=  null  ||  isEnabled(Feature.VISIBILITY_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  Feature  [FE]                                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  ||  isEnabled(Feature.VISIBILITY_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  ||  isEnabled(Feature.VISIBILITY_PASSED_TO_STREAM))  {	  if(inputId!=    null    &&    isEnabled(Feature.VISIBILITY_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	153	None	replace
220	[BUG]  [BUGGY]  if(unknownException!=  null  &&  curNode  ==  null)  {  [CE]  cannot  find  symbol  unknownException  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException!=  null  &&  curNode  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  &&  curNode  ==  null)  {	  if(unknownException    ==    null)    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	93	None	replace
221	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  curNode  ==  null?   "null "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  curNode  ==  null?   "null "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  curNode  ==  null?   "null "  :  formatNodeContext( "Parent   ",  curNode.getParent()));	  if(unexpectedException!=    null    &&    (curNode    ==    null?       "       "    :    formatNodeContext(   "Parent   "),    curNode.getParent()));    	non-compiled	[CE]  <identifier>  expected	163	None	replace
222	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  (curNode  ==  null?   "null "  :  formatNodeContext( "Parent   "),  curNode.getParent()));  [CE]  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  (curNode  ==  null?   "null "  :  formatNodeContext( "Parent   "),  curNode.getParent()));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  (curNode  ==  null?   "null "  :  formatNodeContext( "Parent   "),  curNode.getParent()));	  if(unexpectedException!=    null    &&    (curNode    ==    null?       "       "    :    formatNodeContext(   "Parent   "),    curNode.getParent()));    	non-compiled	[CE]  	163	None	replace
223	[BUG]  [BUGGY]  if(unknownException.getMessage()!=  null  &&  isEnabled(Feature.AUTO_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  unknownException  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.getMessage()!=  null  &&  isEnabled(Feature.AUTO_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.getMessage()!=  null  &&  isEnabled(Feature.AUTO_PASSED_TO_STREAM))  {	  if(inputId!=    null    &&    isEnabled(Feature.AUTO_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	151	None	replace
224	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.AUTO_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  Feature  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.AUTO_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.AUTO_PASSED_TO_STREAM))  {	  if(inputId!=    null    &&    isEnabled(Feature.AUTO_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	151	None	replace
225	[BUG]  [BUGGY]  if(unknownException.getMessage()  ==  null  &&  isEnabled(Feature.AUTO_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  unknownException  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.getMessage()  ==  null  &&  isEnabled(Feature.AUTO_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.getMessage()  ==  null  &&  isEnabled(Feature.AUTO_PASSED_TO_STREAM))  {	  if(inputId!=    null    &&    isEnabled(Feature.AUTO_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	151	None	replace
226	[BUG]  [BUGGY]  if(inputId  ==  null  &&  isEnabled(Feature.AUTO_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  Feature  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  &&  isEnabled(Feature.AUTO_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId  ==  null  &&  isEnabled(Feature.AUTO_PASSED_TO_STREAM))  {	  if(inputId!=    null    &&    isEnabled(Feature.AUTO_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	151	None	replace
227	[BUG]  [BUGGY]  if(inputId!=  null  ||  isEnabled(Feature.AUTO_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  Feature  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  ||  isEnabled(Feature.AUTO_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  ||  isEnabled(Feature.AUTO_PASSED_TO_STREAM))  {	  if(inputId!=    null    &&    isEnabled(Feature.AUTO_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	151	None	replace
228	[BUG]  [BUGGY]  if(message!=  null  &&  isEnabled(Feature.AUTO_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  Feature  [FE]                              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message!=  null  &&  isEnabled(Feature.AUTO_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message!=  null  &&  isEnabled(Feature.AUTO_PASSED_TO_STREAM))  {	  if(inputId!=    null    &&    isEnabled(Feature.AUTO_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	151	None	replace
229	[BUG]  [BUGGY]  if(buNode!=  null)  {  [CE]  cannot  find  symbol  buNode  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(buNode!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(buNode!=  null)  {	  if(node!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  buNode	94	None	replace
230	[BUG]  [BUGGY]  if(curNode  >=  null)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode  >=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode  >=  null)  {	  if(node!=    null)    {    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	94	None	replace
231	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  message.length()  >  0)  {  if(unexpectedException!=  null  &&  message.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  message.length()  >  0)  {  if(unexpectedException!=  null  &&  message.length()  >  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=    null    &&    message.length()    >    0)    {    if(unexpectedException!=  null  &&  message.length()  >  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	64	None	add
232	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  message.length()  >  0)  {  if(unexpectedException  ==  null  &&  message.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  message.length()  >  0)  {  if(unexpectedException  ==  null  &&  message.length()  >  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=    null    &&    message.length()    >    0)    {    if(unexpectedException  ==  null  &&  message.length()  >  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	64	None	add
233	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  message.length()  >  0)  {  If(unexpectedException!=  null  &&  message.length()  >  0)  {  [CE]  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  message.length()  >  0)  {  If(unexpectedException!=  null  &&  message.length()  >  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=    null    &&    message.length()    >    0)    {    If(unexpectedException!=  null  &&  message.length()  >  0)  {	  timeout    	non-compiled	[CE]  	64	None	add
234	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  message.length()  >  0)  {  if(unexpectedException  >=  null  &&  message.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  message.length()  >  0)  {  if(unexpectedException  >=  null  &&  message.length()  >  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=    null    &&    message.length()    >    0)    {    if(unexpectedException  >=  null  &&  message.length()  >  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	64	None	add
235	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  message.length()  >  0)  {  if(unexpectedException  >>  null  &&  message.length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  message.length()  >  0)  {  if(unexpectedException  >>  null  &&  message.length()  >  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=    null    &&    message.length()    >    0)    {    if(unexpectedException  >>  null  &&  message.length()  >  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	64	None	add
236	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  message.length()  >  0)  {  if(unexpectedException  [BUGGY]  null  &&  message.length()  >  0)  {  [CE]  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  message.length()  >  0)  {  if(unexpectedException  [BUGGY]  null  &&  message.length()  >  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=    null    &&    message.length()    >    0)    {    if(unexpectedException  [BUGGY]  null  &&  message.length()  >  0)  {	  timeout    	non-compiled	[CE]  	64	None	add
237	[BUG]  [BUGGY]  if(unknownException.equals( " "))  {  If(inputId!=  null  &&  inputId.equals( "   "))  {  [CE]  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.equals( " "))  {  If(inputId!=  null  &&  inputId.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.equals( " "))  {  If(inputId!=  null  &&  inputId.equals( "   "))  {	  if(inputId!=    null    &&    inputId.equals(       "       "))    {    If(inputId!=    null    &&    inputId.equals(   "       "))    {    	non-compiled	[CE]  	37	None	replace
238	[BUG]  [BUGGY]  If(unexpectedException.getMessage()!=  null  &&  inputId.equals( "   "))  {  [CE]  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  If(unexpectedException.getMessage()!=  null  &&  inputId.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	If(unexpectedException.getMessage()!=  null  &&  inputId.equals( "   "))  {	  if(inputId!=    null    &&    inputId.equals(       "       "))    {    If(inputId!=    null    &&    inputId.equals(   "       "))    {    	non-compiled	[CE]  	37	None	replace
239	[BUG]  [BUGGY]  If(inputId!=  null  &&  inputId.equals( "   "))  {  [CE]  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  If(inputId!=  null  &&  inputId.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	If(inputId!=  null  &&  inputId.equals( "   "))  {	  if(inputId!=    null    &&    inputId.equals(       "       "))    {    If(inputId!=    null    &&    inputId.equals(   "       "))    {    	non-compiled	[CE]  	37	None	replace
240	[BUG]  [BUGGY]  If(unexpectedException.getMessage()  ==  null  &&  inputId.equals( "   "))  {  [CE]  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  If(unexpectedException.getMessage()  ==  null  &&  inputId.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	If(unexpectedException.getMessage()  ==  null  &&  inputId.equals( "   "))  {	  if(inputId!=    null    &&    inputId.equals(       "       "))    {    If(inputId!=    null    &&    inputId.equals(   "       "))    {    	non-compiled	[CE]  	37	None	replace
241	[BUG]  [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  Feature  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(unknownException.getMessage()!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	46	None	replace
242	[BUG]  [BUGGY]  if(node.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  node  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(node.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(node.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(unknownException.getMessage()!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  node	46	None	replace
243	[BUG]  [BUGGY]  if(curNode.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(unknownException.getMessage()!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
244	[BUG]  [BUGGY]  if(buffer.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  buffer  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(buffer.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(buffer.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(unknownException.getMessage()!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  buffer	46	None	replace
245	[BUG]  [BUGGY]  if(scopeCreator.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(scopeCreator.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(scopeCreator.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(unknownException.getMessage()!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
246	[BUG]  [BUGGY]  if(exception.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  exception  [FE]                              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(exception.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(exception.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(unknownException.getMessage()!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  exception	46	None	replace
247	[BUG]  [BUGGY]  timeout  [FE]            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  inputId.equals( "- "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException!=  null  &&  inputId.equals( "- "))  {	  if(inputId!=    null    &&    inputId.equals(   "-   "))    {    timeout    	compilable	timeout	156	1	replace
248	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  inputId.equals( "- "))  {  timeout  [FE]            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  inputId.equals( "- "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  inputId.equals( "- "))  {	  if(inputId!=    null    &&    inputId.equals(   "-   "))    {    timeout    	compilable	timeout	156	1	replace
249	[BUG]  [BUGGY]  timeout  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  inputId.equals( "- "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException.getMessage()!=  null  &&  inputId.equals( "- "))  {	  if(inputId!=    null    &&    inputId.equals(   "-   "))    {    timeout    	compilable	timeout	156	1	replace
250	[BUG]  [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  inputId.equals( "- "))  {  timeout  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  inputId.equals( "- "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()!=  null  &&  inputId.equals( "- "))  {	  if(inputId!=    null    &&    inputId.equals(   "-   "))    {    timeout    	compilable	timeout	156	1	replace
251	[BUG]  [BUGGY]  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  ||  inputId.equals( "- "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId!=  null  ||  inputId.equals( "- "))  {	  if(inputId!=    null    &&    inputId.equals(   "-   "))    {    timeout    	compilable	timeout	156	1	replace
252	[BUG]  [BUGGY]  if(inputId!=  null  ||  inputId.equals( "- "))  {  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  ||  inputId.equals( "- "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  ||  inputId.equals( "- "))  {	  if(inputId!=    null    &&    inputId.equals(   "-   "))    {    timeout    	compilable	timeout	156	1	replace
253	[BUG]  [BUGGY]  timeout  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  &&  inputId.equals( "- "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId  ==  null  &&  inputId.equals( "- "))  {	  if(inputId!=    null    &&    inputId.equals(   "-   "))    {    timeout    	compilable	timeout	156	1	replace
254	[BUG]  [BUGGY]  if(inputId  ==  null  &&  inputId.equals( "- "))  {  timeout  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  &&  inputId.equals( "- "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId  ==  null  &&  inputId.equals( "- "))  {	  if(inputId!=    null    &&    inputId.equals(   "-   "))    {    timeout    	compilable	timeout	156	1	replace
255	[BUG]  [BUGGY]  timeout  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()  ==  null  &&  inputId.equals( "- "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException.getMessage()  ==  null  &&  inputId.equals( "- "))  {	  if(inputId!=    null    &&    inputId.equals(   "-   "))    {    timeout    	compilable	timeout	156	1	replace
256	[BUG]  [BUGGY]  if(unexpectedException.getMessage()  ==  null  &&  inputId.equals( "- "))  {  timeout  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()  ==  null  &&  inputId.equals( "- "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()  ==  null  &&  inputId.equals( "- "))  {	  if(inputId!=    null    &&    inputId.equals(   "-   "))    {    timeout    	compilable	timeout	156	1	replace
257	[BUG]  [BUGGY]  timeout  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals( "- ")||  inputId.equals( "- "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId!=  null  &&  inputId.equals( "- ")||  inputId.equals( "- "))  {	  if(inputId!=    null    &&    inputId.equals(   "-   "))    {    timeout    	compilable	timeout	156	1	replace
258	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals( "- ")||  inputId.equals( "- "))  {  timeout  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals( "- ")||  inputId.equals( "- "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  inputId.equals( "- ")||  inputId.equals( "- "))  {	  if(inputId!=    null    &&    inputId.equals(   "-   "))    {    timeout    	compilable	timeout	156	1	replace
259	[BUG]  [BUGGY]  Node  curNode  =  curNode.getLastChild();  [CE]  <identifier>  expected  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  curNode.getLastChild();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  curNode.getLastChild();	  Node    curNode    =    curNode.getParent();    	non-compiled	[CE]  <identifier>  expected	53	None	replace
260	[BUG]  [BUGGY]  if(exception!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  exception  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(exception!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(exception!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  exception	110	None	replace
261	[BUG]  [BUGGY]  if(unknownException  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  unknownException  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	110	None	replace
262	[BUG]  [BUGGY]  if(unknownException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  message))  {  [CE]  cannot  find  symbol  unknownException  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  message))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  message))  {	  if(unknownException!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	110	None	replace
263	[BUG]  [BUGGY]  if(node!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  node  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(node!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(node!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  node	110	None	replace
264	[BUG]  [BUGGY]  timeout  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  inputId.equals( "* "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException!=  null  &&  inputId.equals( "* "))  {	  if(inputId!=    null    &&    inputId.equals(   "*   "))    {    timeout    	compilable	timeout	10	1	replace
265	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  inputId.equals( "* "))  {  timeout  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  inputId.equals( "* "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  inputId.equals( "* "))  {	  if(inputId!=    null    &&    inputId.equals(   "*   "))    {    timeout    	compilable	timeout	10	1	replace
266	[BUG]  [BUGGY]  timeout  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  ||  inputId.equals( "* "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId!=  null  ||  inputId.equals( "* "))  {	  if(inputId!=    null    &&    inputId.equals(   "*   "))    {    timeout    	compilable	timeout	10	1	replace
267	[BUG]  [BUGGY]  if(inputId!=  null  ||  inputId.equals( "* "))  {  timeout  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  ||  inputId.equals( "* "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  ||  inputId.equals( "* "))  {	  if(inputId!=    null    &&    inputId.equals(   "*   "))    {    timeout    	compilable	timeout	10	1	replace
268	[BUG]  [BUGGY]  timeout  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  &&  inputId.equals( "* "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId  ==  null  &&  inputId.equals( "* "))  {	  if(inputId!=    null    &&    inputId.equals(   "*   "))    {    timeout    	compilable	timeout	10	1	replace
269	[BUG]  [BUGGY]  if(inputId  ==  null  &&  inputId.equals( "* "))  {  timeout  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  &&  inputId.equals( "* "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId  ==  null  &&  inputId.equals( "* "))  {	  if(inputId!=    null    &&    inputId.equals(   "*   "))    {    timeout    	compilable	timeout	10	1	replace
270	[BUG]  [BUGGY]  timeout  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()  ==  null  &&  inputId.equals( "* "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException.getMessage()  ==  null  &&  inputId.equals( "* "))  {	  if(inputId!=    null    &&    inputId.equals(   "*   "))    {    timeout    	compilable	timeout	10	1	replace
271	[BUG]  [BUGGY]  if(unexpectedException.getMessage()  ==  null  &&  inputId.equals( "* "))  {  timeout  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()  ==  null  &&  inputId.equals( "* "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()  ==  null  &&  inputId.equals( "* "))  {	  if(inputId!=    null    &&    inputId.equals(   "*   "))    {    timeout    	compilable	timeout	10	1	replace
272	[BUG]  [BUGGY]  timeout  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals( "* ")||  inputId.equals( "* "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId!=  null  &&  inputId.equals( "* ")||  inputId.equals( "* "))  {	  if(inputId!=    null    &&    inputId.equals(   "*   "))    {    timeout    	compilable	timeout	10	1	replace
273	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals( "* ")||  inputId.equals( "* "))  {  timeout  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals( "* ")||  inputId.equals( "* "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  inputId.equals( "* ")||  inputId.equals( "* "))  {	  if(inputId!=    null    &&    inputId.equals(   "*   "))    {    timeout    	compilable	timeout	10	1	replace
274	[BUG]  [BUGGY]  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  ||  inputId.equals( "/ "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId!=  null  ||  inputId.equals( "/ "))  {	  if(inputId!=    null    &&    inputId.equals(   "/   "))    {    timeout    	compilable	timeout	160	1	replace
275	[BUG]  [BUGGY]  if(inputId!=  null  ||  inputId.equals( "/ "))  {  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  ||  inputId.equals( "/ "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  ||  inputId.equals( "/ "))  {	  if(inputId!=    null    &&    inputId.equals(   "/   "))    {    timeout    	compilable	timeout	160	1	replace
276	[BUG]  [BUGGY]  timeout  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  inputId.equals( "/ "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException!=  null  &&  inputId.equals( "/ "))  {	  if(inputId!=    null    &&    inputId.equals(   "/   "))    {    timeout    	compilable	timeout	160	1	replace
277	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  inputId.equals( "/ "))  {  timeout  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  inputId.equals( "/ "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  inputId.equals( "/ "))  {	  if(inputId!=    null    &&    inputId.equals(   "/   "))    {    timeout    	compilable	timeout	160	1	replace
278	[BUG]  [BUGGY]  timeout  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  inputId.equals( "/ "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException.getMessage()!=  null  &&  inputId.equals( "/ "))  {	  if(inputId!=    null    &&    inputId.equals(   "/   "))    {    timeout    	compilable	timeout	160	1	replace
279	[BUG]  [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  inputId.equals( "/ "))  {  timeout  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  inputId.equals( "/ "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()!=  null  &&  inputId.equals( "/ "))  {	  if(inputId!=    null    &&    inputId.equals(   "/   "))    {    timeout    	compilable	timeout	160	1	replace
280	[BUG]  [BUGGY]  timeout  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  &&  inputId.equals( "/ "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId  ==  null  &&  inputId.equals( "/ "))  {	  if(inputId!=    null    &&    inputId.equals(   "/   "))    {    timeout    	compilable	timeout	160	1	replace
281	[BUG]  [BUGGY]  if(inputId  ==  null  &&  inputId.equals( "/ "))  {  timeout  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  &&  inputId.equals( "/ "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId  ==  null  &&  inputId.equals( "/ "))  {	  if(inputId!=    null    &&    inputId.equals(   "/   "))    {    timeout    	compilable	timeout	160	1	replace
282	[BUG]  [BUGGY]  timeout  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()  ==  null  &&  inputId.equals( "/ "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException.getMessage()  ==  null  &&  inputId.equals( "/ "))  {	  if(inputId!=    null    &&    inputId.equals(   "/   "))    {    timeout    	compilable	timeout	160	1	replace
283	[BUG]  [BUGGY]  if(unexpectedException.getMessage()  ==  null  &&  inputId.equals( "/ "))  {  timeout  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()  ==  null  &&  inputId.equals( "/ "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()  ==  null  &&  inputId.equals( "/ "))  {	  if(inputId!=    null    &&    inputId.equals(   "/   "))    {    timeout    	compilable	timeout	160	1	replace
284	[BUG]  [BUGGY]  Node  curNode  =  nodeTypes.get(null);  [CE]  <identifier>  expected  [FE]                                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  nodeTypes.get(null);  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  nodeTypes.get(null);	  Node    curNode    =    nodeTypes.get(message);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
285	[BUG]  [BUGGY]  Node  curNode  =  nodeTypes.get(message  +  1);  [CE]  <identifier>  expected  [FE]                                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  nodeTypes.get(message  +  1);  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  nodeTypes.get(message  +  1);	  Node    curNode    =    nodeTypes.get(message);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
286	[BUG]  [BUGGY]  Node  curNode  =  nodeTypes.get(nodeType);  [CE]  <identifier>  expected  [FE]                                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  nodeTypes.get(nodeType);  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  nodeTypes.get(nodeType);	  Node    curNode    =    nodeTypes.get(message);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
287	[BUG]  [BUGGY]  Node  curNode  =  nodeTypes.get(message).toString();  [CE]  <identifier>  expected  [FE]                                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  nodeTypes.get(message).toString();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  nodeTypes.get(message).toString();	  Node    curNode    =    nodeTypes.get(message);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
288	[BUG]  [BUGGY]  Node  curNode  =  nodeTypes.get(MISSING_SOURCE);  [CE]  <identifier>  expected  [FE]                                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  nodeTypes.get(MISSING_SOURCE);  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  nodeTypes.get(MISSING_SOURCE);	  Node    curNode    =    nodeTypes.get(message);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
289	[BUG]  [BUGGY]  Node  curNode  =  nodeTypes.get(cb);  [CE]  <identifier>  expected  [FE]                                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  nodeTypes.get(cb);  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  nodeTypes.get(cb);	  Node    curNode    =    nodeTypes.get(message);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
290	[BUG]  [BUGGY]  timeout  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()  ==  null  ||  inputId.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException.getMessage()  ==  null  ||  inputId.equals( "   "))  {	  if(unexpectedException.getMessage()    ==    null    &&    inputId.equals(   "       "))    {    timeout    	compilable	timeout	12	1	replace
291	[BUG]  [BUGGY]  if(unexpectedException.getMessage()  ==  null  ||  inputId.equals( "   "))  {  timeout  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()  ==  null  ||  inputId.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()  ==  null  ||  inputId.equals( "   "))  {	  if(unexpectedException.getMessage()    ==    null    &&    inputId.equals(   "       "))    {    timeout    	compilable	timeout	12	1	replace
292	[BUG]  [BUGGY]  timeout  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()  ==  null  &&  inputId.equals( "n "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException.getMessage()  ==  null  &&  inputId.equals( "n "))  {	  if(unexpectedException.getMessage()    ==    null    &&    inputId.equals(   "       "))    {    timeout    	compilable	timeout	12	1	replace
293	[BUG]  [BUGGY]  if(unexpectedException.getMessage()  ==  null  &&  inputId.equals( "n "))  {  timeout  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()  ==  null  &&  inputId.equals( "n "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()  ==  null  &&  inputId.equals( "n "))  {	  if(unexpectedException.getMessage()    ==    null    &&    inputId.equals(   "       "))    {    timeout    	compilable	timeout	12	1	replace
294	[BUG]  [BUGGY]  timeout  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()  ==  null  &&  message.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException.getMessage()  ==  null  &&  message.equals( "   "))  {	  if(unexpectedException.getMessage()    ==    null    &&    inputId.equals(   "       "))    {    timeout    	compilable	timeout	12	1	replace
295	[BUG]  [BUGGY]  if(unexpectedException.getMessage()  ==  null  &&  message.equals( "   "))  {  timeout  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()  ==  null  &&  message.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()  ==  null  &&  message.equals( "   "))  {	  if(unexpectedException.getMessage()    ==    null    &&    inputId.equals(   "       "))    {    timeout    	compilable	timeout	12	1	replace
296	[BUG]  [BUGGY]  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message!=  null  ||  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(message!=  null  ||  message.length()  ==  0)  {	  if(inputId!=    null    ||    message.length()    ==    0)    {    timeout    	compilable	timeout	96	1	replace
297	[BUG]  [BUGGY]  if(message!=  null  ||  message.length()  ==  0)  {  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message!=  null  ||  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message!=  null  ||  message.length()  ==  0)  {	  if(inputId!=    null    ||    message.length()    ==    0)    {    timeout    	compilable	timeout	96	1	replace
298	[BUG]  [BUGGY]  timeout  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message  ==  null  ||  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(message  ==  null  ||  message.length()  ==  0)  {	  if(inputId!=    null    ||    message.length()    ==    0)    {    timeout    	compilable	timeout	96	1	replace
299	[BUG]  [BUGGY]  if(message  ==  null  ||  message.length()  ==  0)  {  timeout  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message  ==  null  ||  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message  ==  null  ||  message.length()  ==  0)  {	  if(inputId!=    null    ||    message.length()    ==    0)    {    timeout    	compilable	timeout	96	1	replace
300	[BUG]  [BUGGY]  if(unknownException.getMessage()!=  null  &&  message.length()  ==  0)  {  [CE]  cannot  find  symbol  unknownException  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.getMessage()!=  null  &&  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.getMessage()!=  null  &&  message.length()  ==  0)  {	  if(inputId!=    null    ||    message.length()    ==    0)    {    timeout    	non-compiled	[CE]  cannot  find  symbol  unknownException	96	None	replace
301	[BUG]  [BUGGY]  timeout  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()  ==  null  &&  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException.getMessage()  ==  null  &&  message.length()  ==  0)  {	  if(inputId!=    null    ||    message.length()    ==    0)    {    timeout    	compilable	timeout	96	1	replace
302	[BUG]  [BUGGY]  if(unexpectedException.getMessage()  ==  null  &&  message.length()  ==  0)  {  timeout  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()  ==  null  &&  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()  ==  null  &&  message.length()  ==  0)  {	  if(inputId!=    null    ||    message.length()    ==    0)    {    timeout    	compilable	timeout	96	1	replace
303	[BUG]  [BUGGY]  if(inputId.equals(message)&&  message!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  Feature  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId.equals(message)&&  message!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId.equals(message)&&  message!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(unknownException.equals(message)&&    inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	129	None	replace
304	[BUG]  [BUGGY]  if(unknownException.equals(message)&&  curNode!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  unknownException  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.equals(message)&&  curNode!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.equals(message)&&  curNode!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(unknownException.equals(message)&&    inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	129	None	replace
305	[BUG]  [BUGGY]  if(message.equals(message)&&  curNode!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  Feature  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message.equals(message)&&  curNode!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message.equals(message)&&  curNode!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(unknownException.equals(message)&&    inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	129	None	replace
306	[BUG]  [BUGGY]  if(message.equals(message)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  Feature  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message.equals(message)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message.equals(message)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(unknownException.equals(message)&&    inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	129	None	replace
307	[BUG]  [BUGGY]  if(unknownException.equals(message)&&  sourceName!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  unknownException  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.equals(message)&&  sourceName!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.equals(message)&&  sourceName!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(unknownException.equals(message)&&    inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	129	None	replace
308	[BUG]  [BUGGY]  if(unexpectedException.equals(message)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  Feature  [FE]                              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.equals(message)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.equals(message)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(unknownException.equals(message)&&    inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	129	None	replace
309	[BUG]  [BUGGY]  if(curNode  ==  null?   "null "  :  formatNodeContext( "Node   ")+  (curNode  ==  null?   "null "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [CE]  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode  ==  null?   "null "  :  formatNodeContext( "Node   ")+  (curNode  ==  null?   "null "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode  ==  null?   "null "  :  formatNodeContext( "Node   ")+  (curNode  ==  null?   "null "  :  formatNodeContext( "Parent   ",  curNode.getParent()));	  if(curNode    ==    null?       "       "    :    formatNodeContext(   "Node   ")+    (curNode    ==    null?       "       "    :    formatNodeContext(   "Parent   "),    curNode.getParent()));    	non-compiled	[CE]  	107	None	replace
310	[BUG]  [BUGGY]  if(curNode  ==  null?   "NULL "  :  formatNodeContext( "Node   ")+  (curNode  ==  null?   "NULL "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [CE]  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode  ==  null?   "NULL "  :  formatNodeContext( "Node   ")+  (curNode  ==  null?   "NULL "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode  ==  null?   "NULL "  :  formatNodeContext( "Node   ")+  (curNode  ==  null?   "NULL "  :  formatNodeContext( "Parent   ",  curNode.getParent()));	  if(curNode    ==    null?       "       "    :    formatNodeContext(   "Node   ")+    (curNode    ==    null?       "       "    :    formatNodeContext(   "Parent   "),    curNode.getParent()));    	non-compiled	[CE]  	107	None	replace
311	[BUG]  [BUGGY]  if(curNode  ==  null?   "null "  :  formatNodeContext( "Node   ")+  (curNode  ==  null?   "null "  :  formatNodeContext( "Parent   "),  curNode.getParent()));  [CE]  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode  ==  null?   "null "  :  formatNodeContext( "Node   ")+  (curNode  ==  null?   "null "  :  formatNodeContext( "Parent   "),  curNode.getParent()));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode  ==  null?   "null "  :  formatNodeContext( "Node   ")+  (curNode  ==  null?   "null "  :  formatNodeContext( "Parent   "),  curNode.getParent()));	  if(curNode    ==    null?       "       "    :    formatNodeContext(   "Node   ")+    (curNode    ==    null?       "       "    :    formatNodeContext(   "Parent   "),    curNode.getParent()));    	non-compiled	[CE]  	107	None	replace
312	[BUG]  [BUGGY]  if(unexpectedException.getMessage()  ==  null?   "n "  :  formatNodeContext( "Node   ")+  (curNode  ==  null?   "n "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [CE]  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()  ==  null?   "n "  :  formatNodeContext( "Node   ")+  (curNode  ==  null?   "n "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()  ==  null?   "n "  :  formatNodeContext( "Node   ")+  (curNode  ==  null?   "n "  :  formatNodeContext( "Parent   ",  curNode.getParent()));	  if(curNode    ==    null?       "       "    :    formatNodeContext(   "Node   ")+    (curNode    ==    null?       "       "    :    formatNodeContext(   "Parent   "),    curNode.getParent()));    	non-compiled	[CE]  	107	None	replace
313	[BUG]  [BUGGY]  if(unexpectedException.getMessage()!=  null?   "n "  :  formatNodeContext( "Node   ")+  (curNode  ==  null?   "n "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [CE]  [FE]                              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()!=  null?   "n "  :  formatNodeContext( "Node   ")+  (curNode  ==  null?   "n "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()!=  null?   "n "  :  formatNodeContext( "Node   ")+  (curNode  ==  null?   "n "  :  formatNodeContext( "Parent   ",  curNode.getParent()));	  if(curNode    ==    null?       "       "    :    formatNodeContext(   "Node   ")+    (curNode    ==    null?       "       "    :    formatNodeContext(   "Parent   "),    curNode.getParent()));    	non-compiled	[CE]  	107	None	replace
314	[BUG]  [BUGGY]  if(curNode  ==  null?   "   "  :  formatNodeContext( "Node   ")+  (curNode  ==  null?   "   "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [CE]  [FE]                                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode  ==  null?   "   "  :  formatNodeContext( "Node   ")+  (curNode  ==  null?   "   "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode  ==  null?   "   "  :  formatNodeContext( "Node   ")+  (curNode  ==  null?   "   "  :  formatNodeContext( "Parent   ",  curNode.getParent()));	  if(curNode    ==    null?       "       "    :    formatNodeContext(   "Node   ")+    (curNode    ==    null?       "       "    :    formatNodeContext(   "Parent   "),    curNode.getParent()));    	non-compiled	[CE]  	107	None	replace
315	[BUG]  [BUGGY]  if(unexpectedException.equals(message)&&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  Feature  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.equals(message)&&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.equals(message)&&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(unknownException.equals(message)&&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	99	None	replace
316	[BUG]  [BUGGY]  if(message.equals(message)&&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  Feature  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message.equals(message)&&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message.equals(message)&&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(unknownException.equals(message)&&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	99	None	replace
317	[BUG]  [BUGGY]  if(message.equals( "node ")&&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  Feature  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message.equals( "node ")&&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message.equals( "node ")&&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(unknownException.equals(message)&&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	99	None	replace
318	[BUG]  [BUGGY]  if(message.equals( "unknownException ")&&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  Feature  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message.equals( "unknownException ")&&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message.equals( "unknownException ")&&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(unknownException.equals(message)&&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	99	None	replace
319	[BUG]  [BUGGY]  if(message.equals(unknownException)&&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  unknownException  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message.equals(unknownException)&&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message.equals(unknownException)&&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(unknownException.equals(message)&&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	99	None	replace
320	[BUG]  [BUGGY]  if(message.equals(UNKNOWN_SOURCE)&&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  UNKNOWN_SOURCE  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message.equals(UNKNOWN_SOURCE)&&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message.equals(UNKNOWN_SOURCE)&&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(unknownException.equals(message)&&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_SOURCE	99	None	replace
321	[BUG]  [BUGGY]  if(nodeTypes!=  null  &&!included)  {  [CE]  cannot  find  symbol  nodeTypes  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(nodeTypes!=  null  &&!included)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(nodeTypes!=  null  &&!included)  {	  if(unknownException!=    null    &&!included)    {    	non-compiled	[CE]  cannot  find  symbol  nodeTypes	135	None	replace
322	[BUG]  [BUGGY]  if(exception!=  null  &&!included)  {  [CE]  cannot  find  symbol  exception  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(exception!=  null  &&!included)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(exception!=  null  &&!included)  {	  if(unknownException!=    null    &&!included)    {    	non-compiled	[CE]  cannot  find  symbol  exception	135	None	replace
323	[BUG]  [BUGGY]  timeout  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  ||  curNode!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException!=  null  ||  curNode!=  null)  {	  if(unexpectedException!=    null    &&    curNode!=    null)    {    timeout    	compilable	timeout	62	1	replace
324	[BUG]  [BUGGY]  if(unexpectedException!=  null  ||  curNode!=  null)  {  timeout  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  ||  curNode!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  ||  curNode!=  null)  {	  if(unexpectedException!=    null    &&    curNode!=    null)    {    timeout    	compilable	timeout	62	1	replace
325	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  curNode  >=  null)  {  [CE]  bad  operand  types  for  binary  operator  '>='  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  curNode  >=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  curNode  >=  null)  {	  if(unexpectedException!=    null    &&    curNode!=    null)    {    timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>='	62	None	replace
326	[BUG]  [BUGGY]  timeout  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  &&  unexpectedException!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(curNode!=  null  &&  unexpectedException!=  null)  {	  if(unexpectedException!=    null    &&    curNode!=    null)    {    timeout    	compilable	timeout	62	1	replace
327	[BUG]  [BUGGY]  if(curNode!=  null  &&  unexpectedException!=  null)  {  timeout  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  &&  unexpectedException!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null  &&  unexpectedException!=  null)  {	  if(unexpectedException!=    null    &&    curNode!=    null)    {    timeout    	compilable	timeout	62	1	replace
328	[BUG]  [BUGGY]  if(includeException)  {  If(inputId  ==  null)  {  [CE]  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includeException)  {  If(inputId  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includeException)  {  If(inputId  ==  null)  {	  if(inputId    ==    null)    {    If(inputId    ==    null)    {    	non-compiled	[CE]  	80	None	replace
329	[BUG]  [BUGGY]  if(include)  {  If(inputId  ==  null)  {  [CE]  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(include)  {  If(inputId  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(include)  {  If(inputId  ==  null)  {	  if(inputId    ==    null)    {    If(inputId    ==    null)    {    	non-compiled	[CE]  	80	None	replace
330	[BUG]  [BUGGY]  if(inputId!=  null)  {  If(inputId  ==  null)  {  [CE]  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null)  {  If(inputId  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null)  {  If(inputId  ==  null)  {	  if(inputId    ==    null)    {    If(inputId    ==    null)    {    	non-compiled	[CE]  	80	None	replace
331	[BUG]  [BUGGY]  if(message  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  Feature  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(inputId    ==    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	43	None	replace
332	[BUG]  [BUGGY]  String  sourceName  =  cb.getSourceName()  + "n ";  [CE]  <identifier>  expected  [FE]                              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  String  sourceName  =  cb.getSourceName()  + "n ";  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	String  sourceName  =  cb.getSourceName()  + "n ";	  String    sourceName    =    cb.getSourceName();    	non-compiled	[CE]  <identifier>  expected	56	None	replace
333	[BUG]  [BUGGY]  String  sourceName  =  cb.getSourceName()  + ";n ";  [CE]  <identifier>  expected  [FE]                                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  String  sourceName  =  cb.getSourceName()  + ";n ";  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	String  sourceName  =  cb.getSourceName()  + ";n ";	  String    sourceName    =    cb.getSourceName();    	non-compiled	[CE]  <identifier>  expected	56	None	replace
334	[BUG]  [BUGGY]  String  sourceName  =  cb.getSourcePosition();  [CE]  <identifier>  expected  [FE]                                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  String  sourceName  =  cb.getSourcePosition();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	String  sourceName  =  cb.getSourcePosition();	  String    sourceName    =    cb.getSourceName();    	non-compiled	[CE]  <identifier>  expected	56	None	replace
335	[BUG]  [BUGGY]  String  sourceName  =  cb.getSourceName()  + ": ";  [CE]  <identifier>  expected  [FE]                                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  String  sourceName  =  cb.getSourceName()  + ": ";  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	String  sourceName  =  cb.getSourceName()  + ": ";	  String    sourceName    =    cb.getSourceName();    	non-compiled	[CE]  <identifier>  expected	56	None	replace
336	[BUG]  [BUGGY]  String  sourceName  =  cb.getSourceName()  + ":n ";  [CE]  <identifier>  expected  [FE]                                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  String  sourceName  =  cb.getSourceName()  + ":n ";  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	String  sourceName  =  cb.getSourceName()  + ":n ";	  String    sourceName    =    cb.getSourceName();    	non-compiled	[CE]  <identifier>  expected	56	None	replace
337	[BUG]  [BUGGY]  if(inputId  ==  null  ||  message.length()  ==  0)  {  if(inputId  ==  null  ||  message.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  ||  message.length()  ==  0)  {  if(inputId  ==  null  ||  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId    ==    null    ||    message.length()    ==    0)    {    if(inputId  ==  null  ||  message.length()  ==  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	97	None	add
338	[BUG]  [BUGGY]  if(inputId  ==  null  ||  message.length()  ==  0)  {  if(inputId!=  null  ||  message.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  ||  message.length()  ==  0)  {  if(inputId!=  null  ||  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId    ==    null    ||    message.length()    ==    0)    {    if(inputId!=  null  ||  message.length()  ==  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	97	None	add
339	[BUG]  [BUGGY]  if(inputId  ==  null  ||  message.length()  ==  0)  {  if(inputId  ==  null  ||  message.length()!=  0)  {  [CE]  illegal  start  of  expression  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  ||  message.length()  ==  0)  {  if(inputId  ==  null  ||  message.length()!=  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId    ==    null    ||    message.length()    ==    0)    {    if(inputId  ==  null  ||  message.length()!=  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	97	None	add
340	[BUG]  [BUGGY]  if(inputId  ==  null  ||  message.length()  ==  0)  {  If(inputId  ==  null  ||  message.length()  ==  0)  {  [CE]  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  ||  message.length()  ==  0)  {  If(inputId  ==  null  ||  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId    ==    null    ||    message.length()    ==    0)    {    If(inputId  ==  null  ||  message.length()  ==  0)  {	  timeout    	non-compiled	[CE]  	97	None	add
341	[BUG]  [BUGGY]  if(inputId  ==  null  ||  message.length()  ==  0)  {  if(inputId  ==  null  ||  message.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  ||  message.length()  ==  0)  {  if(inputId  ==  null  ||  message.length()  >=  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId    ==    null    ||    message.length()    ==    0)    {    if(inputId  ==  null  ||  message.length()  >=  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	97	None	add
342	[BUG]  [BUGGY]  if(inputId  ==  null  ||  message.length()  ==  0)  {  if(inputId  >=  null  ||  message.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  ||  message.length()  ==  0)  {  if(inputId  >=  null  ||  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId    ==    null    ||    message.length()    ==    0)    {    if(inputId  >=  null  ||  message.length()  ==  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	97	None	add
343	[BUG]  [BUGGY]  timeout  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals( ". "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId!=  null  &&  inputId.equals( ". "))  {	  if(inputId!=    null    &&    inputId.equals(       "       "))    {    if(inputId!=    null    &&    inputId.equals(.   "       "))    {    	compilable	timeout	115	1	replace
344	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals( ". "))  {  timeout  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals( ". "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  inputId.equals( ". "))  {	  if(inputId!=    null    &&    inputId.equals(       "       "))    {    if(inputId!=    null    &&    inputId.equals(.   "       "))    {    	compilable	timeout	115	1	replace
345	[BUG]  [BUGGY]  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException  ==  null  &&  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException  ==  null  &&  message.length()  ==  0)  {	  if(unexpectedException!=    null    ||    message.length()    ==    0)    {    timeout    	compilable	timeout	122	1	replace
346	[BUG]  [BUGGY]  if(unexpectedException  ==  null  &&  message.length()  ==  0)  {  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException  ==  null  &&  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException  ==  null  &&  message.length()  ==  0)  {	  if(unexpectedException!=    null    ||    message.length()    ==    0)    {    timeout    	compilable	timeout	122	1	replace
347	[BUG]  [BUGGY]  timeout  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException  ==  null  ||  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException  ==  null  ||  message.length()  ==  0)  {	  if(unexpectedException!=    null    ||    message.length()    ==    0)    {    timeout    	compilable	timeout	122	1	replace
348	[BUG]  [BUGGY]  if(unexpectedException  ==  null  ||  message.length()  ==  0)  {  timeout  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException  ==  null  ||  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException  ==  null  ||  message.length()  ==  0)  {	  if(unexpectedException!=    null    ||    message.length()    ==    0)    {    timeout    	compilable	timeout	122	1	replace
349	[BUG]  [BUGGY]  timeout  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException.getMessage()!=  null  &&  message.length()  ==  0)  {	  if(inputId    ==    null    ||    message.length()    ==    0)    {    timeout    	compilable	timeout	98	1	replace
350	[BUG]  [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  message.length()  ==  0)  {  timeout  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()!=  null  &&  message.length()  ==  0)  {	  if(inputId    ==    null    ||    message.length()    ==    0)    {    timeout    	compilable	timeout	98	1	replace
351	[BUG]  [BUGGY]  timeout  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message  ==  null  ||  message.length()!=  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(message  ==  null  ||  message.length()!=  0)  {	  if(inputId    ==    null    ||    message.length()    ==    0)    {    timeout    	compilable	timeout	98	1	replace
352	[BUG]  [BUGGY]  if(message  ==  null  ||  message.length()!=  0)  {  timeout  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message  ==  null  ||  message.length()!=  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message  ==  null  ||  message.length()!=  0)  {	  if(inputId    ==    null    ||    message.length()    ==    0)    {    timeout    	compilable	timeout	98	1	replace
353	[BUG]  [BUGGY]  if(unknownException.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_TO_STREAM))  {  [CE]  cannot  find  symbol  unknownException  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_TO_STREAM))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	150	None	replace
354	[BUG]  [BUGGY]  if(unknownException.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_TO_STREAM))  {  [CE]  cannot  find  symbol  unknownException  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_TO_STREAM))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	150	None	replace
355	[BUG]  [BUGGY]  if(inputId  ==  null  &&  isEnabled(Feature.QUOTE_TO_STREAM))  {  [CE]  cannot  find  symbol  Feature  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  &&  isEnabled(Feature.QUOTE_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId  ==  null  &&  isEnabled(Feature.QUOTE_TO_STREAM))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	150	None	replace
356	[BUG]  [BUGGY]  if(inputId!=  null  ||  isEnabled(Feature.QUOTE_TO_STREAM))  {  [CE]  cannot  find  symbol  Feature  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  ||  isEnabled(Feature.QUOTE_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  ||  isEnabled(Feature.QUOTE_TO_STREAM))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	150	None	replace
357	[BUG]  [BUGGY]  if(message!=  null  &&  isEnabled(Feature.QUOTE_TO_STREAM))  {  [CE]  cannot  find  symbol  Feature  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message!=  null  &&  isEnabled(Feature.QUOTE_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message!=  null  &&  isEnabled(Feature.QUOTE_TO_STREAM))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	150	None	replace
358	[BUG]  [BUGGY]  if(unknownException!=  null  &&  curNode.length()  >  0)  {  [CE]  cannot  find  symbol  unknownException  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException!=  null  &&  curNode.length()  >  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  &&  curNode.length()  >  0)  {	  if(unknownException!=    null    &&    message.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	136	None	replace
359	[BUG]  [BUGGY]  if(message!=  null  &&  unexpectedException.length()  >  0)  {  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message!=  null  &&  unexpectedException.length()  >  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message!=  null  &&  unexpectedException.length()  >  0)  {	  if(unknownException!=    null    &&    message.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol	136	None	replace
360	[BUG]  [BUGGY]  timeout  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message  ==  null  &&  message.length()  >  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(message  ==  null  &&  message.length()  >  0)  {	  if(unknownException!=    null    &&    message.length()    >    0)    {    	compilable	timeout	136	1	replace
361	[BUG]  [BUGGY]  if(message  ==  null  &&  message.length()  >  0)  {  timeout  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message  ==  null  &&  message.length()  >  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message  ==  null  &&  message.length()  >  0)  {	  if(unknownException!=    null    &&    message.length()    >    0)    {    	compilable	timeout	136	1	replace
362	[BUG]  [BUGGY]  if(message!=  null  &&  curNode.length()  >  0)  {  [CE]  cannot  find  symbol  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message!=  null  &&  curNode.length()  >  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message!=  null  &&  curNode.length()  >  0)  {	  if(unknownException!=    null    &&    message.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol	136	None	replace
363	[BUG]  [BUGGY]  if(unknownException.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.WARNING_SOURCE))  {  [CE]  cannot  find  symbol  unknownException  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.WARNING_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.WARNING_SOURCE))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.WARNING_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	131	None	replace
364	[BUG]  [BUGGY]  if(inputId!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.WARNING_SOURCE))  {  [CE]  cannot  find  symbol  Feature  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.WARNING_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.WARNING_SOURCE))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.WARNING_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	131	None	replace
365	[BUG]  [BUGGY]  if(unknownException.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.WARNING_SOURCE))  {  [CE]  cannot  find  symbol  unknownException  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.WARNING_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.WARNING_SOURCE))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.WARNING_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	131	None	replace
366	[BUG]  [BUGGY]  if(unknownException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.WARNING_SOURCE))  {  [CE]  cannot  find  symbol  unknownException  [FE]                              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.WARNING_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.WARNING_SOURCE))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.WARNING_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	131	None	replace
367	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.WARNING_SOURCE))  {  [CE]  cannot  find  symbol  Feature  [FE]                                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.WARNING_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.WARNING_SOURCE))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.WARNING_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	131	None	replace
368	[BUG]  [BUGGY]  if(message!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.WARNING_SOURCE))  {  [CE]  cannot  find  symbol  Feature  [FE]                                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.WARNING_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.WARNING_SOURCE))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.WARNING_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	131	None	replace
369	[BUG]  [BUGGY]  if(unknownException.getMessage()!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  unknownException  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.getMessage()!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.getMessage()!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(inputId!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	49	None	replace
370	[BUG]  [BUGGY]  if(inputId  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  Feature  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(inputId!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	49	None	replace
371	[BUG]  [BUGGY]  if(unknownException.getMessage()  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  unknownException  [FE]                              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.getMessage()  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.getMessage()  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(inputId!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	49	None	replace
372	[BUG]  [BUGGY]  if(unexpectedException!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  Feature  [FE]                                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(inputId!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	49	None	replace
373	[BUG]  [BUGGY]  if(node!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  node  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(node!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(node!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(curNode!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  node	103	None	replace
374	[BUG]  [BUGGY]  if(unexpectedException!=  null  ||  message.length()  ==  0)  {  if(unexpectedException!=  null  ||  message.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  ||  message.length()  ==  0)  {  if(unexpectedException!=  null  ||  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=    null    ||    message.length()    ==    0)    {    if(unexpectedException!=  null  ||  message.length()  ==  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	121	None	add
375	[BUG]  [BUGGY]  if(unexpectedException!=  null  ||  message.length()  ==  0)  {  if(unexpectedException  ==  null  ||  message.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  ||  message.length()  ==  0)  {  if(unexpectedException  ==  null  ||  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=    null    ||    message.length()    ==    0)    {    if(unexpectedException  ==  null  ||  message.length()  ==  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	121	None	add
376	[BUG]  [BUGGY]  if(unexpectedException!=  null  ||  message.length()  ==  0)  {  If(unexpectedException!=  null  ||  message.length()  ==  0)  {  [CE]  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  ||  message.length()  ==  0)  {  If(unexpectedException!=  null  ||  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=    null    ||    message.length()    ==    0)    {    If(unexpectedException!=  null  ||  message.length()  ==  0)  {	  timeout    	non-compiled	[CE]  	121	None	add
377	[BUG]  [BUGGY]  if(unexpectedException!=  null  ||  message.length()  ==  0)  {  if(unexpectedException  >=  null  ||  message.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  ||  message.length()  ==  0)  {  if(unexpectedException  >=  null  ||  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=    null    ||    message.length()    ==    0)    {    if(unexpectedException  >=  null  ||  message.length()  ==  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	121	None	add
378	[BUG]  [BUGGY]  if(unexpectedException!=  null  ||  message.length()  ==  0)  {  if(unexpectedException!=  null  ||  message.length()  >=  0)  {  [CE]  illegal  start  of  expression  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  ||  message.length()  ==  0)  {  if(unexpectedException!=  null  ||  message.length()  >=  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=    null    ||    message.length()    ==    0)    {    if(unexpectedException!=  null  ||  message.length()  >=  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	121	None	add
379	[BUG]  [BUGGY]  if(unexpectedException!=  null  ||  message.length()  ==  0)  {  if(unexpectedException  >>  null  ||  message.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  ||  message.length()  ==  0)  {  if(unexpectedException  >>  null  ||  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=    null    ||    message.length()    ==    0)    {    if(unexpectedException  >>  null  ||  message.length()  ==  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	121	None	add
380	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  unexpectedException.getMessage().length()  >  0)  {  if(unexpectedException!=  null  &&  unexpectedException.getMessage().length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  unexpectedException.getMessage().length()  >  0)  {  if(unexpectedException!=  null  &&  unexpectedException.getMessage().length()  >  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=    null    &&    unexpectedException.getMessage().length()    >    0)    {    if(unexpectedException!=  null  &&  unexpectedException.getMessage().length()  >  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	68	None	add
381	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  unexpectedException.getMessage().length()  >  0)  {  If(unexpectedException!=  null  &&  unexpectedException.getMessage().length()  >  0)  {  [CE]  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  unexpectedException.getMessage().length()  >  0)  {  If(unexpectedException!=  null  &&  unexpectedException.getMessage().length()  >  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=    null    &&    unexpectedException.getMessage().length()    >    0)    {    If(unexpectedException!=  null  &&  unexpectedException.getMessage().length()  >  0)  {	  timeout    	non-compiled	[CE]  	68	None	add
382	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  unexpectedException.getMessage().length()  >  0)  {  if(unexpectedException  ==  null  &&  unexpectedException.getMessage().length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  unexpectedException.getMessage().length()  >  0)  {  if(unexpectedException  ==  null  &&  unexpectedException.getMessage().length()  >  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=    null    &&    unexpectedException.getMessage().length()    >    0)    {    if(unexpectedException  ==  null  &&  unexpectedException.getMessage().length()  >  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	68	None	add
383	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  unexpectedException.getMessage().length()  >  0)  {  if(unexpectedException!=  null  &&  unknownException.getMessage().length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  unexpectedException.getMessage().length()  >  0)  {  if(unexpectedException!=  null  &&  unknownException.getMessage().length()  >  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=    null    &&    unexpectedException.getMessage().length()    >    0)    {    if(unexpectedException!=  null  &&  unknownException.getMessage().length()  >  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	68	None	add
384	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  unexpectedException.getMessage().length()  >  0)  {  if(unexpectedException  >=  null  &&  unexpectedException.getMessage().length()  >  0)  {  [CE]  illegal  start  of  expression  [FE]                              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  unexpectedException.getMessage().length()  >  0)  {  if(unexpectedException  >=  null  &&  unexpectedException.getMessage().length()  >  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=    null    &&    unexpectedException.getMessage().length()    >    0)    {    if(unexpectedException  >=  null  &&  unexpectedException.getMessage().length()  >  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	68	None	add
385	[BUG]  [BUGGY]  if(curNode  ==  null)  {  if(curNode  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode  ==  null)  {  if(curNode  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode    ==    null)    {    if(curNode  ==  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	21	None	add
386	[BUG]  [BUGGY]  if(curNode  ==  null)  {  if(curNode!=  null)  {  [CE]  illegal  start  of  expression  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode  ==  null)  {  if(curNode!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode    ==    null)    {    if(curNode!=  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	21	None	add
387	[BUG]  [BUGGY]  if(curNode  ==  null)  {  If(curNode  ==  null)  {  [CE]  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode  ==  null)  {  If(curNode  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode    ==    null)    {    If(curNode  ==  null)  {	  timeout    	non-compiled	[CE]  	21	None	add
388	[BUG]  [BUGGY]  if(curNode  ==  null)  {  if(curNode  >=  null)  {  [CE]  illegal  start  of  expression  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode  ==  null)  {  if(curNode  >=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode    ==    null)    {    if(curNode  >=  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	21	None	add
389	[BUG]  [BUGGY]  if(curNode  ==  null)  {  if(curNode  [BUGGY]  null)  {  [CE]  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode  ==  null)  {  if(curNode  [BUGGY]  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode    ==    null)    {    if(curNode  [BUGGY]  null)  {	  timeout    	non-compiled	[CE]  	21	None	add
390	[BUG]  [BUGGY]  if(unknownException.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NODE))  {  [CE]  cannot  find  symbol  unknownException  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NODE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NODE))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NODE))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	152	None	replace
391	[BUG]  [BUGGY]  if(unknownException.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NODE))  {  [CE]  cannot  find  symbol  unknownException  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NODE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NODE))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NODE))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	152	None	replace
392	[BUG]  [BUGGY]  if(inputId  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NODE))  {  [CE]  cannot  find  symbol  Feature  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NODE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NODE))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NODE))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	152	None	replace
393	[BUG]  [BUGGY]  if(inputId!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NODE))  {  [CE]  cannot  find  symbol  Feature  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NODE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NODE))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NODE))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	152	None	replace
394	[BUG]  [BUGGY]  if(message!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NODE))  {  [CE]  cannot  find  symbol  Feature  [FE]                              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NODE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NODE))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NODE))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	152	None	replace
395	[BUG]  [BUGGY]  Node  curNode  =  n.getLastChild();  [CE]  <identifier>  expected  [FE]                                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  n.getLastChild();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  n.getLastChild();	  Node    curNode    =    n.getParent();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
396	[BUG]  [BUGGY]  if(node!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  node  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(node!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(node!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(curNode!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  node	128	None	replace
397	[BUG]  [BUGGY]  Node  curNode  =  getCurrentNode().getNext();  [CE]  <identifier>  expected  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  getCurrentNode().getNext();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  getCurrentNode().getNext();	  Node    curNode    =    getCurrentNode();    	non-compiled	[CE]  <identifier>  expected	145	None	replace
398	[BUG]  [BUGGY]  Node  curNode  =  scopeCreator.getCurrentNode();  [CE]  <identifier>  expected  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  scopeCreator.getCurrentNode();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  scopeCreator.getCurrentNode();	  Node    curNode    =    getCurrentNode();    	non-compiled	[CE]  <identifier>  expected	145	None	replace
399	[BUG]  [BUGGY]  Node  curNode  =  getCurrentNode().cloneTree();  [CE]  <identifier>  expected  [FE]                              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  getCurrentNode().cloneTree();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  getCurrentNode().cloneTree();	  Node    curNode    =    getCurrentNode();    	non-compiled	[CE]  <identifier>  expected	145	None	replace
400	[BUG]  [BUGGY]  Node  curNode  =  getCurrentNode(),  message);  [CE]  [FE]                                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  getCurrentNode(),  message);  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  getCurrentNode(),  message);	  Node    curNode    =    getCurrentNode();    	non-compiled	[CE]  	145	None	replace
401	[BUG]  [BUGGY]  Node  curNode  =  getCurrentNameNode();  [CE]  <identifier>  expected  [FE]                                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  getCurrentNameNode();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  getCurrentNameNode();	  Node    curNode    =    getCurrentNode();    	non-compiled	[CE]  <identifier>  expected	145	None	replace
402	[BUG]  [BUGGY]  if(message!=  null)  {  if(message!=  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message!=  null)  {  if(message!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message!=    null)    {    if(message!=  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	89	None	add
403	[BUG]  [BUGGY]  if(message!=  null)  {  if(message  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message!=  null)  {  if(message  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message!=    null)    {    if(message  ==  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	89	None	add
404	[BUG]  [BUGGY]  if(message!=  null)  {  if(message  >=  null)  {  [CE]  illegal  start  of  expression  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message!=  null)  {  if(message  >=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message!=    null)    {    if(message  >=  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	89	None	add
405	[BUG]  [BUGGY]  if(message!=  null)  {  If(message!=  null)  {  [CE]  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message!=  null)  {  If(message!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message!=    null)    {    If(message!=  null)  {	  timeout    	non-compiled	[CE]  	89	None	add
406	[BUG]  [BUGGY]  if(message!=  null)  {  if(message  >>  null)  {  [CE]  illegal  start  of  expression  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message!=  null)  {  if(message  >>  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message!=    null)    {    if(message  >>  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	89	None	add
407	[BUG]  [BUGGY]  if(message!=  null)  {  if(message  [BUGGY]  null)  {  [CE]  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message!=  null)  {  if(message  [BUGGY]  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message!=    null)    {    if(message  [BUGGY]  null)  {	  timeout    	non-compiled	[CE]  	89	None	add
408	[BUG]  [BUGGY]  if(included  ||  curNode  ==  null)  {  [CE]  cannot  find  symbol  included  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(included  ||  curNode  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(included  ||  curNode  ==  null)  {	  if(included)    {    	non-compiled	[CE]  cannot  find  symbol  included	166	None	replace
409	[BUG]  [BUGGY]  if(included  ||  curNode!=  null)  {  [CE]  cannot  find  symbol  included  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(included  ||  curNode!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(included  ||  curNode!=  null)  {	  if(included)    {    	non-compiled	[CE]  cannot  find  symbol  included	166	None	replace
410	[BUG]  [BUGGY]  if(included  ||  sourceName  ==  null)  {  [CE]  cannot  find  symbol  included  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(included  ||  sourceName  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(included  ||  sourceName  ==  null)  {	  if(included)    {    	non-compiled	[CE]  cannot  find  symbol  included	166	None	replace
411	[BUG]  [BUGGY]  if(included  ||  curNode  >=  null)  {  [CE]  cannot  find  symbol  included  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(included  ||  curNode  >=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(included  ||  curNode  >=  null)  {	  if(included)    {    	non-compiled	[CE]  cannot  find  symbol  included	166	None	replace
412	[BUG]  [BUGGY]  if(exception!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  exception  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(exception!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(exception!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(unknownException!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  exception	104	None	replace
413	[BUG]  [BUGGY]  if(unknownException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME,  message))  {  [CE]  cannot  find  symbol  unknownException  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME,  message))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME,  message))  {	  if(unknownException!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	104	None	replace
414	[BUG]  [BUGGY]  if(unknownException  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  unknownException  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(unknownException!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	104	None	replace
415	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&!includes)  {  [CE]  cannot  find  symbol  includes  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&!includes)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&!includes)  {	  if(unexpectedException!=    null    &&!included)    {    	non-compiled	[CE]  cannot  find  symbol  includes	162	None	replace
416	[BUG]  [BUGGY]  if(unexpectedException  ==  null  &&!included)  {  [CE]  cannot  find  symbol  included  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException  ==  null  &&!included)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException  ==  null  &&!included)  {	  if(unexpectedException!=    null    &&!included)    {    	non-compiled	[CE]  cannot  find  symbol  included	162	None	replace
417	[BUG]  [BUGGY]  if(exception!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  exception  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(exception!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(exception!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(unknownException!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  exception	127	None	replace
418	[BUG]  [BUGGY]  if(unknownException  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  unknownException  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(unknownException!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	127	None	replace
419	[BUG]  [BUGGY]  if(unknownException!=  null  &&  isEnabled(Feature.MISSING_SOURCE))  {  [CE]  cannot  find  symbol  unknownException  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException!=  null  &&  isEnabled(Feature.MISSING_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  &&  isEnabled(Feature.MISSING_SOURCE))  {	  if(unknownException!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	127	None	replace
420	[BUG]  [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  Feature  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(unknownException.getMessage()!=    null    &&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	84	None	replace
421	[BUG]  [BUGGY]  if(node.getMessage()!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  node  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(node.getMessage()!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(node.getMessage()!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(unknownException.getMessage()!=    null    &&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  node	84	None	replace
422	[BUG]  [BUGGY]  if(buffer.getMessage()!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  buffer  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(buffer.getMessage()!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(buffer.getMessage()!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(unknownException.getMessage()!=    null    &&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  buffer	84	None	replace
423	[BUG]  [BUGGY]  if(scopeCreator.getMessage()!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(scopeCreator.getMessage()!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(scopeCreator.getMessage()!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(unknownException.getMessage()!=    null    &&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
424	[BUG]  [BUGGY]  if(exception.getMessage()!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  exception  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(exception.getMessage()!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(exception.getMessage()!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(unknownException.getMessage()!=    null    &&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  exception	84	None	replace
425	[BUG]  [BUGGY]  if(curNode.getMessage()!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode.getMessage()!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode.getMessage()!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(unknownException.getMessage()!=    null    &&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
426	[BUG]  [BUGGY]  Node  curNode  =  parent.getFirstChild();  [CE]  <identifier>  expected  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  parent.getFirstChild();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  parent.getFirstChild();	  Node    curNode    =    n.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	143	None	replace
427	[BUG]  [BUGGY]  Node  curNode  =  node.getFirstChild();  [CE]  <identifier>  expected  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  node.getFirstChild();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  node.getFirstChild();	  Node    curNode    =    n.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	143	None	replace
428	[BUG]  [BUGGY]  Node  curNode  =  curNode.getFirstChild();  [CE]  <identifier>  expected  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  curNode.getFirstChild();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  curNode.getFirstChild();	  Node    curNode    =    n.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	143	None	replace
429	[BUG]  [BUGGY]  if(message!=  null  &&  message.getMessage()!=  null)  {  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message!=  null  &&  message.getMessage()!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message!=  null  &&  message.getMessage()!=  null)  {	  if(message.getMessage()!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
430	[BUG]  [BUGGY]  if(message!=  null?  null  :  message.getMessage()!=  null)  {  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message!=  null?  null  :  message.getMessage()!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message!=  null?  null  :  message.getMessage()!=  null)  {	  if(message.getMessage()!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
431	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "+   "))  {  if(inputId!=  null  &&  inputId.equals(   "+   "))  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "+   "))  {  if(inputId!=  null  &&  inputId.equals(   "+   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "+   "))    {    if(inputId!=  null  &&  inputId.equals(   "+   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	157	None	add
432	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "+   "))  {  if(inputId!=  null  &&  inputId.equals( ".+   "))  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "+   "))  {  if(inputId!=  null  &&  inputId.equals( ".+   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "+   "))    {    if(inputId!=  null  &&  inputId.equals( ".+   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	157	None	add
433	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "+   "))  {  if(inputId  ==  null  &&  inputId.equals(   "+   "))  {  [CE]  illegal  start  of  expression  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "+   "))  {  if(inputId  ==  null  &&  inputId.equals(   "+   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "+   "))    {    if(inputId  ==  null  &&  inputId.equals(   "+   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	157	None	add
434	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "+   "))  {  if(inputId!=  null  &&  inputId.equals( ")+   "))  {  [CE]  illegal  start  of  expression  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "+   "))  {  if(inputId!=  null  &&  inputId.equals( ")+   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "+   "))    {    if(inputId!=  null  &&  inputId.equals( ")+   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	157	None	add
435	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "+   "))  {  If(inputId!=  null  &&  inputId.equals(   "+   "))  {  [CE]  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "+   "))  {  If(inputId!=  null  &&  inputId.equals(   "+   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "+   "))    {    If(inputId!=  null  &&  inputId.equals(   "+   "))  {	  timeout    	non-compiled	[CE]  	157	None	add
436	[BUG]  [BUGGY]  if(unexpectedException  ==  null  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [CE]  cannot  find  symbol  Feature  [FE]            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException  ==  null  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException  ==  null  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {	  if(unexpectedException!=    null    &&    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	119	None	replace
437	[BUG]  [BUGGY]  if(message!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [CE]  cannot  find  symbol  Feature  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {	  if(unexpectedException!=    null    &&    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	119	None	replace
438	[BUG]  [BUGGY]  if(unexpectedException!=  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [CE]  cannot  find  symbol  Feature  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  ||  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {	  if(unexpectedException!=    null    &&    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	119	None	replace
439	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||  isEnabled(Feature.WARNING_SOURCE))  {  [CE]  cannot  find  symbol  Feature  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||  isEnabled(Feature.WARNING_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||  isEnabled(Feature.WARNING_SOURCE))  {	  if(unexpectedException!=    null    &&    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	119	None	replace
440	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.NON_NULL_OBJECT))  {  [CE]  cannot  find  symbol  Feature  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.NON_NULL_OBJECT))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.NON_NULL_OBJECT))  {	  if(unexpectedException!=    null    &&    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	119	None	replace
441	[BUG]  [BUGGY]  if(message!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  inputId))  {  [CE]  cannot  find  symbol  Feature  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  inputId))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  inputId))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES,    message))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	142	None	replace
442	[BUG]  [BUGGY]  if(unknownException.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  message))  {  [CE]  cannot  find  symbol  unknownException  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  message))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  message))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES,    message))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	142	None	replace
443	[BUG]  [BUGGY]  if(message!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  message))  {  [CE]  cannot  find  symbol  Feature  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  message))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  message))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES,    message))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	142	None	replace
444	[BUG]  [BUGGY]  if(unknownException.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  message))  {  [CE]  cannot  find  symbol  unknownException  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  message))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  message))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES,    message))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	142	None	replace
445	[BUG]  [BUGGY]  if(unknownException.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAMES,  message))  {  [CE]  cannot  find  symbol  unknownException  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAMES,  message))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAMES,  message))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES,    message))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	142	None	replace
446	[BUG]  [BUGGY]  if(curNode  ==  null?   "null "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "null "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [CE]  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode  ==  null?   "null "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "null "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode  ==  null?   "null "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "null "  :  formatNodeContext( "Parent   ",  curNode.getParent()));	  if(curNode    ==    null?       "       "    :    formatNodeContext(   "Node       ",    curNode)    +    (curNode    ==    null?       "       "    :    formatNodeContext(   "Parent       ",    curNode.getParent()));    	non-compiled	[CE]  	70	None	replace
447	[BUG]  [BUGGY]  if(curNode  ==  null?   "n "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "n "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [CE]  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode  ==  null?   "n "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "n "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode  ==  null?   "n "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "n "  :  formatNodeContext( "Parent   ",  curNode.getParent()));	  if(curNode    ==    null?       "       "    :    formatNodeContext(   "Node       ",    curNode)    +    (curNode    ==    null?       "       "    :    formatNodeContext(   "Parent       ",    curNode.getParent()));    	non-compiled	[CE]  	70	None	replace
448	[BUG]  [BUGGY]  if(curNode  ==  null?   "NULL "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "NULL "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [CE]  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode  ==  null?   "NULL "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "NULL "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode  ==  null?   "NULL "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "NULL "  :  formatNodeContext( "Parent   ",  curNode.getParent()));	  if(curNode    ==    null?       "       "    :    formatNodeContext(   "Node       ",    curNode)    +    (curNode    ==    null?       "       "    :    formatNodeContext(   "Parent       ",    curNode.getParent()));    	non-compiled	[CE]  	70	None	replace
449	[BUG]  [BUGGY]  if(curNode!=  null)  {  if(curNode!=  null)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null)  {  if(curNode!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=    null)    {    if(curNode!=  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	91	None	add
450	[BUG]  [BUGGY]  if(curNode!=  null)  {  if(curNode  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null)  {  if(curNode  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=    null)    {    if(curNode  ==  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	91	None	add
451	[BUG]  [BUGGY]  if(curNode!=  null)  {  if(curNode  >=  null)  {  [CE]  illegal  start  of  expression  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null)  {  if(curNode  >=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=    null)    {    if(curNode  >=  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	91	None	add
452	[BUG]  [BUGGY]  if(curNode!=  null)  {  If(curNode!=  null)  {  [CE]  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null)  {  If(curNode!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=    null)    {    If(curNode!=  null)  {	  timeout    	non-compiled	[CE]  	91	None	add
453	[BUG]  [BUGGY]  if(curNode!=  null)  {  if(curNode  >>  null)  {  [CE]  illegal  start  of  expression  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null)  {  if(curNode  >>  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=    null)    {    if(curNode  >>  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	91	None	add
454	[BUG]  [BUGGY]  if(curNode!=  null)  {  if(curNode  [BUGGY]  null)  {  [CE]  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null)  {  if(curNode  [BUGGY]  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=    null)    {    if(curNode  [BUGGY]  null)  {	  timeout    	non-compiled	[CE]  	91	None	add
455	[BUG]  [BUGGY]  timeout  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message!=  null  &&  message.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(message!=  null  &&  message.equals( "   "))  {	  if(inputId!=    null    &&    message.equals(   "       "))    {    timeout    	compilable	timeout	126	1	replace
456	[BUG]  [BUGGY]  if(message!=  null  &&  message.equals( "   "))  {  timeout  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message!=  null  &&  message.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message!=  null  &&  message.equals( "   "))  {	  if(inputId!=    null    &&    message.equals(   "       "))    {    timeout    	compilable	timeout	126	1	replace
457	[BUG]  [BUGGY]  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  message.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException!=  null  &&  message.equals( "   "))  {	  if(inputId!=    null    &&    message.equals(   "       "))    {    timeout    	compilable	timeout	126	1	replace
458	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  message.equals( "   "))  {  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  message.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  message.equals( "   "))  {	  if(inputId!=    null    &&    message.equals(   "       "))    {    timeout    	compilable	timeout	126	1	replace
459	[BUG]  [BUGGY]  timeout  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message!=  null  &&  message.equals( "n "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(message!=  null  &&  message.equals( "n "))  {	  if(inputId!=    null    &&    message.equals(   "       "))    {    timeout    	compilable	timeout	126	1	replace
460	[BUG]  [BUGGY]  if(message!=  null  &&  message.equals( "n "))  {  timeout  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message!=  null  &&  message.equals( "n "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message!=  null  &&  message.equals( "n "))  {	  if(inputId!=    null    &&    message.equals(   "       "))    {    timeout    	compilable	timeout	126	1	replace
461	[BUG]  [BUGGY]  timeout  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message!=  null  &&  message.equals( "null "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(message!=  null  &&  message.equals( "null "))  {	  if(inputId!=    null    &&    message.equals(   "       "))    {    timeout    	compilable	timeout	126	1	replace
462	[BUG]  [BUGGY]  if(message!=  null  &&  message.equals( "null "))  {  timeout  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message!=  null  &&  message.equals( "null "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message!=  null  &&  message.equals( "null "))  {	  if(inputId!=    null    &&    message.equals(   "       "))    {    timeout    	compilable	timeout	126	1	replace
463	[BUG]  [BUGGY]  if(unexpectedException.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  Feature  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException.getMessage()    ==    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	42	None	replace
464	[BUG]  [BUGGY]  if(curNode.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException.getMessage()    ==    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
465	[BUG]  [BUGGY]  if(node.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  node  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(node.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(node.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException.getMessage()    ==    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  node	42	None	replace
466	[BUG]  [BUGGY]  if(buffer.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  buffer  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(buffer.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(buffer.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException.getMessage()    ==    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  buffer	42	None	replace
467	[BUG]  [BUGGY]  if(scopeCreator.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(scopeCreator.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(scopeCreator.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException.getMessage()    ==    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
468	[BUG]  [BUGGY]  timeout  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  ||  inputId.equals( "n "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId!=  null  ||  inputId.equals( "n "))  {	  if(inputId!=    null    ||    inputId.equals(   "       "))    {    timeout    	compilable	timeout	8	1	replace
469	[BUG]  [BUGGY]  if(inputId!=  null  ||  inputId.equals( "n "))  {  timeout  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  ||  inputId.equals( "n "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  ||  inputId.equals( "n "))  {	  if(inputId!=    null    ||    inputId.equals(   "       "))    {    timeout    	compilable	timeout	8	1	replace
470	[BUG]  [BUGGY]  timeout  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  ||  inputId.equals( "n "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId  ==  null  ||  inputId.equals( "n "))  {	  if(inputId!=    null    ||    inputId.equals(   "       "))    {    timeout    	compilable	timeout	8	1	replace
471	[BUG]  [BUGGY]  if(inputId  ==  null  ||  inputId.equals( "n "))  {  timeout  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  ||  inputId.equals( "n "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId  ==  null  ||  inputId.equals( "n "))  {	  if(inputId!=    null    ||    inputId.equals(   "       "))    {    timeout    	compilable	timeout	8	1	replace
472	[BUG]  [BUGGY]  timeout  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  ||  message!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId  ==  null  ||  message!=  null)  {	  if(inputId    ==    null)    {    if(inputId    ==    null    ||    message!=    null)    {    	compilable	timeout	118	1	replace
473	[BUG]  [BUGGY]  if(inputId  ==  null  ||  message!=  null)  {  timeout  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  ||  message!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId  ==  null  ||  message!=  null)  {	  if(inputId    ==    null)    {    if(inputId    ==    null    ||    message!=    null)    {    	compilable	timeout	118	1	replace
474	[BUG]  [BUGGY]  timeout  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  ||  message!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId!=  null  ||  message!=  null)  {	  if(inputId    ==    null)    {    if(inputId    ==    null    ||    message!=    null)    {    	compilable	timeout	118	1	replace
475	[BUG]  [BUGGY]  if(inputId!=  null  ||  message!=  null)  {  timeout  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  ||  message!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  ||  message!=  null)  {	  if(inputId    ==    null)    {    if(inputId    ==    null    ||    message!=    null)    {    	compilable	timeout	118	1	replace
476	[BUG]  [BUGGY]  timeout  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  ||  message  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId!=  null  ||  message  ==  null)  {	  if(inputId    ==    null)    {    if(inputId    ==    null    ||    message!=    null)    {    	compilable	timeout	118	1	replace
477	[BUG]  [BUGGY]  if(inputId!=  null  ||  message  ==  null)  {  timeout  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  ||  message  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  ||  message  ==  null)  {	  if(inputId    ==    null)    {    if(inputId    ==    null    ||    message!=    null)    {    	compilable	timeout	118	1	replace
478	[BUG]  [BUGGY]  if(unknownException.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_SOURCE))  {  [CE]  cannot  find  symbol  unknownException  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_SOURCE))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	154	None	replace
479	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_SOURCE))  {  [CE]  cannot  find  symbol  Feature  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_SOURCE))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	154	None	replace
480	[BUG]  [BUGGY]  if(unknownException.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_SOURCE))  {  [CE]  cannot  find  symbol  unknownException  [FE]                              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_SOURCE))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	154	None	replace
481	[BUG]  [BUGGY]  if(message!=  null  &&  isEnabled(Feature.QUOTE_SOURCE))  {  [CE]  cannot  find  symbol  Feature  [FE]                                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message!=  null  &&  isEnabled(Feature.QUOTE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message!=  null  &&  isEnabled(Feature.QUOTE_SOURCE))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	154	None	replace
482	[BUG]  [BUGGY]  if(inputId  ==  null  &&  isEnabled(Feature.QUOTE_SOURCE))  {  [CE]  cannot  find  symbol  Feature  [FE]                                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  &&  isEnabled(Feature.QUOTE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId  ==  null  &&  isEnabled(Feature.QUOTE_SOURCE))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	154	None	replace
483	[BUG]  [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.MISSING_SOURCE))  {  [CE]  cannot  find  symbol  Feature  [FE]                                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.MISSING_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  isEnabled(Feature.MISSING_SOURCE))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	154	None	replace
484	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME,  message))  {  [CE]  cannot  find  symbol  Feature  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME,  message))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME,  message))  {	  if(unexpectedException!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	47	None	replace
485	[BUG]  [BUGGY]  if(unexpectedException  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  Feature  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(unexpectedException!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	47	None	replace
486	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME,  MISSING_SOURCE))  {  [CE]  cannot  find  symbol  Feature  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME,  MISSING_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME,  MISSING_SOURCE))  {	  if(unexpectedException!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	47	None	replace
487	[BUG]  [BUGGY]  timeout  [FE]            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals( "node "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId!=  null  &&  inputId.equals( "node "))  {	  if(inputId!=    null    &&    inputId.equals(   "n   "))    {    timeout    	compilable	timeout	2	1	replace
488	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals( "node "))  {  timeout  [FE]            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals( "node "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  inputId.equals( "node "))  {	  if(inputId!=    null    &&    inputId.equals(   "n   "))    {    timeout    	compilable	timeout	2	1	replace
489	[BUG]  [BUGGY]  timeout  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals( "null "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId!=  null  &&  inputId.equals( "null "))  {	  if(inputId!=    null    &&    inputId.equals(   "n   "))    {    timeout    	compilable	timeout	2	1	replace
490	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals( "null "))  {  timeout  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals( "null "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  inputId.equals( "null "))  {	  if(inputId!=    null    &&    inputId.equals(   "n   "))    {    timeout    	compilable	timeout	2	1	replace
491	[BUG]  [BUGGY]  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  inputId.equals( "null "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException.getMessage()!=  null  &&  inputId.equals( "null "))  {	  if(inputId!=    null    &&    inputId.equals(   "n   "))    {    timeout    	compilable	timeout	2	1	replace
492	[BUG]  [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  inputId.equals( "null "))  {  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  inputId.equals( "null "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()!=  null  &&  inputId.equals( "null "))  {	  if(inputId!=    null    &&    inputId.equals(   "n   "))    {    timeout    	compilable	timeout	2	1	replace
493	[BUG]  [BUGGY]  timeout  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  inputId.equals( "node "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException!=  null  &&  inputId.equals( "node "))  {	  if(inputId!=    null    &&    inputId.equals(   "n   "))    {    timeout    	compilable	timeout	2	1	replace
494	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  inputId.equals( "node "))  {  timeout  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  inputId.equals( "node "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  inputId.equals( "node "))  {	  if(inputId!=    null    &&    inputId.equals(   "n   "))    {    timeout    	compilable	timeout	2	1	replace
495	[BUG]  [BUGGY]  timeout  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  inputId.equals( "node "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException.getMessage()!=  null  &&  inputId.equals( "node "))  {	  if(inputId!=    null    &&    inputId.equals(   "n   "))    {    timeout    	compilable	timeout	2	1	replace
496	[BUG]  [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  inputId.equals( "node "))  {  timeout  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  inputId.equals( "node "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()!=  null  &&  inputId.equals( "node "))  {	  if(inputId!=    null    &&    inputId.equals(   "n   "))    {    timeout    	compilable	timeout	2	1	replace
497	[BUG]  [BUGGY]  if(node  ==  null)  {  If(node  ==  null)  {  [CE]  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(node  ==  null)  {  If(node  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(node  ==  null)  {  If(node  ==  null)  {	  if(unexpectedException!=    null)    {    If(unexpectedException!=    null)    {    	non-compiled	[CE]  	75	None	replace
498	[BUG]  [BUGGY]  if(node  ==  null)  {  If(node!=  null)  {  [CE]  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(node  ==  null)  {  If(node!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(node  ==  null)  {  If(node!=  null)  {	  if(unexpectedException!=    null)    {    If(unexpectedException!=    null)    {    	non-compiled	[CE]  	75	None	replace
499	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  curNode  ==  null)  {  if(unexpectedException!=  null  &&  curNode  ==  null)  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  curNode  ==  null)  {  if(unexpectedException!=  null  &&  curNode  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=    null    &&    curNode    ==    null)    {    if(unexpectedException!=  null  &&  curNode  ==  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	59	None	add
500	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  curNode  ==  null)  {  if(unexpectedException  ==  null  &&  curNode  ==  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  curNode  ==  null)  {  if(unexpectedException  ==  null  &&  curNode  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=    null    &&    curNode    ==    null)    {    if(unexpectedException  ==  null  &&  curNode  ==  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	59	None	add
501	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  curNode  ==  null)  {  If(unexpectedException!=  null  &&  curNode  ==  null)  {  [CE]  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  curNode  ==  null)  {  If(unexpectedException!=  null  &&  curNode  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=    null    &&    curNode    ==    null)    {    If(unexpectedException!=  null  &&  curNode  ==  null)  {	  timeout    	non-compiled	[CE]  	59	None	add
502	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  curNode  ==  null)  {  if(unexpectedException  >=  null  &&  curNode  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  curNode  ==  null)  {  if(unexpectedException  >=  null  &&  curNode  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=    null    &&    curNode    ==    null)    {    if(unexpectedException  >=  null  &&  curNode  ==  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	59	None	add
503	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  curNode  ==  null)  {  if(unexpectedException!=  null  &&  curNode  >=  null)  {  [CE]  illegal  start  of  expression  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  curNode  ==  null)  {  if(unexpectedException!=  null  &&  curNode  >=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=    null    &&    curNode    ==    null)    {    if(unexpectedException!=  null  &&  curNode  >=  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	59	None	add
504	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  curNode  ==  null)  {  if(unexpectedException  >>  null  &&  curNode  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  curNode  ==  null)  {  if(unexpectedException  >>  null  &&  curNode  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=    null    &&    curNode    ==    null)    {    if(unexpectedException  >>  null  &&  curNode  ==  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	59	None	add
505	[BUG]  [BUGGY]  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  ||  inputId.equals( "null "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId!=  null  ||  inputId.equals( "null "))  {	  if(inputId    ==    null)    {    if(inputId    ==    null    ||    inputId.equals(   "   "))    {    	compilable	timeout	133	1	replace
506	[BUG]  [BUGGY]  if(inputId!=  null  ||  inputId.equals( "null "))  {  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  ||  inputId.equals( "null "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  ||  inputId.equals( "null "))  {	  if(inputId    ==    null)    {    if(inputId    ==    null    ||    inputId.equals(   "   "))    {    	compilable	timeout	133	1	replace
507	[BUG]  [BUGGY]  timeout  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  ||  inputId.equals( "null "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId  ==  null  ||  inputId.equals( "null "))  {	  if(inputId    ==    null)    {    if(inputId    ==    null    ||    inputId.equals(   "   "))    {    	compilable	timeout	133	1	replace
508	[BUG]  [BUGGY]  if(inputId  ==  null  ||  inputId.equals( "null "))  {  timeout  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  ||  inputId.equals( "null "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId  ==  null  ||  inputId.equals( "null "))  {	  if(inputId    ==    null)    {    if(inputId    ==    null    ||    inputId.equals(   "   "))    {    	compilable	timeout	133	1	replace
509	[BUG]  [BUGGY]  if(inputId  ==  null  &&  inputId.equals(   "   "))  {  if(inputId  ==  null  &&  inputId.equals( "   "))  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  &&  inputId.equals(   "   "))  {  if(inputId  ==  null  &&  inputId.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId    ==    null    &&    inputId.equals(   "   "))    {    if(inputId  ==  null  &&  inputId.equals( "   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	123	None	add
510	[BUG]  [BUGGY]  if(inputId  ==  null  &&  inputId.equals(   "   "))  {  if(inputId!=  null  &&  inputId.equals( "   "))  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  &&  inputId.equals(   "   "))  {  if(inputId!=  null  &&  inputId.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId    ==    null    &&    inputId.equals(   "   "))    {    if(inputId!=  null  &&  inputId.equals( "   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	123	None	add
511	[BUG]  [BUGGY]  if(inputId  ==  null  &&  inputId.equals(   "   "))  {  if(inputId  ==  null  &&  inputId.equals( ".   "))  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  &&  inputId.equals(   "   "))  {  if(inputId  ==  null  &&  inputId.equals( ".   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId    ==    null    &&    inputId.equals(   "   "))    {    if(inputId  ==  null  &&  inputId.equals( ".   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	123	None	add
512	[BUG]  [BUGGY]  if(inputId  ==  null  &&  inputId.equals(   "   "))  {  If(inputId  ==  null  &&  inputId.equals( "   "))  {  [CE]  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  &&  inputId.equals(   "   "))  {  If(inputId  ==  null  &&  inputId.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId    ==    null    &&    inputId.equals(   "   "))    {    If(inputId  ==  null  &&  inputId.equals( "   "))  {	  timeout    	non-compiled	[CE]  	123	None	add
513	[BUG]  [BUGGY]  if(inputId  ==  null  &&  inputId.equals(   "   "))  {  if(inputId  ==  null  &&  inputId.equals( "))  {  [CE]  unclosed  string  literal  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  &&  inputId.equals(   "   "))  {  if(inputId  ==  null  &&  inputId.equals( "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId    ==    null    &&    inputId.equals(   "   "))    {    if(inputId  ==  null  &&  inputId.equals( "))  {	  timeout    	non-compiled	[CE]  unclosed  string  literal	123	None	add
514	[BUG]  [BUGGY]  if(currentNode.getMessage()!=  null)  {  [CE]  cannot  find  symbol  currentNode  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(currentNode.getMessage()!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(currentNode.getMessage()!=  null)  {	  if(curNode.getMessage()!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  currentNode	29	None	replace
515	[BUG]  [BUGGY]  if(unexpectedException.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  Feature  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(unknownException.equals(message)&&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	132	None	replace
516	[BUG]  [BUGGY]  if(message.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  Feature  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(unknownException.equals(message)&&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	132	None	replace
517	[BUG]  [BUGGY]  if(message.equals(unknownException)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  unknownException  [FE]                              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message.equals(unknownException)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message.equals(unknownException)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(unknownException.equals(message)&&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	132	None	replace
518	[BUG]  [BUGGY]  if(message.equals( "unknownException ")&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  Feature  [FE]                                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message.equals( "unknownException ")&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message.equals( "unknownException ")&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(unknownException.equals(message)&&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	132	None	replace
519	[BUG]  [BUGGY]  if(message.equals(UNKNOWN_SOURCE)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  UNKNOWN_SOURCE  [FE]                                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message.equals(UNKNOWN_SOURCE)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message.equals(UNKNOWN_SOURCE)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(unknownException.equals(message)&&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_SOURCE	132	None	replace
520	[BUG]  [BUGGY]  if(message.equals( "unknown ")&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  Feature  [FE]                                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message.equals( "unknown ")&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message.equals( "unknown ")&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(unknownException.equals(message)&&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	132	None	replace
521	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  inputId.equals(   "     "))  {  if(unexpectedException!=  null  &&  inputId.equals( "   "))  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  inputId.equals(   "     "))  {  if(unexpectedException!=  null  &&  inputId.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=    null    &&    inputId.equals(   "       "))    {    if(unexpectedException!=  null  &&  inputId.equals( "   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	3	None	add
522	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  inputId.equals(   "     "))  {  if(unexpectedException!=  null  &&  inputId.equals( ".   "))  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  inputId.equals(   "     "))  {  if(unexpectedException!=  null  &&  inputId.equals( ".   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=    null    &&    inputId.equals(   "       "))    {    if(unexpectedException!=  null  &&  inputId.equals( ".   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	3	None	add
523	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  inputId.equals(   "     "))  {  If(unexpectedException!=  null  &&  inputId.equals( "   "))  {  [CE]  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  inputId.equals(   "     "))  {  If(unexpectedException!=  null  &&  inputId.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=    null    &&    inputId.equals(   "       "))    {    If(unexpectedException!=  null  &&  inputId.equals( "   "))  {	  timeout    	non-compiled	[CE]  	3	None	add
524	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  inputId.equals(   "     "))  {  if(unexpectedException  ==  null  &&  inputId.equals( "   "))  {  [CE]  illegal  start  of  expression  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  inputId.equals(   "     "))  {  if(unexpectedException  ==  null  &&  inputId.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=    null    &&    inputId.equals(   "       "))    {    if(unexpectedException  ==  null  &&  inputId.equals( "   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	3	None	add
525	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  inputId.equals(   "     "))  {  if(unexpectedException  >=  null  &&  inputId.equals( "   "))  {  [CE]  illegal  start  of  expression  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  inputId.equals(   "     "))  {  if(unexpectedException  >=  null  &&  inputId.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=    null    &&    inputId.equals(   "       "))    {    if(unexpectedException  >=  null  &&  inputId.equals( "   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	3	None	add
526	[BUG]  [BUGGY]  if(inputId  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  Feature  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId  ==  null  ||  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(inputId    ==    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	26	None	replace
527	[BUG]  [BUGGY]  if(message  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  Feature  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(inputId    ==    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	26	None	replace
528	[BUG]  [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  Feature  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException.getMessage()!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	40	None	replace
529	[BUG]  [BUGGY]  if(node.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  node  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(node.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(node.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException.getMessage()!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  node	40	None	replace
530	[BUG]  [BUGGY]  if(curNode.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException.getMessage()!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
531	[BUG]  [BUGGY]  if(buffer.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  buffer  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(buffer.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(buffer.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException.getMessage()!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  buffer	40	None	replace
532	[BUG]  [BUGGY]  if(scopeCreator.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(scopeCreator.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(scopeCreator.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException.getMessage()!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
533	[BUG]  [BUGGY]  if(exception.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  exception  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(exception.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(exception.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException.getMessage()!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  exception	40	None	replace
534	[BUG]  [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  Feature  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(unknownException.getMessage()!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	23	None	replace
535	[BUG]  [BUGGY]  if(scopeCreator.getMessage()!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(scopeCreator.getMessage()!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(scopeCreator.getMessage()!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(unknownException.getMessage()!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
536	[BUG]  [BUGGY]  if(curNode.getMessage()!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode.getMessage()!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode.getMessage()!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(unknownException.getMessage()!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
537	[BUG]  [BUGGY]  if(node.getMessage()!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  node  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(node.getMessage()!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(node.getMessage()!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(unknownException.getMessage()!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  node	23	None	replace
538	[BUG]  [BUGGY]  if(buffer.getMessage()!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  buffer  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(buffer.getMessage()!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(buffer.getMessage()!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(unknownException.getMessage()!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  buffer	23	None	replace
539	[BUG]  [BUGGY]  if(exception.getMessage()!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  exception  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(exception.getMessage()!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(exception.getMessage()!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(unknownException.getMessage()!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  exception	23	None	replace
540	[BUG]  [BUGGY]  if(unexpectedException  ==  null  &&  curNode!=  null)  {  if(unexpectedException  ==  null  &&  curNode!=  null)  {  [CE]  illegal  start  of  expression  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException  ==  null  &&  curNode!=  null)  {  if(unexpectedException  ==  null  &&  curNode!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException    ==    null    &&    curNode!=    null)    {    if(unexpectedException  ==  null  &&  curNode!=  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	66	None	add
541	[BUG]  [BUGGY]  if(unexpectedException  ==  null  &&  curNode!=  null)  {  if(unexpectedException!=  null  &&  curNode!=  null)  {  [CE]  illegal  start  of  expression  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException  ==  null  &&  curNode!=  null)  {  if(unexpectedException!=  null  &&  curNode!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException    ==    null    &&    curNode!=    null)    {    if(unexpectedException!=  null  &&  curNode!=  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	66	None	add
542	[BUG]  [BUGGY]  if(unexpectedException  ==  null  &&  curNode!=  null)  {  If(unexpectedException  ==  null  &&  curNode!=  null)  {  [CE]  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException  ==  null  &&  curNode!=  null)  {  If(unexpectedException  ==  null  &&  curNode!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException    ==    null    &&    curNode!=    null)    {    If(unexpectedException  ==  null  &&  curNode!=  null)  {	  timeout    	non-compiled	[CE]  	66	None	add
543	[BUG]  [BUGGY]  if(unexpectedException  ==  null  &&  curNode!=  null)  {  if(unexpectedException  ==  null  &&  curNode  >=  null)  {  [CE]  illegal  start  of  expression  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException  ==  null  &&  curNode!=  null)  {  if(unexpectedException  ==  null  &&  curNode  >=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException    ==    null    &&    curNode!=    null)    {    if(unexpectedException  ==  null  &&  curNode  >=  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	66	None	add
544	[BUG]  [BUGGY]  if(unexpectedException  ==  null  &&  curNode!=  null)  {  if(unexpectedException  >=  null  &&  curNode!=  null)  {  [CE]  illegal  start  of  expression  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException  ==  null  &&  curNode!=  null)  {  if(unexpectedException  >=  null  &&  curNode!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException    ==    null    &&    curNode!=    null)    {    if(unexpectedException  >=  null  &&  curNode!=  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	66	None	add
545	[BUG]  [BUGGY]  if(unexpectedException  ==  null  &&  curNode!=  null)  {  if(unexpectedException!=  null  &&  curNode  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException  ==  null  &&  curNode!=  null)  {  if(unexpectedException!=  null  &&  curNode  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException    ==    null    &&    curNode!=    null)    {    if(unexpectedException!=  null  &&  curNode  ==  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	66	None	add
546	[BUG]  [BUGGY]  if(unexpectedException.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  Feature  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(unknownException.getMessage()    ==    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	48	None	replace
547	[BUG]  [BUGGY]  if(node.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  node  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(node.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(node.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(unknownException.getMessage()    ==    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  node	48	None	replace
548	[BUG]  [BUGGY]  if(curNode.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(unknownException.getMessage()    ==    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
549	[BUG]  [BUGGY]  if(buffer.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  buffer  [FE]                              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(buffer.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(buffer.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(unknownException.getMessage()    ==    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  buffer	48	None	replace
550	[BUG]  [BUGGY]  if(scopeCreator.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  [FE]                                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(scopeCreator.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(scopeCreator.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(unknownException.getMessage()    ==    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
551	[BUG]  [BUGGY]  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  ||  curNode  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId  ==  null  ||  curNode  ==  null)  {	  if(inputId    ==    null)    {    if(inputId    ==    null    ||    inputId    ==    null)    {    	compilable	timeout	116	1	replace
552	[BUG]  [BUGGY]  if(inputId  ==  null  ||  curNode  ==  null)  {  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  ||  curNode  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId  ==  null  ||  curNode  ==  null)  {	  if(inputId    ==    null)    {    if(inputId    ==    null    ||    inputId    ==    null)    {    	compilable	timeout	116	1	replace
553	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  curNode.getParent().length()  >  0)  {  [CE]  cannot  find  symbol  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  curNode.getParent().length()  >  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  curNode.getParent().length()  >  0)  {	  if(unexpectedException!=    null    &&    unexpectedException.getMessage().length()    >    0)    {    timeout    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
554	[BUG]  [BUGGY]  timeout  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  curNode.getLineno()  >  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException!=  null  &&  curNode.getLineno()  >  0)  {	  if(unexpectedException!=    null    &&    unexpectedException.getMessage().length()    >    0)    {    timeout    	compilable	timeout	69	1	replace
555	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  curNode.getLineno()  >  0)  {  timeout  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  curNode.getLineno()  >  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  curNode.getLineno()  >  0)  {	  if(unexpectedException!=    null    &&    unexpectedException.getMessage().length()    >    0)    {    timeout    	compilable	timeout	69	1	replace
556	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  curNode.getMessage().length()  >  0)  {  [CE]  cannot  find  symbol  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  curNode.getMessage().length()  >  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  curNode.getMessage().length()  >  0)  {	  if(unexpectedException!=    null    &&    unexpectedException.getMessage().length()    >    0)    {    timeout    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
557	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  curNode  ==  null?  null  :  curNode.getParent())  {  [CE]  incompatible  types  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  curNode  ==  null?  null  :  curNode.getParent())  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  curNode  ==  null?  null  :  curNode.getParent())  {	  if(unexpectedException!=    null    &&    unexpectedException.getMessage().length()    >    0)    {    timeout    	non-compiled	[CE]  incompatible  types	69	None	replace
558	[BUG]  [BUGGY]  timeout  [FE]                              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  unexpectedException.getMessage().length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException!=  null  &&  unexpectedException.getMessage().length()  ==  0)  {	  if(unexpectedException!=    null    &&    unexpectedException.getMessage().length()    >    0)    {    timeout    	compilable	timeout	69	1	replace
559	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  unexpectedException.getMessage().length()  ==  0)  {  timeout  [FE]                              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  unexpectedException.getMessage().length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  unexpectedException.getMessage().length()  ==  0)  {	  if(unexpectedException!=    null    &&    unexpectedException.getMessage().length()    >    0)    {    timeout    	compilable	timeout	69	1	replace
560	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "/   "))  {  if(inputId!=  null  &&  inputId.equals( "/   "))  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "/   "))  {  if(inputId!=  null  &&  inputId.equals( "/   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "/   "))    {    if(inputId!=  null  &&  inputId.equals( "/   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	159	None	add
561	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "/   "))  {  if(inputId!=  null  &&  inputId.equals( "./   "))  {  [CE]  illegal  start  of  expression  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "/   "))  {  if(inputId!=  null  &&  inputId.equals( "./   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "/   "))    {    if(inputId!=  null  &&  inputId.equals( "./   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	159	None	add
562	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "/   "))  {  if(inputId  ==  null  &&  inputId.equals( "/   "))  {  [CE]  illegal  start  of  expression  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "/   "))  {  if(inputId  ==  null  &&  inputId.equals( "/   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "/   "))    {    if(inputId  ==  null  &&  inputId.equals( "/   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	159	None	add
563	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "/   "))  {  If(inputId!=  null  &&  inputId.equals( "/   "))  {  [CE]  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "/   "))  {  If(inputId!=  null  &&  inputId.equals( "/   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "/   "))    {    If(inputId!=  null  &&  inputId.equals( "/   "))  {	  timeout    	non-compiled	[CE]  	159	None	add
564	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "/   "))  {  if(inputId  >=  null  &&  inputId.equals( "/   "))  {  [CE]  illegal  start  of  expression  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "/   "))  {  if(inputId  >=  null  &&  inputId.equals( "/   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "/   "))    {    if(inputId  >=  null  &&  inputId.equals( "/   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	159	None	add
565	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "/   "))  {  if(inputId!=  null  &&  inputId.equals( "))  {  [CE]  unclosed  string  literal  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "/   "))  {  if(inputId!=  null  &&  inputId.equals( "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "/   "))    {    if(inputId!=  null  &&  inputId.equals( "))  {	  timeout    	non-compiled	[CE]  unclosed  string  literal	159	None	add
566	[BUG]  [BUGGY]  if(unknownException!=  null  &&  message.length()  ==  0)  {  [CE]  cannot  find  symbol  unknownException  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException!=  null  &&  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  &&  message.length()  ==  0)  {	  if(unknownException!=    null    ||    message.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	108	None	replace
567	[BUG]  [BUGGY]  if(message!=  null  ||  unexpectedException.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message!=  null  ||  unexpectedException.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message!=  null  ||  unexpectedException.length()  ==  0)  {	  if(unknownException!=    null    ||    message.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
568	[BUG]  [BUGGY]  if(message!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME,  inputId))  {  [CE]  cannot  find  symbol  Feature  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME,  inputId))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME,  inputId))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME,    message))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	130	None	replace
569	[BUG]  [BUGGY]  if(unknownException.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME,  message))  {  [CE]  cannot  find  symbol  unknownException  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME,  message))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME,  message))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME,    message))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	130	None	replace
570	[BUG]  [BUGGY]  if(message!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME,  message))  {  [CE]  cannot  find  symbol  Feature  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME,  message))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME,  message))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME,    message))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	130	None	replace
571	[BUG]  [BUGGY]  if(unknownException.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME,  message))  {  [CE]  cannot  find  symbol  unknownException  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME,  message))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME,  message))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME,    message))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	130	None	replace
572	[BUG]  [BUGGY]  if(message!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME,  parent))  {  [CE]  cannot  find  symbol  Feature  [FE]                              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME,  parent))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME,  parent))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME,    message))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	130	None	replace
573	[BUG]  [BUGGY]  if(unexpectedException.getMessage()  ==  null)  {  if(unexpectedException.getMessage()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()  ==  null)  {  if(unexpectedException.getMessage()  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()    ==    null)    {    if(unexpectedException.getMessage()  ==  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	105	None	add
574	[BUG]  [BUGGY]  if(unexpectedException.getMessage()  ==  null)  {  if(unexpectedException.getMessage()!=  null)  {  [CE]  illegal  start  of  expression  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()  ==  null)  {  if(unexpectedException.getMessage()!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()    ==    null)    {    if(unexpectedException.getMessage()!=  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	105	None	add
575	[BUG]  [BUGGY]  if(unexpectedException.getMessage()  ==  null)  {  If(unexpectedException.getMessage()  ==  null)  {  [CE]  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()  ==  null)  {  If(unexpectedException.getMessage()  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()    ==    null)    {    If(unexpectedException.getMessage()  ==  null)  {	  timeout    	non-compiled	[CE]  	105	None	add
576	[BUG]  [BUGGY]  if(unexpectedException.getMessage()  ==  null)  {  if(unexpectedException.getMessage()  >=  null)  {  [CE]  illegal  start  of  expression  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()  ==  null)  {  if(unexpectedException.getMessage()  >=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()    ==    null)    {    if(unexpectedException.getMessage()  >=  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	105	None	add
577	[BUG]  [BUGGY]  if(unexpectedException.getMessage()  ==  null)  {  if(unexpectedException.getMessage()  >>  null)  {  [CE]  illegal  start  of  expression  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()  ==  null)  {  if(unexpectedException.getMessage()  >>  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()    ==    null)    {    if(unexpectedException.getMessage()  >>  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	105	None	add
578	[BUG]  [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  inputId.equals(   "     "))  {  if(unexpectedException.getMessage()!=  null  &&  inputId.equals( "   "))  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  inputId.equals(   "     "))  {  if(unexpectedException.getMessage()!=  null  &&  inputId.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()!=    null    &&    inputId.equals(   "       "))    {    if(unexpectedException.getMessage()!=  null  &&  inputId.equals( "   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	5	None	add
579	[BUG]  [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  inputId.equals(   "     "))  {  if(unexpectedException.getMessage()!=  null  &&  inputId.equals( ".   "))  {  [CE]  illegal  start  of  expression  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  inputId.equals(   "     "))  {  if(unexpectedException.getMessage()!=  null  &&  inputId.equals( ".   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()!=    null    &&    inputId.equals(   "       "))    {    if(unexpectedException.getMessage()!=  null  &&  inputId.equals( ".   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	5	None	add
580	[BUG]  [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  inputId.equals(   "     "))  {  If(unexpectedException.getMessage()!=  null  &&  inputId.equals( "   "))  {  [CE]  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  inputId.equals(   "     "))  {  If(unexpectedException.getMessage()!=  null  &&  inputId.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()!=    null    &&    inputId.equals(   "       "))    {    If(unexpectedException.getMessage()!=  null  &&  inputId.equals( "   "))  {	  timeout    	non-compiled	[CE]  	5	None	add
581	[BUG]  [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  inputId.equals(   "     "))  {  if(unexpectedException.getMessage()  ==  null  &&  inputId.equals( "   "))  {  [CE]  illegal  start  of  expression  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  inputId.equals(   "     "))  {  if(unexpectedException.getMessage()  ==  null  &&  inputId.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()!=    null    &&    inputId.equals(   "       "))    {    if(unexpectedException.getMessage()  ==  null  &&  inputId.equals( "   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	5	None	add
582	[BUG]  [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  inputId.equals(   "     "))  {  if(unexpectedException.getMessage()  >=  null  &&  inputId.equals( "   "))  {  [CE]  illegal  start  of  expression  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  inputId.equals(   "     "))  {  if(unexpectedException.getMessage()  >=  null  &&  inputId.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()!=    null    &&    inputId.equals(   "       "))    {    if(unexpectedException.getMessage()  >=  null  &&  inputId.equals( "   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	5	None	add
583	[BUG]  [BUGGY]  if(includeScopes)  {  [CE]  cannot  find  symbol  includeScopes  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includeScopes)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includeScopes)  {	  if(includeNodeContext)    {    	non-compiled	[CE]  cannot  find  symbol  includeScopes	165	None	replace
584	[BUG]  [BUGGY]  if(includeFunction)  {  [CE]  cannot  find  symbol  includeFunction  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includeFunction)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includeFunction)  {	  if(includeNodeContext)    {    	non-compiled	[CE]  cannot  find  symbol  includeFunction	165	None	replace
585	[BUG]  [BUGGY]  if(includeContext)  {  [CE]  cannot  find  symbol  includeContext  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includeContext)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includeContext)  {	  if(includeNodeContext)    {    	non-compiled	[CE]  cannot  find  symbol  includeContext	165	None	replace
586	[BUG]  [BUGGY]  if(includeNull)  {  [CE]  cannot  find  symbol  includeNull  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includeNull)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includeNull)  {	  if(includeNodeContext)    {    	non-compiled	[CE]  cannot  find  symbol  includeNull	165	None	replace
587	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_ERROR))  {  [CE]  cannot  find  symbol  Feature  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_ERROR))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_ERROR))  {	  if(unexpectedException!=    null    &&    isEnabled(Feature.QUOTE_NON_NULL_RESULT))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	120	None	replace
588	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_ASSIGN))  {  [CE]  cannot  find  symbol  Feature  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_ASSIGN))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_ASSIGN))  {	  if(unexpectedException!=    null    &&    isEnabled(Feature.QUOTE_NON_NULL_RESULT))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	120	None	replace
589	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_ARGUMENT))  {  [CE]  cannot  find  symbol  Feature  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_ARGUMENT))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_ARGUMENT))  {	  if(unexpectedException!=    null    &&    isEnabled(Feature.QUOTE_NON_NULL_RESULT))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	120	None	replace
590	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  [CE]  cannot  find  symbol  Feature  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_VALUE))  {	  if(unexpectedException!=    null    &&    isEnabled(Feature.QUOTE_NON_NULL_RESULT))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	120	None	replace
591	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_READ))  {  [CE]  cannot  find  symbol  Feature  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_READ))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_READ))  {	  if(unexpectedException!=    null    &&    isEnabled(Feature.QUOTE_NON_NULL_RESULT))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	120	None	replace
592	[BUG]  [BUGGY]  timeout  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  inputId.equals( "n "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException!=  null  &&  inputId.equals( "n "))  {	  if(unexpectedException!=    null    &&    inputId.equals(   "       "))    {    timeout    	compilable	timeout	4	1	replace
593	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  inputId.equals( "n "))  {  timeout  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  inputId.equals( "n "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  inputId.equals( "n "))  {	  if(unexpectedException!=    null    &&    inputId.equals(   "       "))    {    timeout    	compilable	timeout	4	1	replace
594	[BUG]  [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.WARNING_SOURCE))  {  [CE]  cannot  find  symbol  Feature  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.WARNING_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  isEnabled(Feature.WARNING_SOURCE))  {	  if(inputId!=    null    &&    isEnabled(Feature.WARNING_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	101	None	replace
595	[BUG]  [BUGGY]  if(unknownException.getMessage()!=  null  &&  isEnabled(Feature.WARNING_TO_STREAM))  {  [CE]  cannot  find  symbol  unknownException  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.getMessage()!=  null  &&  isEnabled(Feature.WARNING_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.getMessage()!=  null  &&  isEnabled(Feature.WARNING_TO_STREAM))  {	  if(inputId!=    null    &&    isEnabled(Feature.WARNING_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	101	None	replace
596	[BUG]  [BUGGY]  if(unknownException!=  null  &&  isEnabled(Feature.WARNING_TO_STREAM))  {  [CE]  cannot  find  symbol  unknownException  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException!=  null  &&  isEnabled(Feature.WARNING_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  &&  isEnabled(Feature.WARNING_TO_STREAM))  {	  if(inputId!=    null    &&    isEnabled(Feature.WARNING_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	101	None	replace
597	[BUG]  [BUGGY]  if(inputId!=  null  ||  isEnabled(Feature.WARNING_TO_STREAM))  {  [CE]  cannot  find  symbol  Feature  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  ||  isEnabled(Feature.WARNING_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  ||  isEnabled(Feature.WARNING_TO_STREAM))  {	  if(inputId!=    null    &&    isEnabled(Feature.WARNING_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	101	None	replace
598	[BUG]  [BUGGY]  if(unknownException.getMessage()  ==  null  &&  isEnabled(Feature.WARNING_TO_STREAM))  {  [CE]  cannot  find  symbol  unknownException  [FE]                              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.getMessage()  ==  null  &&  isEnabled(Feature.WARNING_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.getMessage()  ==  null  &&  isEnabled(Feature.WARNING_TO_STREAM))  {	  if(inputId!=    null    &&    isEnabled(Feature.WARNING_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	101	None	replace
599	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "n   "))  {  if(inputId!=  null  &&  inputId.equals( "n   "))  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "n   "))  {  if(inputId!=  null  &&  inputId.equals( "n   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "n   "))    {    if(inputId!=  null  &&  inputId.equals( "n   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
600	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "n   "))  {  if(inputId!=  null  &&  inputId.equals( ".n   "))  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "n   "))  {  if(inputId!=  null  &&  inputId.equals( ".n   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "n   "))    {    if(inputId!=  null  &&  inputId.equals( ".n   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
601	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "n   "))  {  if(inputId  ==  null  &&  inputId.equals( "n   "))  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "n   "))  {  if(inputId  ==  null  &&  inputId.equals( "n   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "n   "))    {    if(inputId  ==  null  &&  inputId.equals( "n   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
602	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "n   "))  {  If(inputId!=  null  &&  inputId.equals( "n   "))  {  [CE]  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "n   "))  {  If(inputId!=  null  &&  inputId.equals( "n   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "n   "))    {    If(inputId!=  null  &&  inputId.equals( "n   "))  {	  timeout    	non-compiled	[CE]  	1	None	add
603	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "n   "))  {  if(inputId  >=  null  &&  inputId.equals( "n   "))  {  [CE]  illegal  start  of  expression  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "n   "))  {  if(inputId  >=  null  &&  inputId.equals( "n   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "n   "))    {    if(inputId  >=  null  &&  inputId.equals( "n   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
604	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "n   "))  {  if(inputId!=  null  &&  inputId.equals( ",n   "))  {  [CE]  illegal  start  of  expression  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "n   "))  {  if(inputId!=  null  &&  inputId.equals( ",n   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "n   "))    {    if(inputId!=  null  &&  inputId.equals( ",n   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
605	[BUG]  [BUGGY]  if(message  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  Feature  [FE]                              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(inputId    ==    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	51	None	replace
606	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  unexpectedException.length()  >  0)  {  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  unexpectedException.length()  >  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  unexpectedException.length()  >  0)  {	  if(unknownException!=    null    &&    unexpectedException.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
607	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  curNode.length()  >  0)  {  [CE]  cannot  find  symbol  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  curNode.length()  >  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  curNode.length()  >  0)  {	  if(unknownException!=    null    &&    unexpectedException.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol	137	None	replace
608	[BUG]  [BUGGY]  Node  curNode  =  cfgs.next();  [CE]  <identifier>  expected  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  cfgs.next();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  cfgs.next();	  Node    curNode    =    cfgs.getCurrentNode();    	non-compiled	[CE]  <identifier>  expected	113	None	replace
609	[BUG]  [BUGGY]  Node  curNode  =  cfgs.getCurrentNode()  +  1;  [CE]  <identifier>  expected  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  cfgs.getCurrentNode()  +  1;  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  cfgs.getCurrentNode()  +  1;	  Node    curNode    =    cfgs.getCurrentNode();    	non-compiled	[CE]  <identifier>  expected	113	None	replace
610	[BUG]  [BUGGY]  Node  curNode  =  cfgs.getLastChild();  [CE]  <identifier>  expected  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  cfgs.getLastChild();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  cfgs.getLastChild();	  Node    curNode    =    cfgs.getCurrentNode();    	non-compiled	[CE]  <identifier>  expected	113	None	replace
611	[BUG]  [BUGGY]  Node  curNode  =  cfgs.getCurrentNode(message);  [CE]  <identifier>  expected  [FE]                              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  cfgs.getCurrentNode(message);  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  cfgs.getCurrentNode(message);	  Node    curNode    =    cfgs.getCurrentNode();    	non-compiled	[CE]  <identifier>  expected	113	None	replace
612	[BUG]  [BUGGY]  if(unexpectedException.getMessage()  ==  null  &&  inputId.equals(   "     "))  {  if(unexpectedException.getMessage()  ==  null  &&  inputId.equals( "   "))  {  [CE]  illegal  start  of  expression  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()  ==  null  &&  inputId.equals(   "     "))  {  if(unexpectedException.getMessage()  ==  null  &&  inputId.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()    ==    null    &&    inputId.equals(   "       "))    {    if(unexpectedException.getMessage()  ==  null  &&  inputId.equals( "   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	11	None	add
613	[BUG]  [BUGGY]  if(unexpectedException.getMessage()  ==  null  &&  inputId.equals(   "     "))  {  if(unexpectedException.getMessage()!=  null  &&  inputId.equals( "   "))  {  [CE]  illegal  start  of  expression  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()  ==  null  &&  inputId.equals(   "     "))  {  if(unexpectedException.getMessage()!=  null  &&  inputId.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()    ==    null    &&    inputId.equals(   "       "))    {    if(unexpectedException.getMessage()!=  null  &&  inputId.equals( "   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	11	None	add
614	[BUG]  [BUGGY]  if(unexpectedException.getMessage()  ==  null  &&  inputId.equals(   "     "))  {  if(unexpectedException.getMessage()  ==  null  &&  inputId.equals( ".   "))  {  [CE]  illegal  start  of  expression  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()  ==  null  &&  inputId.equals(   "     "))  {  if(unexpectedException.getMessage()  ==  null  &&  inputId.equals( ".   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()    ==    null    &&    inputId.equals(   "       "))    {    if(unexpectedException.getMessage()  ==  null  &&  inputId.equals( ".   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	11	None	add
615	[BUG]  [BUGGY]  if(unexpectedException.getMessage()  ==  null  &&  inputId.equals(   "     "))  {  If(unexpectedException.getMessage()  ==  null  &&  inputId.equals( "   "))  {  [CE]  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()  ==  null  &&  inputId.equals(   "     "))  {  If(unexpectedException.getMessage()  ==  null  &&  inputId.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()    ==    null    &&    inputId.equals(   "       "))    {    If(unexpectedException.getMessage()  ==  null  &&  inputId.equals( "   "))  {	  timeout    	non-compiled	[CE]  	11	None	add
616	[BUG]  [BUGGY]  if(unexpectedException.getMessage()!=  null?   "n "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "n "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [CE]  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()!=  null?   "n "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "n "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()!=  null?   "n "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "n "  :  formatNodeContext( "Parent   ",  curNode.getParent()));	  if(unexpectedException.getMessage()!=    null?       "n   "    :    formatNodeContext(   "Node       ",    curNode)    +    (curNode    ==    null?       "       "    :    formatNodeContext(   "Parent       ",    curNode.getParent()));    	non-compiled	[CE]  	72	None	replace
617	[BUG]  [BUGGY]  if(unexpectedException.getMessage()  ==  null?   "n "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "n "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [CE]  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()  ==  null?   "n "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "n "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()  ==  null?   "n "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "n "  :  formatNodeContext( "Parent   ",  curNode.getParent()));	  if(unexpectedException.getMessage()!=    null?       "n   "    :    formatNodeContext(   "Node       ",    curNode)    +    (curNode    ==    null?       "       "    :    formatNodeContext(   "Parent       ",    curNode.getParent()));    	non-compiled	[CE]  	72	None	replace
618	[BUG]  [BUGGY]  if(unexpectedException.getMessage()  ==  null?   "n "  :  formatNodeContext( "Node   ",  curNode)+  (curNode!=  null?   "n "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [CE]  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()  ==  null?   "n "  :  formatNodeContext( "Node   ",  curNode)+  (curNode!=  null?   "n "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()  ==  null?   "n "  :  formatNodeContext( "Node   ",  curNode)+  (curNode!=  null?   "n "  :  formatNodeContext( "Parent   ",  curNode.getParent()));	  if(unexpectedException.getMessage()!=    null?       "n   "    :    formatNodeContext(   "Node       ",    curNode)    +    (curNode    ==    null?       "       "    :    formatNodeContext(   "Parent       ",    curNode.getParent()));    	non-compiled	[CE]  	72	None	replace
619	[BUG]  [BUGGY]  if(unexpectedException.getMessage()!=  null?   "n "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "n "  :  formatNodeContext( "Parent   ",  curNode.getParent())  [CE]  [FE]                              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()!=  null?   "n "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "n "  :  formatNodeContext( "Parent   ",  curNode.getParent())  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()!=  null?   "n "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "n "  :  formatNodeContext( "Parent   ",  curNode.getParent())	  if(unexpectedException.getMessage()!=    null?       "n   "    :    formatNodeContext(   "Node       ",    curNode)    +    (curNode    ==    null?       "       "    :    formatNodeContext(   "Parent       ",    curNode.getParent()));    	non-compiled	[CE]  	72	None	replace
620	[BUG]  [BUGGY]  if(unexpectedException.getMessage()!=  null?   "null "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "null "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [CE]  [FE]                                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()!=  null?   "null "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "null "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()!=  null?   "null "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "null "  :  formatNodeContext( "Parent   ",  curNode.getParent()));	  if(unexpectedException.getMessage()!=    null?       "n   "    :    formatNodeContext(   "Node       ",    curNode)    +    (curNode    ==    null?       "       "    :    formatNodeContext(   "Parent       ",    curNode.getParent()));    	non-compiled	[CE]  	72	None	replace
621	[BUG]  [BUGGY]  if(unknownException.getMessage()!=  null  ||  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  unknownException  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.getMessage()!=  null  ||  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.getMessage()!=  null  ||  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(inputId!=    null    ||    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	88	None	replace
622	[BUG]  [BUGGY]  if(unexpectedException!=  null  ||  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  Feature  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  ||  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  ||  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(inputId!=    null    ||    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	88	None	replace
623	[BUG]  [BUGGY]  if(unknownException.getMessage()  ==  null  ||  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  unknownException  [FE]                              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.getMessage()  ==  null  ||  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.getMessage()  ==  null  ||  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(inputId!=    null    ||    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	88	None	replace
624	[BUG]  [BUGGY]  if(inputId  ==  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  Feature  [FE]                                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId  ==  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(inputId!=    null    ||    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	88	None	replace
625	[BUG]  [BUGGY]  if(inputId  ==  null  ||  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  Feature  [FE]                                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  ||  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId  ==  null  ||  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(inputId!=    null    ||    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	88	None	replace
626	[BUG]  [BUGGY]  if(includes  ||  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  includes  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includes  ||  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includes  ||  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(included    ||    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  includes	149	None	replace
627	[BUG]  [BUGGY]  if(included  ||  isEnabled(Feature.MISSING_SOURCE))  {  [CE]  cannot  find  symbol  included  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(included  ||  isEnabled(Feature.MISSING_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(included  ||  isEnabled(Feature.MISSING_SOURCE))  {	  if(included    ||    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  included	149	None	replace
628	[BUG]  [BUGGY]  if(included  ||  isEnabled(Feature.AUTO_CLOSE_SOURCE,  message))  {  [CE]  cannot  find  symbol  included  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(included  ||  isEnabled(Feature.AUTO_CLOSE_SOURCE,  message))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(included  ||  isEnabled(Feature.AUTO_CLOSE_SOURCE,  message))  {	  if(included    ||    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  included	149	None	replace
629	[BUG]  [BUGGY]  if(!included  ||  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  included  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(!included  ||  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(!included  ||  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(included    ||    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  included	149	None	replace
630	[BUG]  [BUGGY]  if(isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  Feature  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(included    ||    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	149	None	replace
631	[BUG]  [BUGGY]  if(included  ||  isEnabled(Feature.AUTO_CLOSE_SOURCE)&&  message.length()  ==  0)  {  [CE]  cannot  find  symbol  included  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(included  ||  isEnabled(Feature.AUTO_CLOSE_SOURCE)&&  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(included  ||  isEnabled(Feature.AUTO_CLOSE_SOURCE)&&  message.length()  ==  0)  {	  if(included    ||    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  included	149	None	replace
632	[BUG]  [BUGGY]  if(curNode!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  Feature  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(inputId!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	45	None	replace
633	[BUG]  [BUGGY]  if(sourceName!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  Feature  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(sourceName!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(sourceName!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(inputId!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	45	None	replace
634	[BUG]  [BUGGY]  if(unknownException.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAME,  inputId))  {  [CE]  cannot  find  symbol  unknownException  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAME,  inputId))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAME,  inputId))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME,    message))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	130	None	replace
635	[BUG]  [BUGGY]  if(curNode!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME,  message))  {  [CE]  cannot  find  symbol  Feature  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME,  message))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME,  message))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME,    message))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	130	None	replace
636	[BUG]  [BUGGY]  if(message.equals(UNKNOWN_EXPR_RESULT)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  UNKNOWN_EXPR_RESULT  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message.equals(UNKNOWN_EXPR_RESULT)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message.equals(UNKNOWN_EXPR_RESULT)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(unknownException.equals(message)&&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_EXPR_RESULT	132	None	replace
637	[BUG]  [BUGGY]  if(nodeTypes.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  nodeTypes  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(nodeTypes.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(nodeTypes.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(unknownException.equals(message)&&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  nodeTypes	132	None	replace
638	[BUG]  [BUGGY]  if(exception.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  exception  [FE]                              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(exception.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(exception.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(unknownException.equals(message)&&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  exception	132	None	replace
639	[BUG]  [BUGGY]  if(curNode  ==  null)  {  if(curNode  ==  null  ||  unexpectedException.getMessage()!=   "n "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null?   "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  [CE]  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode  ==  null)  {  if(curNode  ==  null  ||  unexpectedException.getMessage()!=   "n "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null?   "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode    ==    null)    {    if(curNode  ==  null  ||  unexpectedException.getMessage()!=   "n "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null?   "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));	  timeout    	non-compiled	[CE]  	21	None	add
640	[BUG]  [BUGGY]  if(curNode  ==  null)  {  if(curNode  ==  null  ||  unexpectedException.getMessage()!=   "n "  +  formatNodeContext( ")Node   ",  curNode)  +  (curNode  ==  null?   "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  [CE]  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode  ==  null)  {  if(curNode  ==  null  ||  unexpectedException.getMessage()!=   "n "  +  formatNodeContext( ")Node   ",  curNode)  +  (curNode  ==  null?   "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode    ==    null)    {    if(curNode  ==  null  ||  unexpectedException.getMessage()!=   "n "  +  formatNodeContext( ")Node   ",  curNode)  +  (curNode  ==  null?   "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));	  timeout    	non-compiled	[CE]  	21	None	add
641	[BUG]  [BUGGY]  if(unknownException!=  null  &&  message.equals( "   "))  {  [CE]  cannot  find  symbol  unknownException  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException!=  null  &&  message.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  &&  message.equals( "   "))  {	  if(inputId!=    null    &&    inputId.equals(       "       "))    {    if(inputId!=    null    &&    inputId.equals(.   "       "))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	115	None	replace
642	[BUG]  [BUGGY]  if(unknownException.equals(message))  {  [CE]  cannot  find  symbol  unknownException  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.equals(message))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.equals(message))  {	  if(inputId!=    null    &&    inputId.equals(       "       "))    {    if(inputId!=    null    &&    inputId.equals(.   "       "))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	115	None	replace
643	[BUG]  [BUGGY]  timeout  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message  ==  null  &&  message.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(message  ==  null  &&  message.equals( "   "))  {	  if(inputId!=    null    &&    message.equals(   "       "))    {    timeout    	compilable	timeout	126	1	replace
644	[BUG]  [BUGGY]  if(message  ==  null  &&  message.equals( "   "))  {  timeout  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message  ==  null  &&  message.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message  ==  null  &&  message.equals( "   "))  {	  if(inputId!=    null    &&    message.equals(   "       "))    {    timeout    	compilable	timeout	126	1	replace
645	[BUG]  [BUGGY]  if(unexpectedException.getMessage()  ==  null  &&  inputId.equals(   "     "))  {  if(unexpectedException.getMessage()  ==  null  &&  inputId.equals( ",   "))  {  [CE]  illegal  start  of  expression  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()  ==  null  &&  inputId.equals(   "     "))  {  if(unexpectedException.getMessage()  ==  null  &&  inputId.equals( ",   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()    ==    null    &&    inputId.equals(   "       "))    {    if(unexpectedException.getMessage()  ==  null  &&  inputId.equals( ",   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	11	None	add
646	[BUG]  [BUGGY]  if(unexpectedException.getMessage()  ==  null  &&  inputId.equals(   "     "))  {  if(unexpectedException.getMessage()  ==  null  &&  inputId.equals( "))  {  [CE]  unclosed  string  literal  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()  ==  null  &&  inputId.equals(   "     "))  {  if(unexpectedException.getMessage()  ==  null  &&  inputId.equals( "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()    ==    null    &&    inputId.equals(   "       "))    {    if(unexpectedException.getMessage()  ==  null  &&  inputId.equals( "))  {	  timeout    	non-compiled	[CE]  unclosed  string  literal	11	None	add
647	[BUG]  [BUGGY]  if(curNode  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  Feature  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(inputId    ==    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	43	None	replace
648	[BUG]  [BUGGY]  Node  curNode  =  cfgs.getScopeRoot(n,  sourceName);  [CE]  <identifier>  expected  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  cfgs.getScopeRoot(n,  sourceName);  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  cfgs.getScopeRoot(n,  sourceName);	  Node    curNode    =    cfgs.getScopeRoot(n);    	non-compiled	[CE]  <identifier>  expected	144	None	replace
649	[BUG]  [BUGGY]  String  sourceName  =  message.getString();  [CE]  <identifier>  expected  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  String  sourceName  =  message.getString();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	String  sourceName  =  message.getString();	  String    sourceName    =    curNode.getString();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
650	[BUG]  [BUGGY]  if(curNode  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  Feature  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(curNode!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	128	None	replace
651	[BUG]  [BUGGY]  if(include)  {  if(unexpectedException!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(include)  {  if(unexpectedException!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(include)  {  if(unexpectedException!=  null)  {	  if(unexpectedException!=    null)    {    if(unexpectedException    >=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
652	[BUG]  [BUGGY]  if(includeException)  {  if(unexpectedException!=  null)  {  [CE]  illegal  start  of  expression  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includeException)  {  if(unexpectedException!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includeException)  {  if(unexpectedException!=  null)  {	  if(unexpectedException!=    null)    {    if(unexpectedException    >=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
653	[BUG]  [BUGGY]  Node  curNode  =  n.getCurrentNode();  [CE]  <identifier>  expected  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  n.getCurrentNode();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  n.getCurrentNode();	  Node    curNode    =    cb.getCurrentNode();    	non-compiled	[CE]  <identifier>  expected	146	None	replace
654	[BUG]  [BUGGY]  if(null,  curNode.getMessage()!=  null)  {  [CE]  ')'  expected  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(null,  curNode.getMessage()!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(null,  curNode.getMessage()!=  null)  {	  if(null.getMessage()!=    null)    {    	non-compiled	[CE]  ')'  expected	32	None	replace
655	[BUG]  [BUGGY]  if(include)  {  If(unexpectedException!=  null)  {  [CE]  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(include)  {  If(unexpectedException!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(include)  {  If(unexpectedException!=  null)  {	  if(unexpectedException!=    null)    {    If(unexpectedException!=    null)    {    	non-compiled	[CE]  	75	None	replace
656	[BUG]  [BUGGY]  if(node  ==  null)  {  [CE]  cannot  find  symbol  node  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(node  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(node  ==  null)  {	  if(unexpectedException!=    null)    {    If(unexpectedException!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  node	75	None	replace
657	[BUG]  [BUGGY]  if(includeScopes  ||  inputId!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  includeScopes  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includeScopes  ||  inputId!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includeScopes  ||  inputId!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(included    ||    inputId!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  includeScopes	147	None	replace
658	[BUG]  [BUGGY]  if(includeException  ||  curNode!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  includeException  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includeException  ||  curNode!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includeException  ||  curNode!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(included    ||    inputId!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  includeException	147	None	replace
659	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "+   "))  {  if(inputId!=  null  &&  inputId.equals( "))  {  [CE]  unclosed  string  literal  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "+   "))  {  if(inputId!=  null  &&  inputId.equals( "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "+   "))    {    if(inputId!=  null  &&  inputId.equals( "))  {	  timeout    	non-compiled	[CE]  unclosed  string  literal	157	None	add
660	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "+   "))  {  if(inputId!=  null  &&  inputId.equals('+   "))  {  [CE]  unclosed  character  literal  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "+   "))  {  if(inputId!=  null  &&  inputId.equals('+   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "+   "))    {    if(inputId!=  null  &&  inputId.equals('+   "))  {	  timeout    	non-compiled	[CE]  unclosed  character  literal	157	None	add
661	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [CE]  cannot  find  symbol  Feature  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NON_NUMERIC_NUMBERS))  {	  if(unexpectedException    ==    null)    {    timeout    	non-compiled	[CE]  cannot  find  symbol  Feature	20	None	replace
662	[BUG]  [BUGGY]  timeout  [FE]            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  message.equals( "- "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId!=  null  &&  message.equals( "- "))  {	  if(inputId!=    null    &&    inputId.equals(   "-   "))    {    timeout    	compilable	timeout	156	1	replace
663	[BUG]  [BUGGY]  if(inputId!=  null  &&  message.equals( "- "))  {  timeout  [FE]            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  message.equals( "- "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  message.equals( "- "))  {	  if(inputId!=    null    &&    inputId.equals(   "-   "))    {    timeout    	compilable	timeout	156	1	replace
664	[BUG]  [BUGGY]  if(unknownException!=  null  &&  inputId.equals( "- "))  {  [CE]  cannot  find  symbol  unknownException  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException!=  null  &&  inputId.equals( "- "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  &&  inputId.equals( "- "))  {	  if(inputId!=    null    &&    inputId.equals(   "-   "))    {    timeout    	non-compiled	[CE]  cannot  find  symbol  unknownException	156	None	replace
665	[BUG]  [BUGGY]  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  message.equals( "- "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException!=  null  &&  message.equals( "- "))  {	  if(inputId!=    null    &&    inputId.equals(   "-   "))    {    timeout    	compilable	timeout	156	1	replace
666	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  message.equals( "- "))  {  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  message.equals( "- "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  message.equals( "- "))  {	  if(inputId!=    null    &&    inputId.equals(   "-   "))    {    timeout    	compilable	timeout	156	1	replace
667	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isInternalError(message,  unexpectedException))  {  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isInternalError(message,  unexpectedException))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isInternalError(message,  unexpectedException))  {	  if(unexpectedException!=    null    &&    isInternalError(message))    {    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
668	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isInternalError(message,  unknownException))  {  [CE]  cannot  find  symbol  unknownException  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isInternalError(message,  unknownException))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isInternalError(message,  unknownException))  {	  if(unexpectedException!=    null    &&    isInternalError(message))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	63	None	replace
669	[BUG]  [BUGGY]  if(includeException  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  includeException  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includeException  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includeException  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(unknownException!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  includeException	127	None	replace
670	[BUG]  [BUGGY]  if(unknownException!=  null  &&  isEnabled(Feature.ERROR_MESSAGE))  {  [CE]  cannot  find  symbol  unknownException  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException!=  null  &&  isEnabled(Feature.ERROR_MESSAGE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  &&  isEnabled(Feature.ERROR_MESSAGE))  {	  if(unknownException!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	127	None	replace
671	[BUG]  [BUGGY]  timeout  [FE]            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  &&  inputId.equals( "node "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId  ==  null  &&  inputId.equals( "node "))  {	  if(inputId!=    null    &&    inputId.equals(   "n   "))    {    timeout    	compilable	timeout	2	1	replace
672	[BUG]  [BUGGY]  if(inputId  ==  null  &&  inputId.equals( "node "))  {  timeout  [FE]            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  &&  inputId.equals( "node "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId  ==  null  &&  inputId.equals( "node "))  {	  if(inputId!=    null    &&    inputId.equals(   "n   "))    {    timeout    	compilable	timeout	2	1	replace
673	[BUG]  [BUGGY]  timeout  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  ||  inputId.equals( "node "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId!=  null  ||  inputId.equals( "node "))  {	  if(inputId!=    null    &&    inputId.equals(   "n   "))    {    timeout    	compilable	timeout	2	1	replace
674	[BUG]  [BUGGY]  if(inputId!=  null  ||  inputId.equals( "node "))  {  timeout  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  ||  inputId.equals( "node "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  ||  inputId.equals( "node "))  {	  if(inputId!=    null    &&    inputId.equals(   "n   "))    {    timeout    	compilable	timeout	2	1	replace
675	[BUG]  [BUGGY]  if(unknownException!=  null  &&  inputId.equals( "node "))  {  [CE]  cannot  find  symbol  unknownException  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException!=  null  &&  inputId.equals( "node "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  &&  inputId.equals( "node "))  {	  if(inputId!=    null    &&    inputId.equals(   "n   "))    {    timeout    	non-compiled	[CE]  cannot  find  symbol  unknownException	2	None	replace
676	[BUG]  [BUGGY]  Node  curNode  =  this.node.getFirstChild();  [CE]  <identifier>  expected  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  this.node.getFirstChild();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  this.node.getFirstChild();	  Node    curNode    =    n.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	143	None	replace
677	[BUG]  [BUGGY]  if(includeNode)  {  [CE]  cannot  find  symbol  includeNode  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includeNode)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includeNode)  {	  if(includeNodeContext)    {    	non-compiled	[CE]  cannot  find  symbol  includeNode	165	None	replace
678	[BUG]  [BUGGY]  if(includeCurrentNode)  {  [CE]  cannot  find  symbol  includeCurrentNode  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includeCurrentNode)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includeCurrentNode)  {	  if(includeNodeContext)    {    	non-compiled	[CE]  cannot  find  symbol  includeCurrentNode	165	None	replace
679	[BUG]  [BUGGY]  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  message.equals( "/ "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId!=  null  &&  message.equals( "/ "))  {	  if(inputId!=    null    &&    inputId.equals(   "/   "))    {    timeout    	compilable	timeout	160	1	replace
680	[BUG]  [BUGGY]  if(inputId!=  null  &&  message.equals( "/ "))  {  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  message.equals( "/ "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  message.equals( "/ "))  {	  if(inputId!=    null    &&    inputId.equals(   "/   "))    {    timeout    	compilable	timeout	160	1	replace
681	[BUG]  [BUGGY]  if(unknownException!=  null  &&  inputId.equals( "/ "))  {  [CE]  cannot  find  symbol  unknownException  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException!=  null  &&  inputId.equals( "/ "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  &&  inputId.equals( "/ "))  {	  if(inputId!=    null    &&    inputId.equals(   "/   "))    {    timeout    	non-compiled	[CE]  cannot  find  symbol  unknownException	160	None	replace
682	[BUG]  [BUGGY]  timeout  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  message.equals( "/ "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException!=  null  &&  message.equals( "/ "))  {	  if(inputId!=    null    &&    inputId.equals(   "/   "))    {    timeout    	compilable	timeout	160	1	replace
683	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  message.equals( "/ "))  {  timeout  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  message.equals( "/ "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  message.equals( "/ "))  {	  if(inputId!=    null    &&    inputId.equals(   "/   "))    {    timeout    	compilable	timeout	160	1	replace
684	[BUG]  [BUGGY]  if(unknownException!=  null  &&  isEnabled(Feature.QUOTE_TO_STREAM))  {  [CE]  cannot  find  symbol  unknownException  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException!=  null  &&  isEnabled(Feature.QUOTE_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  &&  isEnabled(Feature.QUOTE_TO_STREAM))  {	  if(unknownException!=    null    &&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	139	None	replace
685	[BUG]  [BUGGY]  if(included  ||  scopeCreator.isInternal())  {  [CE]  cannot  find  symbol  included  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(included  ||  scopeCreator.isInternal())  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(included  ||  scopeCreator.isInternal())  {	  if(included)    {    	non-compiled	[CE]  cannot  find  symbol  included	166	None	replace
686	[BUG]  [BUGGY]  if(inputId  ==  null  &&  inputId.equals(   "   "))  {  if(inputId  ==  null  &&  inputId.equals( ",   "))  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  &&  inputId.equals(   "   "))  {  if(inputId  ==  null  &&  inputId.equals( ",   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId    ==    null    &&    inputId.equals(   "   "))    {    if(inputId  ==  null  &&  inputId.equals( ",   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	123	None	add
687	[BUG]  [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  inputId.equals(   "     "))  {  if(unexpectedException.getMessage()!=  null  &&  inputId.equals( ",   "))  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  inputId.equals(   "     "))  {  if(unexpectedException.getMessage()!=  null  &&  inputId.equals( ",   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()!=    null    &&    inputId.equals(   "       "))    {    if(unexpectedException.getMessage()!=  null  &&  inputId.equals( ",   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	5	None	add
688	[BUG]  [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  inputId.equals(   "     "))  {  if(unexpectedException.getMessage()!=  null  &&  inputId.equals( "))  {  [CE]  unclosed  string  literal  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()!=  null  &&  inputId.equals(   "     "))  {  if(unexpectedException.getMessage()!=  null  &&  inputId.equals( "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()!=    null    &&    inputId.equals(   "       "))    {    if(unexpectedException.getMessage()!=  null  &&  inputId.equals( "))  {	  timeout    	non-compiled	[CE]  unclosed  string  literal	5	None	add
689	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NAME))  {  [CE]  cannot  find  symbol  Feature  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NAME))  {	  if(unexpectedException!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	47	None	replace
690	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_SOURCE_ERROR))  {  [CE]  cannot  find  symbol  Feature  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_SOURCE_ERROR))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_SOURCE_ERROR))  {	  if(unexpectedException!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	47	None	replace
691	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.EXPR_RESULT_NAME))  {  [CE]  cannot  find  symbol  Feature  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.EXPR_RESULT_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.EXPR_RESULT_NAME))  {	  if(unexpectedException!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	47	None	replace
692	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_SOURCE_NAME))  {  [CE]  cannot  find  symbol  Feature  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_SOURCE_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_SOURCE_NAME))  {	  if(unexpectedException!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	47	None	replace
693	[BUG]  [BUGGY]  if(include)  {  if(unexpectedException  ==  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(include)  {  if(unexpectedException  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(include)  {  if(unexpectedException  ==  null)  {	  if(unexpectedException!=    null)    {    if(unexpectedException    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
694	[BUG]  [BUGGY]  if(includeException)  {  if(unexpectedException  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includeException)  {  if(unexpectedException  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includeException)  {  if(unexpectedException  ==  null)  {	  if(unexpectedException!=    null)    {    if(unexpectedException    ==    null)    {    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
695	[BUG]  [BUGGY]  if(scope.getMessage()!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  scope  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(scope.getMessage()!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(scope.getMessage()!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(unknownException.getMessage()!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  scope	23	None	replace
696	[BUG]  [BUGGY]  if(scope.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  scope  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(scope.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(scope.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException.getMessage()    ==    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  scope	42	None	replace
697	[BUG]  [BUGGY]  timeout  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  ||  message.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId  ==  null  ||  message.equals( "   "))  {	  if(inputId!=    null    ||    inputId.equals(   "       "))    {    timeout    	compilable	timeout	8	1	replace
698	[BUG]  [BUGGY]  if(inputId  ==  null  ||  message.equals( "   "))  {  timeout  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  ||  message.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId  ==  null  ||  message.equals( "   "))  {	  if(inputId!=    null    ||    inputId.equals(   "       "))    {    timeout    	compilable	timeout	8	1	replace
699	[BUG]  [BUGGY]  timeout  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  ||  message.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId!=  null  ||  message.equals( "   "))  {	  if(inputId!=    null    ||    inputId.equals(   "       "))    {    timeout    	compilable	timeout	8	1	replace
700	[BUG]  [BUGGY]  if(inputId!=  null  ||  message.equals( "   "))  {  timeout  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  ||  message.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  ||  message.equals( "   "))  {	  if(inputId!=    null    ||    inputId.equals(   "       "))    {    timeout    	compilable	timeout	8	1	replace
701	[BUG]  [BUGGY]  timeout  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  ||  curNode  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(curNode!=  null  ||  curNode  ==  null)  {	  if(curNode    ==    null)    {    timeout    	compilable	timeout	22	1	replace
702	[BUG]  [BUGGY]  if(curNode!=  null  ||  curNode  ==  null)  {  timeout  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  ||  curNode  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null  ||  curNode  ==  null)  {	  if(curNode    ==    null)    {    timeout    	compilable	timeout	22	1	replace
703	[BUG]  [BUGGY]  timeout  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  ||  curNode!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(curNode!=  null  ||  curNode!=  null)  {	  if(curNode    ==    null)    {    timeout    	compilable	timeout	22	1	replace
704	[BUG]  [BUGGY]  if(curNode!=  null  ||  curNode!=  null)  {  timeout  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  ||  curNode!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null  ||  curNode!=  null)  {	  if(curNode    ==    null)    {    timeout    	compilable	timeout	22	1	replace
705	[BUG]  [BUGGY]  if(unexpectedException.getMessage()  ==  null)  {  if(uneexpectedException.getMessage()  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()  ==  null)  {  if(uneexpectedException.getMessage()  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()    ==    null)    {    if(uneexpectedException.getMessage()  ==  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	105	None	add
706	[BUG]  [BUGGY]  if(unexpectedException.getMessage()  ==  null)  {  when(unexpectedException.getMessage()  ==  null)  {  [CE]  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()  ==  null)  {  when(unexpectedException.getMessage()  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()    ==    null)    {    when(unexpectedException.getMessage()  ==  null)  {	  timeout    	non-compiled	[CE]  	105	None	add
707	[BUG]  [BUGGY]  if(unknownException.equals(sourceName)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  unknownException  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.equals(sourceName)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.equals(sourceName)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(unknownException.equals(message)&&    inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	129	None	replace
708	[BUG]  [BUGGY]  if(inputId.equals(message)&&  unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  Feature  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId.equals(message)&&  unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId.equals(message)&&  unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(unknownException.equals(message)&&    inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	129	None	replace
709	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  inputId.equals(   "     "))  {  if(unexpectedException!=  null  &&  inputId.equals( ",   "))  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  inputId.equals(   "     "))  {  if(unexpectedException!=  null  &&  inputId.equals( ",   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=    null    &&    inputId.equals(   "       "))    {    if(unexpectedException!=  null  &&  inputId.equals( ",   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	3	None	add
710	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  inputId.equals(   "     "))  {  if(unexpectedException!=  null  &&  inputId.equals( "))  {  [CE]  unclosed  string  literal  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  inputId.equals(   "     "))  {  if(unexpectedException!=  null  &&  inputId.equals( "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=    null    &&    inputId.equals(   "       "))    {    if(unexpectedException!=  null  &&  inputId.equals( "))  {	  timeout    	non-compiled	[CE]  unclosed  string  literal	3	None	add
711	[BUG]  [BUGGY]  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message!=  null  &&  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(message!=  null  &&  message.length()  ==  0)  {	  if(inputId!=    null    ||    message.length()    ==    0)    {    timeout    	compilable	timeout	96	1	replace
712	[BUG]  [BUGGY]  if(message!=  null  &&  message.length()  ==  0)  {  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message!=  null  &&  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message!=  null  &&  message.length()  ==  0)  {	  if(inputId!=    null    ||    message.length()    ==    0)    {    timeout    	compilable	timeout	96	1	replace
713	[BUG]  [BUGGY]  String  sourceName  =  scopeCreator.getSourceName();  [CE]  <identifier>  expected  [FE]                              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  String  sourceName  =  scopeCreator.getSourceName();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	String  sourceName  =  scopeCreator.getSourceName();	  String    sourceName    =    cb.getSourceName();    	non-compiled	[CE]  <identifier>  expected	56	None	replace
714	[BUG]  [BUGGY]  String  sourceName  =  cb.getSourceReference();  [CE]  <identifier>  expected  [FE]                                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  String  sourceName  =  cb.getSourceReference();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	String  sourceName  =  cb.getSourceReference();	  String    sourceName    =    cb.getSourceName();    	non-compiled	[CE]  <identifier>  expected	56	None	replace
715	[BUG]  [BUGGY]  if(inputId!=  null  &&  message.equals(   "     "))  {  if(inputId!=  null  &&  message.equals( ",   "))  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  message.equals(   "     "))  {  if(inputId!=  null  &&  message.equals( ",   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    message.equals(   "       "))    {    if(inputId!=  null  &&  message.equals( ",   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	125	None	add
716	[BUG]  [BUGGY]  if(inputId!=  null  &&  message.equals(   "     "))  {  if(inputId!=  null  &&  message.equals(. "   "))  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  message.equals(   "     "))  {  if(inputId!=  null  &&  message.equals(. "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    message.equals(   "       "))    {    if(inputId!=  null  &&  message.equals(. "   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	125	None	add
717	[BUG]  [BUGGY]  if(curNode!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [CE]  cannot  find  symbol  Feature  [FE]            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {	  if(unexpectedException!=    null    &&    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	119	None	replace
718	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_TYPE))  {  [CE]  cannot  find  symbol  Feature  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_TYPE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_TYPE))  {	  if(unexpectedException!=    null    &&    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	119	None	replace
719	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NULL_OBJECT))  {  [CE]  cannot  find  symbol  Feature  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NULL_OBJECT))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NULL_OBJECT))  {	  if(unexpectedException!=    null    &&    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	119	None	replace
720	[BUG]  [BUGGY]  timeout  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  sourceName  ==  null  &&  sourceName.equals( " "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException!=  null  &&  sourceName  ==  null  &&  sourceName.equals( " "))  {	  if(unexpectedException!=    null    &&    inputId.equals(   "       "))    {    timeout    	compilable	timeout	4	1	replace
721	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  sourceName  ==  null  &&  sourceName.equals( " "))  {  timeout  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  sourceName  ==  null  &&  sourceName.equals( " "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  sourceName  ==  null  &&  sourceName.equals( " "))  {	  if(unexpectedException!=    null    &&    inputId.equals(   "       "))    {    timeout    	compilable	timeout	4	1	replace
722	[BUG]  [BUGGY]  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  unexpectedException.equals( " "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId!=  null  &&  unexpectedException.equals( " "))  {	  if(unexpectedException!=    null    &&    inputId.equals(   "       "))    {    timeout    	compilable	timeout	4	1	replace
723	[BUG]  [BUGGY]  if(inputId!=  null  &&  unexpectedException.equals( " "))  {  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  unexpectedException.equals( " "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  unexpectedException.equals( " "))  {	  if(unexpectedException!=    null    &&    inputId.equals(   "       "))    {    timeout    	compilable	timeout	4	1	replace
724	[BUG]  [BUGGY]  if(message.equals( "unknown ")&&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  Feature  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message.equals( "unknown ")&&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message.equals( "unknown ")&&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(unknownException.equals(message)&&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	148	None	replace
725	[BUG]  [BUGGY]  if(scopeCreator.equals(message)&&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  Feature  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(scopeCreator.equals(message)&&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(scopeCreator.equals(message)&&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(unknownException.equals(message)&&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	148	None	replace
726	[BUG]  [BUGGY]  if(includeException.equals(message)&&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  includeException  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includeException.equals(message)&&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includeException.equals(message)&&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(unknownException.equals(message)&&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  includeException	148	None	replace
727	[BUG]  [BUGGY]  if(scope.getMessage()  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  scope  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(scope.getMessage()  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(scope.getMessage()  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(unknownException.getMessage()    ==    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  scope	25	None	replace
728	[BUG]  [BUGGY]  if(scope.getMessage()  ==  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  scope  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(scope.getMessage()  ==  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(scope.getMessage()  ==  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(unknownException.getMessage()    ==    null    &&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  scope	86	None	replace
729	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "/   "))  {  if(inputId!=  null  &&  inputId.equals(. "/   "))  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "/   "))  {  if(inputId!=  null  &&  inputId.equals(. "/   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "/   "))    {    if(inputId!=  null  &&  inputId.equals(. "/   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	159	None	add
730	[BUG]  [BUGGY]  timeout  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  unexpectedException.getMessage().length()  >=  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException!=  null  &&  unexpectedException.getMessage().length()  >=  0)  {	  if(unexpectedException!=    null    &&    unexpectedException.getMessage().length()    >    0)    {    timeout    	compilable	timeout	69	1	replace
731	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  unexpectedException.getMessage().length()  >=  0)  {  timeout  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  unexpectedException.getMessage().length()  >=  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  unexpectedException.getMessage().length()  >=  0)  {	  if(unexpectedException!=    null    &&    unexpectedException.getMessage().length()    >    0)    {    timeout    	compilable	timeout	69	1	replace
732	[BUG]  [BUGGY]  if(unknownException!=  null  &&  isEnabled(Feature.VISIBILITY_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  unknownException  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException!=  null  &&  isEnabled(Feature.VISIBILITY_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  &&  isEnabled(Feature.VISIBILITY_PASSED_TO_STREAM))  {	  if(inputId!=    null    &&    isEnabled(Feature.VISIBILITY_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	153	None	replace
733	[BUG]  [BUGGY]  if(curNode!=  null  &&  isEnabled(Feature.VISIBILITY_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  Feature  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  &&  isEnabled(Feature.VISIBILITY_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null  &&  isEnabled(Feature.VISIBILITY_PASSED_TO_STREAM))  {	  if(inputId!=    null    &&    isEnabled(Feature.VISIBILITY_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	153	None	replace
734	[BUG]  [BUGGY]  if(curNode  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  Feature  [FE]                              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(inputId    ==    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	51	None	replace
735	[BUG]  [BUGGY]  if(nodeTypes  ==  null)  {  [CE]  cannot  find  symbol  nodeTypes  [FE]            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(nodeTypes  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(nodeTypes  ==  null)  {	  if(unexpectedException!=    null)    {    if(unexpectedException!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  nodeTypes	73	None	replace
736	[BUG]  [BUGGY]  Node  curNode  =  nodeTypes.get(sourceName);  [CE]  <identifier>  expected  [FE]                                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  nodeTypes.get(sourceName);  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  nodeTypes.get(sourceName);	  Node    curNode    =    nodeTypes.get(message);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
737	[BUG]  [BUGGY]  Node  curNode  =  nodeTypes.get(message,  sourceName);  [CE]  <identifier>  expected  [FE]                                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  nodeTypes.get(message,  sourceName);  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  nodeTypes.get(message,  sourceName);	  Node    curNode    =    nodeTypes.get(message);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
738	[BUG]  [BUGGY]  Node  curNode  =  nodeTypes.get(message  -  1);  [CE]  <identifier>  expected  [FE]                                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  nodeTypes.get(message  -  1);  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  nodeTypes.get(message  -  1);	  Node    curNode    =    nodeTypes.get(message);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
739	[BUG]  [BUGGY]  Node  curNode  =  nodeTypes.get(message,  message);  [CE]  <identifier>  expected  [FE]                                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  nodeTypes.get(message,  message);  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  nodeTypes.get(message,  message);	  Node    curNode    =    nodeTypes.get(message);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
740	[BUG]  [BUGGY]  timeout  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode  ==  null  &&  curNode!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(curNode  ==  null  &&  curNode!=  null)  {	  if(unexpectedException    ==    null    &&    curNode!=    null)    {    timeout    	compilable	timeout	67	1	replace
741	[BUG]  [BUGGY]  if(curNode  ==  null  &&  curNode!=  null)  {  timeout  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode  ==  null  &&  curNode!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode  ==  null  &&  curNode!=  null)  {	  if(unexpectedException    ==    null    &&    curNode!=    null)    {    timeout    	compilable	timeout	67	1	replace
742	[BUG]  [BUGGY]  timeout  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode  ==  null  &&  unexpectedException!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(curNode  ==  null  &&  unexpectedException!=  null)  {	  if(unexpectedException    ==    null    &&    curNode!=    null)    {    timeout    	compilable	timeout	67	1	replace
743	[BUG]  [BUGGY]  if(curNode  ==  null  &&  unexpectedException!=  null)  {  timeout  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode  ==  null  &&  unexpectedException!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode  ==  null  &&  unexpectedException!=  null)  {	  if(unexpectedException    ==    null    &&    curNode!=    null)    {    timeout    	compilable	timeout	67	1	replace
744	[BUG]  [BUGGY]  if(unknownException!=  null  &&  isEnabled(Feature.QUOTE_SOURCE))  {  [CE]  cannot  find  symbol  unknownException  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException!=  null  &&  isEnabled(Feature.QUOTE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  &&  isEnabled(Feature.QUOTE_SOURCE))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	154	None	replace
745	[BUG]  [BUGGY]  if(curNode!=  null  &&  isEnabled(Feature.QUOTE_SOURCE))  {  [CE]  cannot  find  symbol  Feature  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  &&  isEnabled(Feature.QUOTE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null  &&  isEnabled(Feature.QUOTE_SOURCE))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	154	None	replace
746	[BUG]  [BUGGY]  if(sourceName!=  null  &&  isEnabled(Feature.QUOTE_SOURCE))  {  [CE]  cannot  find  symbol  Feature  [FE]                              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(sourceName!=  null  &&  isEnabled(Feature.QUOTE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(sourceName!=  null  &&  isEnabled(Feature.QUOTE_SOURCE))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	154	None	replace
747	[BUG]  [BUGGY]  if(inputId!=  null  ||  inputId.equals(   "     "))  {  if(inputId!=  null  ||  inputId.equals( ",   "))  {  [CE]  illegal  start  of  expression  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  ||  inputId.equals(   "     "))  {  if(inputId!=  null  ||  inputId.equals( ",   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    ||    inputId.equals(   "       "))    {    if(inputId!=  null  ||  inputId.equals( ",   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	7	None	add
748	[BUG]  [BUGGY]  if(inputId!=  null  ||  inputId.equals(   "     "))  {  if(inputId!=  null  ||  inputId.equals('   "))  {  [CE]  unclosed  character  literal  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  ||  inputId.equals(   "     "))  {  if(inputId!=  null  ||  inputId.equals('   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    ||    inputId.equals(   "       "))    {    if(inputId!=  null  ||  inputId.equals('   "))  {	  timeout    	non-compiled	[CE]  unclosed  character  literal	7	None	add
749	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.EMPTY_STRING_AS_NULL_OBJECT))  {  [CE]  cannot  find  symbol  Feature  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.EMPTY_STRING_AS_NULL_OBJECT))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.EMPTY_STRING_AS_NULL_OBJECT))  {	  if(unexpectedException!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	41	None	replace
750	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.ERROR_MESSAGE))  {  [CE]  cannot  find  symbol  Feature  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.ERROR_MESSAGE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.ERROR_MESSAGE))  {	  if(unexpectedException!=    null    &&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	85	None	replace
751	[BUG]  [BUGGY]  timeout  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals( "+ ")||  message  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId!=  null  &&  inputId.equals( "+ ")||  message  ==  null)  {	  if(inputId!=    null    &&    inputId.equals(   "+   "))    {    timeout    	compilable	timeout	158	1	replace
752	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals( "+ ")||  message  ==  null)  {  timeout  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals( "+ ")||  message  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  inputId.equals( "+ ")||  message  ==  null)  {	  if(inputId!=    null    &&    inputId.equals(   "+   "))    {    timeout    	compilable	timeout	158	1	replace
753	[BUG]  [BUGGY]  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  message.equals( "+ "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId!=  null  &&  message.equals( "+ "))  {	  if(inputId!=    null    &&    inputId.equals(   "+   "))    {    timeout    	compilable	timeout	158	1	replace
754	[BUG]  [BUGGY]  if(inputId!=  null  &&  message.equals( "+ "))  {  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  message.equals( "+ "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  message.equals( "+ "))  {	  if(inputId!=    null    &&    inputId.equals(   "+   "))    {    timeout    	compilable	timeout	158	1	replace
755	[BUG]  [BUGGY]  if(unknownException!=  null  &&  inputId.equals( "+ "))  {  [CE]  cannot  find  symbol  unknownException  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException!=  null  &&  inputId.equals( "+ "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  &&  inputId.equals( "+ "))  {	  if(inputId!=    null    &&    inputId.equals(   "+   "))    {    timeout    	non-compiled	[CE]  cannot  find  symbol  unknownException	158	None	replace
756	[BUG]  [BUGGY]  Node  curNode  =  scopes.getCurrentNode();  [CE]  <identifier>  expected  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  scopes.getCurrentNode();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  scopes.getCurrentNode();	  Node    curNode    =    cfgs.getCurrentNode();    	non-compiled	[CE]  <identifier>  expected	113	None	replace
757	[BUG]  [BUGGY]  Node  curNode  =  cfgs.nextNode();  [CE]  <identifier>  expected  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  cfgs.nextNode();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  cfgs.nextNode();	  Node    curNode    =    cfgs.getCurrentNode();    	non-compiled	[CE]  <identifier>  expected	113	None	replace
758	[BUG]  [BUGGY]  Node  curNode  =  scopeRoots.getCurrentNode();  [CE]  <identifier>  expected  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  scopeRoots.getCurrentNode();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  scopeRoots.getCurrentNode();	  Node    curNode    =    cfgs.getCurrentNode();    	non-compiled	[CE]  <identifier>  expected	113	None	replace
759	[BUG]  [BUGGY]  if(unknownException.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAMES,  inputId))  {  [CE]  cannot  find  symbol  unknownException  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAMES,  inputId))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAMES,  inputId))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES,    message))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	142	None	replace
760	[BUG]  [BUGGY]  if(curNode!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  message))  {  [CE]  cannot  find  symbol  Feature  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  message))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  message))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES,    message))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	142	None	replace
761	[BUG]  [BUGGY]  Node  curNode  =  getCurrentToken();  [CE]  <identifier>  expected  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  getCurrentToken();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  getCurrentToken();	  Node    curNode    =    getCurrentNode();    	non-compiled	[CE]  <identifier>  expected	145	None	replace
762	[BUG]  [BUGGY]  if(unknownException!=  null  ||  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  unknownException  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException!=  null  ||  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  ||  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(inputId!=    null    ||    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	88	None	replace
763	[BUG]  [BUGGY]  if(curNode!=  null  ||  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  Feature  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  ||  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null  ||  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(inputId!=    null    ||    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	88	None	replace
764	[BUG]  [BUGGY]  if(unexpectedException!=  null?   "n "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "n "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [CE]  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null?   "n "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "n "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null?   "n "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "n "  :  formatNodeContext( "Parent   ",  curNode.getParent()));	  if(unexpectedException.getMessage()!=    null?       "n   "    :    formatNodeContext(   "Node       ",    curNode)    +    (curNode    ==    null?       "       "    :    formatNodeContext(   "Parent       ",    curNode.getParent()));    	non-compiled	[CE]  	72	None	replace
765	[BUG]  [BUGGY]  if(unexpectedException.getMessage()!=  null?   "n ",  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "n "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [CE]  :  expected  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()!=  null?   "n ",  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "n "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()!=  null?   "n ",  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "n "  :  formatNodeContext( "Parent   ",  curNode.getParent()));	  if(unexpectedException.getMessage()!=    null?       "n   "    :    formatNodeContext(   "Node       ",    curNode)    +    (curNode    ==    null?       "       "    :    formatNodeContext(   "Parent       ",    curNode.getParent()));    	non-compiled	[CE]  :  expected	72	None	replace
766	[BUG]  [BUGGY]  timeout  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode  ==  null  ||  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(curNode  ==  null  ||  message.length()  ==  0)  {	  if(inputId    ==    null    ||    message.length()    ==    0)    {    timeout    	compilable	timeout	98	1	replace
767	[BUG]  [BUGGY]  if(curNode  ==  null  ||  message.length()  ==  0)  {  timeout  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode  ==  null  ||  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode  ==  null  ||  message.length()  ==  0)  {	  if(inputId    ==    null    ||    message.length()    ==    0)    {    timeout    	compilable	timeout	98	1	replace
768	[BUG]  [BUGGY]  if(unknownException!=  null  &&  isEnabled(Feature.QUOTE_NAME))  {  [CE]  cannot  find  symbol  unknownException  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException!=  null  &&  isEnabled(Feature.QUOTE_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  &&  isEnabled(Feature.QUOTE_NAME))  {	  if(unknownException!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	104	None	replace
769	[BUG]  [BUGGY]  Node  curNode  =  n.getPrevious();  [CE]  <identifier>  expected  [FE]                                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  n.getPrevious();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  n.getPrevious();	  Node    curNode    =    n.getParent();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
770	[BUG]  [BUGGY]  if(curNode!=  null  &&  isEnabled(Feature.QUOTE_TO_STREAM))  {  [CE]  cannot  find  symbol  Feature  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  &&  isEnabled(Feature.QUOTE_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null  &&  isEnabled(Feature.QUOTE_TO_STREAM))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	150	None	replace
771	[BUG]  [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.QUOTE_NODE))  {  [CE]  cannot  find  symbol  Feature  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.QUOTE_NODE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  isEnabled(Feature.QUOTE_NODE))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	150	None	replace
772	[BUG]  [BUGGY]  if(scope.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  scope  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(scope.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(scope.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(unknownException.getMessage()!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  scope	46	None	replace
773	[BUG]  [BUGGY]  if(scope.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  scope  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(scope.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(scope.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(unknownException.getMessage()    ==    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  scope	48	None	replace
774	[BUG]  [BUGGY]  timeout  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(sourceName!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(sourceName!=  null)  {	  if(node!=    null)    {    	compilable	timeout	94	1	replace
775	[BUG]  [BUGGY]  if(sourceName!=  null)  {  timeout  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(sourceName!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(sourceName!=  null)  {	  if(node!=    null)    {    	compilable	timeout	94	1	replace
776	[BUG]  [BUGGY]  if(buffer!=  null)  {  [CE]  cannot  find  symbol  buffer  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(buffer!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(buffer!=  null)  {	  if(node!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  buffer	94	None	replace
777	[BUG]  [BUGGY]  timeout  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  &&  curNode!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(curNode!=  null  &&  curNode!=  null)  {	  if(unexpectedException!=    null    &&    curNode!=    null)    {    timeout    	compilable	timeout	62	1	replace
778	[BUG]  [BUGGY]  if(curNode!=  null  &&  curNode!=  null)  {  timeout  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  &&  curNode!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null  &&  curNode!=  null)  {	  if(unexpectedException!=    null    &&    curNode!=    null)    {    timeout    	compilable	timeout	62	1	replace
779	[BUG]  [BUGGY]  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message!=  null  &&  curNode!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(message!=  null  &&  curNode!=  null)  {	  if(unexpectedException!=    null    &&    curNode!=    null)    {    timeout    	compilable	timeout	62	1	replace
780	[BUG]  [BUGGY]  if(message!=  null  &&  curNode!=  null)  {  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message!=  null  &&  curNode!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message!=  null  &&  curNode!=  null)  {	  if(unexpectedException!=    null    &&    curNode!=    null)    {    timeout    	compilable	timeout	62	1	replace
781	[BUG]  [BUGGY]  if(unknownException!=  null  &&  isEnabled(Feature.AUTO_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  unknownException  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException!=  null  &&  isEnabled(Feature.AUTO_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  &&  isEnabled(Feature.AUTO_PASSED_TO_STREAM))  {	  if(inputId!=    null    &&    isEnabled(Feature.AUTO_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	151	None	replace
782	[BUG]  [BUGGY]  if(unknownException.equals(message)&&  isEnabled(Feature.AUTO_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  unknownException  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.equals(message)&&  isEnabled(Feature.AUTO_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.equals(message)&&  isEnabled(Feature.AUTO_PASSED_TO_STREAM))  {	  if(inputId!=    null    &&    isEnabled(Feature.AUTO_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	151	None	replace
783	[BUG]  [BUGGY]  if(curNode!=  null  &&  isEnabled(Feature.AUTO_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  Feature  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  &&  isEnabled(Feature.AUTO_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null  &&  isEnabled(Feature.AUTO_PASSED_TO_STREAM))  {	  if(inputId!=    null    &&    isEnabled(Feature.AUTO_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	151	None	replace
784	[BUG]  [BUGGY]  if(inputId!=  null  ||  message.length()  ==  0)  {  if(inputId!=  null  +|  message.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  ||  message.length()  ==  0)  {  if(inputId!=  null  +|  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    ||    message.length()    ==    0)    {    if(inputId!=  null  +|  message.length()  ==  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	95	None	add
785	[BUG]  [BUGGY]  if(mean!=  null  &&  message.length()  >  0)  {  [CE]  cannot  find  symbol  mean  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(mean!=  null  &&  message.length()  >  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(mean!=  null  &&  message.length()  >  0)  {	  if(unknownException!=    null    &&    message.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  mean	136	None	replace
786	[BUG]  [BUGGY]  if(curNode!=  null?   "null "  :  formatNodeContext( "Node   ")+  (curNode  ==  null?   "null "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [CE]  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null?   "null "  :  formatNodeContext( "Node   ")+  (curNode  ==  null?   "null "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null?   "null "  :  formatNodeContext( "Node   ")+  (curNode  ==  null?   "null "  :  formatNodeContext( "Parent   ",  curNode.getParent()));	  if(curNode    ==    null?       "       "    :    formatNodeContext(   "Node   ")+    (curNode    ==    null?       "       "    :    formatNodeContext(   "Parent   "),    curNode.getParent()));    	non-compiled	[CE]  	107	None	replace
787	[BUG]  [BUGGY]  if(curNode!=  null?   "null "  :  formatNodeContext( "Node   ")+  (curNode  ==  null?   "null "  :  formatNodeContext( "Parent   "),  curNode.getParent()));  [CE]  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null?   "null "  :  formatNodeContext( "Node   ")+  (curNode  ==  null?   "null "  :  formatNodeContext( "Parent   "),  curNode.getParent()));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null?   "null "  :  formatNodeContext( "Node   ")+  (curNode  ==  null?   "null "  :  formatNodeContext( "Parent   "),  curNode.getParent()));	  if(curNode    ==    null?       "       "    :    formatNodeContext(   "Node   ")+    (curNode    ==    null?       "       "    :    formatNodeContext(   "Parent   "),    curNode.getParent()));    	non-compiled	[CE]  	107	None	replace
788	[BUG]  [BUGGY]  if(curNode!=  null?   "NULL "  :  formatNodeContext( "Node   ")+  (curNode  ==  null?   "NULL "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [CE]  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null?   "NULL "  :  formatNodeContext( "Node   ")+  (curNode  ==  null?   "NULL "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null?   "NULL "  :  formatNodeContext( "Node   ")+  (curNode  ==  null?   "NULL "  :  formatNodeContext( "Parent   ",  curNode.getParent()));	  if(curNode    ==    null?       "       "    :    formatNodeContext(   "Node   ")+    (curNode    ==    null?       "       "    :    formatNodeContext(   "Parent   "),    curNode.getParent()));    	non-compiled	[CE]  	107	None	replace
789	[BUG]  [BUGGY]  if(curNode!=  null?   "   "  :  formatNodeContext( "Node   ")+  (curNode  ==  null?   "   "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [CE]  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null?   "   "  :  formatNodeContext( "Node   ")+  (curNode  ==  null?   "   "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null?   "   "  :  formatNodeContext( "Node   ")+  (curNode  ==  null?   "   "  :  formatNodeContext( "Parent   ",  curNode.getParent()));	  if(curNode    ==    null?       "       "    :    formatNodeContext(   "Node   ")+    (curNode    ==    null?       "       "    :    formatNodeContext(   "Parent   "),    curNode.getParent()));    	non-compiled	[CE]  	107	None	replace
790	[BUG]  [BUGGY]  if(curNode!=  null?   "NULL "  :  formatNodeContext( "Node   ")+  (curNode  ==  null?   "NULL "  :  formatNodeContext( "Parent   "),  curNode.getParent()));  [CE]  [FE]                              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null?   "NULL "  :  formatNodeContext( "Node   ")+  (curNode  ==  null?   "NULL "  :  formatNodeContext( "Parent   "),  curNode.getParent()));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null?   "NULL "  :  formatNodeContext( "Node   ")+  (curNode  ==  null?   "NULL "  :  formatNodeContext( "Parent   "),  curNode.getParent()));	  if(curNode    ==    null?       "       "    :    formatNodeContext(   "Node   ")+    (curNode    ==    null?       "       "    :    formatNodeContext(   "Parent   "),    curNode.getParent()));    	non-compiled	[CE]  	107	None	replace
791	[BUG]  [BUGGY]  timeout  [FE]            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message!=  null  &&  curNode  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(message!=  null  &&  curNode  ==  null)  {	  if(unexpectedException!=    null    &&    curNode    ==    null)    {    timeout    	compilable	timeout	60	1	replace
792	[BUG]  [BUGGY]  if(message!=  null  &&  curNode  ==  null)  {  timeout  [FE]            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message!=  null  &&  curNode  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message!=  null  &&  curNode  ==  null)  {	  if(unexpectedException!=    null    &&    curNode    ==    null)    {    timeout    	compilable	timeout	60	1	replace
793	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "*   "))  {  if(inputId!=  null  &&  inputId.equals(. "*   "))  {  [CE]  illegal  start  of  expression  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "*   "))  {  if(inputId!=  null  &&  inputId.equals(. "*   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "*   "))    {    if(inputId!=  null  &&  inputId.equals(. "*   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	9	None	add
794	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "*   "))  {  if(inputId!=  null  &&  inputId.equals( ",*   "))  {  [CE]  illegal  start  of  expression  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "*   "))  {  if(inputId!=  null  &&  inputId.equals( ",*   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "*   "))    {    if(inputId!=  null  &&  inputId.equals( ",*   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	9	None	add
795	[BUG]  [BUGGY]  if(message!=  null)  {  if(mesage!=  null)  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message!=  null)  {  if(mesage!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message!=    null)    {    if(mesage!=  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	89	None	add
796	[BUG]  [BUGGY]  if(unknownException!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  unknownException  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(inputId!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	49	None	replace
797	[BUG]  [BUGGY]  if(curNode!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  Feature  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(inputId!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	49	None	replace
798	[BUG]  [BUGGY]  if(sourceName!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  Feature  [FE]                              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(sourceName!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(sourceName!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(inputId!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	49	None	replace
799	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "-   "))  {  if(inputId!=  null  &&  inputId.equals( ",-   "))  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "-   "))  {  if(inputId!=  null  &&  inputId.equals( ",-   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "-   "))    {    if(inputId!=  null  &&  inputId.equals( ",-   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	155	None	add
800	[BUG]  [BUGGY]  if(inputId  ==  null  ||  message.length()  ==  0)  {  if(outputId  ==  null  ||  message.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  ||  message.length()  ==  0)  {  if(outputId  ==  null  ||  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId    ==    null    ||    message.length()    ==    0)    {    if(outputId  ==  null  ||  message.length()  ==  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	97	None	add
801	[BUG]  [BUGGY]  if(inputId  ==  null  ||  message.length()  ==  0)  {  if(InputId  ==  null  ||  message.length()  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  ||  message.length()  ==  0)  {  if(InputId  ==  null  ||  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId    ==    null    ||    message.length()    ==    0)    {    if(InputId  ==  null  ||  message.length()  ==  0)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	97	None	add
802	[BUG]  [BUGGY]  if(unknownException.equals(sourceName)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  unknownException  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.equals(sourceName)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.equals(sourceName)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException.equals(message)&&    inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	140	None	replace
803	[BUG]  [BUGGY]  if(inputId.equals(message)&&  unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  Feature  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId.equals(message)&&  unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId.equals(message)&&  unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException.equals(message)&&    inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	140	None	replace
804	[BUG]  [BUGGY]  if(unknownException!=  null  &&  expectedException.length()  >  0)  {  [CE]  cannot  find  symbol  unknownException  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException!=  null  &&  expectedException.length()  >  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  &&  expectedException.length()  >  0)  {	  if(unknownException!=    null    &&    unexpectedException.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	137	None	replace
805	[BUG]  [BUGGY]  if(unknownException!=  null  &&  unknownException.length()  >  0)  {  [CE]  cannot  find  symbol  unknownException  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException!=  null  &&  unknownException.length()  >  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  &&  unknownException.length()  >  0)  {	  if(unknownException!=    null    &&    unexpectedException.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	137	None	replace
806	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.WARNING_SOURCE))  {  [CE]  cannot  find  symbol  Feature  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.WARNING_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.WARNING_SOURCE))  {	  if(unexpectedException!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	24	None	replace
807	[BUG]  [BUGGY]  if(include  ||  sourceName  ==  null)  {  [CE]  cannot  find  symbol  include  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(include  ||  sourceName  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(include  ||  sourceName  ==  null)  {	  if(include)    {    	non-compiled	[CE]  cannot  find  symbol  include	167	None	replace
808	[BUG]  [BUGGY]  if(include  ||  sourceName!=  null)  {  [CE]  cannot  find  symbol  include  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(include  ||  sourceName!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(include  ||  sourceName!=  null)  {	  if(include)    {    	non-compiled	[CE]  cannot  find  symbol  include	167	None	replace
809	[BUG]  [BUGGY]  if(nodeTypes)  {  [CE]  cannot  find  symbol  nodeTypes  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(nodeTypes)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(nodeTypes)  {	  if(include)    {    	non-compiled	[CE]  cannot  find  symbol  nodeTypes	167	None	replace
810	[BUG]  [BUGGY]  if(sourceName!=  null  &&  isEnabled(Feature.MISSING_SOURCE))  {  [CE]  cannot  find  symbol  Feature  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(sourceName!=  null  &&  isEnabled(Feature.MISSING_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(sourceName!=  null  &&  isEnabled(Feature.MISSING_SOURCE))  {	  if(sourceName!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	28	None	replace
811	[BUG]  [BUGGY]  if(includeNull)  {  If(inputId  ==  null)  {  [CE]  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includeNull)  {  If(inputId  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includeNull)  {  If(inputId  ==  null)  {	  if(inputId    ==    null)    {    If(inputId    ==    null)    {    	non-compiled	[CE]  	80	None	replace
812	[BUG]  [BUGGY]  if(include)  {  If(inputId!=  null)  {  [CE]  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(include)  {  If(inputId!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(include)  {  If(inputId!=  null)  {	  if(inputId    ==    null)    {    If(inputId    ==    null)    {    	non-compiled	[CE]  	80	None	replace
813	[BUG]  [BUGGY]  if(include)  {  If(curNode  ==  null)  {  [CE]  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(include)  {  If(curNode  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(include)  {  If(curNode  ==  null)  {	  if(inputId    ==    null)    {    If(inputId    ==    null)    {    	non-compiled	[CE]  	80	None	replace
814	[BUG]  [BUGGY]  if(curNode  ==  null?   "   "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "   "  :  formatNodeContext( "Parent "),  curNode.getParent()));  [CE]  [FE]            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode  ==  null?   "   "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "   "  :  formatNodeContext( "Parent "),  curNode.getParent()));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode  ==  null?   "   "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "   "  :  formatNodeContext( "Parent "),  curNode.getParent()));	  if(inputId!=    null    &&    inputId.equals(       "       "))    {    if(inputId!=    null    &&    inputId.equals(   "       "))    {    	non-compiled	[CE]  	34	None	replace
815	[BUG]  [BUGGY]  if(curNode!=  null?   "   "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "   "  :  formatNodeContext( "Parent "),  curNode.getParent()));  [CE]  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null?   "   "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "   "  :  formatNodeContext( "Parent "),  curNode.getParent()));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null?   "   "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "   "  :  formatNodeContext( "Parent "),  curNode.getParent()));	  if(inputId!=    null    &&    inputId.equals(       "       "))    {    if(inputId!=    null    &&    inputId.equals(   "       "))    {    	non-compiled	[CE]  	34	None	replace
816	[BUG]  [BUGGY]  if(scope.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  scope  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(scope.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(scope.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException.getMessage()!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  scope	40	None	replace
817	[BUG]  [BUGGY]  if(exception!=  null  &&  unexpectedException.equals(message))  {  [CE]  cannot  find  symbol  exception  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(exception!=  null  &&  unexpectedException.equals(message))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(exception!=  null  &&  unexpectedException.equals(message))  {	  if(unknownException!=    null    &&    unexpectedException.equals(message))    {    	non-compiled	[CE]  cannot  find  symbol  exception	138	None	replace
818	[BUG]  [BUGGY]  if(unexpectedException  ==  null  &&  curNode!=  null)  {  if(unexpectedException  ==  null  &&  curNode  >>  null)  {  [CE]  illegal  start  of  expression  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException  ==  null  &&  curNode!=  null)  {  if(unexpectedException  ==  null  &&  curNode  >>  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException    ==    null    &&    curNode!=    null)    {    if(unexpectedException  ==  null  &&  curNode  >>  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	66	None	add
819	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_ARRAY))  {  [CE]  cannot  find  symbol  Feature  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_ARRAY))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_ARRAY))  {	  if(unexpectedException!=    null    &&    isEnabled(Feature.QUOTE_NON_NULL_RESULT))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	120	None	replace
820	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_STRING))  {  [CE]  cannot  find  symbol  Feature  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_STRING))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_STRING))  {	  if(unexpectedException!=    null    &&    isEnabled(Feature.QUOTE_NON_NULL_RESULT))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	120	None	replace
821	[BUG]  [BUGGY]  if(include!=  null  &&!include)  {  [CE]  cannot  find  symbol  include  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(include!=  null  &&!include)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(include!=  null  &&!include)  {	  if(unknownException!=    null    &&!include)    {    	non-compiled	[CE]  cannot  find  symbol  include	134	None	replace
822	[BUG]  [BUGGY]  if(curNode!=  null  &&!include)  {  [CE]  cannot  find  symbol  include  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  &&!include)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null  &&!include)  {	  if(unknownException!=    null    &&!include)    {    	non-compiled	[CE]  cannot  find  symbol  include	134	None	replace
823	[BUG]  [BUGGY]  if(scope.getMessage()!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  scope  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(scope.getMessage()!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(scope.getMessage()!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(unknownException.getMessage()!=    null    &&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  scope	84	None	replace
824	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  (curNode!=  null?   "null "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [CE]  [FE]            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  (curNode!=  null?   "null "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  (curNode!=  null?   "null "  :  formatNodeContext( "Parent   ",  curNode.getParent()));	  if(unexpectedException!=    null    &&    (curNode    ==    null?       "       "    :    formatNodeContext(   "Parent       ",    curNode.getParent()));    	non-compiled	[CE]  	161	None	replace
825	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&(curNode  ==  null?   "null "  :  formatNodeContext( "Parent   ",  curNode.getParent())));  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&(curNode  ==  null?   "null "  :  formatNodeContext( "Parent   ",  curNode.getParent())));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&(curNode  ==  null?   "null "  :  formatNodeContext( "Parent   ",  curNode.getParent())));	  if(unexpectedException!=    null    &&    (curNode    ==    null?       "       "    :    formatNodeContext(   "Parent   "),    curNode.getParent()));    	non-compiled	[CE]  <identifier>  expected	163	None	replace
826	[BUG]  [BUGGY]  if(message.equals( "unknown ")&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  Feature  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message.equals( "unknown ")&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message.equals( "unknown ")&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException.equals(message)&&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	141	None	replace
827	[BUG]  [BUGGY]  if(nodeTypes.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  nodeTypes  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(nodeTypes.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(nodeTypes.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException.equals(message)&&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  nodeTypes	141	None	replace
828	[BUG]  [BUGGY]  if(message.equals(UNKNOWN_EXPR_RESULT)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  UNKNOWN_EXPR_RESULT  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message.equals(UNKNOWN_EXPR_RESULT)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message.equals(UNKNOWN_EXPR_RESULT)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException.equals(message)&&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_EXPR_RESULT	141	None	replace
829	[BUG]  [BUGGY]  if(unknownException!=  null  &&  inputId.equals( "* "))  {  [CE]  cannot  find  symbol  unknownException  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException!=  null  &&  inputId.equals( "* "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  &&  inputId.equals( "* "))  {	  if(inputId!=    null    &&    inputId.equals(   "*   "))    {    timeout    	non-compiled	[CE]  cannot  find  symbol  unknownException	10	None	replace
830	[BUG]  [BUGGY]  timeout  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  message.equals( "* "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId!=  null  &&  message.equals( "* "))  {	  if(inputId!=    null    &&    inputId.equals(   "*   "))    {    timeout    	compilable	timeout	10	1	replace
831	[BUG]  [BUGGY]  if(inputId!=  null  &&  message.equals( "* "))  {  timeout  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  message.equals( "* "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  message.equals( "* "))  {	  if(inputId!=    null    &&    inputId.equals(   "*   "))    {    timeout    	compilable	timeout	10	1	replace
832	[BUG]  [BUGGY]  timeout  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  message.equals( "* "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException!=  null  &&  message.equals( "* "))  {	  if(inputId!=    null    &&    inputId.equals(   "*   "))    {    timeout    	compilable	timeout	10	1	replace
833	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  message.equals( "* "))  {  timeout  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  message.equals( "* "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  message.equals( "* "))  {	  if(inputId!=    null    &&    inputId.equals(   "*   "))    {    timeout    	compilable	timeout	10	1	replace
834	[BUG]  [BUGGY]  if(curNode!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.WARNING_SOURCE))  {  [CE]  cannot  find  symbol  Feature  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.WARNING_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.WARNING_SOURCE))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.WARNING_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	131	None	replace
835	[BUG]  [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.WARNING_SOURCE)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  Feature  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.WARNING_SOURCE)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  isEnabled(Feature.WARNING_SOURCE)||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.WARNING_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	131	None	replace
836	[BUG]  [BUGGY]  if(message!=  null  ||  unknownException.length()  ==  0)  {  [CE]  cannot  find  symbol  unknownException  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message!=  null  ||  unknownException.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message!=  null  ||  unknownException.length()  ==  0)  {	  if(unknownException!=    null    ||    message.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	108	None	replace
837	[BUG]  [BUGGY]  if(curNode!=  null?   "null "  :  curNode.getMessage()!=  null)  {  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null?   "null "  :  curNode.getMessage()!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null?   "null "  :  curNode.getMessage()!=  null)  {	  if(curNode.getMessage()!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
838	[BUG]  [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.ERROR_TO_STREAM))  {  [CE]  cannot  find  symbol  Feature  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.ERROR_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  isEnabled(Feature.ERROR_TO_STREAM))  {	  if(inputId!=    null    &&    isEnabled(Feature.WARNING_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	101	None	replace
839	[BUG]  [BUGGY]  if(inputId  ==  null  &&  isEnabled(Feature.WARNING_TO_STREAM))  {  [CE]  cannot  find  symbol  Feature  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  &&  isEnabled(Feature.WARNING_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId  ==  null  &&  isEnabled(Feature.WARNING_TO_STREAM))  {	  if(inputId!=    null    &&    isEnabled(Feature.WARNING_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	101	None	replace
840	[BUG]  [BUGGY]  if(curNode!=  null  &&  isEnabled(Feature.QUOTE_NAME))  {  [CE]  cannot  find  symbol  Feature  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  &&  isEnabled(Feature.QUOTE_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null  &&  isEnabled(Feature.QUOTE_NAME))  {	  if(curNode!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	103	None	replace
841	[BUG]  [BUGGY]  if(curNode!=  null  &&  isEnabled(Feature.QUOTE_NODE_ERROR))  {  [CE]  cannot  find  symbol  Feature  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  &&  isEnabled(Feature.QUOTE_NODE_ERROR))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null  &&  isEnabled(Feature.QUOTE_NODE_ERROR))  {	  if(curNode!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	103	None	replace
842	[BUG]  [BUGGY]  if(included  ||  isEnabled(Feature.AUTO_CLOSE_ERROR))  {  [CE]  cannot  find  symbol  included  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(included  ||  isEnabled(Feature.AUTO_CLOSE_ERROR))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(included  ||  isEnabled(Feature.AUTO_CLOSE_ERROR))  {	  if(included    ||    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  included	149	None	replace
843	[BUG]  [BUGGY]  if(include  ||  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  include  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(include  ||  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(include  ||  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(included    ||    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  include	149	None	replace
844	[BUG]  [BUGGY]  if(unknownException  ||  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  unknownException  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException  ||  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException  ||  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(included    ||    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	149	None	replace
845	[BUG]  [BUGGY]  if(curNode!=  null  &&  isEnabled(Feature.WARNING_TO_STREAM))  {  [CE]  cannot  find  symbol  Feature  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  &&  isEnabled(Feature.WARNING_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null  &&  isEnabled(Feature.WARNING_TO_STREAM))  {	  if(curNode!=    null    &&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	100	None	replace
846	[BUG]  [BUGGY]  if(message.equals( "unknown ")&&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  Feature  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message.equals( "unknown ")&&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message.equals( "unknown ")&&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(unknownException.equals(message)&&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	99	None	replace
847	[BUG]  [BUGGY]  if(unknownException.equals(message)&&  isEnabled(Feature.QUOTE_TO_STREAM))  {  [CE]  cannot  find  symbol  unknownException  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.equals(message)&&  isEnabled(Feature.QUOTE_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.equals(message)&&  isEnabled(Feature.QUOTE_TO_STREAM))  {	  if(unknownException.equals(message)&&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	99	None	replace
848	[BUG]  [BUGGY]  if(curNode!=  null  &&!included)  {  [CE]  cannot  find  symbol  included  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  &&!included)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null  &&!included)  {	  if(unknownException!=    null    &&!included)    {    	non-compiled	[CE]  cannot  find  symbol  included	135	None	replace
849	[BUG]  [BUGGY]  if(curNode!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NODE))  {  [CE]  cannot  find  symbol  Feature  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NODE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NODE))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NODE))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	152	None	replace
850	[BUG]  [BUGGY]  if(unknownException.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NODE))  {  [CE]  cannot  find  symbol  unknownException  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NODE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NODE))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NODE))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	152	None	replace
851	[BUG]  [BUGGY]  if(unexpectedException  ==  null)  {  if(unexpectedException  [BUGGY]  null)  {  [CE]  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException  ==  null)  {  if(unexpectedException  [BUGGY]  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException    ==    null)    {    if(unexpectedException  [BUGGY]  null)  {	  timeout    	non-compiled	[CE]  	19	None	add
852	[BUG]  [BUGGY]  if(includeException.getMessage()!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  includeException  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includeException.getMessage()!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includeException.getMessage()!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(unknownException.getMessage()!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  includeException	23	None	replace
853	[BUG]  [BUGGY]  if(included  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  included  [FE]                              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(included  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(included  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(inputId    ==    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  included	51	None	replace
854	[BUG]  [BUGGY]  if(included  ||  inputId  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  included  [FE]                                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(included  ||  inputId  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(included  ||  inputId  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(inputId    ==    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  included	51	None	replace
855	[BUG]  [BUGGY]  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals( "/ ")||  inputId.equals( "* "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId!=  null  &&  inputId.equals( "/ ")||  inputId.equals( "* "))  {	  if(inputId!=    null    &&    inputId.equals(   "/   "))    {    timeout    	compilable	timeout	160	1	replace
856	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals( "/ ")||  inputId.equals( "* "))  {  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals( "/ ")||  inputId.equals( "* "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  inputId.equals( "/ ")||  inputId.equals( "* "))  {	  if(inputId!=    null    &&    inputId.equals(   "/   "))    {    timeout    	compilable	timeout	160	1	replace
857	[BUG]  [BUGGY]  timeout  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals( "/ ")||  inputId.equals( "/ "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId!=  null  &&  inputId.equals( "/ ")||  inputId.equals( "/ "))  {	  if(inputId!=    null    &&    inputId.equals(   "/   "))    {    timeout    	compilable	timeout	160	1	replace
858	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals( "/ ")||  inputId.equals( "/ "))  {  timeout  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals( "/ ")||  inputId.equals( "/ "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  inputId.equals( "/ ")||  inputId.equals( "/ "))  {	  if(inputId!=    null    &&    inputId.equals(   "/   "))    {    timeout    	compilable	timeout	160	1	replace
859	[BUG]  [BUGGY]  timeout  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode  ==  null  ||  inputId!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(curNode  ==  null  ||  inputId!=  null)  {	  if(inputId    ==    null)    {    if(inputId    ==    null    ||    inputId!=    null)    {    	compilable	timeout	117	1	replace
860	[BUG]  [BUGGY]  if(curNode  ==  null  ||  inputId!=  null)  {  timeout  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode  ==  null  ||  inputId!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode  ==  null  ||  inputId!=  null)  {	  if(inputId    ==    null)    {    if(inputId    ==    null    ||    inputId!=    null)    {    	compilable	timeout	117	1	replace
861	[BUG]  [BUGGY]  if(included  ||  inputId  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  included  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(included  ||  inputId  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(included  ||  inputId  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(inputId    ==    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  included	26	None	replace
862	[BUG]  [BUGGY]  if(includedException  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  includedException  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includedException  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includedException  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  includedException	110	None	replace
863	[BUG]  [BUGGY]  if(include  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  ')'  expected  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(include  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(include  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  ')'  expected	110	None	replace
864	[BUG]  [BUGGY]  if(unknownException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.WARNING_SOURCE))  {  [CE]  cannot  find  symbol  unknownException  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.WARNING_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.WARNING_SOURCE))  {	  if(unknownException!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	110	None	replace
865	[BUG]  [BUGGY]  if(unknownException.equals(message)||  inputId!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  unknownException  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.equals(message)||  inputId!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.equals(message)||  inputId!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(inputId!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	49	None	replace
866	[BUG]  [BUGGY]  if(sourceName.getMessage()!=  null)  {  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(sourceName.getMessage()!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(sourceName.getMessage()!=  null)  {	  if(node.getMessage()!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
867	[BUG]  [BUGGY]  String  sourceName  =  cb.getQualifiedName();  [CE]  <identifier>  expected  [FE]                              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  String  sourceName  =  cb.getQualifiedName();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	String  sourceName  =  cb.getQualifiedName();	  String    sourceName    =    cb.getSourceName();    	non-compiled	[CE]  <identifier>  expected	56	None	replace
868	[BUG]  [BUGGY]  String  sourceName  =  cb.toString();  [CE]  <identifier>  expected  [FE]                                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  String  sourceName  =  cb.toString();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	String  sourceName  =  cb.toString();	  String    sourceName    =    cb.getSourceName();    	non-compiled	[CE]  <identifier>  expected	56	None	replace
869	[BUG]  [BUGGY]  String  sourceName  =  cb.getSourceFile();  [CE]  <identifier>  expected  [FE]                                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  String  sourceName  =  cb.getSourceFile();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	String  sourceName  =  cb.getSourceFile();	  String    sourceName    =    cb.getSourceName();    	non-compiled	[CE]  <identifier>  expected	56	None	replace
870	[BUG]  [BUGGY]  if(message.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(unknownException.getMessage()!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol	46	None	replace
871	[BUG]  [BUGGY]  if(includeException.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  includeException  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includeException.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includeException.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(unknownException.getMessage()!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  includeException	46	None	replace
872	[BUG]  [BUGGY]  if(nodeTypes.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  nodeTypes  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(nodeTypes.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(nodeTypes.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(unknownException.getMessage()!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  nodeTypes	46	None	replace
873	[BUG]  [BUGGY]  if(unknownException.isEmpty()  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  unknownException  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.isEmpty()  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.isEmpty()  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(message!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	50	None	replace
874	[BUG]  [BUGGY]  if(unknownException.isEmpty()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  unknownException  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.isEmpty()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.isEmpty()  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(message!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	44	None	replace
875	[BUG]  [BUGGY]  if(message  ==  null  ||  message.getMessage()!=  null)  {  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message  ==  null  ||  message.getMessage()!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message  ==  null  ||  message.getMessage()!=  null)  {	  if(message.getMessage()!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
876	[BUG]  [BUGGY]  timeout  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  &&  curNode.getType()  ==  Token.NAME)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(curNode!=  null  &&  curNode.getType()  ==  Token.NAME)  {	  if(unexpectedException!=    null    &&    message.length()    >    0)    {    timeout    	compilable	timeout	65	1	replace
877	[BUG]  [BUGGY]  if(curNode!=  null  &&  curNode.getType()  ==  Token.NAME)  {  timeout  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  &&  curNode.getType()  ==  Token.NAME)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null  &&  curNode.getType()  ==  Token.NAME)  {	  if(unexpectedException!=    null    &&    message.length()    >    0)    {    timeout    	compilable	timeout	65	1	replace
878	[BUG]  [BUGGY]  timeout  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  &&  message.length()  >  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(curNode!=  null  &&  message.length()  >  0)  {	  if(unexpectedException!=    null    &&    message.length()    >    0)    {    timeout    	compilable	timeout	65	1	replace
879	[BUG]  [BUGGY]  if(curNode!=  null  &&  message.length()  >  0)  {  timeout  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  &&  message.length()  >  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null  &&  message.length()  >  0)  {	  if(unexpectedException!=    null    &&    message.length()    >    0)    {    timeout    	compilable	timeout	65	1	replace
880	[BUG]  [BUGGY]  timeout  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message!=  null  &&  message.equals( "* "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(message!=  null  &&  message.equals( "* "))  {	  if(inputId!=    null    &&    message.equals(   "       "))    {    timeout    	compilable	timeout	126	1	replace
881	[BUG]  [BUGGY]  if(message!=  null  &&  message.equals( "* "))  {  timeout  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message!=  null  &&  message.equals( "* "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message!=  null  &&  message.equals( "* "))  {	  if(inputId!=    null    &&    message.equals(   "       "))    {    timeout    	compilable	timeout	126	1	replace
882	[BUG]  [BUGGY]  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message  ==  null  &&  inputId.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(message  ==  null  &&  inputId.equals( "   "))  {	  if(inputId!=    null    &&    message.equals(   "       "))    {    timeout    	compilable	timeout	126	1	replace
883	[BUG]  [BUGGY]  if(message  ==  null  &&  inputId.equals( "   "))  {  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message  ==  null  &&  inputId.equals( "   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message  ==  null  &&  inputId.equals( "   "))  {	  if(inputId!=    null    &&    message.equals(   "       "))    {    timeout    	compilable	timeout	126	1	replace
884	[BUG]  [BUGGY]  if(includeException.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  includeException  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includeException.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includeException.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException.equals(message)&&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  includeException	141	None	replace
885	[BUG]  [BUGGY]  if(includedException.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  includedException  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includedException.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includedException.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException.equals(message)&&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  includedException	141	None	replace
886	[BUG]  [BUGGY]  if(curNode!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_RESULT))  {  [CE]  cannot  find  symbol  Feature  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_RESULT))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_RESULT))  {	  if(unexpectedException!=    null    &&    isEnabled(Feature.QUOTE_NON_NULL_RESULT))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	120	None	replace
887	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_RESULT)||  isEnabled(Feature.WARNING_SOURCE))  {  [CE]  cannot  find  symbol  Feature  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_RESULT)||  isEnabled(Feature.WARNING_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_RESULT)||  isEnabled(Feature.WARNING_SOURCE))  {	  if(unexpectedException!=    null    &&    isEnabled(Feature.QUOTE_NON_NULL_RESULT))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	120	None	replace
888	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_RESULT)||  isEnabled(Feature.ERROR_MESSAGE))  {  [CE]  cannot  find  symbol  Feature  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_RESULT)||  isEnabled(Feature.ERROR_MESSAGE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_RESULT)||  isEnabled(Feature.ERROR_MESSAGE))  {	  if(unexpectedException!=    null    &&    isEnabled(Feature.QUOTE_NON_NULL_RESULT))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	120	None	replace
889	[BUG]  [BUGGY]  Node  curNode  =  curNode.cloneTree();  [CE]  <identifier>  expected  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  curNode.cloneTree();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  curNode.cloneTree();	  Node    curNode    =    curNode.getParent();    	non-compiled	[CE]  <identifier>  expected	53	None	replace
890	[BUG]  [BUGGY]  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  &&  curNode.getType()  ==  Token.EXPR_RESULT)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(curNode!=  null  &&  curNode.getType()  ==  Token.EXPR_RESULT)  {	  if(curNode!=    null)    {    timeout    	compilable	timeout	92	1	replace
891	[BUG]  [BUGGY]  if(curNode!=  null  &&  curNode.getType()  ==  Token.EXPR_RESULT)  {  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  &&  curNode.getType()  ==  Token.EXPR_RESULT)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null  &&  curNode.getType()  ==  Token.EXPR_RESULT)  {	  if(curNode!=    null)    {    timeout    	compilable	timeout	92	1	replace
892	[BUG]  [BUGGY]  timeout  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  &&  curNode.getType()  ==  Token.VAR)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(curNode!=  null  &&  curNode.getType()  ==  Token.VAR)  {	  if(curNode!=    null)    {    timeout    	compilable	timeout	92	1	replace
893	[BUG]  [BUGGY]  if(curNode!=  null  &&  curNode.getType()  ==  Token.VAR)  {  timeout  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  &&  curNode.getType()  ==  Token.VAR)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null  &&  curNode.getType()  ==  Token.VAR)  {	  if(curNode!=    null)    {    timeout    	compilable	timeout	92	1	replace
894	[BUG]  [BUGGY]  timeout  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  &&  curNode.getType()  ==  Token.THIS)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(curNode!=  null  &&  curNode.getType()  ==  Token.THIS)  {	  if(curNode!=    null)    {    timeout    	compilable	timeout	92	1	replace
895	[BUG]  [BUGGY]  if(curNode!=  null  &&  curNode.getType()  ==  Token.THIS)  {  timeout  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  &&  curNode.getType()  ==  Token.THIS)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null  &&  curNode.getType()  ==  Token.THIS)  {	  if(curNode!=    null)    {    timeout    	compilable	timeout	92	1	replace
896	[BUG]  [BUGGY]  if(curNode  ==  null?   "   "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [CE]  <identifier>  expected  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode  ==  null?   "   "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode  ==  null?   "   "  :  formatNodeContext( "Parent   ",  curNode.getParent()));	  if(unexpectedException!=    null)    {    if(unexpectedException    >>    null)    {    	non-compiled	[CE]  <identifier>  expected	77	None	replace
897	[BUG]  [BUGGY]  if(included  ||  inputId!=  null)  {  [CE]  cannot  find  symbol  included  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(included  ||  inputId!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(included  ||  inputId!=  null)  {	  if(included)    {    	non-compiled	[CE]  cannot  find  symbol  included	166	None	replace
898	[BUG]  [BUGGY]  if(included  ||  inputId  ==  null)  {  [CE]  cannot  find  symbol  included  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(included  ||  inputId  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(included  ||  inputId  ==  null)  {	  if(included)    {    	non-compiled	[CE]  cannot  find  symbol  included	166	None	replace
899	[BUG]  [BUGGY]  if(included  ||  sourceName!=  null)  {  [CE]  cannot  find  symbol  included  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(included  ||  sourceName!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(included  ||  sourceName!=  null)  {	  if(included)    {    	non-compiled	[CE]  cannot  find  symbol  included	166	None	replace
900	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "-   "))  {  if(inputId!=  null  &&  inputId.equals(. "-   "))  {  [CE]  illegal  start  of  expression  [FE]            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "-   "))  {  if(inputId!=  null  &&  inputId.equals(. "-   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "-   "))    {    if(inputId!=  null  &&  inputId.equals(. "-   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	155	None	add
901	[BUG]  [BUGGY]  if(message  ==  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  Feature  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message  ==  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message  ==  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(message!=    null    &&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	87	None	replace
902	[BUG]  [BUGGY]  if(includeException.equals(message)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  includeException  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includeException.equals(message)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includeException.equals(message)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException.equals(message)&&    inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  includeException	140	None	replace
903	[BUG]  [BUGGY]  if(includedException.equals(message)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  includedException  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includedException.equals(message)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includedException.equals(message)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException.equals(message)&&    inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  includedException	140	None	replace
904	[BUG]  [BUGGY]  if(includeException)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includeException)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includeException)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException.equals(message)&&    inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  illegal  start  of  expression	140	None	replace
905	[BUG]  [BUGGY]  if(includedException  &&  message!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  includedException  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includedException  &&  message!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includedException  &&  message!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException.equals(message)&&    inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  includedException	140	None	replace
906	[BUG]  [BUGGY]  if(curNode  ==  null?   "null "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "null  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [CE]  :  expected  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode  ==  null?   "null "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "null  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode  ==  null?   "null "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "null  :  formatNodeContext( "Parent   ",  curNode.getParent()));	  if(unexpectedException!=    null    ||    message.length()    ==    0)    {    timeout    	non-compiled	[CE]  :  expected	122	None	replace
907	[BUG]  [BUGGY]  if(curNode  ==  null?   "null "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "null  :  formatNodeContext( "Parent "),  curNode.getParent()));  [CE]  :  expected  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode  ==  null?   "null "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "null  :  formatNodeContext( "Parent "),  curNode.getParent()));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode  ==  null?   "null "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "null  :  formatNodeContext( "Parent "),  curNode.getParent()));	  if(unexpectedException!=    null    ||    message.length()    ==    0)    {    timeout    	non-compiled	[CE]  :  expected	122	None	replace
908	[BUG]  [BUGGY]  timeout  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  curNode.getParent().getType()  ==  Token.NAME)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException!=  null  &&  curNode.getParent().getType()  ==  Token.NAME)  {	  if(unexpectedException!=    null    &&    unexpectedException.getMessage().length()    >    0)    {    timeout    	compilable	timeout	69	1	replace
909	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  curNode.getParent().getType()  ==  Token.NAME)  {  timeout  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  curNode.getParent().getType()  ==  Token.NAME)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  curNode.getParent().getType()  ==  Token.NAME)  {	  if(unexpectedException!=    null    &&    unexpectedException.getMessage().length()    >    0)    {    timeout    	compilable	timeout	69	1	replace
910	[BUG]  [BUGGY]  timeout  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  curNode.getParent().getType()  ==  Token.EXPR_RESULT)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException!=  null  &&  curNode.getParent().getType()  ==  Token.EXPR_RESULT)  {	  if(unexpectedException!=    null    &&    unexpectedException.getMessage().length()    >    0)    {    timeout    	compilable	timeout	69	1	replace
911	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  curNode.getParent().getType()  ==  Token.EXPR_RESULT)  {  timeout  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  curNode.getParent().getType()  ==  Token.EXPR_RESULT)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  curNode.getParent().getType()  ==  Token.EXPR_RESULT)  {	  if(unexpectedException!=    null    &&    unexpectedException.getMessage().length()    >    0)    {    timeout    	compilable	timeout	69	1	replace
912	[BUG]  [BUGGY]  if(includeIncludeNodeContext)  {  [CE]  cannot  find  symbol  includeIncludeNodeContext  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includeIncludeNodeContext)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includeIncludeNodeContext)  {	  if(includeNodeContext)    {    	non-compiled	[CE]  cannot  find  symbol  includeIncludeNodeContext	165	None	replace
913	[BUG]  [BUGGY]  Node  curNode  =  cfgs.getCurrentNode(sourceName);  [CE]  <identifier>  expected  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  cfgs.getCurrentNode(sourceName);  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  cfgs.getCurrentNode(sourceName);	  Node    curNode    =    cfgs.getCurrentNode(n);    	non-compiled	[CE]  <identifier>  expected	112	None	replace
914	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||  isEnabled(Feature.ERROR_MESSAGE))  {  [CE]  cannot  find  symbol  Feature  [FE]            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||  isEnabled(Feature.ERROR_MESSAGE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT)||  isEnabled(Feature.ERROR_MESSAGE))  {	  if(unexpectedException!=    null    &&    isEnabled(Feature.QUOTE_NON_NULL_OBJECT))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	119	None	replace
915	[BUG]  [BUGGY]  if(curNode  ==  null?   "  null  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "   "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [CE]  :  expected  [FE]            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode  ==  null?   "  null  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "   "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [BUGGY]    null)  {  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode  ==  null?   "  null  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "   "  :  formatNodeContext( "Parent   ",  curNode.getParent()));	  if(unexpectedException!=    null)    {    if(unexpectedException    	non-compiled	[CE]  :  expected	102	None	replace
916	[BUG]  [BUGGY]  if(curNode  ==  null?   "   "  :  formatNodeContext( "Parent "),  curNode.getParent()));  [CE]  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode  ==  null?   "   "  :  formatNodeContext( "Parent "),  curNode.getParent()));  [BUGGY]    null)  {  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode  ==  null?   "   "  :  formatNodeContext( "Parent "),  curNode.getParent()));	  if(unexpectedException!=    null)    {    if(unexpectedException    	non-compiled	[CE]  	102	None	replace
917	[BUG]  [BUGGY]  if(curNode  ==  null)  {  if(curNode  ==  null  ||  unexpectedException.getMessage()  >=   "n "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null?   "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  [CE]  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode  ==  null)  {  if(curNode  ==  null  ||  unexpectedException.getMessage()  >=   "n "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null?   "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode    ==    null)    {    if(curNode  ==  null  ||  unexpectedException.getMessage()  >=   "n "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null?   "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent()));	  timeout    	non-compiled	[CE]  	21	None	add
918	[BUG]  [BUGGY]  if(curNode  ==  null)  {  if(curNode  ==  null  ||  unexpectedException.getMessage()!=   "n "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null?   "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent())  [CE]  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode  ==  null)  {  if(curNode  ==  null  ||  unexpectedException.getMessage()!=   "n "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null?   "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent())  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode    ==    null)    {    if(curNode  ==  null  ||  unexpectedException.getMessage()!=   "n "  +  formatNodeContext(   "Node   ",  curNode)  +  (curNode  ==  null?   "   "  :  formatNodeContext(   "Parent   ",  curNode.getParent())	  timeout    	non-compiled	[CE]  	21	None	add
919	[BUG]  [BUGGY]  if(unexpectedException  ==  null  &&  curNode!=  null)  {  if(unexpectedException  ==  null  |&  curNode!=  null)  {  [CE]  illegal  start  of  expression  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException  ==  null  &&  curNode!=  null)  {  if(unexpectedException  ==  null  |&  curNode!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException    ==    null    &&    curNode!=    null)    {    if(unexpectedException  ==  null  |&  curNode!=  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	66	None	add
920	[BUG]  [BUGGY]  if(inputId!=  null  ||  message.length()  ==  0)  {  if(inputId!=  null  ||  message.length()  {  0)  {  [CE]  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  ||  message.length()  ==  0)  {  if(inputId!=  null  ||  message.length()  {  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    ||    message.length()    ==    0)    {    if(inputId!=  null  ||  message.length()  {  0)  {	  timeout    	non-compiled	[CE]  	95	None	add
921	[BUG]  [BUGGY]  if(includeException)  {  If(inputId!=  null  &&  inputId.equals( " "))  {  [CE]  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includeException)  {  If(inputId!=  null  &&  inputId.equals( " "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includeException)  {  If(inputId!=  null  &&  inputId.equals( " "))  {	  if(inputId!=    null    &&    inputId.equals(       "       "))    {    If(inputId!=    null    &&    inputId.equals(   "       "))    {    	non-compiled	[CE]  	37	None	replace
922	[BUG]  [BUGGY]  if(includedException  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  includedException  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includedException  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includedException  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(unknownException!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  includedException	127	None	replace
923	[BUG]  [BUGGY]  if(unknownException!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [CE]  cannot  find  symbol  unknownException  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  &&  isEnabled(Feature.QUOTE_NON_NULL_OBJECT))  {	  if(unknownException!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	127	None	replace
924	[BUG]  [BUGGY]  if(includedException.equals(message)&&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  includedException  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includedException.equals(message)&&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includedException.equals(message)&&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(unknownException.equals(message)&&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  includedException	148	None	replace
925	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isInternalError(message,  path))  {  [CE]  cannot  find  symbol  path  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isInternalError(message,  path))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isInternalError(message,  path))  {	  if(unexpectedException!=    null    &&    isInternalError(message))    {    	non-compiled	[CE]  cannot  find  symbol  path	63	None	replace
926	[BUG]  [BUGGY]  if(includeException.equals(message)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  includeException  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includeException.equals(message)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includeException.equals(message)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(unknownException.equals(message)&&    inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  includeException	129	None	replace
927	[BUG]  [BUGGY]  if(includedException.equals(message)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  includedException  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includedException.equals(message)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includedException.equals(message)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(unknownException.equals(message)&&    inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  includedException	129	None	replace
928	[BUG]  [BUGGY]  if(includeException)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includeException)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includeException)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(unknownException.equals(message)&&    inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
929	[BUG]  [BUGGY]  if(includedException)&&  message!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includedException)&&  message!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includedException)&&  message!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(unknownException.equals(message)&&    inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
930	[BUG]  [BUGGY]  if(curNode  ==  null?   "null "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "   "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [CE]  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode  ==  null?   "null "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "   "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode  ==  null?   "null "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "   "  :  formatNodeContext( "Parent   ",  curNode.getParent()));	  if(unexpectedException.getMessage()!=    null)    {    If(unexpectedException.getMessage()!=    null)    {    	non-compiled	[CE]  	16	None	replace
931	[BUG]  [BUGGY]  String  sourceName  =  inputId.getString();  [CE]  <identifier>  expected  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  String  sourceName  =  inputId.getString();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	String  sourceName  =  inputId.getString();	  String    sourceName    =    curNode.getString();    	non-compiled	[CE]  <identifier>  expected	52	None	replace
932	[BUG]  [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  MISSING_SOURCE))  {  [CE]  cannot  find  symbol  Feature  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  MISSING_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  MISSING_SOURCE))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES,    message))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	142	None	replace
933	[BUG]  [BUGGY]  if(inputId  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  message))  {  [CE]  cannot  find  symbol  Feature  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  message))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES,  message))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES,    message))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	142	None	replace
934	[BUG]  [BUGGY]  Node  curNode  =  nodeTypes.get(message)+  1;  [CE]  <identifier>  expected  [FE]                                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  nodeTypes.get(message)+  1;  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  nodeTypes.get(message)+  1;	  Node    curNode    =    nodeTypes.get(message);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
935	[BUG]  [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.CLOSE_TO_STREAM))  {  [CE]  cannot  find  symbol  Feature  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.CLOSE_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  isEnabled(Feature.CLOSE_TO_STREAM))  {	  if(inputId!=    null    &&    isEnabled(Feature.WARNING_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	101	None	replace
936	[BUG]  [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.EXPR_RESULT))  {  [CE]  cannot  find  symbol  Feature  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.EXPR_RESULT))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  isEnabled(Feature.EXPR_RESULT))  {	  if(inputId!=    null    &&    isEnabled(Feature.WARNING_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	101	None	replace
937	[BUG]  [BUGGY]  if(unknownException.equals(message)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_SOURCE))  {  [CE]  cannot  find  symbol  unknownException  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.equals(message)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.equals(message)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_SOURCE))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	154	None	replace
938	[BUG]  [BUGGY]  if(unknownException.equals(message)&&  isEnabled(Feature.QUOTE_SOURCE))  {  [CE]  cannot  find  symbol  unknownException  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.equals(message)&&  isEnabled(Feature.QUOTE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.equals(message)&&  isEnabled(Feature.QUOTE_SOURCE))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	154	None	replace
939	[BUG]  [BUGGY]  if(includeException.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  includeException  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includeException.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includeException.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException.getMessage()!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  includeException	40	None	replace
940	[BUG]  [BUGGY]  if(message.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException.getMessage()!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
941	[BUG]  [BUGGY]  if(nodeTypes.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  nodeTypes  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(nodeTypes.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(nodeTypes.getMessage()!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException.getMessage()!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  nodeTypes	40	None	replace
942	[BUG]  [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME,  MISSING_SOURCE))  {  [CE]  cannot  find  symbol  Feature  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME,  MISSING_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME,  MISSING_SOURCE))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME,    message))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	130	None	replace
943	[BUG]  [BUGGY]  if(inputId  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME,  message))  {  [CE]  cannot  find  symbol  Feature  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME,  message))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME,  message))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME,    message))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	130	None	replace
944	[BUG]  [BUGGY]  Node  curNode  =  n.cloneTree();  [CE]  <identifier>  expected  [FE]                                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  n.cloneTree();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  n.cloneTree();	  Node    curNode    =    n.getParent();    	non-compiled	[CE]  <identifier>  expected	58	None	replace
945	[BUG]  [BUGGY]  if(unexpectedException  ==  null)  {  if(unexpectedException  >>  null)  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException  ==  null)  {  if(unexpectedException  >>  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException    ==    null)    {    if(unexpectedException  >>  null)  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	19	None	add
946	[BUG]  [BUGGY]  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode  ==  null  ||  inputId  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(curNode  ==  null  ||  inputId  ==  null)  {	  if(inputId    ==    null)    {    if(inputId    ==    null    ||    inputId    ==    null)    {    	compilable	timeout	116	1	replace
947	[BUG]  [BUGGY]  if(curNode  ==  null  ||  inputId  ==  null)  {  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode  ==  null  ||  inputId  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode  ==  null  ||  inputId  ==  null)  {	  if(inputId    ==    null)    {    if(inputId    ==    null    ||    inputId    ==    null)    {    	compilable	timeout	116	1	replace
948	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTED_TO_STREAM))  {  [CE]  cannot  find  symbol  Feature  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTED_TO_STREAM))  {	  if(unexpectedException!=    null    &&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	85	None	replace
949	[BUG]  [BUGGY]  if(unknownException.equals(message)||  inputId!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  unknownException  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.equals(message)||  inputId!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.equals(message)||  inputId!=  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(inputId!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	45	None	replace
950	[BUG]  [BUGGY]  if(included  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  included  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(included  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(included  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(inputId!=    null    ||    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  included	45	None	replace
951	[BUG]  [BUGGY]  if(included  ||  isEnabled(Feature.AUTO_CLOSE_SOURCE)&&  message.length()  >  0)  {  [CE]  cannot  find  symbol  included  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(included  ||  isEnabled(Feature.AUTO_CLOSE_SOURCE)&&  message.length()  >  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(included  ||  isEnabled(Feature.AUTO_CLOSE_SOURCE)&&  message.length()  >  0)  {	  if(included    ||    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  included	149	None	replace
952	[BUG]  [BUGGY]  if(included  ||  isEnabled(Feature.QUOTE_SOURCE))  {  [CE]  cannot  find  symbol  included  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(included  ||  isEnabled(Feature.QUOTE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(included  ||  isEnabled(Feature.QUOTE_SOURCE))  {	  if(included    ||    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  included	149	None	replace
953	[BUG]  [BUGGY]  if(included  ||  isEnabled(Feature.AUTO_CLOSE_SOURCE)&&  message.length()!=  0)  {  [CE]  cannot  find  symbol  included  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(included  ||  isEnabled(Feature.AUTO_CLOSE_SOURCE)&&  message.length()!=  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(included  ||  isEnabled(Feature.AUTO_CLOSE_SOURCE)&&  message.length()!=  0)  {	  if(included    ||    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  included	149	None	replace
954	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "+   "))  {  if(inputId  >=  null  &&  inputId.equals(   "+   "))  {  [CE]  illegal  start  of  expression  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "+   "))  {  if(inputId  >=  null  &&  inputId.equals(   "+   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "+   "))    {    if(inputId  >=  null  &&  inputId.equals(   "+   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	157	None	add
955	[BUG]  [BUGGY]  if(unknownException.equals(message)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_TO_STREAM))  {  [CE]  cannot  find  symbol  unknownException  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.equals(message)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.equals(message)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_TO_STREAM))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	150	None	replace
956	[BUG]  [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.QUOTE_TO_STREAM,  message))  {  [CE]  cannot  find  symbol  Feature  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.QUOTE_TO_STREAM,  message))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  isEnabled(Feature.QUOTE_TO_STREAM,  message))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	150	None	replace
957	[BUG]  [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.QUOTE_TO_STREAM)||  isEnabled(Feature.MISSING_SOURCE))  {  [CE]  cannot  find  symbol  Feature  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.QUOTE_TO_STREAM)||  isEnabled(Feature.MISSING_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  isEnabled(Feature.QUOTE_TO_STREAM)||  isEnabled(Feature.MISSING_SOURCE))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	150	None	replace
958	[BUG]  [BUGGY]  timeout  [FE]            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals( "-1 "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId!=  null  &&  inputId.equals( "-1 "))  {	  if(inputId!=    null    &&    inputId.equals(   "-   "))    {    timeout    	compilable	timeout	156	1	replace
959	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals( "-1 "))  {  timeout  [FE]            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals( "-1 "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  inputId.equals( "-1 "))  {	  if(inputId!=    null    &&    inputId.equals(   "-   "))    {    timeout    	compilable	timeout	156	1	replace
960	[BUG]  [BUGGY]  if(nodeTypes.getMessage()!=  null)  {  [CE]  cannot  find  symbol  nodeTypes  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(nodeTypes.getMessage()!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(nodeTypes.getMessage()!=  null)  {	  if(exception.getMessage()!=    null)    {    	non-compiled	[CE]  cannot  find  symbol  nodeTypes	31	None	replace
961	[BUG]  [BUGGY]  if(included  ||  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  included  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(included  ||  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(included  ||  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(inputId!=    null    ||    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  included	88	None	replace
962	[BUG]  [BUGGY]  if(unknownException.equals(message)||  inputId!=  null  ||  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  unknownException  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.equals(message)||  inputId!=  null  ||  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.equals(message)||  inputId!=  null  ||  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(inputId!=    null    ||    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	88	None	replace
963	[BUG]  [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.EXPR_RESULT))  {  [CE]  cannot  find  symbol  Feature  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.EXPR_RESULT))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.EXPR_RESULT))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME)||    isEnabled(Feature.WARNING_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	131	None	replace
964	[BUG]  [BUGGY]  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId!=  null  &&  message.length()  ==  0)  {	  if(inputId!=    null    ||    message.length()    ==    0)    {    timeout    	compilable	timeout	96	1	replace
965	[BUG]  [BUGGY]  if(inputId!=  null  &&  message.length()  ==  0)  {  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  message.length()  ==  0)  {	  if(inputId!=    null    ||    message.length()    ==    0)    {    timeout    	compilable	timeout	96	1	replace
966	[BUG]  [BUGGY]  if(curNode!=  null  &&  inputId.length()  ==  0)  {  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  &&  inputId.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null  &&  inputId.length()  ==  0)  {	  if(inputId!=    null    ||    message.length()    ==    0)    {    timeout    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
967	[BUG]  [BUGGY]  timeout  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  &&  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(curNode!=  null  &&  message.length()  ==  0)  {	  if(inputId!=    null    ||    message.length()    ==    0)    {    timeout    	compilable	timeout	96	1	replace
968	[BUG]  [BUGGY]  if(curNode!=  null  &&  message.length()  ==  0)  {  timeout  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  &&  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null  &&  message.length()  ==  0)  {	  if(inputId!=    null    ||    message.length()    ==    0)    {    timeout    	compilable	timeout	96	1	replace
969	[BUG]  [BUGGY]  if(includeException.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  includeException  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includeException.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includeException.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(unknownException.getMessage()    ==    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  includeException	48	None	replace
970	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "n   "))  {  if(inputId!=  null  &&  inputId.equals( "))  {  [CE]  unclosed  string  literal  [FE]            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "n   "))  {  if(inputId!=  null  &&  inputId.equals( "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "n   "))    {    if(inputId!=  null  &&  inputId.equals( "))  {	  timeout    	non-compiled	[CE]  unclosed  string  literal	1	None	add
971	[BUG]  [BUGGY]  Node  curNode  =  cb.nextNode();  [CE]  <identifier>  expected  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  cb.nextNode();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  cb.nextNode();	  Node    curNode    =    cb.getCurrentNode();    	non-compiled	[CE]  <identifier>  expected	146	None	replace
972	[BUG]  [BUGGY]  Node  curNode  =  cb.removeFirstChild();  [CE]  <identifier>  expected  [FE]                              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  cb.removeFirstChild();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  cb.removeFirstChild();	  Node    curNode    =    cb.getCurrentNode();    	non-compiled	[CE]  <identifier>  expected	146	None	replace
973	[BUG]  [BUGGY]  Node  curNode  =  cb.cloneTree();  [CE]  <identifier>  expected  [FE]                                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  cb.cloneTree();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  cb.cloneTree();	  Node    curNode    =    cb.getCurrentNode();    	non-compiled	[CE]  <identifier>  expected	146	None	replace
974	[BUG]  [BUGGY]  if(includeException.equals(message)&&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  includeException  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includeException.equals(message)&&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includeException.equals(message)&&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(unknownException.equals(message)&&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  includeException	99	None	replace
975	[BUG]  [BUGGY]  if(unknownException  ==  null?   "n "  :  formatNodeContext( "Node   ",  curNode)  +  (curNode  ==  null?   "   "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [CE]  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException  ==  null?   "n "  :  formatNodeContext( "Node   ",  curNode)  +  (curNode  ==  null?   "   "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException  ==  null?   "n "  :  formatNodeContext( "Node   ",  curNode)  +  (curNode  ==  null?   "   "  :  formatNodeContext( "Parent   ",  curNode.getParent()));	  if(unknownException    ==    null)    {    	non-compiled	[CE]  	93	None	replace
976	[BUG]  [BUGGY]  if(unknownException  ==  null?   "n "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "   "  :  formatNodeContext( "Parent "),  curNode.getParent()));  [CE]  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException  ==  null?   "n "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "   "  :  formatNodeContext( "Parent "),  curNode.getParent()));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException  ==  null?   "n "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "   "  :  formatNodeContext( "Parent "),  curNode.getParent()));	  if(unknownException    ==    null)    {    	non-compiled	[CE]  	93	None	replace
977	[BUG]  [BUGGY]  if(included)  {  If(inputId  ==  null)  {  [CE]  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(included)  {  If(inputId  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(included)  {  If(inputId  ==  null)  {	  if(inputId    ==    null)    {    If(inputId    ==    null)    {    	non-compiled	[CE]  	80	None	replace
978	[BUG]  [BUGGY]  if(includeNodeContext)  {  If(inputId  ==  null)  {  [CE]  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includeNodeContext)  {  If(inputId  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includeNodeContext)  {  If(inputId  ==  null)  {	  if(inputId    ==    null)    {    If(inputId    ==    null)    {    	non-compiled	[CE]  	80	None	replace
979	[BUG]  [BUGGY]  if(includeNull)  {  If(inputId!=  null)  {  [CE]  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includeNull)  {  If(inputId!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includeNull)  {  If(inputId!=  null)  {	  if(inputId    ==    null)    {    If(inputId    ==    null)    {    	non-compiled	[CE]  	80	None	replace
980	[BUG]  [BUGGY]  if(includeException.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  includeException  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includeException.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includeException.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(unknownException.equals(message)&&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  includeException	132	None	replace
981	[BUG]  [BUGGY]  if(includedException.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  includedException  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includedException.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includedException.equals(message)&&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(unknownException.equals(message)&&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  includedException	132	None	replace
982	[BUG]  [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "/   "))  {  if(inputId!=  null  &&  inputId.equals( ",/   "))  {  [CE]  illegal  start  of  expression  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  inputId.equals(   "/   "))  {  if(inputId!=  null  &&  inputId.equals( ",/   "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=    null    &&    inputId.equals(   "/   "))    {    if(inputId!=  null  &&  inputId.equals( ",/   "))  {	  timeout    	non-compiled	[CE]  illegal  start  of  expression	159	None	add
983	[BUG]  [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.AUTO_PASSED_TO_STREAM,  message))  {  [CE]  cannot  find  symbol  Feature  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.AUTO_PASSED_TO_STREAM,  message))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  isEnabled(Feature.AUTO_PASSED_TO_STREAM,  message))  {	  if(inputId!=    null    &&    isEnabled(Feature.AUTO_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	151	None	replace
984	[BUG]  [BUGGY]  if(unknownException.equals(message)&&  inputId!=  null  &&  isEnabled(Feature.AUTO_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  unknownException  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.equals(message)&&  inputId!=  null  &&  isEnabled(Feature.AUTO_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.equals(message)&&  inputId!=  null  &&  isEnabled(Feature.AUTO_PASSED_TO_STREAM))  {	  if(inputId!=    null    &&    isEnabled(Feature.AUTO_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	151	None	replace
985	[BUG]  [BUGGY]  if(included  ||  inputId!=  null  &&  isEnabled(Feature.AUTO_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  included  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(included  ||  inputId!=  null  &&  isEnabled(Feature.AUTO_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(included  ||  inputId!=  null  &&  isEnabled(Feature.AUTO_PASSED_TO_STREAM))  {	  if(inputId!=    null    &&    isEnabled(Feature.AUTO_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  included	151	None	replace
986	[BUG]  [BUGGY]  timeout  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  message.equals( "null "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId!=  null  &&  message.equals( "null "))  {	  if(inputId!=    null    &&    inputId.equals(       "       "))    {    if(inputId!=    null    &&    inputId.equals(   "))    {    	compilable	timeout	38	1	replace
987	[BUG]  [BUGGY]  if(inputId!=  null  &&  message.equals( "null "))  {  timeout  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  message.equals( "null "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  message.equals( "null "))  {	  if(inputId!=    null    &&    inputId.equals(       "       "))    {    if(inputId!=    null    &&    inputId.equals(   "))    {    	compilable	timeout	38	1	replace
988	[BUG]  [BUGGY]  if(message.getMessage()!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message.getMessage()!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message.getMessage()!=  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(unknownException.getMessage()!=    null    &&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
989	[BUG]  [BUGGY]  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode  ==  null  ||  inputId.equals( " "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(curNode  ==  null  ||  inputId.equals( " "))  {	  if(inputId    ==    null)    {    if(inputId    ==    null    ||    inputId.equals(   "   "))    {    	compilable	timeout	133	1	replace
990	[BUG]  [BUGGY]  if(curNode  ==  null  ||  inputId.equals( " "))  {  timeout  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode  ==  null  ||  inputId.equals( " "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode  ==  null  ||  inputId.equals( " "))  {	  if(inputId    ==    null)    {    if(inputId    ==    null    ||    inputId.equals(   "   "))    {    	compilable	timeout	133	1	replace
991	[BUG]  [BUGGY]  if(included  ||  path!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  included  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(included  ||  path!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(included  ||  path!=  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(included    ||    inputId!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  included	147	None	replace
992	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&!included  ||  message.length()  ==  0)  {  [CE]  cannot  find  symbol  included  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&!included  ||  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&!included  ||  message.length()  ==  0)  {	  if(unexpectedException!=    null    &&!included)    {    	non-compiled	[CE]  cannot  find  symbol  included	162	None	replace
993	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&!message.length()  >  0)  {  [CE]  bad  operand  type  int  for  unary  operator  '!'  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&!message.length()  >  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&!message.length()  >  0)  {	  if(unexpectedException!=    null    &&!included)    {    	non-compiled	[CE]  bad  operand  type  int  for  unary  operator  '!'	162	None	replace
994	[BUG]  [BUGGY]  timeout  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&!message.equals( " "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(unexpectedException!=  null  &&!message.equals( " "))  {	  if(unexpectedException!=    null    &&!included)    {    	compilable	timeout	162	1	replace
995	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&!message.equals( " "))  {  timeout  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&!message.equals( " "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&!message.equals( " "))  {	  if(unexpectedException!=    null    &&!included)    {    	compilable	timeout	162	1	replace
996	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&!this.included)  {  [CE]  cannot  find  symbol  included  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&!this.included)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&!this.included)  {	  if(unexpectedException!=    null    &&!included)    {    	non-compiled	[CE]  cannot  find  symbol  included	162	None	replace
997	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&!included  &&  message.length()  >  0)  {  [CE]  cannot  find  symbol  included  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&!included  &&  message.length()  >  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&!included  &&  message.length()  >  0)  {	  if(unexpectedException!=    null    &&!included)    {    	non-compiled	[CE]  cannot  find  symbol  included	162	None	replace
998	[BUG]  [BUGGY]  if(unknownException.equals(message)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NODE))  {  [CE]  cannot  find  symbol  unknownException  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.equals(message)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NODE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.equals(message)&&  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NODE))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NODE))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	152	None	replace
999	[BUG]  [BUGGY]  if(included  ||  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NODE))  {  [CE]  cannot  find  symbol  included  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(included  ||  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NODE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(included  ||  inputId!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NODE))  {	  if(inputId!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NODE))    {    	non-compiled	[CE]  cannot  find  symbol  included	152	None	replace
1000	[BUG]  [BUGGY]  timeout  [FE]            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  &&  curNode  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(curNode!=  null  &&  curNode  ==  null)  {	  if(unexpectedException!=    null    &&    curNode    ==    null)    {    timeout    	compilable	timeout	60	1	replace
1001	[BUG]  [BUGGY]  if(curNode!=  null  &&  curNode  ==  null)  {  timeout  [FE]            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  &&  curNode  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null  &&  curNode  ==  null)  {	  if(unexpectedException!=    null    &&    curNode    ==    null)    {    timeout    	compilable	timeout	60	1	replace
1002	[BUG]  [BUGGY]  timeout  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  &&  unexpectedException.getMessage()!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(curNode!=  null  &&  unexpectedException.getMessage()!=  null)  {	  if(unexpectedException!=    null    &&    curNode    ==    null)    {    timeout    	compilable	timeout	60	1	replace
1003	[BUG]  [BUGGY]  if(curNode!=  null  &&  unexpectedException.getMessage()!=  null)  {  timeout  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  &&  unexpectedException.getMessage()!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null  &&  unexpectedException.getMessage()!=  null)  {	  if(unexpectedException!=    null    &&    curNode    ==    null)    {    timeout    	compilable	timeout	60	1	replace
1004	[BUG]  [BUGGY]  if(curNode!=  null  &&  unexpectedException.isMessage())  {  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  &&  unexpectedException.isMessage())  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null  &&  unexpectedException.isMessage())  {	  if(unexpectedException!=    null    &&    curNode    ==    null)    {    timeout    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
1005	[BUG]  [BUGGY]  if(cfgs.getMessage()!=  null)  {  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(cfgs.getMessage()!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(cfgs.getMessage()!=  null)  {	  if(buffer.getMessage()!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
1006	[BUG]  [BUGGY]  Node  curNode  =  cfgs.getScopeRoot(scope);  [CE]  <identifier>  expected  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  cfgs.getScopeRoot(scope);  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  cfgs.getScopeRoot(scope);	  Node    curNode    =    cfgs.getScopeRoot(n);    	non-compiled	[CE]  <identifier>  expected	144	None	replace
1007	[BUG]  [BUGGY]  Node  curNode  =  scopeRoots.getScopeRoot(n);  [CE]  <identifier>  expected  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  scopeRoots.getScopeRoot(n);  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  scopeRoots.getScopeRoot(n);	  Node    curNode    =    cfgs.getScopeRoot(n);    	non-compiled	[CE]  <identifier>  expected	144	None	replace
1008	[BUG]  [BUGGY]  timeout  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  unexpectedException.getMessage()  ==  null  &&  inputId.equals( " "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(inputId!=  null  &&  unexpectedException.getMessage()  ==  null  &&  inputId.equals( " "))  {	  if(unexpectedException.getMessage()    ==    null    &&    inputId.equals(   "       "))    {    timeout    	compilable	timeout	12	1	replace
1009	[BUG]  [BUGGY]  if(inputId!=  null  &&  unexpectedException.getMessage()  ==  null  &&  inputId.equals( " "))  {  timeout  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  unexpectedException.getMessage()  ==  null  &&  inputId.equals( " "))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  unexpectedException.getMessage()  ==  null  &&  inputId.equals( " "))  {	  if(unexpectedException.getMessage()    ==    null    &&    inputId.equals(   "       "))    {    timeout    	compilable	timeout	12	1	replace
1010	[BUG]  [BUGGY]  if(unexpectedException  ==  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  Feature  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException  ==  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException  ==  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(unexpectedException    ==    null)    {    timeout    	non-compiled	[CE]  cannot  find  symbol  Feature	20	None	replace
1011	[BUG]  [BUGGY]  if(unexpectedException  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))  {  [CE]  cannot  find  symbol  Feature  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NON_NULL_OBJECT))  {	  if(unexpectedException    ==    null)    {    timeout    	non-compiled	[CE]  cannot  find  symbol  Feature	20	None	replace
1012	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.ERROR_MESSAGE))  {  [CE]  cannot  find  symbol  Feature  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.ERROR_MESSAGE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.ERROR_MESSAGE))  {	  if(unexpectedException!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	47	None	replace
1013	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  Feature  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME)||  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(unexpectedException!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	47	None	replace
1014	[BUG]  [BUGGY]  timeout  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  &&  unexpectedException.equals(message))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(curNode!=  null  &&  unexpectedException.equals(message))  {	  if(unknownException!=    null    &&    unexpectedException.equals(message))    {    	compilable	timeout	138	1	replace
1015	[BUG]  [BUGGY]  if(curNode!=  null  &&  unexpectedException.equals(message))  {  timeout  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  &&  unexpectedException.equals(message))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null  &&  unexpectedException.equals(message))  {	  if(unknownException!=    null    &&    unexpectedException.equals(message))    {    	compilable	timeout	138	1	replace
1016	[BUG]  [BUGGY]  if(unknownException!=  null  &&  message.equals(message))  {  [CE]  cannot  find  symbol  unknownException  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException!=  null  &&  message.equals(message))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  &&  message.equals(message))  {	  if(unknownException!=    null    &&    unexpectedException.equals(message))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	138	None	replace
1017	[BUG]  [BUGGY]  if(includeException.getMessage()  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  includeException  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includeException.getMessage()  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includeException.getMessage()  ==  null  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(unknownException.getMessage()    ==    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  includeException	25	None	replace
1018	[BUG]  [BUGGY]  if(null!=  null  &&  curNode.getMessage()!=  null)  {  [CE]  cannot  find  symbol  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(null!=  null  &&  curNode.getMessage()!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(null!=  null  &&  curNode.getMessage()!=  null)  {	  if(null.getMessage()!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
1019	[BUG]  [BUGGY]  timeout  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(null!=  null  &&  unexpectedException.getMessage()!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(null!=  null  &&  unexpectedException.getMessage()!=  null)  {	  if(null.getMessage()!=    null)    {    	compilable	timeout	32	1	replace
1020	[BUG]  [BUGGY]  if(null!=  null  &&  unexpectedException.getMessage()!=  null)  {  timeout  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(null!=  null  &&  unexpectedException.getMessage()!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(null!=  null  &&  unexpectedException.getMessage()!=  null)  {	  if(null.getMessage()!=    null)    {    	compilable	timeout	32	1	replace
1021	[BUG]  [BUGGY]  if(include  ==  null  &&!include)  {  [CE]  cannot  find  symbol  include  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(include  ==  null  &&!include)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(include  ==  null  &&!include)  {	  if(unknownException!=    null    &&!include)    {    	non-compiled	[CE]  cannot  find  symbol  include	134	None	replace
1022	[BUG]  [BUGGY]  if(nodeTypes  ==  null)  {  If(nodeTypes  ==  null)  {  [CE]  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(nodeTypes  ==  null)  {  If(nodeTypes  ==  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(nodeTypes  ==  null)  {  If(nodeTypes  ==  null)  {	  if(unexpectedException!=    null)    {    If(unexpectedException!=    null)    {    	non-compiled	[CE]  	75	None	replace
1023	[BUG]  [BUGGY]  if(curNode  ==  null?   "   "  :  formatNodeContext( "Node   ",  curNode.getParent()));  [CE]  <identifier>  expected  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode  ==  null?   "   "  :  formatNodeContext( "Node   ",  curNode.getParent()));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode  ==  null?   "   "  :  formatNodeContext( "Node   ",  curNode.getParent()));	  if(unexpectedException!=    null)    {    If(unexpectedException!=    null)    {    	non-compiled	[CE]  <identifier>  expected	75	None	replace
1024	[BUG]  [BUGGY]  timeout  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  ||  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	add	if(curNode!=  null  ||  message.length()  ==  0)  {	  if(unknownException!=    null    ||    message.length()    ==    0)    {    	compilable	timeout	108	1	replace
1025	[BUG]  [BUGGY]  if(curNode!=  null  ||  message.length()  ==  0)  {  timeout  [FE]              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  ||  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null  ||  message.length()  ==  0)  {	  if(unknownException!=    null    ||    message.length()    ==    0)    {    	compilable	timeout	108	1	replace
1026	[BUG]  [BUGGY]  if(msg!=  null  ||  message.length()  ==  0)  {  [CE]  cannot  find  symbol  msg  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(msg!=  null  ||  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(msg!=  null  ||  message.length()  ==  0)  {	  if(unknownException!=    null    ||    message.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  msg	108	None	replace
1027	[BUG]  [BUGGY]  if(mean!=  null  ||  message.length()  ==  0)  {  [CE]  cannot  find  symbol  mean  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(mean!=  null  ||  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(mean!=  null  ||  message.length()  ==  0)  {	  if(unknownException!=    null    ||    message.length()    ==    0)    {    	non-compiled	[CE]  cannot  find  symbol  mean	108	None	replace
1028	[BUG]  [BUGGY]  if(unknownException!=  null  &&  curNode.getType()  ==  Token.NAME)  {  [CE]  cannot  find  symbol  unknownException  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException!=  null  &&  curNode.getType()  ==  Token.NAME)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  &&  curNode.getType()  ==  Token.NAME)  {	  if(unknownException!=    null    &&    message.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	136	None	replace
1029	[BUG]  [BUGGY]  if(unknownException!=  null  &&  curNode.getType()  ==  Token.EXPR_RESULT)  {  [CE]  cannot  find  symbol  unknownException  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException!=  null  &&  curNode.getType()  ==  Token.EXPR_RESULT)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  &&  curNode.getType()  ==  Token.EXPR_RESULT)  {	  if(unknownException!=    null    &&    message.length()    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	136	None	replace
1030	[BUG]  [BUGGY]  if(unknownException.getMessage()  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  unknownException  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.getMessage()  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.getMessage()  ==  null  ||  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException.getMessage()    ==    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	42	None	replace
1031	[BUG]  [BUGGY]  if(includeException.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  cannot  find  symbol  includeException  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includeException.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includeException.getMessage()  ==  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  if(unknownException.getMessage()    ==    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  includeException	42	None	replace
1032	[BUG]  [BUGGY]  if(unknownException.equals(sourceName)&&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  unknownException  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.equals(sourceName)&&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.equals(sourceName)&&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(sourceName!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	28	None	replace
1033	[BUG]  [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.ERROR_MESSAGE))  {  [CE]  cannot  find  symbol  Feature  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.ERROR_MESSAGE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NAMES)||  isEnabled(Feature.ERROR_MESSAGE))  {	  if(unexpectedException!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAMES))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	41	None	replace
1034	[BUG]  [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.VISIBILITY_PASSED_TO_STREAM,  message))  {  [CE]  cannot  find  symbol  Feature  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.VISIBILITY_PASSED_TO_STREAM,  message))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  isEnabled(Feature.VISIBILITY_PASSED_TO_STREAM,  message))  {	  if(inputId!=    null    &&    isEnabled(Feature.VISIBILITY_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  Feature	153	None	replace
1035	[BUG]  [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.VISIBILITY_PASSED_TO_STREAM),  message)  {  [CE]  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(inputId!=  null  &&  isEnabled(Feature.VISIBILITY_PASSED_TO_STREAM),  message)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(inputId!=  null  &&  isEnabled(Feature.VISIBILITY_PASSED_TO_STREAM),  message)  {	  if(inputId!=    null    &&    isEnabled(Feature.VISIBILITY_PASSED_TO_STREAM))    {    	non-compiled	[CE]  	153	None	replace
1036	[BUG]  [BUGGY]  if(curNode!=  null  &&  curNode.getMessage()!=  null)  {  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null  &&  curNode.getMessage()!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null  &&  curNode.getMessage()!=  null)  {	  if(curNode.getMessage()!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
1037	[BUG]  [BUGGY]  if(curNode!=  null?  null  :  curNode.getMessage()!=  null)  {  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode!=  null?  null  :  curNode.getMessage()!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode!=  null?  null  :  curNode.getMessage()!=  null)  {	  if(curNode.getMessage()!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
1038	[BUG]  [BUGGY]  if(curNode  ==  null  ||  curNode.getMessage()!=  null)  {  [CE]  cannot  find  symbol  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode  ==  null  ||  curNode.getMessage()!=  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode  ==  null  ||  curNode.getMessage()!=  null)  {	  if(curNode.getMessage()!=    null)    {    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
1039	[BUG]  [BUGGY]  if(message.getMessage()  ==  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(message.getMessage()  ==  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(message.getMessage()  ==  null  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(unknownException.getMessage()    ==    null    &&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
1040	[BUG]  [BUGGY]  if(includedException  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  cannot  find  symbol  includedException  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includedException  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includedException  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(unknownException!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  cannot  find  symbol  includedException	104	None	replace
1041	[BUG]  [BUGGY]  if(include  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  ')'  expected  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(include  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(include  null  &&  isEnabled(Feature.QUOTE_FIELD_NAME))  {	  if(unknownException!=    null    &&    isEnabled(Feature.QUOTE_FIELD_NAME))    {    	non-compiled	[CE]  ')'  expected	104	None	replace
1042	[BUG]  [BUGGY]  if(unexpectedException.getMessage()!=  null?   "n "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "n "  :  formatNodeContext( "Parent   ",  curNode.getParent  [CE]  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()!=  null?   "n "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "n "  :  formatNodeContext( "Parent   ",  curNode.getParent  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()!=  null?   "n "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "n "  :  formatNodeContext( "Parent   ",  curNode.getParent	  if(unexpectedException.getMessage()!=    null?       "n   "    :    formatNodeContext(   "Node       ",    curNode)    +    (curNode    ==    null?       "       "    :    formatNodeContext(   "Parent       ",    curNode.getParent()));    	non-compiled	[CE]  	72	None	replace
1043	[BUG]  [BUGGY]  if(curNode.getMessage()!=  null?   "n "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "n "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [CE]  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(curNode.getMessage()!=  null?   "n "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "n "  :  formatNodeContext( "Parent   ",  curNode.getParent()));  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(curNode.getMessage()!=  null?   "n "  :  formatNodeContext( "Node   ",  curNode)+  (curNode  ==  null?   "n "  :  formatNodeContext( "Parent   ",  curNode.getParent()));	  if(unexpectedException.getMessage()!=    null?       "n   "    :    formatNodeContext(   "Node       ",    curNode)    +    (curNode    ==    null?       "       "    :    formatNodeContext(   "Parent       ",    curNode.getParent()));    	non-compiled	[CE]  	72	None	replace
1044	[BUG]  [BUGGY]  if(unknownException.isEmpty()  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [CE]  cannot  find  symbol  unknownException  [FE]                      RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException.isEmpty()  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException.isEmpty()  &&  isEnabled(Feature.AUTO_CLOSE_SOURCE))  {	  if(message!=    null    &&    isEnabled(Feature.AUTO_CLOSE_SOURCE))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	27	None	replace
1045	[BUG]  [BUGGY]  if(unexpectedException.getMessage()  ==  null)  {  if(unexpectedException.getMessage()  {  null)  {  [CE]  [FE]                    RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unexpectedException.getMessage()  ==  null)  {  if(unexpectedException.getMessage()  {  null)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unexpectedException.getMessage()    ==    null)    {    if(unexpectedException.getMessage()  {  null)  {	  timeout    	non-compiled	[CE]  	105	None	add
1046	[BUG]  [BUGGY]  Node  curNode  =  this.curNode.getNext();  [CE]  <identifier>  expected  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  this.curNode.getNext();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  this.curNode.getNext();	  Node    curNode    =    curNode.getNext();    	non-compiled	[CE]  <identifier>  expected	54	None	replace
1047	[BUG]  [BUGGY]  if(unknownException!=  null  &&!included  ||  message.length()  ==  0)  {  [CE]  cannot  find  symbol  unknownException  [FE]                RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException!=  null  &&!included  ||  message.length()  ==  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  &&!included  ||  message.length()  ==  0)  {	  if(unknownException!=    null    &&!included)    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	135	None	replace
1048	[BUG]  [BUGGY]  if(unknownException!=  null  &&!included  &&  message.length()  >  0)  {  [CE]  cannot  find  symbol  unknownException  [FE]                  RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException!=  null  &&!included  &&  message.length()  >  0)  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  &&!included  &&  message.length()  >  0)  {	  if(unknownException!=    null    &&!included)    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	135	None	replace
1049	[BUG]  [BUGGY]  Node  curNode  =  getCurrentScope();  [CE]  <identifier>  expected  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  getCurrentScope();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  getCurrentScope();	  Node    curNode    =    getCurrentNode();    	non-compiled	[CE]  <identifier>  expected	145	None	replace
1050	[BUG]  [BUGGY]  Node  curNode  =  getCurrentContextNode();  [CE]  <identifier>  expected  [FE]                            RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  getCurrentContextNode();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  getCurrentContextNode();	  Node    curNode    =    getCurrentNode();    	non-compiled	[CE]  <identifier>  expected	145	None	replace
1051	[BUG]  [BUGGY]  Node  curNode  =  getCurrentPosition();  [CE]  <identifier>  expected  [FE]                              RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  Node  curNode  =  getCurrentPosition();  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	Node  curNode  =  getCurrentPosition();	  Node    curNode    =    getCurrentNode();    	non-compiled	[CE]  <identifier>  expected	145	None	replace
1052	[BUG]  [BUGGY]  if(unknownException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NODE))  {  [CE]  cannot  find  symbol  unknownException  [FE]                        RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(unknownException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NODE))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(unknownException!=  null  &&  isEnabled(Feature.QUOTE_FIELD_NODE))  {	  if(unknownException!=    null    &&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  unknownException	139	None	replace
1053	[BUG]  [BUGGY]  if(includedException  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [CE]  cannot  find  symbol  includedException  [FE]                          RuntimeException      [CONTEXT]      private  void  throwUnexpectedException(Exception  unexpectedException)  {    String  message  =  unexpectedException.getMessage();          [BUGGY]  if(includedException  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {  [BUGGY]      message  =  unexpectedException.getMessage()  +       "\n     "  +  formatNodeContext(     "Node     ",  curNode)  +  (curNode  ==  null  ?       "     "  :  formatNodeContext(     "Parent     ",  curNode.getParent()));  }  compiler.throwInternalError(message,  unexpectedException);  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  throwUnexpectedException  [RETURN_TYPE]  void  Exception  unexpectedException  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	0.7071067811865475	249	249	1	replace	if(includedException  &&  isEnabled(Feature.FLUSH_PASSED_TO_STREAM))  {	  if(unknownException!=    null    &&    isEnabled(Feature.FLUSH_PASSED_TO_STREAM))    {    	non-compiled	[CE]  cannot  find  symbol  includedException	139	None	replace
