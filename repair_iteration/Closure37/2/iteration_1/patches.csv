bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  throw  cfgs.unexpectedException( " ");  [CE]  cannot  find  symbol  [FE]            RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  throw  cfgs.unexpectedException( " ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw  cfgs.unexpectedException( " ");	  throw    cb.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
2	[BUG]  [BUGGY]  scopeCreator.unexpectedException( " ");  [CE]  cannot  find  symbol  [FE]              RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  scopeCreator.unexpectedException( " ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scopeCreator.unexpectedException( " ");	  throw    cb.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
3	[BUG]  [BUGGY]  Throwable  cb  =  sourceName.unexpectedException( " ");  [CE]  cannot  find  symbol  [FE]                RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  Throwable  cb  =  sourceName.unexpectedException( " ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cb  =  sourceName.unexpectedException( " ");	  throw    cb.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
4	[BUG]  [BUGGY]  Throwables.unexpectedException( " ");  [CE]  cannot  find  symbol  Throwables  [FE]                  RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  Throwables.unexpectedException( " ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.unexpectedException( " ");	  throw    cb.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  Throwables	5	None	replace
5	[BUG]  [BUGGY]  handleMissingScopeException(root,  unexpectedException);  [CE]  cannot  find  symbol  [FE]              RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  handleMissingScopeException(root,  unexpectedException);  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(root,  unexpectedException);	  handleMissingScopeException(root);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
6	[BUG]  [BUGGY]  handleMissingScopeException(root,  sourceName);  [CE]  cannot  find  symbol  [FE]                RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  handleMissingScopeException(root,  sourceName);  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(root,  sourceName);	  handleMissingScopeException(root);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
7	[BUG]  [BUGGY]  handleMissingScopeException(root,  null);  [CE]  cannot  find  symbol  [FE]                  RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  handleMissingScopeException(root,  null);  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(root,  null);	  handleMissingScopeException(root);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
8	[BUG]  [BUGGY]  traverseMissingScopeException(root);  [CE]  cannot  find  symbol  [FE]                    RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  traverseMissingScopeException(root);  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	traverseMissingScopeException(root);	  handleMissingScopeException(root);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
9	[BUG]  [BUGGY]  handleMissingScopeException(root,  cb);  [CE]  cannot  find  symbol  cb  [FE]                      RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  handleMissingScopeException(root,  cb);  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(root,  cb);	  handleMissingScopeException(root);    	non-compiled	[CE]  cannot  find  symbol  cb	6	None	replace
10	[BUG]  [BUGGY]  handleMissingScopeException(root,  unwrapped);  [CE]  cannot  find  symbol  unwrapped  [FE]                        RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  handleMissingScopeException(root,  unwrapped);  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(root,  unwrapped);	  handleMissingScopeException(root);    	non-compiled	[CE]  cannot  find  symbol  unwrapped	6	None	replace
11	[BUG]  [BUGGY]  handleMissingScopeException(root,  undefined);  [CE]  cannot  find  symbol  undefined  [FE]                          RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  handleMissingScopeException(root,  undefined);  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(root,  undefined);	  handleMissingScopeException(root);    	non-compiled	[CE]  cannot  find  symbol  undefined	6	None	replace
12	[BUG]  [BUGGY]      Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE));  [CE]  no  suitable  method  found  for  make(String,Node,String)  [FE]                      RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]      Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE));  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	        Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE));	  timeout    	non-compiled	[CE]  no  suitable  method  found  for  make(String,Node,String)	10	None	add
13	[BUG]  [BUGGY]      Context.report(JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  sourceName));  [CE]  cannot  find  symbol  NON_GLOBAL_ERROR  [FE]                        RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]      Context.report(JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  sourceName));  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	        Context.report(JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  sourceName));	  timeout    	non-compiled	[CE]  cannot  find  symbol  NON_GLOBAL_ERROR	10	None	add
14	[BUG]  [BUGGY]      Context.report(JSError.make(sourceName,  curNode,  INVALID_SOURCE));  [CE]  cannot  find  symbol  INVALID_SOURCE  [FE]                          RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]      Context.report(JSError.make(sourceName,  curNode,  INVALID_SOURCE));  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	        Context.report(JSError.make(sourceName,  curNode,  INVALID_SOURCE));	  timeout    	non-compiled	[CE]  cannot  find  symbol  INVALID_SOURCE	10	None	add
15	[BUG]  [BUGGY]      Context.report(JSError.make(sourceName,  curNode,  INVALID_SOURCE,  sourceName));  [CE]  cannot  find  symbol  INVALID_SOURCE  [FE]                            RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]      Context.report(JSError.make(sourceName,  curNode,  INVALID_SOURCE,  sourceName));  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	        Context.report(JSError.make(sourceName,  curNode,  INVALID_SOURCE,  sourceName));	  timeout    	non-compiled	[CE]  cannot  find  symbol  INVALID_SOURCE	10	None	add
16	[BUG]  [BUGGY]      Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE),  cb);  [CE]  no  suitable  method  found  for  make(String,Node,String)  [FE]                              RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]      Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE),  cb);  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	        Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE),  cb);	  timeout    	non-compiled	[CE]  no  suitable  method  found  for  make(String,Node,String)	10	None	add
17	[BUG]  [BUGGY]      Context.report(JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  inputId));  [CE]  cannot  find  symbol  NON_GLOBAL_ERROR  [FE]                                RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]      Context.report(JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  inputId));  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	        Context.report(JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  inputId));	  timeout    	non-compiled	[CE]  cannot  find  symbol  NON_GLOBAL_ERROR	10	None	add
18	[BUG]  [BUGGY]      Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  sourceName));  [CE]  no  suitable  method  found  for  make(String,Node,String,String)  [FE]                                  RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]      Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  sourceName));  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	        Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  sourceName));	  timeout    	non-compiled	[CE]  no  suitable  method  found  for  make(String,Node,String,String)	10	None	add
19	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE),  unexpectedException);  [CE]  no  suitable  method  found  for  make(String,Node,String)  [FE]                  RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE),  unexpectedException);  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE),  unexpectedException);	  Context.reportCodeChange();    	non-compiled	[CE]  no  suitable  method  found  for  make(String,Node,String)	8	None	replace
20	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR));  [CE]  cannot  find  symbol  NON_GLOBAL_ERROR  [FE]                    RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR));  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR));	  Context.reportCodeChange();    	non-compiled	[CE]  cannot  find  symbol  NON_GLOBAL_ERROR	8	None	replace
21	[BUG]  [BUGGY]  Context.report(null);  [CE]  cannot  find  symbol  Context  [FE]                      RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  Context.report(null);  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(null);	  Context.reportCodeChange();    	non-compiled	[CE]  cannot  find  symbol  Context	8	None	replace
22	[BUG]  [BUGGY]  scopeCallback.printStackTrace();  [CE]  cannot  find  symbol  [FE]        RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  scopeCallback.printStackTrace();  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scopeCallback.printStackTrace();	  cb.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
23	[BUG]  [BUGGY]  scope.printStackTrace();  [CE]  cannot  find  symbol  scope  [FE]          RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  scope.printStackTrace();  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scope.printStackTrace();	  cb.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  scope	12	None	replace
24	[BUG]  [BUGGY]  scopeCreator.printStackTrace();  [CE]  cannot  find  symbol  [FE]            RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  scopeCreator.printStackTrace();  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scopeCreator.printStackTrace();	  cb.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
25	[BUG]  [BUGGY]  cfgs.printStackTrace();  [CE]  cannot  find  symbol  [FE]              RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  cfgs.printStackTrace();  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	cfgs.printStackTrace();	  cb.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
26	[BUG]  [BUGGY]  scopecreator.printStackTrace();  [CE]  cannot  find  symbol  scopecreator  [FE]                RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  scopecreator.printStackTrace();  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scopecreator.printStackTrace();	  cb.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  scopecreator	12	None	replace
27	[BUG]  [BUGGY]  bug.printStackTrace();  [CE]  cannot  find  symbol  bug  [FE]                  RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  bug.printStackTrace();  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	bug.printStackTrace();	  cb.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  bug	12	None	replace
28	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  throw  new  IllegalArgumentException( "   ");  [CE]  unreachable  statement  [FE]          RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  throw  new  IllegalArgumentException(   "   ");  throw  new  IllegalArgumentException( "   ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw    new    IllegalArgumentException(   "   ");    throw  new  IllegalArgumentException( "   ");	  timeout    	non-compiled	[CE]  unreachable  statement	3	None	add
29	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throw  new  IllegalArgumentException( "   ");  [CE]  not  a  statement  [FE]            RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throw  new  IllegalArgumentException( "   ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw    new    IllegalArgumentException(   "   ");    Throw  new  IllegalArgumentException( "   ");	  timeout    	non-compiled	[CE]  not  a  statement	3	None	add
30	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throwables.throw  new  IllegalArgumentException( "   ");  [CE]  <identifier>  expected  [FE]              RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throwables.throw  new  IllegalArgumentException( "   ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw    new    IllegalArgumentException(   "   ");    Throwables.throw  new  IllegalArgumentException( "   ");	  timeout    	non-compiled	[CE]  <identifier>  expected	3	None	add
31	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throwable  cause  =  new  IllegalArgumentException( "   ");  [CE]  unreachable  statement  [FE]                RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  throw  new  IllegalArgumentException(   "   ");  Throwable  cause  =  new  IllegalArgumentException( "   ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw    new    IllegalArgumentException(   "   ");    Throwable  cause  =  new  IllegalArgumentException( "   ");	  timeout    	non-compiled	[CE]  unreachable  statement	3	None	add
32	[BUG]  [BUGGY]  throw  new  RuntimeException(   "   ");  throw  new  RuntimeException(   "   ");  [CE]  unreachable  statement  [FE]          RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  throw  new  RuntimeException(   "   ");  throw  new  RuntimeException(   "   ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw    new    RuntimeException(   "   ");    throw  new  RuntimeException(   "   ");	  timeout    	non-compiled	[CE]  unreachable  statement	13	None	add
33	[BUG]  [BUGGY]  throw  new  RuntimeException(   "   ");  Throw  new  RuntimeException(   "   ");  [CE]  not  a  statement  [FE]            RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  throw  new  RuntimeException(   "   ");  Throw  new  RuntimeException(   "   ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw    new    RuntimeException(   "   ");    Throw  new  RuntimeException(   "   ");	  timeout    	non-compiled	[CE]  not  a  statement	13	None	add
34	[BUG]  [BUGGY]  throw  new  RuntimeException(   "   ");  throw  new  RuntimeException( ",   ");  [CE]  unreachable  statement  [FE]              RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  throw  new  RuntimeException(   "   ");  throw  new  RuntimeException( ",   ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw    new    RuntimeException(   "   ");    throw  new  RuntimeException( ",   ");	  timeout    	non-compiled	[CE]  unreachable  statement	13	None	add
35	[BUG]  [BUGGY]  throw  new  RuntimeException(   "   ");  throw  new  RuntimeException(, "   ");  [CE]  illegal  start  of  expression  [FE]                RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  throw  new  RuntimeException(   "   ");  throw  new  RuntimeException(, "   ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw    new    RuntimeException(   "   ");    throw  new  RuntimeException(, "   ");	  timeout    	non-compiled	[CE]  illegal  start  of  expression	13	None	add
36	[BUG]  [BUGGY]  throw  new  RuntimeException(   "   ");  throw  new  RuntimeException('   ");  [CE]  unclosed  character  literal  [FE]                  RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  throw  new  RuntimeException(   "   ");  throw  new  RuntimeException('   ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw    new    RuntimeException(   "   ");    throw  new  RuntimeException('   ");	  timeout    	non-compiled	[CE]  unclosed  character  literal	13	None	add
37	[BUG]  [BUGGY]  handleMissingStatement(unexpectedException);  [CE]  cannot  find  symbol  [FE]                    RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  handleMissingStatement(unexpectedException);  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(unexpectedException);	  handleMissingStatement();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
38	[BUG]  [BUGGY]  handleMissingStatement(unknownException);  [CE]  cannot  find  symbol  unknownException  [FE]                      RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  handleMissingStatement(unknownException);  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(unknownException);	  handleMissingStatement();    	non-compiled	[CE]  cannot  find  symbol  unknownException	9	None	replace
39	[BUG]  [BUGGY]  handleMissingStatement(n);  [CE]  cannot  find  symbol  n  [FE]                        RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  handleMissingStatement(n);  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(n);	  handleMissingStatement();    	non-compiled	[CE]  cannot  find  symbol  n	9	None	replace
40	[BUG]  [BUGGY]  handleMissingStatement(null);  [CE]  cannot  find  symbol  [FE]                          RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  handleMissingStatement(null);  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(null);	  handleMissingStatement();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
41	[BUG]  [BUGGY]  handleMissingStatement(nodeTypes);  [CE]  cannot  find  symbol  nodeTypes  [FE]                            RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  handleMissingStatement(nodeTypes);  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(nodeTypes);	  handleMissingStatement();    	non-compiled	[CE]  cannot  find  symbol  nodeTypes	9	None	replace
42	[BUG]  [BUGGY]  handleMissingStatement(e,  curNode);  [CE]  cannot  find  symbol  e  [FE]                              RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  handleMissingStatement(e,  curNode);  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(e,  curNode);	  handleMissingStatement();    	non-compiled	[CE]  cannot  find  symbol  e	9	None	replace
43	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]          RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  Throwables.throw  new  IllegalStateException( " ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw  new  IllegalStateException( " ");	  throw    new    RuntimeException(   "   ");    timeout    	non-compiled	[CE]  <identifier>  expected	14	None	replace
44	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]            RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw  new  IllegalArgumentException( " ");	  throw    new    RuntimeException(   "   ");    timeout    	non-compiled	[CE]  <identifier>  expected	14	None	replace
45	[BUG]  [BUGGY]  Throwables.throw  new  RuntimeException( " ");  [CE]  <identifier>  expected  [FE]              RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  Throwables.throw  new  RuntimeException( " ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw  new  RuntimeException( " ");	  throw    new    RuntimeException(   "   ");    timeout    	non-compiled	[CE]  <identifier>  expected	14	None	replace
46	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  throw  new  IllegalStateException( "   ");  [CE]  unreachable  statement  [FE]        RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  throw  new  IllegalStateException(   "   ");  throw  new  IllegalStateException( "   ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw    new    IllegalStateException(   "   ");    throw  new  IllegalStateException( "   ");	  timeout    	non-compiled	[CE]  unreachable  statement	1	None	add
47	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  Throw  new  IllegalStateException( "   ");  [CE]  not  a  statement  [FE]          RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  throw  new  IllegalStateException(   "   ");  Throw  new  IllegalStateException( "   ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw    new    IllegalStateException(   "   ");    Throw  new  IllegalStateException( "   ");	  timeout    	non-compiled	[CE]  not  a  statement	1	None	add
48	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  Throwables.throw  new  IllegalStateException( "   ");  [CE]  <identifier>  expected  [FE]            RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  throw  new  IllegalStateException(   "   ");  Throwables.throw  new  IllegalStateException( "   ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw    new    IllegalStateException(   "   ");    Throwables.throw  new  IllegalStateException( "   ");	  timeout    	non-compiled	[CE]  <identifier>  expected	1	None	add
49	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  throw  new  IllegalStateException(. "   ");  [CE]  illegal  start  of  expression  [FE]              RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  throw  new  IllegalStateException(   "   ");  throw  new  IllegalStateException(. "   ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw    new    IllegalStateException(   "   ");    throw  new  IllegalStateException(. "   ");	  timeout    	non-compiled	[CE]  illegal  start  of  expression	1	None	add
50	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException( " "));  [CE]  <identifier>  expected  [FE]        RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  Throwables.throw(new  IllegalStateException( " "));  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  IllegalStateException( " "));	  throw    new    IllegalStateException(   "   ");    timeout    	non-compiled	[CE]  <identifier>  expected	2	None	replace
51	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]          RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  Throwables.throw(new  IllegalStateException( " ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  IllegalStateException( " ");	  throw    new    IllegalStateException(   "   ");    timeout    	non-compiled	[CE]  <identifier>  expected	2	None	replace
52	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException( " "),  unexpectedException);  [CE]  <identifier>  expected  [FE]            RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  Throwables.throw(new  IllegalStateException( " "),  unexpectedException);  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  IllegalStateException( " "),  unexpectedException);	  throw    new    IllegalStateException(   "   ");    timeout    	non-compiled	[CE]  <identifier>  expected	2	None	replace
53	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "   ");  throw  new  UnsupportedOperationException( "   ");  [CE]  unreachable  statement  [FE]        RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  throw  new  UnsupportedOperationException(   "   ");  throw  new  UnsupportedOperationException( "   ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw    new    UnsupportedOperationException(   "   ");    throw  new  UnsupportedOperationException( "   ");	  timeout    	non-compiled	[CE]  unreachable  statement	16	None	add
54	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "   ");  Throw  new  UnsupportedOperationException( "   ");  [CE]  not  a  statement  [FE]          RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  throw  new  UnsupportedOperationException(   "   ");  Throw  new  UnsupportedOperationException( "   ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw    new    UnsupportedOperationException(   "   ");    Throw  new  UnsupportedOperationException( "   ");	  timeout    	non-compiled	[CE]  not  a  statement	16	None	add
55	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "   ");  Throwables.throw  new  UnsupportedOperationException( "   ");  [CE]  <identifier>  expected  [FE]            RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  throw  new  UnsupportedOperationException(   "   ");  Throwables.throw  new  UnsupportedOperationException( "   ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw    new    UnsupportedOperationException(   "   ");    Throwables.throw  new  UnsupportedOperationException( "   ");	  timeout    	non-compiled	[CE]  <identifier>  expected	16	None	add
56	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "   ");  Throwable  cause  =  new  UnsupportedOperationException( "   ");  [CE]  unreachable  statement  [FE]              RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  throw  new  UnsupportedOperationException(   "   ");  Throwable  cause  =  new  UnsupportedOperationException( "   ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw    new    UnsupportedOperationException(   "   ");    Throwable  cause  =  new  UnsupportedOperationException( "   ");	  timeout    	non-compiled	[CE]  unreachable  statement	16	None	add
57	[BUG]  [BUGGY]  catch(Exception  t)  {  [CE]  [FE]            RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  catch(Exception  t)  {  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	catch(Exception  t)  {	  catch(Throwable    t)    {    	non-compiled	[CE]  	15	None	replace
58	[BUG]  [BUGGY]  catch(IOException  t)  {  [CE]  [FE]              RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  catch(IOException  t)  {  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	catch(IOException  t)  {	  catch(Throwable    t)    {    	non-compiled	[CE]  	15	None	replace
59	[BUG]  [BUGGY]  catch(NodeNotFoundException  t)  {  [CE]  [FE]                RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  catch(NodeNotFoundException  t)  {  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	catch(NodeNotFoundException  t)  {	  catch(Throwable    t)    {    	non-compiled	[CE]  	15	None	replace
60	[BUG]  [BUGGY]  catch(NodeNotFoundException  nfe)  {  [CE]  [FE]                  RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  catch(NodeNotFoundException  nfe)  {  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	catch(NodeNotFoundException  nfe)  {	  catch(Throwable    t)    {    	non-compiled	[CE]  	15	None	replace
61	[BUG]  [BUGGY]  catch(RuntimeException  t)  {  [CE]  [FE]                    RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  catch(RuntimeException  t)  {  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	catch(RuntimeException  t)  {	  catch(Throwable    t)    {    	non-compiled	[CE]  	15	None	replace
62	[BUG]  [BUGGY]  catch(NodeNotFoundException  e)  {  [CE]  [FE]                      RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  catch(NodeNotFoundException  e)  {  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	catch(NodeNotFoundException  e)  {	  catch(Throwable    t)    {    	non-compiled	[CE]  	15	None	replace
63	[BUG]  [BUGGY]  handleMissingSOURCE(unexpectedException,  sourceName);  [CE]  cannot  find  symbol  [FE]          RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  handleMissingSOURCE(unexpectedException,  sourceName);  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(unexpectedException,  sourceName);	  handleMissingSOURCE(unexpectedException);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
64	[BUG]  [BUGGY]  handleMissingSOURCE(unexpectedException,  curNode);  [CE]  cannot  find  symbol  [FE]            RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  handleMissingSOURCE(unexpectedException,  curNode);  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(unexpectedException,  curNode);	  handleMissingSOURCE(unexpectedException);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
65	[BUG]  [BUGGY]  handleMissingSOURCE(sourceName,  unexpectedException);  [CE]  cannot  find  symbol  [FE]              RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  handleMissingSOURCE(sourceName,  unexpectedException);  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(sourceName,  unexpectedException);	  handleMissingSOURCE(unexpectedException);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
66	[BUG]  [BUGGY]  handleMissingSOURCE(unexpectedException,  root);  [CE]  cannot  find  symbol  [FE]                RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  handleMissingSOURCE(unexpectedException,  root);  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(unexpectedException,  root);	  handleMissingSOURCE(unexpectedException);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
67	[BUG]  [BUGGY]  handleMissingSOURCE(exception);  [CE]  cannot  find  symbol  exception  [FE]                  RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  handleMissingSOURCE(exception);  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(exception);	  handleMissingSOURCE(unexpectedException);    	non-compiled	[CE]  cannot  find  symbol  exception	18	None	replace
68	[BUG]  [BUGGY]  handleMissingSOURCE(unexpectedException,  cb);  [CE]  cannot  find  symbol  cb  [FE]                    RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  handleMissingSOURCE(unexpectedException,  cb);  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(unexpectedException,  cb);	  handleMissingSOURCE(unexpectedException);    	non-compiled	[CE]  cannot  find  symbol  cb	18	None	replace
69	[BUG]  [BUGGY]  handleMissingSOURCE(missingException);  [CE]  cannot  find  symbol  missingException  [FE]                      RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  handleMissingSOURCE(missingException);  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(missingException);	  handleMissingSOURCE(unexpectedException);    	non-compiled	[CE]  cannot  find  symbol  missingException	18	None	replace
70	[BUG]  [BUGGY]  Throwables.throw(new  IllegalArgumentException( " "));  [CE]  <identifier>  expected  [FE]          RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  Throwables.throw(new  IllegalArgumentException( " "));  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  IllegalArgumentException( " "));	  throw    new    IllegalArgumentException(   "   ");    timeout    	non-compiled	[CE]  <identifier>  expected	4	None	replace
71	[BUG]  [BUGGY]  throw  new  IllegalStatementException( " ");  [CE]  cannot  find  symbol  [FE]            RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  throw  new  IllegalStatementException( " ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw  new  IllegalStatementException( " ");	  throw    new    IllegalArgumentException(   "   ");    timeout    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
72	[BUG]  [BUGGY]  handleMissingScopeException( " ");  [CE]  cannot  find  symbol  [FE]              RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  handleMissingScopeException( " ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException( " ");	  throw    new    IllegalArgumentException(   "   ");    timeout    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
73	[BUG]  [BUGGY]  Throwables.throw(new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  Throwables.throw(new  IllegalArgumentException( " ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(   "   ");    timeout    	non-compiled	[CE]  <identifier>  expected	4	None	replace
74	[BUG]  [BUGGY]  Throwables.throw  new  UnexpectedException( " ");  [CE]  <identifier>  expected  [FE]                RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  Throwables.throw  new  UnexpectedException( " ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw  new  UnexpectedException( " ");	  throw    new    UnexpectedException(   "   ");    	non-compiled	[CE]  <identifier>  expected	7	None	replace
75	[BUG]  [BUGGY]  Throwables.throw(new  UnexpectedException( " "));  [CE]  <identifier>  expected  [FE]                  RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  Throwables.throw(new  UnexpectedException( " "));  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  UnexpectedException( " "));	  throw    new    UnexpectedException(   "   ");    	non-compiled	[CE]  <identifier>  expected	7	None	replace
76	[BUG]  [BUGGY]  timeout  [FE]        RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  Throwable  t  =  new  IllegalStateException( " ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	add	Throwable  t  =  new  IllegalStateException( " ");	  throw    new    IllegalStateException(   "   ");    timeout    	compilable	timeout	2	1	replace
77	[BUG]  [BUGGY]  Throwable  t  =  new  IllegalStateException( " ");  timeout  [FE]        RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  Throwable  t  =  new  IllegalStateException( " ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  t  =  new  IllegalStateException( " ");	  throw    new    IllegalStateException(   "   ");    timeout    	compilable	timeout	2	1	replace
78	[BUG]  [BUGGY]  UnsupportedOperationException( " ");  [CE]  cannot  find  symbol  [FE]        RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  UnsupportedOperationException( " ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	UnsupportedOperationException( " ");	  throw    new    UnsupportedOperationException(   "   ");    timeout    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
79	[BUG]  [BUGGY]  cb.report(null);  [CE]  cannot  find  symbol  cb  [FE]          RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  cb.report(null);  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	cb.report(null);	  throw    new    UnsupportedOperationException(   "   ");    timeout    	non-compiled	[CE]  cannot  find  symbol  cb	17	None	replace
80	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  throw  new  IllegalArgumentException( ".   ");  [CE]  unreachable  statement  [FE]          RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  throw  new  IllegalArgumentException(   "   ");  throw  new  IllegalArgumentException( ".   ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw    new    IllegalArgumentException(   "   ");    throw  new  IllegalArgumentException( ".   ");	  timeout    	non-compiled	[CE]  unreachable  statement	3	None	add
81	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  throw  new  IllegalArgumentException(. "   ");  [CE]  illegal  start  of  expression  [FE]            RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  throw  new  IllegalArgumentException(   "   ");  throw  new  IllegalArgumentException(. "   ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw    new    IllegalArgumentException(   "   ");    throw  new  IllegalArgumentException(. "   ");	  timeout    	non-compiled	[CE]  illegal  start  of  expression	3	None	add
82	[BUG]  [BUGGY]  callback.printStackTrace();  [CE]  cannot  find  symbol  [FE]        RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  callback.printStackTrace();  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	callback.printStackTrace();	  cb.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
83	[BUG]  [BUGGY]  scopeCtrl.printStackTrace();  [CE]  cannot  find  symbol  scopeCtrl  [FE]          RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  scopeCtrl.printStackTrace();  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scopeCtrl.printStackTrace();	  cb.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  scopeCtrl	12	None	replace
84	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE, " "));  [CE]  no  suitable  method  found  for  make(String,Node,String,String)  [FE]                      RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE, " "));  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE, " "));	      timeout    	non-compiled	[CE]  no  suitable  method  found  for  make(String,Node,String,String)	11	None	replace
85	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  throw  new  IllegalStateException( ".   ");  [CE]  unreachable  statement  [FE]        RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  throw  new  IllegalStateException(   "   ");  throw  new  IllegalStateException( ".   ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw    new    IllegalStateException(   "   ");    throw  new  IllegalStateException( ".   ");	  timeout    	non-compiled	[CE]  unreachable  statement	1	None	add
86	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  throw  new  IllegalStateException('   ");  [CE]  unclosed  character  literal  [FE]          RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  throw  new  IllegalStateException(   "   ");  throw  new  IllegalStateException('   ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw    new    IllegalStateException(   "   ");    throw  new  IllegalStateException('   ");	  timeout    	non-compiled	[CE]  unclosed  character  literal	1	None	add
87	[BUG]  [BUGGY]  handleMissingStatement(e,  root);  [CE]  cannot  find  symbol  e  [FE]                    RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  handleMissingStatement(e,  root);  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(e,  root);	  handleMissingStatement();    	non-compiled	[CE]  cannot  find  symbol  e	9	None	replace
88	[BUG]  [BUGGY]  traverseMissingScopeException(root,  unexpectedException);  [CE]  cannot  find  symbol  [FE]              RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  traverseMissingScopeException(root,  unexpectedException);  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	traverseMissingScopeException(root,  unexpectedException);	  handleMissingScopeException(root);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
89	[BUG]  [BUGGY]  reportUnexpectedException( " ");  [CE]  cannot  find  symbol  [FE]                RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  reportUnexpectedException( " ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	reportUnexpectedException( " ");	  throw    new    UnexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
90	[BUG]  [BUGGY]  throw  new  RuntimeException(   "   ");  throw  new  RuntimeException(. "   ");  [CE]  illegal  start  of  expression  [FE]          RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  throw  new  RuntimeException(   "   ");  throw  new  RuntimeException(. "   ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw    new    RuntimeException(   "   ");    throw  new  RuntimeException(. "   ");	  timeout    	non-compiled	[CE]  illegal  start  of  expression	13	None	add
91	[BUG]  [BUGGY]  throw  scopeCreator.unexpectedException( " ");  [CE]  cannot  find  symbol  [FE]            RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  throw  scopeCreator.unexpectedException( " ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw  scopeCreator.unexpectedException( " ");	  throw    cb.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
92	[BUG]  [BUGGY]  Throwable  cb  =  scopeCreator.unexpectedException( " ");  [CE]  cannot  find  symbol  [FE]              RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  Throwable  cb  =  scopeCreator.unexpectedException( " ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cb  =  scopeCreator.unexpectedException( " ");	  throw    cb.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
93	[BUG]  [BUGGY]  Throwables.throw(new  RuntimeException( " "),  unexpectedException);  [CE]  <identifier>  expected  [FE]          RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  Throwables.throw(new  RuntimeException( " "),  unexpectedException);  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  RuntimeException( " "),  unexpectedException);	  throw    new    RuntimeException(   "   ");    timeout    	non-compiled	[CE]  <identifier>  expected	14	None	replace
94	[BUG]  [BUGGY]  throw  new  IOException( " ");  [CE]  cannot  find  symbol  [FE]            RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  throw  new  IOException( " ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw  new  IOException( " ");	  throw    new    RuntimeException(   "   ");    timeout    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
95	[BUG]  [BUGGY]  Throwables.throw(new  RuntimeException( " "));  [CE]  <identifier>  expected  [FE]              RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  Throwables.throw(new  RuntimeException( " "));  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  RuntimeException( " "));	  throw    new    RuntimeException(   "   ");    timeout    	non-compiled	[CE]  <identifier>  expected	14	None	replace
96	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "   ");  throw  new  UnsupportedOperationException( ".   ");  [CE]  unreachable  statement  [FE]        RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  throw  new  UnsupportedOperationException(   "   ");  throw  new  UnsupportedOperationException( ".   ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw    new    UnsupportedOperationException(   "   ");    throw  new  UnsupportedOperationException( ".   ");	  timeout    	non-compiled	[CE]  unreachable  statement	16	None	add
97	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  UNKNOWN_EXPR_TYPE));  [CE]  cannot  find  symbol  UNKNOWN_EXPR_TYPE  [FE]                  RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  UNKNOWN_EXPR_TYPE));  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  UNKNOWN_EXPR_TYPE));	  Context.reportCodeChange();    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_EXPR_TYPE	8	None	replace
98	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  UNKNOWN_SOURCE));  [CE]  cannot  find  symbol  UNKNOWN_SOURCE  [FE]                    RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  UNKNOWN_SOURCE));  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  UNKNOWN_SOURCE));	  Context.reportCodeChange();    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_SOURCE	8	None	replace
99	[BUG]  [BUGGY]  timeout  [FE]          RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  Throwable  t  =  new  IllegalArgumentException( " ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	add	Throwable  t  =  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(   "   ");    timeout    	compilable	timeout	4	1	replace
100	[BUG]  [BUGGY]  Throwable  t  =  new  IllegalArgumentException( " ");  timeout  [FE]          RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  Throwable  t  =  new  IllegalArgumentException( " ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  t  =  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(   "   ");    timeout    	compilable	timeout	4	1	replace
101	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  inputId));  [CE]  no  suitable  method  found  for  make(String,Node,String,InputId)  [FE]                  RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  inputId));  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  inputId));	  Context.reportCodeChange();    	non-compiled	[CE]  no  suitable  method  found  for  make(String,Node,String,InputId)	8	None	replace
102	[BUG]  [BUGGY]  Throwable  cause  =  new  UnexpectedException( " ");  [CE]  cannot  find  symbol  [FE]                RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  Throwable  cause  =  new  UnexpectedException( " ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cause  =  new  UnexpectedException( " ");	  throw    new    UnexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
103	[BUG]  [BUGGY]  Context.report(null,  MISSING_SOURCE, "Unexpected  exception ");  [CE]  cannot  find  symbol  Context  [FE]                  RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  Context.report(null,  MISSING_SOURCE, "Unexpected  exception ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(null,  MISSING_SOURCE, "Unexpected  exception ");	  throw    new    UnexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  Context	7	None	replace
104	[BUG]  [BUGGY]  Context.report(null,  MISSING_SOURCE);  [CE]  cannot  find  symbol  Context  [FE]                    RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  Context.report(null,  MISSING_SOURCE);  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(null,  MISSING_SOURCE);	  throw    new    UnexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  Context	7	None	replace
105	[BUG]  [BUGGY]  handleMissingSourCE(unexpectedException,  sourceName);  [CE]  cannot  find  symbol  [FE]          RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  handleMissingSourCE(unexpectedException,  sourceName);  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSourCE(unexpectedException,  sourceName);	  handleMissingSOURCE(unexpectedException);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
106	[BUG]  [BUGGY]  traverseMissingSOURCE(unexpectedException);  [CE]  cannot  find  symbol  [FE]            RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  traverseMissingSOURCE(unexpectedException);  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	traverseMissingSOURCE(unexpectedException);	  handleMissingSOURCE(unexpectedException);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
107	[BUG]  [BUGGY]      Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message));  [CE]  cannot  find  symbol  message  [FE]                      RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]      Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message));  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	        Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message));	  timeout    	non-compiled	[CE]  cannot  find  symbol  message	10	None	add
108	[BUG]  [BUGGY]  traverseMissingStatement();  [CE]  cannot  find  symbol  [FE]                    RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  traverseMissingStatement();  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	traverseMissingStatement();	  handleMissingStatement();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
109	[BUG]  [BUGGY]  Context.report(UNKNOWN_SYNCHRONIZED);  [CE]  cannot  find  symbol  UNKNOWN_SYNCHRONIZED  [FE]                      RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  Context.report(UNKNOWN_SYNCHRONIZED);  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(UNKNOWN_SYNCHRONIZED);	  handleMissingStatement();    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_SYNCHRONIZED	9	None	replace
110	[BUG]  [BUGGY]  throw  new  IllegalStateException(   "   ");  throw  new  IllegalStateException( ",   ");  [CE]  unreachable  statement  [FE]        RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  throw  new  IllegalStateException(   "   ");  throw  new  IllegalStateException( ",   ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw    new    IllegalStateException(   "   ");    throw  new  IllegalStateException( ",   ");	  timeout    	non-compiled	[CE]  unreachable  statement	1	None	add
111	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  unexpectedException.printStackTrace();  [CE]  unreachable  statement  [FE]        RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  throw  new  IllegalStateException( " ");  unexpectedException.printStackTrace();  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw  new  IllegalStateException( " ");  unexpectedException.printStackTrace();	  throw    new    IllegalStateException(   "   ");    timeout    	non-compiled	[CE]  unreachable  statement	2	None	replace
112	[BUG]  [BUGGY]  throw  new  IllegalStateException( " "),  unexpectedException;  [CE]  [FE]          RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  throw  new  IllegalStateException( " "),  unexpectedException;  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw  new  IllegalStateException( " "),  unexpectedException;	  throw    new    IllegalStateException(   "   ");    timeout    	non-compiled	[CE]  	2	None	replace
113	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ")  :  unexpectedException( " ");  [CE]  [FE]            RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  throw  new  IllegalStateException( " ")  :  unexpectedException( " ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw  new  IllegalStateException( " ")  :  unexpectedException( " ");	  throw    new    IllegalStateException(   "   ");    timeout    	non-compiled	[CE]  	2	None	replace
114	[BUG]  [BUGGY]  handleMissingScopeException(curNode);  [CE]  cannot  find  symbol  [FE]              RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  handleMissingScopeException(curNode);  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(curNode);	  handleMissingScopeException(root);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
115	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  unexpectedException.printStackTrace();  [CE]  unreachable  statement  [FE]          RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  throw  new  IllegalArgumentException( " ");  unexpectedException.printStackTrace();  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw  new  IllegalArgumentException( " ");  unexpectedException.printStackTrace();	  throw    new    IllegalArgumentException(   "   ");    timeout    	non-compiled	[CE]  unreachable  statement	4	None	replace
116	[BUG]  [BUGGY]  timeout  [FE]            RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	add	Throwable  cause  =  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(   "   ");    timeout    	compilable	timeout	4	1	replace
117	[BUG]  [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " ");  timeout  [FE]            RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cause  =  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(   "   ");    timeout    	compilable	timeout	4	1	replace
118	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( " ");  unexpectedException.printStackTrace();  [CE]  unreachable  statement  [FE]        RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  throw  new  UnsupportedOperationException( " ");  unexpectedException.printStackTrace();  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw  new  UnsupportedOperationException( " ");  unexpectedException.printStackTrace();	  throw    new    UnsupportedOperationException(   "   ");    timeout    	non-compiled	[CE]  unreachable  statement	17	None	replace
119	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( " "),  unexpectedException);  [CE]  [FE]          RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  throw  new  UnsupportedOperationException( " "),  unexpectedException);  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw  new  UnsupportedOperationException( " "),  unexpectedException);	  throw    new    UnsupportedOperationException(   "   ");    timeout    	non-compiled	[CE]  	17	None	replace
120	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( " "),  unexpectedException;  [CE]  [FE]            RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  throw  new  UnsupportedOperationException( " "),  unexpectedException;  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw  new  UnsupportedOperationException( " "),  unexpectedException;	  throw    new    UnsupportedOperationException(   "   ");    timeout    	non-compiled	[CE]  	17	None	replace
121	[BUG]  [BUGGY]  catch(Exception  e)  {  [CE]  [FE]            RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  catch(Exception  e)  {  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	catch(Exception  e)  {	  catch(Throwable    t)    {    	non-compiled	[CE]  	15	None	replace
122	[BUG]  [BUGGY]  catch(IOException  ioe)  {  [CE]  [FE]              RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  catch(IOException  ioe)  {  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	catch(IOException  ioe)  {	  catch(Throwable    t)    {    	non-compiled	[CE]  	15	None	replace
123	[BUG]  [BUGGY]  catch(Exception  ex)  {  [CE]  [FE]                RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  catch(Exception  ex)  {  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	catch(Exception  ex)  {	  catch(Throwable    t)    {    	non-compiled	[CE]  	15	None	replace
124	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(   "   ");  throw  new  IllegalArgumentException( ",   ");  [CE]  unreachable  statement  [FE]          RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  throw  new  IllegalArgumentException(   "   ");  throw  new  IllegalArgumentException( ",   ");  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw    new    IllegalArgumentException(   "   ");    throw  new  IllegalArgumentException( ",   ");	  timeout    	non-compiled	[CE]  unreachable  statement	3	None	add
125	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "   ");  JSError.make(sourceName,  curNode,  MISSING_SOURCE,  sourceName));  [CE]  [FE]        RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  throw  new  UnsupportedOperationException(   "   ");  JSError.make(sourceName,  curNode,  MISSING_SOURCE,  sourceName));  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw    new    UnsupportedOperationException(   "   ");    JSError.make(sourceName,  curNode,  MISSING_SOURCE,  sourceName));	  timeout    	non-compiled	[CE]  	16	None	add
126	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "   ");  JSError.make(sourceName,  curNode,  MISSING_SOURCE,  inputId));  [CE]  [FE]          RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  throw  new  UnsupportedOperationException(   "   ");  JSError.make(sourceName,  curNode,  MISSING_SOURCE,  inputId));  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw    new    UnsupportedOperationException(   "   ");    JSError.make(sourceName,  curNode,  MISSING_SOURCE,  inputId));	  timeout    	non-compiled	[CE]  	16	None	add
127	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "   ");  JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  sourceName));  [CE]  [FE]            RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  throw  new  UnsupportedOperationException(   "   ");  JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  sourceName));  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw    new    UnsupportedOperationException(   "   ");    JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  sourceName));	  timeout    	non-compiled	[CE]  	16	None	add
128	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException(   "   ");  JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  inputId));  [CE]  [FE]              RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  throw  new  UnsupportedOperationException(   "   ");  JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  inputId));  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw    new    UnsupportedOperationException(   "   ");    JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  inputId));	  timeout    	non-compiled	[CE]  	16	None	add
129	[BUG]  [BUGGY]  throw  new  RuntimeException( " ");  unexpectedException.printStackTrace();  [CE]  unreachable  statement  [FE]          RuntimeException    [CONTEXT]    public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =     "   ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {    [BUGGY]  throw  new  RuntimeException( " ");  unexpectedException.printStackTrace();  [BUGGY]    }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw  new  RuntimeException( " ");  unexpectedException.printStackTrace();	  throw    new    RuntimeException(   "   ");    timeout    	non-compiled	[CE]  unreachable  statement	14	None	replace
