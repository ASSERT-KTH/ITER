bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  timeout  [FE]    RuntimeException  [CONTEXT]  public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =   " ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {  [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]  }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	add	throw  new  IllegalStateException( " ");	throwUnexpectedException(unexpectedException);  	compilable	timeout	3	1	replace
2	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ");  timeout  [FE]    RuntimeException  [CONTEXT]  public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =   " ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {  [BUGGY]  throw  new  IllegalStateException( " ");  [BUGGY]  }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw  new  IllegalStateException( " ");	throwUnexpectedException(unexpectedException);  	compilable	timeout	3	1	replace
3	[BUG]  [BUGGY]  timeout  [FE]      RuntimeException  [CONTEXT]  public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =   " ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {  [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]  }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	add	throw  new  IllegalArgumentException( " ");	throwUnexpectedException(unexpectedException);  	compilable	timeout	3	1	replace
4	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ");  timeout  [FE]      RuntimeException  [CONTEXT]  public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =   " ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {  [BUGGY]  throw  new  IllegalArgumentException( " ");  [BUGGY]  }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw  new  IllegalArgumentException( " ");	throwUnexpectedException(unexpectedException);  	compilable	timeout	3	1	replace
5	[BUG]  [BUGGY]  throw  cb.unexpectedException( " ");  [CE]  cannot  find  symbol  cb  [FE]        RuntimeException  [CONTEXT]  public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =   " ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {  [BUGGY]  throw  cb.unexpectedException( " ");  [BUGGY]  }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw  cb.unexpectedException( " ");	throwUnexpectedException(unexpectedException);  	non-compiled	[CE]  cannot  find  symbol  cb	3	None	replace
6	[BUG]  [BUGGY]  handleMissingScopeException(root);  [CE]  cannot  find  symbol  [FE]          RuntimeException  [CONTEXT]  public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =   " ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {  [BUGGY]  handleMissingScopeException(root);  [BUGGY]  }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(root);	throwUnexpectedException(unexpectedException);  	non-compiled	[CE]  cannot  find  symbol	3	None	replace
7	[BUG]  [BUGGY]  throw  new  UnexpectedException( " ");  [CE]  cannot  find  symbol  [FE]            RuntimeException  [CONTEXT]  public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =   " ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {  [BUGGY]  throw  new  UnexpectedException( " ");  [BUGGY]  }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw  new  UnexpectedException( " ");	throwUnexpectedException(unexpectedException);  	non-compiled	[CE]  cannot  find  symbol	3	None	replace
8	[BUG]  [BUGGY]  Context.reportCodeChange();  [CE]  cannot  find  symbol  Context  [FE]              RuntimeException  [CONTEXT]  public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =   " ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {  [BUGGY]  Context.reportCodeChange();  [BUGGY]  }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.reportCodeChange();	throwUnexpectedException(unexpectedException);  	non-compiled	[CE]  cannot  find  symbol  Context	3	None	replace
9	[BUG]  [BUGGY]  handleMissingStatement();  [CE]  cannot  find  symbol  [FE]                RuntimeException  [CONTEXT]  public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =   " ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {  [BUGGY]  handleMissingStatement();  [BUGGY]  }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement();	throwUnexpectedException(unexpectedException);  	non-compiled	[CE]  cannot  find  symbol	3	None	replace
10	[BUG]  [BUGGY]  timeout  [FE]                  RuntimeException  [CONTEXT]  public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =   " ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {  [BUGGY]    [BUGGY]  }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	add	  	throwUnexpectedException(unexpectedException);  	compilable	timeout	3	1	replace
11	[BUG]  [BUGGY]    timeout  [FE]                  RuntimeException  [CONTEXT]  public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =   " ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {  [BUGGY]    [BUGGY]  }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	  	throwUnexpectedException(unexpectedException);  	compilable	timeout	3	1	replace
12	[BUG]  [BUGGY]  cb.printStackTrace();  [CE]  cannot  find  symbol  cb  [FE]    RuntimeException  [CONTEXT]  public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =   " ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {  [BUGGY]  cb.printStackTrace();  [BUGGY]  }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	cb.printStackTrace();	throwUnexpectedException(unexpectedException);  	non-compiled	[CE]  cannot  find  symbol  cb	3	None	replace
13	[BUG]  [BUGGY]  timeout  [FE]      RuntimeException  [CONTEXT]  public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =   " ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {  [BUGGY]  throw  new  RuntimeException( " ");  [BUGGY]  }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	add	throw  new  RuntimeException( " ");	throwUnexpectedException(unexpectedException);  	compilable	timeout	3	1	replace
14	[BUG]  [BUGGY]  throw  new  RuntimeException( " ");  timeout  [FE]      RuntimeException  [CONTEXT]  public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =   " ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {  [BUGGY]  throw  new  RuntimeException( " ");  [BUGGY]  }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw  new  RuntimeException( " ");	throwUnexpectedException(unexpectedException);  	compilable	timeout	3	1	replace
15	[BUG]  [BUGGY]  catch(Throwable  t)  {  [CE]  [FE]        RuntimeException  [CONTEXT]  public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =   " ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {  [BUGGY]  catch(Throwable  t)  {  [BUGGY]  }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	catch(Throwable  t)  {	throwUnexpectedException(unexpectedException);  	non-compiled	[CE]  	3	None	replace
16	[BUG]  [BUGGY]  timeout  [FE]    RuntimeException  [CONTEXT]  public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =   " ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {  [BUGGY]  throw  new  UnsupportedOperationException( " ");  [BUGGY]  }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	add	throw  new  UnsupportedOperationException( " ");	throwUnexpectedException(unexpectedException);  	compilable	timeout	3	1	replace
17	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( " ");  timeout  [FE]    RuntimeException  [CONTEXT]  public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =   " ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {  [BUGGY]  throw  new  UnsupportedOperationException( " ");  [BUGGY]  }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw  new  UnsupportedOperationException( " ");	throwUnexpectedException(unexpectedException);  	compilable	timeout	3	1	replace
18	[BUG]  [BUGGY]  handleMissingSOURCE(unexpectedException);  [CE]  cannot  find  symbol  [FE]      RuntimeException  [CONTEXT]  public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =   " ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {  [BUGGY]  handleMissingSOURCE(unexpectedException);  [BUGGY]  }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(unexpectedException);	throwUnexpectedException(unexpectedException);  	non-compiled	[CE]  cannot  find  symbol	3	None	replace
