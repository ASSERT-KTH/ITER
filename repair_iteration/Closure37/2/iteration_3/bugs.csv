bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  handleMissingScopeException(root,  scopeCreator);  [CE]  cannot  find  symbol  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingScopeException(root,  scopeCreator);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(root,  scopeCreator);	  handleMissingScopeException(root,    cb);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
2	[BUG]  [BUGGY]  handleMissingScopeException(root,  curNode);  [CE]  cannot  find  symbol  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingScopeException(root,  curNode);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(root,  curNode);	  handleMissingScopeException(root,    cb);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
3	[BUG]  [BUGGY]  handleMissingScopeException(root,  nodeTypes);  [CE]  cannot  find  symbol  nodeTypes  [FE]                              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingScopeException(root,  nodeTypes);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(root,  nodeTypes);	  handleMissingScopeException(root,    cb);    	non-compiled	[CE]  cannot  find  symbol  nodeTypes	9	None	replace
4	[BUG]  [BUGGY]  handleMissingScopeException(root,  root);  [CE]  cannot  find  symbol  [FE]                                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingScopeException(root,  root);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(root,  root);	  handleMissingScopeException(root,    cb);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
5	[BUG]  [BUGGY]  handleMissingScopeException(root,  n);  [CE]  cannot  find  symbol  n  [FE]                                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingScopeException(root,  n);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(root,  n);	  handleMissingScopeException(root,    cb);    	non-compiled	[CE]  cannot  find  symbol  n	9	None	replace
6	[BUG]  [BUGGY]  handleMissingScopeException(root,  path);  [CE]  cannot  find  symbol  path  [FE]                                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingScopeException(root,  path);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(root,  path);	  handleMissingScopeException(root,    cb);    	non-compiled	[CE]  cannot  find  symbol  path	9	None	replace
7	[BUG]  [BUGGY]  scopeCreator.unexpectedException( " ",  unexpectedException);  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  scopeCreator.unexpectedException( " ",  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scopeCreator.unexpectedException( " ",  unexpectedException);	  scopeCreator.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
8	[BUG]  [BUGGY]  scopeCreator.unexpectedException( ", ");  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  scopeCreator.unexpectedException( ", ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scopeCreator.unexpectedException( ", ");	  scopeCreator.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
9	[BUG]  [BUGGY]  scopeCreator.unexpectedException(sourceName);  [CE]  cannot  find  symbol  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  scopeCreator.unexpectedException(sourceName);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scopeCreator.unexpectedException(sourceName);	  scopeCreator.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
10	[BUG]  [BUGGY]  scopeCreator.unexpectedException( "Unexpected  exception: ");  [CE]  cannot  find  symbol  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  scopeCreator.unexpectedException( "Unexpected  exception: ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scopeCreator.unexpectedException( "Unexpected  exception: ");	  scopeCreator.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
11	[BUG]  [BUGGY]  scopeCreator.unexpectedException( "Unexpected  source  name: ");  [CE]  cannot  find  symbol  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  scopeCreator.unexpectedException( "Unexpected  source  name: ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scopeCreator.unexpectedException( "Unexpected  source  name: ");	  scopeCreator.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
12	[BUG]  [BUGGY]  handleMissingStatement(root,  curNode);  [CE]  cannot  find  symbol  [FE]                                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(root,  curNode);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(root,  curNode);	  handleMissingStatement(e,    curNode);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
13	[BUG]  [BUGGY]  handleMissingStatement(sourceName,  curNode);  [CE]  cannot  find  symbol  [FE]                                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(sourceName,  curNode);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(sourceName,  curNode);	  handleMissingStatement(e,    curNode);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
14	[BUG]  [BUGGY]  handleMissingStatement(n,  curNode);  [CE]  cannot  find  symbol  n  [FE]                                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(n,  curNode);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(n,  curNode);	  handleMissingStatement(e,    curNode);    	non-compiled	[CE]  cannot  find  symbol  n	42	None	replace
15	[BUG]  [BUGGY]  handleMissingStatement(inputId,  curNode);  [CE]  cannot  find  symbol  [FE]                                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(inputId,  curNode);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(inputId,  curNode);	  handleMissingStatement(e,    curNode);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
16	[BUG]  [BUGGY]  handleMissingStatement(root,  node);  [CE]  cannot  find  symbol  node  [FE]                                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(root,  node);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(root,  node);	  handleMissingStatement(e,    curNode);    	non-compiled	[CE]  cannot  find  symbol  node	42	None	replace
17	[BUG]  [BUGGY]  handleMissingStatement(curNode,  inputId);  [CE]  cannot  find  symbol  [FE]                                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(curNode,  inputId);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(curNode,  inputId);	  handleMissingStatement(e,    curNode);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
18	[BUG]  [BUGGY]  handleMissingStatement(root,  root);  [CE]  cannot  find  symbol  [FE]                                              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(root,  root);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(root,  root);	  handleMissingStatement(e,    curNode);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
19	[BUG]  [BUGGY]  Throw  new  UnsupportedOperationException( " ");  [CE]  not  a  statement  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throw  new  UnsupportedOperationException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throw  new  UnsupportedOperationException( " ");	  throw    new    UnsupportedOperationException(       "       ");    Throw    new    UnsupportedOperationException(   "       ");    	non-compiled	[CE]  not  a  statement	54	None	replace
20	[BUG]  [BUGGY]  Throw  new  IllegalStateException( " ");  [CE]  not  a  statement  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throw  new  IllegalStateException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throw  new  IllegalStateException( " ");	  throw    new    UnsupportedOperationException(       "       ");    Throw    new    UnsupportedOperationException(   "       ");    	non-compiled	[CE]  not  a  statement	54	None	replace
21	[BUG]  [BUGGY]  Throwables.throwException( " ");  [CE]  cannot  find  symbol  Throwables  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throwException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throwException( " ");	  throw    new    UnsupportedOperationException(       "       ");    Throw    new    UnsupportedOperationException(   "       ");    	non-compiled	[CE]  cannot  find  symbol  Throwables	54	None	replace
22	[BUG]  [BUGGY]  Parser.unexpectedException( " ");  [CE]  cannot  find  symbol  Parser  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Parser.unexpectedException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Parser.unexpectedException( " ");	  Throwables.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  Parser	4	None	replace
23	[BUG]  [BUGGY]  NodeUtil.unexpectedException( " ");  [CE]  cannot  find  symbol  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  NodeUtil.unexpectedException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	NodeUtil.unexpectedException( " ");	  Throwables.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
24	[BUG]  [BUGGY]  UnexpectedException( " ");  [CE]  cannot  find  symbol  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  UnexpectedException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	UnexpectedException( " ");	  Throwables.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
25	[BUG]  [BUGGY]  Context.unexpectedException( " ");  [CE]  cannot  find  symbol  Context  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.unexpectedException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.unexpectedException( " ");	  Throwables.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  Context	4	None	replace
26	[BUG]  [BUGGY]  Path.unexpectedException( " ");  [CE]  cannot  find  symbol  Path  [FE]                              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Path.unexpectedException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Path.unexpectedException( " ");	  Throwables.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  Path	4	None	replace
27	[BUG]  [BUGGY]  Throwables.unexpectedException( " ",  unexpectedException);  [CE]  cannot  find  symbol  Throwables  [FE]                                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.unexpectedException( " ",  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.unexpectedException( " ",  unexpectedException);	  Throwables.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  Throwables	4	None	replace
28	[BUG]  [BUGGY]  Context.report(null,  unexpectedException);  [CE]  cannot  find  symbol  Context  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(null,  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(null,  unexpectedException);	  Context.report(null);    	non-compiled	[CE]  cannot  find  symbol  Context	21	None	replace
29	[BUG]  [BUGGY]  Context.report(null,  INVALID_SOURCE);  [CE]  cannot  find  symbol  INVALID_SOURCE  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(null,  INVALID_SOURCE);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(null,  INVALID_SOURCE);	  Context.report(null);    	non-compiled	[CE]  cannot  find  symbol  INVALID_SOURCE	21	None	replace
30	[BUG]  [BUGGY]  Context.report(null,  sourceName);  [CE]  cannot  find  symbol  Context  [FE]                              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(null,  sourceName);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(null,  sourceName);	  Context.report(null);    	non-compiled	[CE]  cannot  find  symbol  Context	21	None	replace
31	[BUG]  [BUGGY]  Context.report(null,  null);  [CE]  cannot  find  symbol  Context  [FE]                                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(null,  null);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(null,  null);	  Context.report(null);    	non-compiled	[CE]  cannot  find  symbol  Context	21	None	replace
32	[BUG]  [BUGGY]  Context.report(null,  XMODULE_ERROR);  [CE]  cannot  find  symbol  XMODULE_ERROR  [FE]                                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(null,  XMODULE_ERROR);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(null,  XMODULE_ERROR);	  Context.report(null);    	non-compiled	[CE]  cannot  find  symbol  XMODULE_ERROR	21	None	replace
33	[BUG]  [BUGGY]  Context.report(null,   "Unexpected  source  name: "  +  inputId);  [CE]  cannot  find  symbol  Context  [FE]                                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(null,   "Unexpected  source  name: "  +  inputId);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(null,   "Unexpected  source  name: "  +  inputId);	  Context.report(null);    	non-compiled	[CE]  cannot  find  symbol  Context	21	None	replace
34	[BUG]  [BUGGY]  Throwables.throwAsUnexpectedException( " ");  [CE]  cannot  find  symbol  Throwables  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throwAsUnexpectedException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throwAsUnexpectedException( " ");	  throw    new    RuntimeException(       "       ");    throw    new    RuntimeException(,   "       ");    	non-compiled	[CE]  cannot  find  symbol  Throwables	35	None	replace
35	[BUG]  [BUGGY]  Throwables.throwAsUnquotedException( " ");  [CE]  cannot  find  symbol  Throwables  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throwAsUnquotedException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throwAsUnquotedException( " ");	  throw    new    RuntimeException(       "       ");    throw    new    RuntimeException(,   "       ");    	non-compiled	[CE]  cannot  find  symbol  Throwables	35	None	replace
36	[BUG]  [BUGGY]  handleMissingSOURCE(sourceName,  sourceName,  unexpectedException);  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSOURCE(sourceName,  sourceName,  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(sourceName,  sourceName,  unexpectedException);	  handleMissingSOURCE(sourceName,    unexpectedException);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
37	[BUG]  [BUGGY]  handleMissingSOURCE(sourceName,  message,  unexpectedException);  [CE]  cannot  find  symbol  message  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSOURCE(sourceName,  message,  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(sourceName,  message,  unexpectedException);	  handleMissingSOURCE(sourceName,    unexpectedException);    	non-compiled	[CE]  cannot  find  symbol  message	65	None	replace
38	[BUG]  [BUGGY]  handleMissingSOURCE(sourceName,  curNode,  unexpectedException);  [CE]  cannot  find  symbol  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSOURCE(sourceName,  curNode,  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(sourceName,  curNode,  unexpectedException);	  handleMissingSOURCE(sourceName,    unexpectedException);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
39	[BUG]  [BUGGY]  handleMissingSOURCE(sourceName,  cb,  unexpectedException);  [CE]  cannot  find  symbol  cb  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSOURCE(sourceName,  cb,  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(sourceName,  cb,  unexpectedException);	  handleMissingSOURCE(sourceName,    unexpectedException);    	non-compiled	[CE]  cannot  find  symbol  cb	65	None	replace
40	[BUG]  [BUGGY]  handleMissingSOURCE(sourceName,  root,  unexpectedException);  [CE]  cannot  find  symbol  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSOURCE(sourceName,  root,  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(sourceName,  root,  unexpectedException);	  handleMissingSOURCE(sourceName,    unexpectedException);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
41	[BUG]  [BUGGY]  handleMissingSOURCE(inputId,  sourceName,  unexpectedException);  [CE]  cannot  find  symbol  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSOURCE(inputId,  sourceName,  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(inputId,  sourceName,  unexpectedException);	  handleMissingSOURCE(sourceName,    unexpectedException);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
42	[BUG]  [BUGGY]  handleMissingSOURCE(sourceName,  callback,  unexpectedException);  [CE]  cannot  find  symbol  [FE]                              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSOURCE(sourceName,  callback,  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(sourceName,  callback,  unexpectedException);	  handleMissingSOURCE(sourceName,    unexpectedException);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
43	[BUG]  [BUGGY]  Throwables.printStackTrace(unexpectedException);  [CE]  cannot  find  symbol  Throwables  [FE]            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.printStackTrace(unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.printStackTrace(unexpectedException);	  throw    new    IllegalStateException(   "   ");    unexpectedException.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  Throwables	111	None	replace
44	[BUG]  [BUGGY]  n.printStackTrace();  [CE]  cannot  find  symbol  n  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  n.printStackTrace();  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	n.printStackTrace();	  throw    new    IllegalStateException(   "   ");    unexpectedException.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  n	111	None	replace
45	[BUG]  [BUGGY]  Context.report(null,  MISSING_SOURCE, " ");  [CE]  cannot  find  symbol  Context  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(null,  MISSING_SOURCE, " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(null,  MISSING_SOURCE, " ");	  throw    new    IllegalStateException(   "   ");    unexpectedException.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  Context	111	None	replace
46	[BUG]  [BUGGY]  Throwables.printStackTrace();  [CE]  cannot  find  symbol  Throwables  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.printStackTrace();  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.printStackTrace();	  throw    new    IllegalStateException(   "   ");    unexpectedException.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  Throwables	111	None	replace
47	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  n,  curNode,  MISSING_SOURCE),  cb);  [CE]  cannot  find  symbol  n  [FE]                                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  n,  curNode,  MISSING_SOURCE),  cb);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  n,  curNode,  MISSING_SOURCE),  cb);	          Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE),    cb);    	non-compiled	[CE]  cannot  find  symbol  n	16	None	replace
48	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  label),  cb);  [CE]  cannot  find  symbol  label  [FE]                                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  label),  cb);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  label),  cb);	          Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE),    cb);    	non-compiled	[CE]  cannot  find  symbol  label	16	None	replace
49	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  cb,  MISSING_SOURCE),  curNode);  [CE]  cannot  find  symbol  cb  [FE]                                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  cb,  MISSING_SOURCE),  curNode);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  cb,  MISSING_SOURCE),  curNode);	          Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE),    cb);    	non-compiled	[CE]  cannot  find  symbol  cb	16	None	replace
50	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message,  cb);  [CE]  ')'  expected  [FE]                                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message,  cb);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message,  cb);	          Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE),    cb);    	non-compiled	[CE]  ')'  expected	16	None	replace
51	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message,  scopeCreator);  [CE]  ')'  expected  [FE]                                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message,  scopeCreator);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message,  scopeCreator);	          Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE),    cb);    	non-compiled	[CE]  ')'  expected	16	None	replace
52	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  message,  MISSING_SOURCE),  cb);  [CE]  cannot  find  symbol  message  [FE]                                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  message,  MISSING_SOURCE),  cb);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  message,  MISSING_SOURCE),  cb);	          Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE),    cb);    	non-compiled	[CE]  cannot  find  symbol  message	16	None	replace
53	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  label,  MISSING_SOURCE),  cb);  [CE]  cannot  find  symbol  label  [FE]                                              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  label,  MISSING_SOURCE),  cb);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  label,  MISSING_SOURCE),  cb);	          Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE),    cb);    	non-compiled	[CE]  cannot  find  symbol  label	16	None	replace
54	[BUG]  [BUGGY]  Throw  new  RuntimeException( " ");  [CE]  not  a  statement  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throw  new  RuntimeException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throw  new  RuntimeException( " ");	  throw    new    RuntimeException(       "       ");    Throw    new    RuntimeException(       "       ");    	non-compiled	[CE]  not  a  statement	33	None	replace
55	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  RuntimeException( " "));  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,RuntimeException)  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  RuntimeException( " "));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	NodeTraversal.traverse(compiler,  root,  new  RuntimeException( " "));	  throw    new    RuntimeException(       "       ");    Throw    new    RuntimeException(       "       ");    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,RuntimeException)	33	None	replace
56	[BUG]  [BUGGY]  catch(Throwable  e)  {  [CE]  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  catch(Throwable  e)  {  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	catch(Throwable  e)  {	  catch(NodeNotFoundException    e)    {    	non-compiled	[CE]  	62	None	replace
57	[BUG]  [BUGGY]  catch(IOException  e)  {  [CE]  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  catch(IOException  e)  {  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	catch(IOException  e)  {	  catch(NodeNotFoundException    e)    {    	non-compiled	[CE]  	62	None	replace
58	[BUG]  [BUGGY]  catch(RuntimeException  e)  {  [CE]  [FE]                              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  catch(RuntimeException  e)  {  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	catch(RuntimeException  e)  {	  catch(NodeNotFoundException    e)    {    	non-compiled	[CE]  	62	None	replace
59	[BUG]  [BUGGY]  catch(NodeNotFoundException  n)  {  [CE]  [FE]                                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  catch(NodeNotFoundException  n)  {  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	catch(NodeNotFoundException  n)  {	  catch(NodeNotFoundException    e)    {    	non-compiled	[CE]  	62	None	replace
60	[BUG]  [BUGGY]  Throwable  cause  =  new  IllegalArgumentException(   "   ");  Throwable  cause  =  new  IllegalArgumentException( "   ");  [CE]  variable  cause  is  already  defined  in  method  traverse(Node)  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  new  IllegalArgumentException(   "   ");  Throwable  cause  =  new  IllegalArgumentException( "   ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable    cause    =    new    IllegalArgumentException(   "   ");    Throwable  cause  =  new  IllegalArgumentException( "   ");	  timeout    	non-compiled	[CE]  variable  cause  is  already  defined  in  method  traverse(Node)	116	None	add
61	[BUG]  [BUGGY]  Throwable  cause  =  new  IllegalArgumentException(   "   ");  Throwable  cause  =  new  IllegalArgumentException( ".   ");  [CE]  variable  cause  is  already  defined  in  method  traverse(Node)  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  new  IllegalArgumentException(   "   ");  Throwable  cause  =  new  IllegalArgumentException( ".   ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable    cause    =    new    IllegalArgumentException(   "   ");    Throwable  cause  =  new  IllegalArgumentException( ".   ");	  timeout    	non-compiled	[CE]  variable  cause  is  already  defined  in  method  traverse(Node)	116	None	add
62	[BUG]  [BUGGY]  Throwable  cause  =  new  IllegalArgumentException(   "   ");  Throwable  cause  =  new  IllegalArgumentException(. "   ");  [CE]  illegal  start  of  expression  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  new  IllegalArgumentException(   "   ");  Throwable  cause  =  new  IllegalArgumentException(. "   ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable    cause    =    new    IllegalArgumentException(   "   ");    Throwable  cause  =  new  IllegalArgumentException(. "   ");	  timeout    	non-compiled	[CE]  illegal  start  of  expression	116	None	add
63	[BUG]  [BUGGY]  Throwable  cause  =  new  IllegalArgumentException(   "   ");  Throwable  cause  =  new  IllegalArgumentException( ",   ");  [CE]  variable  cause  is  already  defined  in  method  traverse(Node)  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  new  IllegalArgumentException(   "   ");  Throwable  cause  =  new  IllegalArgumentException( ",   ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable    cause    =    new    IllegalArgumentException(   "   ");    Throwable  cause  =  new  IllegalArgumentException( ",   ");	  timeout    	non-compiled	[CE]  variable  cause  is  already  defined  in  method  traverse(Node)	116	None	add
64	[BUG]  [BUGGY]  Throwable  cause  =  new  IllegalArgumentException(   "   ");  Throwable  cause  =  new  IllegalArgumentException( " "));  [CE]  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  new  IllegalArgumentException(   "   ");  Throwable  cause  =  new  IllegalArgumentException( " "));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable    cause    =    new    IllegalArgumentException(   "   ");    Throwable  cause  =  new  IllegalArgumentException( " "));	  timeout    	non-compiled	[CE]  	116	None	add
65	[BUG]  [BUGGY]  Throwable  cause  =  new  IllegalArgumentException(   "   ");  Throwable  cause  =  new  IllegalArgumentException( "... ");  [CE]  variable  cause  is  already  defined  in  method  traverse(Node)  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  new  IllegalArgumentException(   "   ");  Throwable  cause  =  new  IllegalArgumentException( "... ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable    cause    =    new    IllegalArgumentException(   "   ");    Throwable  cause  =  new  IllegalArgumentException( "... ");	  timeout    	non-compiled	[CE]  variable  cause  is  already  defined  in  method  traverse(Node)	116	None	add
66	[BUG]  [BUGGY]  handleMissingStatement(null,  curNode);  [CE]  cannot  find  symbol  [FE]                              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(null,  curNode);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(null,  curNode);	  handleMissingStatement(null);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
67	[BUG]  [BUGGY]  handleMissingStatement(null,  sourceName);  [CE]  cannot  find  symbol  [FE]                                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(null,  sourceName);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(null,  sourceName);	  handleMissingStatement(null);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
68	[BUG]  [BUGGY]  handleMissingStatement(null,  null);  [CE]  cannot  find  symbol  [FE]                                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(null,  null);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(null,  null);	  handleMissingStatement(null);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
69	[BUG]  [BUGGY]  handleMissingStatement(null,  root);  [CE]  cannot  find  symbol  [FE]                                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(null,  root);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(null,  root);	  handleMissingStatement(null);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
70	[BUG]  [BUGGY]  handleMissingStatement(null,  unexpectedException);  [CE]  cannot  find  symbol  [FE]                                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(null,  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(null,  unexpectedException);	  handleMissingStatement(null);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
71	[BUG]  [BUGGY]  handleMissingStatement(null,  cb);  [CE]  cannot  find  symbol  cb  [FE]                                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(null,  cb);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(null,  cb);	  handleMissingStatement(null);    	non-compiled	[CE]  cannot  find  symbol  cb	40	None	replace
72	[BUG]  [BUGGY]  timeout  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  throw  new  UnsupportedOperationException( " ",  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	add	throw  new  UnsupportedOperationException( " ",  unexpectedException);	  throw    new    UnsupportedOperationException(   "   "),    unexpectedException);    	compilable	timeout	119	1	replace
73	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( " ",  unexpectedException);  timeout  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  throw  new  UnsupportedOperationException( " ",  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw  new  UnsupportedOperationException( " ",  unexpectedException);	  throw    new    UnsupportedOperationException(   "   "),    unexpectedException);    	compilable	timeout	119	1	replace
74	[BUG]  [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " ");  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw  new  UnsupportedOperationException( " ");	  throw    new    UnsupportedOperationException(   "   "),    unexpectedException);    	non-compiled	[CE]  <identifier>  expected	119	None	replace
75	[BUG]  [BUGGY]  timeout  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  throw  new  UnsupportedOperationException( " "  +  sourceName,  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	add	throw  new  UnsupportedOperationException( " "  +  sourceName,  unexpectedException);	  throw    new    UnsupportedOperationException(   "   "),    unexpectedException);    	compilable	timeout	119	1	replace
76	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( " "  +  sourceName,  unexpectedException);  timeout  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  throw  new  UnsupportedOperationException( " "  +  sourceName,  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw  new  UnsupportedOperationException( " "  +  sourceName,  unexpectedException);	  throw    new    UnsupportedOperationException(   "   "),    unexpectedException);    	compilable	timeout	119	1	replace
77	[BUG]  [BUGGY]  Throwables.throw(new  UnsupportedOperationException( " "),  unexpectedException);  [CE]  <identifier>  expected  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  UnsupportedOperationException( " "),  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  UnsupportedOperationException( " "),  unexpectedException);	  throw    new    UnsupportedOperationException(   "   "),    unexpectedException);    	non-compiled	[CE]  <identifier>  expected	119	None	replace
78	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStatementException( " ");  [CE]  <identifier>  expected  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  IllegalStatementException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  IllegalStatementException( " ");	  Throwables.throw(new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	73	None	replace
79	[BUG]  [BUGGY]  Throwables.throw(new  IllegalArgumentException( " "  +  unexpectedException.getMessage()));  [CE]  <identifier>  expected  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  IllegalArgumentException( " "  +  unexpectedException.getMessage()));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  IllegalArgumentException( " "  +  unexpectedException.getMessage()));	  Throwables.throw(new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	73	None	replace
80	[BUG]  [BUGGY]  Throwables.throw(new  IllegalArgumentException( " "  +  unexpectedException));  [CE]  <identifier>  expected  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  IllegalArgumentException( " "  +  unexpectedException));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  IllegalArgumentException( " "  +  unexpectedException));	  Throwables.throw(new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	73	None	replace
81	[BUG]  [BUGGY]  Throwables.throw(new  IllegalArgumentException( " "  +  sourceName));  [CE]  <identifier>  expected  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  IllegalArgumentException( " "  +  sourceName));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  IllegalArgumentException( " "  +  sourceName));	  Throwables.throw(new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	73	None	replace
82	[BUG]  [BUGGY]  JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  message));  [CE]  ';'  expected  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  message));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  message));	  throw    new    UnsupportedOperationException(       "       ");    JSError.make(sourceName,    curNode,    NON_GLOBAL_ERROR,    sourceName));    	non-compiled	[CE]  ';'  expected	127	None	replace
83	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  unexpectedException));  [CE]  cannot  find  symbol  NON_GLOBAL_ERROR  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  unexpectedException));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  unexpectedException));	  throw    new    UnsupportedOperationException(       "       ");    JSError.make(sourceName,    curNode,    NON_GLOBAL_ERROR,    sourceName));    	non-compiled	[CE]  cannot  find  symbol  NON_GLOBAL_ERROR	127	None	replace
84	[BUG]  [BUGGY]  JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  sourceName));  [CE]  ';'  expected  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  sourceName));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  sourceName));	  throw    new    UnsupportedOperationException(       "       ");    JSError.make(sourceName,    curNode,    NON_GLOBAL_ERROR,    sourceName));    	non-compiled	[CE]  ';'  expected	127	None	replace
85	[BUG]  [BUGGY]  Throwables.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  unexpectedException));  [CE]  ';'  expected  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  unexpectedException));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  unexpectedException));	  throw    new    UnsupportedOperationException(       "       ");    JSError.make(sourceName,    curNode,    NON_GLOBAL_ERROR,    sourceName));    	non-compiled	[CE]  ';'  expected	127	None	replace
86	[BUG]  [BUGGY]  JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  unexpectedException));  [CE]  ';'  expected  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  unexpectedException));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  unexpectedException));	  throw    new    UnsupportedOperationException(       "       ");    JSError.make(sourceName,    curNode,    NON_GLOBAL_ERROR,    sourceName));    	non-compiled	[CE]  ';'  expected	127	None	replace
87	[BUG]  [BUGGY]  UnsupportedOperationException.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  unexpectedException));  [CE]  ';'  expected  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  UnsupportedOperationException.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  unexpectedException));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	UnsupportedOperationException.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  unexpectedException));	  throw    new    UnsupportedOperationException(       "       ");    JSError.make(sourceName,    curNode,    NON_GLOBAL_ERROR,    sourceName));    	non-compiled	[CE]  ';'  expected	127	None	replace
88	[BUG]  [BUGGY]  JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  inputId));  [CE]  ';'  expected  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  inputId));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  inputId));	  throw    new    UnsupportedOperationException(       "       ");    JSError.make(sourceName,    curNode,    NON_GLOBAL_ERROR,    sourceName));    	non-compiled	[CE]  ';'  expected	127	None	replace
89	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  UNKNOWN_EXPR_RESULT));  [CE]  cannot  find  symbol  UNKNOWN_EXPR_RESULT  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  UNKNOWN_EXPR_RESULT));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  UNKNOWN_EXPR_RESULT));	  Context.report(JSError.make(sourceName,    curNode,    UNKNOWN_EXPR_TYPE));    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_EXPR_RESULT	97	None	replace
90	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  NODE_TRAVERSAL_ERROR));  [CE]  cannot  find  symbol  Context  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  NODE_TRAVERSAL_ERROR));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  NODE_TRAVERSAL_ERROR));	  Context.report(JSError.make(sourceName,    curNode,    UNKNOWN_EXPR_TYPE));    	non-compiled	[CE]  cannot  find  symbol  Context	97	None	replace
91	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  UNKNOWN_EXPR_TYPE,  message));  [CE]  cannot  find  symbol  UNKNOWN_EXPR_TYPE  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  UNKNOWN_EXPR_TYPE,  message));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  UNKNOWN_EXPR_TYPE,  message));	  Context.report(JSError.make(sourceName,    curNode,    UNKNOWN_EXPR_TYPE));    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_EXPR_TYPE	97	None	replace
92	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  UNKNOWN_EXPR_WARNING));  [CE]  cannot  find  symbol  UNKNOWN_EXPR_WARNING  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  UNKNOWN_EXPR_WARNING));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  UNKNOWN_EXPR_WARNING));	  Context.report(JSError.make(sourceName,    curNode,    UNKNOWN_EXPR_TYPE));    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_EXPR_WARNING	97	None	replace
93	[BUG]  [BUGGY]  handleMissingScopeException(root,  inputId);  [CE]  cannot  find  symbol  [FE]                              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingScopeException(root,  inputId);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(root,  inputId);	  handleMissingScopeException(root,    undefined);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
94	[BUG]  [BUGGY]  scopeCreator.printStackTrace(unexpectedException);  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  scopeCreator.printStackTrace(unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scopeCreator.printStackTrace(unexpectedException);	  scopeCtrl.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
95	[BUG]  [BUGGY]  scopectrl.printStackTrace();  [CE]  cannot  find  symbol  scopectrl  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  scopectrl.printStackTrace();  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scopectrl.printStackTrace();	  scopeCtrl.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  scopectrl	83	None	replace
96	[BUG]  [BUGGY]  catch(Throwable  ioe)  {  [CE]  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  catch(Throwable  ioe)  {  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	catch(Throwable  ioe)  {	  catch(IOException    ioe)    {    	non-compiled	[CE]  	122	None	replace
97	[BUG]  [BUGGY]  catch(Exception  ioe)  {  [CE]  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  catch(Exception  ioe)  {  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	catch(Exception  ioe)  {	  catch(IOException    ioe)    {    	non-compiled	[CE]  	122	None	replace
98	[BUG]  [BUGGY]  catch(RuntimeException  ioe)  {  [CE]  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  catch(RuntimeException  ioe)  {  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	catch(RuntimeException  ioe)  {	  catch(IOException    ioe)    {    	non-compiled	[CE]  	122	None	replace
99	[BUG]  [BUGGY]  Throwables.throw(new  RuntimeException( " "),  sourceName,  unexpectedException);  [CE]  <identifier>  expected  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  RuntimeException( " "),  sourceName,  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  RuntimeException( " "),  sourceName,  unexpectedException);	  Throwables.throw(new    RuntimeException(   "   "),    unexpectedException);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
100	[BUG]  [BUGGY]  Throwables.throw(new  RuntimeException(sourceName),  unexpectedException);  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  RuntimeException(sourceName),  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  RuntimeException(sourceName),  unexpectedException);	  Throwables.throw(new    RuntimeException(   "   "),    unexpectedException);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
101	[BUG]  [BUGGY]  Throwables.throw(new  RuntimeException( "Unexpected  source  name: "  +  sourceName),  unexpectedException);  [CE]  <identifier>  expected  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  RuntimeException( "Unexpected  source  name: "  +  sourceName),  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  RuntimeException( "Unexpected  source  name: "  +  sourceName),  unexpectedException);	  Throwables.throw(new    RuntimeException(   "   "),    unexpectedException);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
102	[BUG]  [BUGGY]  Throwables.throw(new  RuntimeException( "Unexpected  source  name: "  +  sourceName));  [CE]  <identifier>  expected  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  RuntimeException( "Unexpected  source  name: "  +  sourceName));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  RuntimeException( "Unexpected  source  name: "  +  sourceName));	  Throwables.throw(new    RuntimeException(   "   "),    unexpectedException);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
103	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message,  sourceName));  [CE]  cannot  find  symbol  message  [FE]                                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message,  sourceName));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message,  sourceName));	          Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE,    sourceName));    	non-compiled	[CE]  cannot  find  symbol  message	18	None	replace
104	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  label,  sourceName));  [CE]  cannot  find  symbol  label  [FE]                                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  label,  sourceName));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  label,  sourceName));	          Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE,    sourceName));    	non-compiled	[CE]  cannot  find  symbol  label	18	None	replace
105	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  sourceName,  scopeCreator));  [CE]  no  suitable  method  found  for  make(String,Node,String,String,ScopeCreator)  [FE]                                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  sourceName,  scopeCreator));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  sourceName,  scopeCreator));	          Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE,    sourceName));    	non-compiled	[CE]  no  suitable  method  found  for  make(String,Node,String,String,ScopeCreator)	18	None	replace
106	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  NODE_TRAVERSAL_ERROR,  sourceName));  [CE]  cannot  find  symbol  Context  [FE]                                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  NODE_TRAVERSAL_ERROR,  sourceName));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  NODE_TRAVERSAL_ERROR,  sourceName));	          Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE,    sourceName));    	non-compiled	[CE]  cannot  find  symbol  Context	18	None	replace
107	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  message,  MISSING_SOURCE,  sourceName));  [CE]  cannot  find  symbol  message  [FE]                                              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  message,  MISSING_SOURCE,  sourceName));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  message,  MISSING_SOURCE,  sourceName));	          Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE,    sourceName));    	non-compiled	[CE]  cannot  find  symbol  message	18	None	replace
108	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  UNKNOWN_SOURCE,  sourceName));  [CE]  cannot  find  symbol  UNKNOWN_SOURCE  [FE]                                                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  UNKNOWN_SOURCE,  sourceName));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  UNKNOWN_SOURCE,  sourceName));	          Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE,    sourceName));    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_SOURCE	18	None	replace
109	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  sourceName,  MISSING_SOURCE));  [CE]  no  suitable  method  found  for  make(String,Node,String,String)  [FE]                                                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  sourceName,  MISSING_SOURCE));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  sourceName,  MISSING_SOURCE));	          Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE,    sourceName));    	non-compiled	[CE]  no  suitable  method  found  for  make(String,Node,String,String)	18	None	replace
110	[BUG]  [BUGGY]  reportUnexpectedException( " ",  unexpectedException);  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  reportUnexpectedException( " ",  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	reportUnexpectedException( " ",  unexpectedException);	  reportUnexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
111	[BUG]  [BUGGY]  Reporter.error( "Unexpected  exception: "  +  cb.getMessage());  [CE]  cannot  find  symbol  cb  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Reporter.error( "Unexpected  exception: "  +  cb.getMessage());  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Reporter.error( "Unexpected  exception: "  +  cb.getMessage());	  reportUnexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  cb	89	None	replace
112	[BUG]  [BUGGY]  Reporter.error( "Unexpected  exception: "  +  unexpectedException);  [CE]  cannot  find  symbol  Reporter  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Reporter.error( "Unexpected  exception: "  +  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Reporter.error( "Unexpected  exception: "  +  unexpectedException);	  reportUnexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  Reporter	89	None	replace
113	[BUG]  [BUGGY]  Reporter.warning( "Unexpected  exception: "  +  unexpectedException);  [CE]  cannot  find  symbol  Reporter  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Reporter.warning( "Unexpected  exception: "  +  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Reporter.warning( "Unexpected  exception: "  +  unexpectedException);	  reportUnexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  Reporter	89	None	replace
114	[BUG]  [BUGGY]  Context.reportUnexpectedException( " ");  [CE]  cannot  find  symbol  Context  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.reportUnexpectedException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.reportUnexpectedException( " ");	  reportUnexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  Context	89	None	replace
115	[BUG]  [BUGGY]  Reporter.error( "Unexpected  source  name: "  +  inputId);  [CE]  cannot  find  symbol  Reporter  [FE]                              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Reporter.error( "Unexpected  source  name: "  +  inputId);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Reporter.error( "Unexpected  source  name: "  +  inputId);	  reportUnexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  Reporter	89	None	replace
116	[BUG]  [BUGGY]  Throwable  cause  =  new  UnexpectedException( "Unexpected  source  name: ");  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  new  UnexpectedException( "Unexpected  source  name: ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cause  =  new  UnexpectedException( "Unexpected  source  name: ");	  Throwable    cause    =    new    UnexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
117	[BUG]  [BUGGY]  Throwable  cause  =  new  UnexpectedException( " ",  unexpectedException);  [CE]  cannot  find  symbol  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  new  UnexpectedException( " ",  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cause  =  new  UnexpectedException( " ",  unexpectedException);	  Throwable    cause    =    new    UnexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
118	[BUG]  [BUGGY]  Throwable  cause  =  new  UnexpectedException( "Unexpected  source  name: "  +  inputId);  [CE]  cannot  find  symbol  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  new  UnexpectedException( "Unexpected  source  name: "  +  inputId);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cause  =  new  UnexpectedException( "Unexpected  source  name: "  +  inputId);	  Throwable    cause    =    new    UnexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
119	[BUG]  [BUGGY]  Throwable  cause  =  new  UnexpectedException( "Unexpected  source  name: "  +  sourceName);  [CE]  cannot  find  symbol  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  new  UnexpectedException( "Unexpected  source  name: "  +  sourceName);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cause  =  new  UnexpectedException( "Unexpected  source  name: "  +  sourceName);	  Throwable    cause    =    new    UnexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
120	[BUG]  [BUGGY]  Throwable  cause  =  new  UnexpectedException( " "));  [CE]  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  new  UnexpectedException( " "));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cause  =  new  UnexpectedException( " "));	  Throwable    cause    =    new    UnexpectedException(   "   ");    	non-compiled	[CE]  	102	None	replace
121	[BUG]  [BUGGY]  Throwable  cause  =  new  UnexpectedException( "Unexpected  source  name  for  path: "  +  inputId);  [CE]  cannot  find  symbol  [FE]                              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  new  UnexpectedException( "Unexpected  source  name  for  path: "  +  inputId);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cause  =  new  UnexpectedException( "Unexpected  source  name  for  path: "  +  inputId);	  Throwable    cause    =    new    UnexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
122	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  this);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,NodeTraversal)  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  NodeTraversal.traverse(compiler,  root,  this);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	NodeTraversal.traverse(compiler,  root,  this);	  throw    new    IllegalArgumentException(       "       ");    throw    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,NodeTraversal)	28	None	replace
123	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  message));  [CE]  cannot  find  symbol  message  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  message));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  message));	  Context.report(JSError.make(sourceName,    curNode,    UNKNOWN_SOURCE));    	non-compiled	[CE]  cannot  find  symbol  message	98	None	replace
124	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  UNKNOWN_SOURCE,  message));  [CE]  cannot  find  symbol  UNKNOWN_SOURCE  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  UNKNOWN_SOURCE,  message));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  UNKNOWN_SOURCE,  message));	  Context.report(JSError.make(sourceName,    curNode,    UNKNOWN_SOURCE));    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_SOURCE	98	None	replace
125	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  unexpectedException);  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Exception)  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  NodeTraversal.traverse(compiler,  root,  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	NodeTraversal.traverse(compiler,  root,  unexpectedException);	  throw    new    RuntimeException(       "       ");    throw    new    RuntimeException(.   "       ");    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Exception)	90	None	replace
126	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  MISSING_SOURCE));  [CE]  cannot  find  symbol  NON_GLOBAL_ERROR  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  MISSING_SOURCE));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  MISSING_SOURCE));	          Context.report(JSError.make(sourceName,    curNode,    NON_GLOBAL_ERROR,    sourceName));    	non-compiled	[CE]  cannot  find  symbol  NON_GLOBAL_ERROR	13	None	replace
127	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  message));  [CE]  cannot  find  symbol  NON_GLOBAL_ERROR  [FE]                              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  message));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  message));	          Context.report(JSError.make(sourceName,    curNode,    NON_GLOBAL_ERROR,    sourceName));    	non-compiled	[CE]  cannot  find  symbol  NON_GLOBAL_ERROR	13	None	replace
128	[BUG]  [BUGGY]  Throwables.throw(new  UnexpectedException(sourceName));  [CE]  <identifier>  expected  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  UnexpectedException(sourceName));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  UnexpectedException(sourceName));	  Throwables.throw(new    UnexpectedException(   "   "));    	non-compiled	[CE]  <identifier>  expected	75	None	replace
129	[BUG]  [BUGGY]  Throwables.throw(new  UnexpectedException(sourceName),  unexpectedException);  [CE]  <identifier>  expected  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  UnexpectedException(sourceName),  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  UnexpectedException(sourceName),  unexpectedException);	  Throwables.throw(new    UnexpectedException(   "   "));    	non-compiled	[CE]  <identifier>  expected	75	None	replace
130	[BUG]  [BUGGY]  Throwables.throw(new  UnexpectedException( "Unexpected  source  name "));  [CE]  <identifier>  expected  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  UnexpectedException( "Unexpected  source  name "));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  UnexpectedException( "Unexpected  source  name "));	  Throwables.throw(new    UnexpectedException(   "   "));    	non-compiled	[CE]  <identifier>  expected	75	None	replace
131	[BUG]  [BUGGY]  Throwables.throw(new  UnexpectedException(sourceName,  sourceName));  [CE]  <identifier>  expected  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  UnexpectedException(sourceName,  sourceName));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  UnexpectedException(sourceName,  sourceName));	  Throwables.throw(new    UnexpectedException(   "   "));    	non-compiled	[CE]  <identifier>  expected	75	None	replace
132	[BUG]  [BUGGY]  timeout  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  new  UnsupportedOperationException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	add	Throwable  cause  =  new  UnsupportedOperationException( " ");	  throw    new    UnsupportedOperationException(       "       ");    Throwable    cause    =    new    UnsupportedOperationException(   "       ");    	compilable	timeout	56	1	replace
133	[BUG]  [BUGGY]  Throwable  cause  =  new  UnsupportedOperationException( " ");  timeout  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  new  UnsupportedOperationException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cause  =  new  UnsupportedOperationException( " ");	  throw    new    UnsupportedOperationException(       "       ");    Throwable    cause    =    new    UnsupportedOperationException(   "       ");    	compilable	timeout	56	1	replace
134	[BUG]  [BUGGY]  UnsupportedOperationException.throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  UnsupportedOperationException.throw  new  IllegalArgumentException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	UnsupportedOperationException.throw  new  IllegalArgumentException( " ");	  throw    new    UnsupportedOperationException(       "       ");    Throwable    cause    =    new    UnsupportedOperationException(   "       ");    	non-compiled	[CE]  <identifier>  expected	56	None	replace
135	[BUG]  [BUGGY]  UnsupportedOperationException.throw  new  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  UnsupportedOperationException.throw  new  IllegalStateException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	UnsupportedOperationException.throw  new  IllegalStateException( " ");	  throw    new    UnsupportedOperationException(       "       ");    Throwable    cause    =    new    UnsupportedOperationException(   "       ");    	non-compiled	[CE]  <identifier>  expected	56	None	replace
136	[BUG]  [BUGGY]  UnsupportedOperationException.throwException( " ");  [CE]  cannot  find  symbol  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  UnsupportedOperationException.throwException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	UnsupportedOperationException.throwException( " ");	  throw    new    UnsupportedOperationException(       "       ");    Throwable    cause    =    new    UnsupportedOperationException(   "       ");    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
137	[BUG]  [BUGGY]  handleMissingSOURCE(unknownException);  [CE]  cannot  find  symbol  unknownException  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSOURCE(unknownException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(unknownException);	  handleMissingSOURCE(exception);    	non-compiled	[CE]  cannot  find  symbol  unknownException	67	None	replace
138	[BUG]  [BUGGY]  handleMissingSOURCE(sourceName);  [CE]  cannot  find  symbol  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSOURCE(sourceName);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(sourceName);	  handleMissingSOURCE(exception);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
139	[BUG]  [BUGGY]  handleMissingSOURCE(root);  [CE]  cannot  find  symbol  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSOURCE(root);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(root);	  handleMissingSOURCE(exception);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
140	[BUG]  [BUGGY]  handleMissingSOURCE(n);  [CE]  cannot  find  symbol  n  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSOURCE(n);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(n);	  handleMissingSOURCE(exception);    	non-compiled	[CE]  cannot  find  symbol  n	67	None	replace
141	[BUG]  [BUGGY]  scopeCreator.printStackTrace(unknownException);  [CE]  cannot  find  symbol  unknownException  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  scopeCreator.printStackTrace(unknownException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scopeCreator.printStackTrace(unknownException);	  scopeCreator.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  unknownException	24	None	replace
142	[BUG]  [BUGGY]  scopeCreator.printStackTrace(outputId);  [CE]  cannot  find  symbol  outputId  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  scopeCreator.printStackTrace(outputId);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scopeCreator.printStackTrace(outputId);	  scopeCreator.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  outputId	24	None	replace
143	[BUG]  [BUGGY]  scopeCreator.printStackTrace(abbreviation);  [CE]  cannot  find  symbol  abbreviation  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  scopeCreator.printStackTrace(abbreviation);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scopeCreator.printStackTrace(abbreviation);	  scopeCreator.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  abbreviation	24	None	replace
144	[BUG]  [BUGGY]  scopeCreator.printStackTrace(currentNode);  [CE]  cannot  find  symbol  currentNode  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  scopeCreator.printStackTrace(currentNode);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scopeCreator.printStackTrace(currentNode);	  scopeCreator.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  currentNode	24	None	replace
145	[BUG]  [BUGGY]  timeout  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " ");  unexpectedException.printStackTrace();  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	add	Throwable  cause  =  new  IllegalArgumentException( " ");  unexpectedException.printStackTrace();	  Throwable    cause    =    new    IllegalArgumentException(   "   ");    timeout    	compilable	timeout	117	1	replace
146	[BUG]  [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " ");  unexpectedException.printStackTrace();  timeout  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " ");  unexpectedException.printStackTrace();  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cause  =  new  IllegalArgumentException( " ");  unexpectedException.printStackTrace();	  Throwable    cause    =    new    IllegalArgumentException(   "   ");    timeout    	compilable	timeout	117	1	replace
147	[BUG]  [BUGGY]  Throwable  cause  =  new  IllegalStatementException( " ");  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  new  IllegalStatementException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cause  =  new  IllegalStatementException( " ");	  Throwable    cause    =    new    IllegalArgumentException(   "   ");    timeout    	non-compiled	[CE]  cannot  find  symbol	117	None	replace
148	[BUG]  [BUGGY]  timeout  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  new  IllegalStateException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	add	Throwable  cause  =  new  IllegalStateException( " ");	  Throwable    cause    =    new    IllegalArgumentException(   "   ");    timeout    	compilable	timeout	117	1	replace
149	[BUG]  [BUGGY]  Throwable  cause  =  new  IllegalStateException( " ");  timeout  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  new  IllegalStateException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cause  =  new  IllegalStateException( " ");	  Throwable    cause    =    new    IllegalArgumentException(   "   ");    timeout    	compilable	timeout	117	1	replace
150	[BUG]  [BUGGY]  timeout  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( "Unexpected  source  name: "  +  inputId);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	add	Throwable  cause  =  new  IllegalArgumentException( "Unexpected  source  name: "  +  inputId);	  Throwable    cause    =    new    IllegalArgumentException(   "   ");    timeout    	compilable	timeout	117	1	replace
151	[BUG]  [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( "Unexpected  source  name: "  +  inputId);  timeout  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( "Unexpected  source  name: "  +  inputId);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cause  =  new  IllegalArgumentException( "Unexpected  source  name: "  +  inputId);	  Throwable    cause    =    new    IllegalArgumentException(   "   ");    timeout    	compilable	timeout	117	1	replace
152	[BUG]  [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " "),  unexpectedException);  [CE]  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " "),  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cause  =  new  IllegalArgumentException( " "),  unexpectedException);	  Throwable    cause    =    new    IllegalArgumentException(   "   ");    timeout    	non-compiled	[CE]  	117	None	replace
153	[BUG]  [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " ");  cb.reset();  [CE]  cannot  find  symbol  cb  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " ");  cb.reset();  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cause  =  new  IllegalArgumentException( " ");  cb.reset();	  Throwable    cause    =    new    IllegalArgumentException(   "   ");    timeout    	non-compiled	[CE]  cannot  find  symbol  cb	117	None	replace
154	[BUG]  [BUGGY]  handleMissingScopeException(sourceName,  curNode);  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingScopeException(sourceName,  curNode);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(sourceName,  curNode);	  handleMissingScopeException(curNode);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
155	[BUG]  [BUGGY]  handleMissingScopeException(root,  unwrappedNode);  [CE]  cannot  find  symbol  unwrappedNode  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingScopeException(root,  unwrappedNode);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(root,  unwrappedNode);	  handleMissingScopeException(curNode);    	non-compiled	[CE]  cannot  find  symbol  unwrappedNode	114	None	replace
156	[BUG]  [BUGGY]  handleMissingScopeException(sourceName);  [CE]  cannot  find  symbol  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingScopeException(sourceName);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(sourceName);	  handleMissingScopeException(curNode);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
157	[BUG]  [BUGGY]  JSError.make(sourceName,  curNode,  NODE_TRAVERSAL_ERROR,  inputId));  [CE]  ';'  expected  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  JSError.make(sourceName,  curNode,  NODE_TRAVERSAL_ERROR,  inputId));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	JSError.make(sourceName,  curNode,  NODE_TRAVERSAL_ERROR,  inputId));	  throw    new    UnsupportedOperationException(       "       ");    JSError.make(sourceName,    curNode,    NON_GLOBAL_ERROR,    inputId));    	non-compiled	[CE]  ';'  expected	128	None	replace
158	[BUG]  [BUGGY]  JSError.make(sourceName,  curNode,  INVALID_SOURCE,  inputId));  [CE]  ';'  expected  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  JSError.make(sourceName,  curNode,  INVALID_SOURCE,  inputId));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	JSError.make(sourceName,  curNode,  INVALID_SOURCE,  inputId));	  throw    new    UnsupportedOperationException(       "       ");    JSError.make(sourceName,    curNode,    NON_GLOBAL_ERROR,    inputId));    	non-compiled	[CE]  ';'  expected	128	None	replace
159	[BUG]  [BUGGY]  JSError.make(sourceName,  curNode,  MISSING_SOURCE,  inputId));  [CE]  ';'  expected  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  JSError.make(sourceName,  curNode,  MISSING_SOURCE,  inputId));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	JSError.make(sourceName,  curNode,  MISSING_SOURCE,  inputId));	  throw    new    UnsupportedOperationException(       "       ");    JSError.make(sourceName,    curNode,    NON_GLOBAL_ERROR,    inputId));    	non-compiled	[CE]  ';'  expected	128	None	replace
160	[BUG]  [BUGGY]  UnsupportedOperationException.make(sourceName,  curNode,  MISSING_SOURCE,  inputId));  [CE]  ';'  expected  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  UnsupportedOperationException.make(sourceName,  curNode,  MISSING_SOURCE,  inputId));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	UnsupportedOperationException.make(sourceName,  curNode,  MISSING_SOURCE,  inputId));	  throw    new    UnsupportedOperationException(       "       ");    JSError.make(sourceName,    curNode,    NON_GLOBAL_ERROR,    inputId));    	non-compiled	[CE]  ';'  expected	128	None	replace
161	[BUG]  [BUGGY]  scope.printStackTrace(unexpectedException);  [CE]  cannot  find  symbol  scope  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  scope.printStackTrace(unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scope.printStackTrace(unexpectedException);	  scope.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  scope	23	None	replace
162	[BUG]  [BUGGY]  scope.printStackTrace(unknownException);  [CE]  cannot  find  symbol  unknownException  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  scope.printStackTrace(unknownException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scope.printStackTrace(unknownException);	  scope.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  unknownException	23	None	replace
163	[BUG]  [BUGGY]  BugInput.printStackTrace(unexpectedException);  [CE]  cannot  find  symbol  BugInput  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  BugInput.printStackTrace(unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	BugInput.printStackTrace(unexpectedException);	  bug.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  BugInput	27	None	replace
164	[BUG]  [BUGGY]  Bug.printStackTrace(unexpectedException);  [CE]  cannot  find  symbol  Bug  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Bug.printStackTrace(unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Bug.printStackTrace(unexpectedException);	  bug.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  Bug	27	None	replace
165	[BUG]  [BUGGY]  timeout  [FE]            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  t  =  new  IllegalStateException( " ");  unexpectedException.printStackTrace();  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	add	Throwable  t  =  new  IllegalStateException( " ");  unexpectedException.printStackTrace();	  Throwable    t    =    new    IllegalStateException(   "   ");    timeout    	compilable	timeout	77	1	replace
166	[BUG]  [BUGGY]  Throwable  t  =  new  IllegalStateException( " ");  unexpectedException.printStackTrace();  timeout  [FE]            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  t  =  new  IllegalStateException( " ");  unexpectedException.printStackTrace();  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  t  =  new  IllegalStateException( " ");  unexpectedException.printStackTrace();	  Throwable    t    =    new    IllegalStateException(   "   ");    timeout    	compilable	timeout	77	1	replace
167	[BUG]  [BUGGY]  if(unexpectedException)  {  Throwable  t  =  new  IllegalStateException( " ");  timeout++;  }  [CE]  incompatible  types  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(unexpectedException)  {  Throwable  t  =  new  IllegalStateException( " ");  timeout++;  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(unexpectedException)  {  Throwable  t  =  new  IllegalStateException( " ");  timeout++;  }	  Throwable    t    =    new    IllegalStateException(   "   ");    timeout    	non-compiled	[CE]  incompatible  types	77	None	replace
168	[BUG]  [BUGGY]  if(unexpectedException)  {  Throwable  t  =  new  IllegalStateException( " ");  timeout(1);  }  [CE]  incompatible  types  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(unexpectedException)  {  Throwable  t  =  new  IllegalStateException( " ");  timeout(1);  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(unexpectedException)  {  Throwable  t  =  new  IllegalStateException( " ");  timeout(1);  }	  Throwable    t    =    new    IllegalStateException(   "   ");    timeout    	non-compiled	[CE]  incompatible  types	77	None	replace
169	[BUG]  [BUGGY]  if(unexpectedException)  {  Throwable  t  =  new  IllegalStateException( " ");  timeout.println();  }  [CE]  incompatible  types  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(unexpectedException)  {  Throwable  t  =  new  IllegalStateException( " ");  timeout.println();  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(unexpectedException)  {  Throwable  t  =  new  IllegalStateException( " ");  timeout.println();  }	  Throwable    t    =    new    IllegalStateException(   "   ");    timeout    	non-compiled	[CE]  incompatible  types	77	None	replace
170	[BUG]  [BUGGY]  if(unexpectedException)  {  Throwable  t  =  new  IllegalStateException( " ");  timeout  =  TimeZone.getDefault();  }  [CE]  incompatible  types  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(unexpectedException)  {  Throwable  t  =  new  IllegalStateException( " ");  timeout  =  TimeZone.getDefault();  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(unexpectedException)  {  Throwable  t  =  new  IllegalStateException( " ");  timeout  =  TimeZone.getDefault();  }	  Throwable    t    =    new    IllegalStateException(   "   ");    timeout    	non-compiled	[CE]  incompatible  types	77	None	replace
171	[BUG]  [BUGGY]  if(unexpectedException)  {  Throwable  t  =  new  IllegalStateException( " ");  unexpectedException.printStackTrace();  }  [CE]  incompatible  types  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(unexpectedException)  {  Throwable  t  =  new  IllegalStateException( " ");  unexpectedException.printStackTrace();  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(unexpectedException)  {  Throwable  t  =  new  IllegalStateException( " ");  unexpectedException.printStackTrace();  }	  Throwable    t    =    new    IllegalStateException(   "   ");    timeout    	non-compiled	[CE]  incompatible  types	77	None	replace
172	[BUG]  [BUGGY]  handleMissingSOURCE(unexpectedException,  root,  sourceName);  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSOURCE(unexpectedException,  root,  sourceName);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(unexpectedException,  root,  sourceName);	  handleMissingSOURCE(unexpectedException,    root);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
173	[BUG]  [BUGGY]  handleMissingSOURCE(unexpectedException,  root,  scopeCreator);  [CE]  cannot  find  symbol  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSOURCE(unexpectedException,  root,  scopeCreator);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(unexpectedException,  root,  scopeCreator);	  handleMissingSOURCE(unexpectedException,    root);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
174	[BUG]  [BUGGY]  handleMissingSOURCE(unexpectedException,  root,  cb);  [CE]  cannot  find  symbol  cb  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSOURCE(unexpectedException,  root,  cb);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(unexpectedException,  root,  cb);	  handleMissingSOURCE(unexpectedException,    root);    	non-compiled	[CE]  cannot  find  symbol  cb	66	None	replace
175	[BUG]  [BUGGY]  handleMissingSOURCE(unexpectedException,  root,  message);  [CE]  cannot  find  symbol  message  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSOURCE(unexpectedException,  root,  message);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(unexpectedException,  root,  message);	  handleMissingSOURCE(unexpectedException,    root);    	non-compiled	[CE]  cannot  find  symbol  message	66	None	replace
176	[BUG]  [BUGGY]  handleMissingSOURCE(unexpectedException,  root,  curNode);  [CE]  cannot  find  symbol  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSOURCE(unexpectedException,  root,  curNode);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(unexpectedException,  root,  curNode);	  handleMissingSOURCE(unexpectedException,    root);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
177	[BUG]  [BUGGY]  handleMissingSOURCE(unexpectedException,  root,  parent);  [CE]  cannot  find  symbol  parent  [FE]                              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSOURCE(unexpectedException,  root,  parent);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(unexpectedException,  root,  parent);	  handleMissingSOURCE(unexpectedException,    root);    	non-compiled	[CE]  cannot  find  symbol  parent	66	None	replace
178	[BUG]  [BUGGY]  Throwable  t  =  new  IllegalStateException(   "   ");  Throwable  t  =  new  IllegalStateException( "   ");  [CE]  variable  t  is  already  defined  in  method  traverse(Node)  [FE]            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  t  =  new  IllegalStateException(   "   ");  Throwable  t  =  new  IllegalStateException( "   ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable    t    =    new    IllegalStateException(   "   ");    Throwable  t  =  new  IllegalStateException( "   ");	  timeout    	non-compiled	[CE]  variable  t  is  already  defined  in  method  traverse(Node)	76	None	add
179	[BUG]  [BUGGY]  Throwable  t  =  new  IllegalStateException(   "   ");  Throwable  t  =  new  IllegalStateException( ".   ");  [CE]  variable  t  is  already  defined  in  method  traverse(Node)  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  t  =  new  IllegalStateException(   "   ");  Throwable  t  =  new  IllegalStateException( ".   ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable    t    =    new    IllegalStateException(   "   ");    Throwable  t  =  new  IllegalStateException( ".   ");	  timeout    	non-compiled	[CE]  variable  t  is  already  defined  in  method  traverse(Node)	76	None	add
180	[BUG]  [BUGGY]  Throwable  t  =  new  IllegalStateException(   "   ");  Throwable  t  =  new  IllegalStateException(. "   ");  [CE]  illegal  start  of  expression  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  t  =  new  IllegalStateException(   "   ");  Throwable  t  =  new  IllegalStateException(. "   ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable    t    =    new    IllegalStateException(   "   ");    Throwable  t  =  new  IllegalStateException(. "   ");	  timeout    	non-compiled	[CE]  illegal  start  of  expression	76	None	add
181	[BUG]  [BUGGY]  Throwable  t  =  new  IllegalStateException(   "   ");  Throwable  t  =  new  IllegalStateException( ",   ");  [CE]  variable  t  is  already  defined  in  method  traverse(Node)  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  t  =  new  IllegalStateException(   "   ");  Throwable  t  =  new  IllegalStateException( ",   ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable    t    =    new    IllegalStateException(   "   ");    Throwable  t  =  new  IllegalStateException( ",   ");	  timeout    	non-compiled	[CE]  variable  t  is  already  defined  in  method  traverse(Node)	76	None	add
182	[BUG]  [BUGGY]  Throwable  t  =  new  IllegalStateException(   "   ");  Throwable  t  =  new  IllegalStateException( " "));  [CE]  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  t  =  new  IllegalStateException(   "   ");  Throwable  t  =  new  IllegalStateException( " "));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable    t    =    new    IllegalStateException(   "   ");    Throwable  t  =  new  IllegalStateException( " "));	  timeout    	non-compiled	[CE]  	76	None	add
183	[BUG]  [BUGGY]  Throwable  t  =  new  IllegalStateException(   "   ");  Throwable  t  =  new  IllegalStateException(, "   ");  [CE]  illegal  start  of  expression  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  t  =  new  IllegalStateException(   "   ");  Throwable  t  =  new  IllegalStateException(, "   ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable    t    =    new    IllegalStateException(   "   ");    Throwable  t  =  new  IllegalStateException(, "   ");	  timeout    	non-compiled	[CE]  illegal  start  of  expression	76	None	add
184	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  label,  unexpectedException);  [CE]  ')'  expected  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  label,  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  label,  unexpectedException);	  Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE),    unexpectedException);    	non-compiled	[CE]  ')'  expected	19	None	replace
185	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message,  unexpectedException);  [CE]  ')'  expected  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message,  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message,  unexpectedException);	  Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE),    unexpectedException);    	non-compiled	[CE]  ')'  expected	19	None	replace
186	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  message,  MISSING_SOURCE),  unexpectedException);  [CE]  cannot  find  symbol  message  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  message,  MISSING_SOURCE),  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  message,  MISSING_SOURCE),  unexpectedException);	  Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE),    unexpectedException);    	non-compiled	[CE]  cannot  find  symbol  message	19	None	replace
187	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  label),  unexpectedException);  [CE]  cannot  find  symbol  label  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  label),  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  label),  unexpectedException);	  Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE),    unexpectedException);    	non-compiled	[CE]  cannot  find  symbol  label	19	None	replace
188	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  INVALID_SOURCE,  sourceName),  unexpectedException);  [CE]  cannot  find  symbol  INVALID_SOURCE  [FE]                              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  INVALID_SOURCE,  sourceName),  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  INVALID_SOURCE,  sourceName),  unexpectedException);	  Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE),    unexpectedException);    	non-compiled	[CE]  cannot  find  symbol  INVALID_SOURCE	19	None	replace
189	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  label,  MISSING_SOURCE),  unexpectedException);  [CE]  cannot  find  symbol  label  [FE]                                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  label,  MISSING_SOURCE),  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  label,  MISSING_SOURCE),  unexpectedException);	  Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE),    unexpectedException);    	non-compiled	[CE]  cannot  find  symbol  label	19	None	replace
190	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message,  unknownException);  [CE]  ')'  expected  [FE]                                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message,  unknownException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message,  unknownException);	  Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE),    unexpectedException);    	non-compiled	[CE]  ')'  expected	19	None	replace
191	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStatementException( " ");  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw  new  IllegalStatementException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw  new  IllegalStatementException( " ");	  throw    new    IllegalStatementException(   "   ");    	non-compiled	[CE]  <identifier>  expected	71	None	replace
192	[BUG]  [BUGGY]  new  IllegalStatementException( " ");  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  new  IllegalStatementException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	new  IllegalStatementException( " ");	  throw    new    IllegalStatementException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
193	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStatementException( " ".equals(sourceName));  [CE]  <identifier>  expected  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw  new  IllegalStatementException( " ".equals(sourceName));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw  new  IllegalStatementException( " ".equals(sourceName));	  throw    new    IllegalStatementException(   "   ");    	non-compiled	[CE]  <identifier>  expected	71	None	replace
194	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStatementException( " ".equals(inputId));  [CE]  <identifier>  expected  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw  new  IllegalStatementException( " ".equals(inputId));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw  new  IllegalStatementException( " ".equals(inputId));	  throw    new    IllegalStatementException(   "   ");    	non-compiled	[CE]  <identifier>  expected	71	None	replace
195	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStatementException( " ",  unexpectedException);  [CE]  <identifier>  expected  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw  new  IllegalStatementException( " ",  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw  new  IllegalStatementException( " ",  unexpectedException);	  throw    new    IllegalStatementException(   "   ");    	non-compiled	[CE]  <identifier>  expected	71	None	replace
196	[BUG]  [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " ".equals(inputId));  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " ".equals(inputId));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cause  =  new  IllegalArgumentException( " ".equals(inputId));	  throw    new    IllegalArgumentException(       "       ");    Throwable    cause    =    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)	31	None	replace
197	[BUG]  [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " ".equals(inputId)?  null  :  inputId);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(InputId)  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " ".equals(inputId)?  null  :  inputId);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cause  =  new  IllegalArgumentException( " ".equals(inputId)?  null  :  inputId);	  throw    new    IllegalArgumentException(       "       ");    Throwable    cause    =    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(InputId)	31	None	replace
198	[BUG]  [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " ".equals(sourceName));  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " ".equals(sourceName));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cause  =  new  IllegalArgumentException( " ".equals(sourceName));	  throw    new    IllegalArgumentException(       "       ");    Throwable    cause    =    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)	31	None	replace
199	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message,  inputId));  [CE]  cannot  find  symbol  message  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message,  inputId));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message,  inputId));	  Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE,    inputId));    	non-compiled	[CE]  cannot  find  symbol  message	101	None	replace
200	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  label,  inputId));  [CE]  cannot  find  symbol  label  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  label,  inputId));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  label,  inputId));	  Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE,    inputId));    	non-compiled	[CE]  cannot  find  symbol  label	101	None	replace
201	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  message,  MISSING_SOURCE,  inputId));  [CE]  cannot  find  symbol  message  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  message,  MISSING_SOURCE,  inputId));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  message,  MISSING_SOURCE,  inputId));	  Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE,    inputId));    	non-compiled	[CE]  cannot  find  symbol  message	101	None	replace
202	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  INVALID_SOURCE,  inputId));  [CE]  cannot  find  symbol  INVALID_SOURCE  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  INVALID_SOURCE,  inputId));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  INVALID_SOURCE,  inputId));	  Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE,    inputId));    	non-compiled	[CE]  cannot  find  symbol  INVALID_SOURCE	101	None	replace
203	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  label));  [CE]  cannot  find  symbol  label  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  label));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  label));	          Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE,    message));    	non-compiled	[CE]  cannot  find  symbol  label	107	None	replace
204	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  name));  [CE]  cannot  find  symbol  name  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  name));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  name));	          Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE,    message));    	non-compiled	[CE]  cannot  find  symbol  name	107	None	replace
205	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  UNKNOWN_SOURCE,  label));  [CE]  cannot  find  symbol  UNKNOWN_SOURCE  [FE]                              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  UNKNOWN_SOURCE,  label));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  UNKNOWN_SOURCE,  label));	          Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE,    message));    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_SOURCE	107	None	replace
206	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  INVALID_SOURCE,  message));  [CE]  cannot  find  symbol  INVALID_SOURCE  [FE]                                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  INVALID_SOURCE,  message));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  INVALID_SOURCE,  message));	          Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE,    message));    	non-compiled	[CE]  cannot  find  symbol  INVALID_SOURCE	107	None	replace
207	[BUG]  [BUGGY]  JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message));  [CE]  ';'  expected  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message));	  throw    new    UnsupportedOperationException(       "       ");    JSError.make(sourceName,    curNode,    MISSING_SOURCE,    inputId));    	non-compiled	[CE]  ';'  expected	126	None	replace
208	[BUG]  [BUGGY]  JSError.make(sourceName,  curNode,  INVALID_SOURCE,  message));  [CE]  ';'  expected  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  JSError.make(sourceName,  curNode,  INVALID_SOURCE,  message));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	JSError.make(sourceName,  curNode,  INVALID_SOURCE,  message));	  throw    new    UnsupportedOperationException(       "       ");    JSError.make(sourceName,    curNode,    MISSING_SOURCE,    inputId));    	non-compiled	[CE]  ';'  expected	126	None	replace
209	[BUG]  [BUGGY]  Throwables.make(sourceName,  curNode,  MISSING_SOURCE,  unexpectedException));  [CE]  ';'  expected  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.make(sourceName,  curNode,  MISSING_SOURCE,  unexpectedException));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.make(sourceName,  curNode,  MISSING_SOURCE,  unexpectedException));	  throw    new    UnsupportedOperationException(       "       ");    JSError.make(sourceName,    curNode,    MISSING_SOURCE,    inputId));    	non-compiled	[CE]  ';'  expected	126	None	replace
210	[BUG]  [BUGGY]  Throwables.make(sourceName,  curNode,  MISSING_SOURCE,  message,  unexpectedException));  [CE]  ';'  expected  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.make(sourceName,  curNode,  MISSING_SOURCE,  message,  unexpectedException));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.make(sourceName,  curNode,  MISSING_SOURCE,  message,  unexpectedException));	  throw    new    UnsupportedOperationException(       "       ");    JSError.make(sourceName,    curNode,    MISSING_SOURCE,    inputId));    	non-compiled	[CE]  ';'  expected	126	None	replace
211	[BUG]  [BUGGY]  UnsupportedOperationException(sourceName,  sourceName);  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  UnsupportedOperationException(sourceName,  sourceName);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	UnsupportedOperationException(sourceName,  sourceName);	  UnsupportedOperationException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
212	[BUG]  [BUGGY]  UnsupportedOperationException(sourceName,  null);  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  UnsupportedOperationException(sourceName,  null);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	UnsupportedOperationException(sourceName,  null);	  UnsupportedOperationException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
213	[BUG]  [BUGGY]  UnsupportedOperationException( " "));  [CE]  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  UnsupportedOperationException( " "));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	UnsupportedOperationException( " "));	  UnsupportedOperationException(   "   ");    	non-compiled	[CE]  	78	None	replace
214	[BUG]  [BUGGY]  UnsupportedOperationException(sourceName,   " ");  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  UnsupportedOperationException(sourceName,   " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	UnsupportedOperationException(sourceName,   " ");	  UnsupportedOperationException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
215	[BUG]  [BUGGY]  UnsupportedOperationException(sourceName,  unexpectedException);  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  UnsupportedOperationException(sourceName,  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	UnsupportedOperationException(sourceName,  unexpectedException);	  UnsupportedOperationException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
216	[BUG]  [BUGGY]  UnsupportedOperationException(null);  [CE]  cannot  find  symbol  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  UnsupportedOperationException(null);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	UnsupportedOperationException(null);	  UnsupportedOperationException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
217	[BUG]  [BUGGY]  handleMissingSOURCE(null);  [CE]  cannot  find  symbol  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSOURCE(null);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(null);	  handleMissingSOURCE(missingException);    	non-compiled	[CE]  cannot  find  symbol	69	None	replace
218	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  INVALID_SOURCE,  MISSING_SOURCE));  [CE]  cannot  find  symbol  INVALID_SOURCE  [FE]                              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  INVALID_SOURCE,  MISSING_SOURCE));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  INVALID_SOURCE,  MISSING_SOURCE));	          Context.report(JSError.make(sourceName,    curNode,    INVALID_SOURCE));    	non-compiled	[CE]  cannot  find  symbol  INVALID_SOURCE	14	None	replace
219	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(sourceName));  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(sourceName));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw  new  IllegalArgumentException( " ".equals(sourceName));	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	44	None	replace
220	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ",  unexpectedException);  [CE]  <identifier>  expected  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ",  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw  new  IllegalArgumentException( " ",  unexpectedException);	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	44	None	replace
221	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(inputId));  [CE]  <identifier>  expected  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(inputId));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw  new  IllegalArgumentException( " ".equals(inputId));	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	44	None	replace
222	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "),  unexpectedException);  [CE]  <identifier>  expected  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "),  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw  new  IllegalArgumentException( " "),  unexpectedException);	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	44	None	replace
223	[BUG]  [BUGGY]  callback.printStackTrace(unexpectedException);  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  callback.printStackTrace(unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	callback.printStackTrace(unexpectedException);	  callback.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
224	[BUG]  [BUGGY]  callback.printStackTrace(System.err);  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  callback.printStackTrace(System.err);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	callback.printStackTrace(System.err);	  callback.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
225	[BUG]  [BUGGY]  callback.printStackTrace(unknownException);  [CE]  cannot  find  symbol  unknownException  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  callback.printStackTrace(unknownException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	callback.printStackTrace(unknownException);	  callback.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  unknownException	82	None	replace
226	[BUG]  [BUGGY]  traverseMissingScopeException(root,  sourceName);  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  traverseMissingScopeException(root,  sourceName);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	traverseMissingScopeException(root,  sourceName);	  traverseMissingScopeException(root,    unexpectedException);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
227	[BUG]  [BUGGY]  traverseMissingScopeException(root,  sourceName,  unexpectedException);  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  traverseMissingScopeException(root,  sourceName,  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	traverseMissingScopeException(root,  sourceName,  unexpectedException);	  traverseMissingScopeException(root,    unexpectedException);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
228	[BUG]  [BUGGY]  traverseMissingScopeException(root,  unexpectedException,  scopeCreator);  [CE]  cannot  find  symbol  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  traverseMissingScopeException(root,  unexpectedException,  scopeCreator);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	traverseMissingScopeException(root,  unexpectedException,  scopeCreator);	  traverseMissingScopeException(root,    unexpectedException);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
229	[BUG]  [BUGGY]  traverseMissingScopeException(root,  cb,  unexpectedException);  [CE]  cannot  find  symbol  cb  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  traverseMissingScopeException(root,  cb,  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	traverseMissingScopeException(root,  cb,  unexpectedException);	  traverseMissingScopeException(root,    unexpectedException);    	non-compiled	[CE]  cannot  find  symbol  cb	88	None	replace
230	[BUG]  [BUGGY]  traverseMissingScopeException(root,  nodeTypes);  [CE]  cannot  find  symbol  nodeTypes  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  traverseMissingScopeException(root,  nodeTypes);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	traverseMissingScopeException(root,  nodeTypes);	  traverseMissingScopeException(root,    unexpectedException);    	non-compiled	[CE]  cannot  find  symbol  nodeTypes	88	None	replace
231	[BUG]  [BUGGY]  traverseMissingScopeException(root,  scopeCreator);  [CE]  cannot  find  symbol  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  traverseMissingScopeException(root,  scopeCreator);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	traverseMissingScopeException(root,  scopeCreator);	  traverseMissingScopeException(root,    unexpectedException);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
232	[BUG]  [BUGGY]  traverseMissingScopeException(root,  cfgs,  unexpectedException);  [CE]  cannot  find  symbol  [FE]                              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  traverseMissingScopeException(root,  cfgs,  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	traverseMissingScopeException(root,  cfgs,  unexpectedException);	  traverseMissingScopeException(root,    unexpectedException);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
233	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  message,  MISSING_SOURCE));  [CE]  cannot  find  symbol  message  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  message,  MISSING_SOURCE));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  message,  MISSING_SOURCE));	          Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE));    	non-compiled	[CE]  cannot  find  symbol  message	12	None	replace
234	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  label,  MISSING_SOURCE));  [CE]  cannot  find  symbol  label  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  label,  MISSING_SOURCE));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  label,  MISSING_SOURCE));	          Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE));    	non-compiled	[CE]  cannot  find  symbol  label	12	None	replace
235	[BUG]  [BUGGY]  handleMissingSOURCE(unexpectedException,  n);  [CE]  cannot  find  symbol  n  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSOURCE(unexpectedException,  n);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(unexpectedException,  n);	  handleMissingSOURCE(unexpectedException,    cb);    	non-compiled	[CE]  cannot  find  symbol  n	68	None	replace
236	[BUG]  [BUGGY]  handleMissingSOURCE(unexpectedException,  parent);  [CE]  cannot  find  symbol  parent  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSOURCE(unexpectedException,  parent);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(unexpectedException,  parent);	  handleMissingSOURCE(unexpectedException,    cb);    	non-compiled	[CE]  cannot  find  symbol  parent	68	None	replace
237	[BUG]  [BUGGY]  handleMissingScopeException(root,  null,  unexpectedException);  [CE]  cannot  find  symbol  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingScopeException(root,  null,  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(root,  null,  unexpectedException);	  handleMissingScopeException(root,    null);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
238	[BUG]  [BUGGY]  handleMissingScopeException(root,  sourceName,  null);  [CE]  cannot  find  symbol  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingScopeException(root,  sourceName,  null);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(root,  sourceName,  null);	  handleMissingScopeException(root,    null);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
239	[BUG]  [BUGGY]  handleMissingScopeException(root,  null,  sourceName);  [CE]  cannot  find  symbol  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingScopeException(root,  null,  sourceName);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(root,  null,  sourceName);	  handleMissingScopeException(root,    null);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
240	[BUG]  [BUGGY]  handleMissingScopeException(root,  cfgs);  [CE]  cannot  find  symbol  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingScopeException(root,  cfgs);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(root,  cfgs);	  handleMissingScopeException(root,    null);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
241	[BUG]  [BUGGY]  timeout  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  throw  new  IllegalStateException( " ",  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	add	throw  new  IllegalStateException( " ",  unexpectedException);	  throw    new    IllegalStateException(   "   "),    unexpectedException;    	compilable	timeout	112	1	replace
242	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ",  unexpectedException);  timeout  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  throw  new  IllegalStateException( " ",  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw  new  IllegalStateException( " ",  unexpectedException);	  throw    new    IllegalStateException(   "   "),    unexpectedException;    	compilable	timeout	112	1	replace
243	[BUG]  [BUGGY]  timeout  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  throw  new  IllegalStateException( " "  +  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	add	throw  new  IllegalStateException( " "  +  unexpectedException);	  throw    new    IllegalStateException(   "   "),    unexpectedException;    	compilable	timeout	112	1	replace
244	[BUG]  [BUGGY]  throw  new  IllegalStateException( " "  +  unexpectedException);  timeout  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  throw  new  IllegalStateException( " "  +  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw  new  IllegalStateException( " "  +  unexpectedException);	  throw    new    IllegalStateException(   "   "),    unexpectedException;    	compilable	timeout	112	1	replace
245	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStatementException( " "));  [CE]  <identifier>  expected  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  IllegalStatementException( " "));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  IllegalStatementException( " "));	  Throwables.throw(new    IllegalArgumentException(   "   "));    	non-compiled	[CE]  <identifier>  expected	70	None	replace
246	[BUG]  [BUGGY]  Throwables.throw(new  IllegalArgumentException( "));  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  IllegalArgumentException( "));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  IllegalArgumentException( "));	  Throwables.throw(new    IllegalArgumentException(   "   "));    	non-compiled	[CE]  <identifier>  expected	70	None	replace
247	[BUG]  [BUGGY]  Throwables.throw(new  IllegalArgumentException( "Unexpected  source  name "));  [CE]  <identifier>  expected  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  IllegalArgumentException( "Unexpected  source  name "));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  IllegalArgumentException( "Unexpected  source  name "));	  Throwables.throw(new    IllegalArgumentException(   "   "));    	non-compiled	[CE]  <identifier>  expected	70	None	replace
248	[BUG]  [BUGGY]  Throwables.throw(new  IllegalArgumentException( "Unexpected  source  name: "));  [CE]  <identifier>  expected  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  IllegalArgumentException( "Unexpected  source  name: "));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  IllegalArgumentException( "Unexpected  source  name: "));	  Throwables.throw(new    IllegalArgumentException(   "   "));    	non-compiled	[CE]  <identifier>  expected	70	None	replace
249	[BUG]  [BUGGY]  Context.report(null,  MISSING_SOURCE,  sourceName);  [CE]  cannot  find  symbol  Context  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(null,  MISSING_SOURCE,  sourceName);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(null,  MISSING_SOURCE,  sourceName);	  Context.report(null,    MISSING_SOURCE);    	non-compiled	[CE]  cannot  find  symbol  Context	104	None	replace
250	[BUG]  [BUGGY]  Context.report(null,  MISSING_SOURCE,  message);  [CE]  cannot  find  symbol  message  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(null,  MISSING_SOURCE,  message);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(null,  MISSING_SOURCE,  message);	  Context.report(null,    MISSING_SOURCE);    	non-compiled	[CE]  cannot  find  symbol  message	104	None	replace
251	[BUG]  [BUGGY]  Context.report(null,  MISSING_SOURCE,  inputId);  [CE]  cannot  find  symbol  Context  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(null,  MISSING_SOURCE,  inputId);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(null,  MISSING_SOURCE,  inputId);	  Context.report(null,    MISSING_SOURCE);    	non-compiled	[CE]  cannot  find  symbol  Context	104	None	replace
252	[BUG]  [BUGGY]  Context.report(null,  MISSING_SOURCE,  label);  [CE]  cannot  find  symbol  label  [FE]                              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(null,  MISSING_SOURCE,  label);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(null,  MISSING_SOURCE,  label);	  Context.report(null,    MISSING_SOURCE);    	non-compiled	[CE]  cannot  find  symbol  label	104	None	replace
253	[BUG]  [BUGGY]  Context.report(null,  UNKNOWN_SOURCE);  [CE]  cannot  find  symbol  UNKNOWN_SOURCE  [FE]                                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(null,  UNKNOWN_SOURCE);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(null,  UNKNOWN_SOURCE);	  Context.report(null,    MISSING_SOURCE);    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_SOURCE	104	None	replace
254	[BUG]  [BUGGY]  Context.report(null,  UNKNOWN_SOURCE,  MISSING_SOURCE);  [CE]  cannot  find  symbol  UNKNOWN_SOURCE  [FE]                                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(null,  UNKNOWN_SOURCE,  MISSING_SOURCE);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(null,  UNKNOWN_SOURCE,  MISSING_SOURCE);	  Context.report(null,    MISSING_SOURCE);    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_SOURCE	104	None	replace
255	[BUG]  [BUGGY]  handleMissingStatement(false);  [CE]  cannot  find  symbol  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(false);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(false);	  handleMissingStatement(unknownException);    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
256	[BUG]  [BUGGY]  handleMissingStatement(cb);  [CE]  cannot  find  symbol  cb  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(cb);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(cb);	  handleMissingStatement(unknownException);    	non-compiled	[CE]  cannot  find  symbol  cb	38	None	replace
257	[BUG]  [BUGGY]  handleMissingStatement(e,  unexpectedException);  [CE]  cannot  find  symbol  e  [FE]                              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(e,  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(e,  unexpectedException);	  handleMissingStatement(unknownException);    	non-compiled	[CE]  cannot  find  symbol  e	38	None	replace
258	[BUG]  [BUGGY]  handleMissingStatement(missingException);  [CE]  cannot  find  symbol  missingException  [FE]                                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(missingException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(missingException);	  handleMissingStatement(unknownException);    	non-compiled	[CE]  cannot  find  symbol  missingException	38	None	replace
259	[BUG]  [BUGGY]  handleMissingStatement(exception);  [CE]  cannot  find  symbol  exception  [FE]                                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(exception);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(exception);	  handleMissingStatement(unknownException);    	non-compiled	[CE]  cannot  find  symbol  exception	38	None	replace
260	[BUG]  [BUGGY]  catch(OperationCanceledException  t)  {  [CE]  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  catch(OperationCanceledException  t)  {  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	catch(OperationCanceledException  t)  {	  catch(RuntimeException    t)    {    	non-compiled	[CE]  	61	None	replace
261	[BUG]  [BUGGY]  Catch(Throwable  t)  {  [CE]  ')'  expected  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Catch(Throwable  t)  {  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Catch(Throwable  t)  {	  catch(RuntimeException    t)    {    	non-compiled	[CE]  ')'  expected	61	None	replace
262	[BUG]  [BUGGY]  catch(NodeFormatException  t)  {  [CE]  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  catch(NodeFormatException  t)  {  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	catch(NodeFormatException  t)  {	  catch(RuntimeException    t)    {    	non-compiled	[CE]  	61	None	replace
263	[BUG]  [BUGGY]  traverseMissingScopeException(root,  null);  [CE]  cannot  find  symbol  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  traverseMissingScopeException(root,  null);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	traverseMissingScopeException(root,  null);	  traverseMissingScopeException(root);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
264	[BUG]  [BUGGY]  traverseMissingScopeException(root,  cb);  [CE]  cannot  find  symbol  cb  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  traverseMissingScopeException(root,  cb);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	traverseMissingScopeException(root,  cb);	  traverseMissingScopeException(root);    	non-compiled	[CE]  cannot  find  symbol  cb	8	None	replace
265	[BUG]  [BUGGY]  traverseMissingScopeException(curNode);  [CE]  cannot  find  symbol  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  traverseMissingScopeException(curNode);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	traverseMissingScopeException(curNode);	  traverseMissingScopeException(root);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
266	[BUG]  [BUGGY]  traverseMissingScopeException(sourceName);  [CE]  cannot  find  symbol  [FE]                              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  traverseMissingScopeException(sourceName);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	traverseMissingScopeException(sourceName);	  traverseMissingScopeException(root);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
267	[BUG]  [BUGGY]  traverseMissingScopeException(sourceName,  root);  [CE]  cannot  find  symbol  [FE]                                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  traverseMissingScopeException(sourceName,  root);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	traverseMissingScopeException(sourceName,  root);	  traverseMissingScopeException(root);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
268	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException( " "  +  unexpectedException));  [CE]  <identifier>  expected  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  IllegalStateException( " "  +  unexpectedException));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  IllegalStateException( " "  +  unexpectedException));	  Throwables.throw(new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	51	None	replace
269	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException( " "  +  unexpectedException.getMessage()));  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  IllegalStateException( " "  +  unexpectedException.getMessage()));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  IllegalStateException( " "  +  unexpectedException.getMessage()));	  Throwables.throw(new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	51	None	replace
270	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException( " ", " "));  [CE]  <identifier>  expected  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  IllegalStateException( " ", " "));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  IllegalStateException( " ", " "));	  Throwables.throw(new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	51	None	replace
271	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException( " "  +  sourceName));  [CE]  <identifier>  expected  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  IllegalStateException( " "  +  sourceName));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  IllegalStateException( " "  +  sourceName));	  Throwables.throw(new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	51	None	replace
272	[BUG]  [BUGGY]  catch(Throwable  ex)  {  [CE]  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  catch(Throwable  ex)  {  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	catch(Throwable  ex)  {	  catch(Exception    ex)    {    	non-compiled	[CE]  	123	None	replace
273	[BUG]  [BUGGY]  catch(IOException  ex)  {  [CE]  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  catch(IOException  ex)  {  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	catch(IOException  ex)  {	  catch(Exception    ex)    {    	non-compiled	[CE]  	123	None	replace
274	[BUG]  [BUGGY]  catch(RuntimeException  ex)  {  [CE]  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  catch(RuntimeException  ex)  {  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	catch(RuntimeException  ex)  {	  catch(Exception    ex)    {    	non-compiled	[CE]  	123	None	replace
275	[BUG]  [BUGGY]  traverseMissingStatement(n);  [CE]  cannot  find  symbol  n  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  traverseMissingStatement(n);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	traverseMissingStatement(n);	  traverseMissingStatement();    	non-compiled	[CE]  cannot  find  symbol  n	108	None	replace
276	[BUG]  [BUGGY]  traverseMissingStatement(null);  [CE]  cannot  find  symbol  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  traverseMissingStatement(null);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	traverseMissingStatement(null);	  traverseMissingStatement();    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
277	[BUG]  [BUGGY]  traverseMissingStatement(unexpectedException);  [CE]  cannot  find  symbol  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  traverseMissingStatement(unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	traverseMissingStatement(unexpectedException);	  traverseMissingStatement();    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
278	[BUG]  [BUGGY]  traverseMissingStatement(false);  [CE]  cannot  find  symbol  [FE]                              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  traverseMissingStatement(false);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	traverseMissingStatement(false);	  traverseMissingStatement();    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
279	[BUG]  [BUGGY]  traverseMissingStatement(unknownException);  [CE]  cannot  find  symbol  unknownException  [FE]                                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  traverseMissingStatement(unknownException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	traverseMissingStatement(unknownException);	  traverseMissingStatement();    	non-compiled	[CE]  cannot  find  symbol  unknownException	108	None	replace
280	[BUG]  [BUGGY]  traverseMissingStatement(sourceName);  [CE]  cannot  find  symbol  [FE]                                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  traverseMissingStatement(sourceName);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	traverseMissingStatement(sourceName);	  traverseMissingStatement();    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
281	[BUG]  [BUGGY]  Throwables.throw  new  RuntimeException( " ",  unexpectedException);  [CE]  <identifier>  expected  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw  new  RuntimeException( " ",  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw  new  RuntimeException( " ",  unexpectedException);	  Throwables.throw    new    RuntimeException(   "   ");    	non-compiled	[CE]  <identifier>  expected	45	None	replace
282	[BUG]  [BUGGY]  Throwables.throw  new  RuntimeException( " "  +  unexpectedException);  [CE]  <identifier>  expected  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw  new  RuntimeException( " "  +  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw  new  RuntimeException( " "  +  unexpectedException);	  Throwables.throw    new    RuntimeException(   "   ");    	non-compiled	[CE]  <identifier>  expected	45	None	replace
283	[BUG]  [BUGGY]  Throwables.throw  new  RuntimeException( "Unexpected  source  name: "  +  inputId);  [CE]  <identifier>  expected  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw  new  RuntimeException( "Unexpected  source  name: "  +  inputId);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw  new  RuntimeException( "Unexpected  source  name: "  +  inputId);	  Throwables.throw    new    RuntimeException(   "   ");    	non-compiled	[CE]  <identifier>  expected	45	None	replace
284	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException( "));  [CE]  <identifier>  expected  [FE]            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  IllegalStateException( "));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  IllegalStateException( "));	  Throwables.throw(new    IllegalStateException(   "   "));    	non-compiled	[CE]  <identifier>  expected	50	None	replace
285	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException( "Unexpected  source  name: "  +  sourceName));  [CE]  <identifier>  expected  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  IllegalStateException( "Unexpected  source  name: "  +  sourceName));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  IllegalStateException( "Unexpected  source  name: "  +  sourceName));	  Throwables.throw(new    IllegalStateException(   "   "));    	non-compiled	[CE]  <identifier>  expected	50	None	replace
286	[BUG]  [BUGGY]  Throwables.throw(new  UnsupportedOperationException( " "));  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  UnsupportedOperationException( " "));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  UnsupportedOperationException( " "));	  Throwables.throw(new    IllegalStateException(   "   "));    	non-compiled	[CE]  <identifier>  expected	50	None	replace
287	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException( "Unexpected  source  name: "));  [CE]  <identifier>  expected  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  IllegalStateException( "Unexpected  source  name: "));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  IllegalStateException( "Unexpected  source  name: "));	  Throwables.throw(new    IllegalStateException(   "   "));    	non-compiled	[CE]  <identifier>  expected	50	None	replace
288	[BUG]  [BUGGY]  handleMissingSOURCE(unexpectedException,  sourceName,  scopeCreator);  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSOURCE(unexpectedException,  sourceName,  scopeCreator);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(unexpectedException,  sourceName,  scopeCreator);	  handleMissingSOURCE(unexpectedException,    sourceName);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
289	[BUG]  [BUGGY]  handleMissingSOURCE(unexpectedException,  sourceName,  cb);  [CE]  cannot  find  symbol  cb  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSOURCE(unexpectedException,  sourceName,  cb);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(unexpectedException,  sourceName,  cb);	  handleMissingSOURCE(unexpectedException,    sourceName);    	non-compiled	[CE]  cannot  find  symbol  cb	63	None	replace
290	[BUG]  [BUGGY]  handleMissingSOURCE(unexpectedException,  sourceName,  curNode);  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSOURCE(unexpectedException,  sourceName,  curNode);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(unexpectedException,  sourceName,  curNode);	  handleMissingSOURCE(unexpectedException,    sourceName);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
291	[BUG]  [BUGGY]  handleMissingSOURCE(unexpectedException,  sourceName,  message);  [CE]  cannot  find  symbol  message  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSOURCE(unexpectedException,  sourceName,  message);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(unexpectedException,  sourceName,  message);	  handleMissingSOURCE(unexpectedException,    sourceName);    	non-compiled	[CE]  cannot  find  symbol  message	63	None	replace
292	[BUG]  [BUGGY]  handleMissingSOURCE(unexpectedException,  sourceName,  scope);  [CE]  cannot  find  symbol  scope  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSOURCE(unexpectedException,  sourceName,  scope);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(unexpectedException,  sourceName,  scope);	  handleMissingSOURCE(unexpectedException,    sourceName);    	non-compiled	[CE]  cannot  find  symbol  scope	63	None	replace
293	[BUG]  [BUGGY]  Context.report(null,  MISSING_SOURCE,  sourceName,   "Unexpected  exception ");  [CE]  cannot  find  symbol  Context  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(null,  MISSING_SOURCE,  sourceName,   "Unexpected  exception ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(null,  MISSING_SOURCE,  sourceName,   "Unexpected  exception ");	  Context.report(null,    MISSING_SOURCE,   "Unexpected    exception   ");    	non-compiled	[CE]  cannot  find  symbol  Context	103	None	replace
294	[BUG]  [BUGGY]  Context.report(null,  INVALID_SOURCE, "Unexpected  exception ");  [CE]  cannot  find  symbol  INVALID_SOURCE  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(null,  INVALID_SOURCE, "Unexpected  exception ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(null,  INVALID_SOURCE, "Unexpected  exception ");	  Context.report(null,    MISSING_SOURCE,   "Unexpected    exception   ");    	non-compiled	[CE]  cannot  find  symbol  INVALID_SOURCE	103	None	replace
295	[BUG]  [BUGGY]  Context.report(null,  MISSING_SOURCE,  sourceName,  null);  [CE]  cannot  find  symbol  Context  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(null,  MISSING_SOURCE,  sourceName,  null);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(null,  MISSING_SOURCE,  sourceName,  null);	  Context.report(null,    MISSING_SOURCE,   "Unexpected    exception   ");    	non-compiled	[CE]  cannot  find  symbol  Context	103	None	replace
296	[BUG]  [BUGGY]  Context.report(null,  UNKNOWN_SOURCE,  sourceName,   "Unexpected  exception ");  [CE]  cannot  find  symbol  UNKNOWN_SOURCE  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(null,  UNKNOWN_SOURCE,  sourceName,   "Unexpected  exception ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(null,  UNKNOWN_SOURCE,  sourceName,   "Unexpected  exception ");	  Context.report(null,    MISSING_SOURCE,   "Unexpected    exception   ");    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_SOURCE	103	None	replace
297	[BUG]  [BUGGY]  Throwable  cfgs  =  cfgs.unexpectedException( " ");  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cfgs  =  cfgs.unexpectedException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cfgs  =  cfgs.unexpectedException( " ");	  throw    cfgs.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
298	[BUG]  [BUGGY]  cfgs.unexpectedException( " ");  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  cfgs.unexpectedException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	cfgs.unexpectedException( " ");	  throw    cfgs.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
299	[BUG]  [BUGGY]  catch(Throwable  nfe)  {  [CE]  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  catch(Throwable  nfe)  {  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	catch(Throwable  nfe)  {	  catch(NodeNotFoundException    nfe)    {    	non-compiled	[CE]  	60	None	replace
300	[BUG]  [BUGGY]  catch(Exception  nfe)  {  [CE]  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  catch(Exception  nfe)  {  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	catch(Exception  nfe)  {	  catch(NodeNotFoundException    nfe)    {    	non-compiled	[CE]  	60	None	replace
301	[BUG]  [BUGGY]  catch(IOException  nfe)  {  [CE]  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  catch(IOException  nfe)  {  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	catch(IOException  nfe)  {	  catch(NodeNotFoundException    nfe)    {    	non-compiled	[CE]  	60	None	replace
302	[BUG]  [BUGGY]  catch(Throwable  nFe)  {  [CE]  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  catch(Throwable  nFe)  {  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	catch(Throwable  nFe)  {	  catch(NodeNotFoundException    nfe)    {    	non-compiled	[CE]  	60	None	replace
303	[BUG]  [BUGGY]  handleMissingSourCE(unexpectedException,  sourceName,  scopeCreator);  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSourCE(unexpectedException,  sourceName,  scopeCreator);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSourCE(unexpectedException,  sourceName,  scopeCreator);	  handleMissingSourCE(unexpectedException,    sourceName);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
304	[BUG]  [BUGGY]  handleMissingSourCE(unexpectedException,  sourceName,  cb);  [CE]  cannot  find  symbol  cb  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSourCE(unexpectedException,  sourceName,  cb);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSourCE(unexpectedException,  sourceName,  cb);	  handleMissingSourCE(unexpectedException,    sourceName);    	non-compiled	[CE]  cannot  find  symbol  cb	105	None	replace
305	[BUG]  [BUGGY]  handleMissingSourCE(unexpectedException,  curNode);  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSourCE(unexpectedException,  curNode);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSourCE(unexpectedException,  curNode);	  handleMissingSourCE(unexpectedException,    sourceName);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
306	[BUG]  [BUGGY]  handleMissingSourCE(unexpectedException,  sourceName,  curNode);  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSourCE(unexpectedException,  sourceName,  curNode);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSourCE(unexpectedException,  sourceName,  curNode);	  handleMissingSourCE(unexpectedException,    sourceName);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
307	[BUG]  [BUGGY]  handleMissingSourCE(unexpectedException,  root,  sourceName);  [CE]  cannot  find  symbol  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSourCE(unexpectedException,  root,  sourceName);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSourCE(unexpectedException,  root,  sourceName);	  handleMissingSourCE(unexpectedException,    sourceName);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
308	[BUG]  [BUGGY]  handleMissingSourCE(unexpectedException,  curNode,  sourceName);  [CE]  cannot  find  symbol  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSourCE(unexpectedException,  curNode,  sourceName);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSourCE(unexpectedException,  curNode,  sourceName);	  handleMissingSourCE(unexpectedException,    sourceName);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
309	[BUG]  [BUGGY]  handleMissingSourCE(sourceName,  unexpectedException);  [CE]  cannot  find  symbol  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSourCE(sourceName,  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSourCE(sourceName,  unexpectedException);	  handleMissingSourCE(unexpectedException,    sourceName);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
310	[BUG]  [BUGGY]  handleMissingSOURCE(unexpectedException,  curNode,  sourceName);  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSOURCE(unexpectedException,  curNode,  sourceName);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(unexpectedException,  curNode,  sourceName);	  handleMissingSOURCE(unexpectedException,    curNode);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
311	[BUG]  [BUGGY]  handleMissingSOURCE(unexpectedException,  curNode,  scopeCreator);  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSOURCE(unexpectedException,  curNode,  scopeCreator);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(unexpectedException,  curNode,  scopeCreator);	  handleMissingSOURCE(unexpectedException,    curNode);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
312	[BUG]  [BUGGY]  handleMissingSOURCE(unexpectedException,  curNode,  inputId);  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSOURCE(unexpectedException,  curNode,  inputId);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(unexpectedException,  curNode,  inputId);	  handleMissingSOURCE(unexpectedException,    curNode);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
313	[BUG]  [BUGGY]  handleMissingSOURCE(unexpectedException,  curNode,  parent);  [CE]  cannot  find  symbol  parent  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSOURCE(unexpectedException,  curNode,  parent);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(unexpectedException,  curNode,  parent);	  handleMissingSOURCE(unexpectedException,    curNode);    	non-compiled	[CE]  cannot  find  symbol  parent	64	None	replace
314	[BUG]  [BUGGY]  handleMissingSOURCE(sourceName,  curNode);  [CE]  cannot  find  symbol  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSOURCE(sourceName,  curNode);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(sourceName,  curNode);	  handleMissingSOURCE(unexpectedException,    curNode);    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
315	[BUG]  [BUGGY]  handleMissingSOURCE(unexpectedException,  curNode,  message);  [CE]  cannot  find  symbol  message  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSOURCE(unexpectedException,  curNode,  message);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(unexpectedException,  curNode,  message);	  handleMissingSOURCE(unexpectedException,    curNode);    	non-compiled	[CE]  cannot  find  symbol  message	64	None	replace
316	[BUG]  [BUGGY]  UnsupportedOperationException.printStackTrace();  [CE]  non-static  method  printStackTrace()  cannot  be  referenced  from  a  static  context  [FE]            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  UnsupportedOperationException.printStackTrace();  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	UnsupportedOperationException.printStackTrace();	  throw    new    UnsupportedOperationException(   "   ");    unexpectedException.printStackTrace();    	non-compiled	[CE]  non-static  method  printStackTrace()  cannot  be  referenced  from  a  static  context	118	None	replace
317	[BUG]  [BUGGY]  UnsupportedOperationException.printStackTrace(unexpectedException);  [CE]  no  suitable  method  found  for  printStackTrace(Exception)  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  UnsupportedOperationException.printStackTrace(unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	UnsupportedOperationException.printStackTrace(unexpectedException);	  throw    new    UnsupportedOperationException(   "   ");    unexpectedException.printStackTrace();    	non-compiled	[CE]  no  suitable  method  found  for  printStackTrace(Exception)	118	None	replace
318	[BUG]  [BUGGY]  UnsupportedOperationException.printStackTrace(unknownException);  [CE]  cannot  find  symbol  unknownException  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  UnsupportedOperationException.printStackTrace(unknownException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	UnsupportedOperationException.printStackTrace(unknownException);	  throw    new    UnsupportedOperationException(   "   ");    unexpectedException.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  unknownException	118	None	replace
319	[BUG]  [BUGGY]  UnsupportedOperationException.printStackTrace(outputId);  [CE]  cannot  find  symbol  outputId  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  UnsupportedOperationException.printStackTrace(outputId);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	UnsupportedOperationException.printStackTrace(outputId);	  throw    new    UnsupportedOperationException(   "   ");    unexpectedException.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  outputId	118	None	replace
320	[BUG]  [BUGGY]  scopeCreator.printStackTrace(null);  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  scopeCreator.printStackTrace(null);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scopeCreator.printStackTrace(null);	  scopecreator.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
321	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  unexpectedException));  [CE]  no  suitable  method  found  for  make(String,Node,String,Exception)  [FE]            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  unexpectedException));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  unexpectedException));	  throw    new    UnsupportedOperationException(       "       ");    JSError.make(sourceName,    curNode,    MISSING_SOURCE,    sourceName));    	non-compiled	[CE]  no  suitable  method  found  for  make(String,Node,String,Exception)	125	None	replace
322	[BUG]  [BUGGY]  JSError.make(sourceName,  curNode,  MISSING_SOURCE,  unexpectedException));  [CE]  ';'  expected  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  JSError.make(sourceName,  curNode,  MISSING_SOURCE,  unexpectedException));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	JSError.make(sourceName,  curNode,  MISSING_SOURCE,  unexpectedException));	  throw    new    UnsupportedOperationException(       "       ");    JSError.make(sourceName,    curNode,    MISSING_SOURCE,    sourceName));    	non-compiled	[CE]  ';'  expected	125	None	replace
323	[BUG]  [BUGGY]  scopeCallback.printStackTrace(unexpectedException);  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  scopeCallback.printStackTrace(unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scopeCallback.printStackTrace(unexpectedException);	  scopeCallback.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
324	[BUG]  [BUGGY]  scopeCallback.printStackTrace(unknownException);  [CE]  cannot  find  symbol  unknownException  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  scopeCallback.printStackTrace(unknownException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scopeCallback.printStackTrace(unknownException);	  scopeCallback.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  unknownException	22	None	replace
325	[BUG]  [BUGGY]  scopeCallback.printStackTrace(null);  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  scopeCallback.printStackTrace(null);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scopeCallback.printStackTrace(null);	  scopeCallback.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
326	[BUG]  [BUGGY]  scopeCallback.printStackTrace(outputId);  [CE]  cannot  find  symbol  outputId  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  scopeCallback.printStackTrace(outputId);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scopeCallback.printStackTrace(outputId);	  scopeCallback.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  outputId	22	None	replace
327	[BUG]  [BUGGY]  Throwable  t  =  new  IllegalArgumentException(   "   ");  Throwable  t  =  new  IllegalArgumentException( "   ");  [CE]  variable  t  is  already  defined  in  method  traverse(Node)  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  t  =  new  IllegalArgumentException(   "   ");  Throwable  t  =  new  IllegalArgumentException( "   ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable    t    =    new    IllegalArgumentException(   "   ");    Throwable  t  =  new  IllegalArgumentException( "   ");	  timeout    	non-compiled	[CE]  variable  t  is  already  defined  in  method  traverse(Node)	99	None	add
328	[BUG]  [BUGGY]  Throwable  t  =  new  IllegalArgumentException(   "   ");  Throwable  t  =  new  IllegalArgumentException( ".   ");  [CE]  variable  t  is  already  defined  in  method  traverse(Node)  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  t  =  new  IllegalArgumentException(   "   ");  Throwable  t  =  new  IllegalArgumentException( ".   ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable    t    =    new    IllegalArgumentException(   "   ");    Throwable  t  =  new  IllegalArgumentException( ".   ");	  timeout    	non-compiled	[CE]  variable  t  is  already  defined  in  method  traverse(Node)	99	None	add
329	[BUG]  [BUGGY]  Throwable  t  =  new  IllegalArgumentException(   "   ");  Throwable  t  =  new  IllegalArgumentException(. "   ");  [CE]  illegal  start  of  expression  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  t  =  new  IllegalArgumentException(   "   ");  Throwable  t  =  new  IllegalArgumentException(. "   ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable    t    =    new    IllegalArgumentException(   "   ");    Throwable  t  =  new  IllegalArgumentException(. "   ");	  timeout    	non-compiled	[CE]  illegal  start  of  expression	99	None	add
330	[BUG]  [BUGGY]  Throwable  t  =  new  IllegalArgumentException(   "   ");  Throwable  t  =  new  IllegalArgumentException( ",   ");  [CE]  variable  t  is  already  defined  in  method  traverse(Node)  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  t  =  new  IllegalArgumentException(   "   ");  Throwable  t  =  new  IllegalArgumentException( ",   ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable    t    =    new    IllegalArgumentException(   "   ");    Throwable  t  =  new  IllegalArgumentException( ",   ");	  timeout    	non-compiled	[CE]  variable  t  is  already  defined  in  method  traverse(Node)	99	None	add
331	[BUG]  [BUGGY]  Throwable  t  =  new  IllegalArgumentException(   "   ");  Throwable  t  =  new  IllegalArgumentException( " "));  [CE]  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  t  =  new  IllegalArgumentException(   "   ");  Throwable  t  =  new  IllegalArgumentException( " "));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable    t    =    new    IllegalArgumentException(   "   ");    Throwable  t  =  new  IllegalArgumentException( " "));	  timeout    	non-compiled	[CE]  	99	None	add
332	[BUG]  [BUGGY]  traverseMissingSOURCE(sourceName,  unexpectedException);  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  traverseMissingSOURCE(sourceName,  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	traverseMissingSOURCE(sourceName,  unexpectedException);	  traverseMissingSOURCE(unexpectedException);    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
333	[BUG]  [BUGGY]  traverseMissingSOURCE(unexpectedException,  curNode);  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  traverseMissingSOURCE(unexpectedException,  curNode);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	traverseMissingSOURCE(unexpectedException,  curNode);	  traverseMissingSOURCE(unexpectedException);    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
334	[BUG]  [BUGGY]  traverseMissingSOURCE(sourceName);  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  traverseMissingSOURCE(sourceName);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	traverseMissingSOURCE(sourceName);	  traverseMissingSOURCE(unexpectedException);    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
335	[BUG]  [BUGGY]  traverseMissingSOURCE(unexpectedException,  sourceName);  [CE]  cannot  find  symbol  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  traverseMissingSOURCE(unexpectedException,  sourceName);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	traverseMissingSOURCE(unexpectedException,  sourceName);	  traverseMissingSOURCE(unexpectedException);    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
336	[BUG]  [BUGGY]  traverseMissingSOURCE(inputId);  [CE]  cannot  find  symbol  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  traverseMissingSOURCE(inputId);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	traverseMissingSOURCE(inputId);	  traverseMissingSOURCE(unexpectedException);    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
337	[BUG]  [BUGGY]  traverseMissingSOURCE(unexpectedException,  root);  [CE]  cannot  find  symbol  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  traverseMissingSOURCE(unexpectedException,  root);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	traverseMissingSOURCE(unexpectedException,  root);	  traverseMissingSOURCE(unexpectedException);    	non-compiled	[CE]  cannot  find  symbol	106	None	replace
338	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  IllegalArgumentException( " "));  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,IllegalArgumentException)  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  IllegalArgumentException( " "));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	NodeTraversal.traverse(compiler,  root,  new  IllegalArgumentException( " "));	  throw    new    IllegalArgumentException(       "       ");    Throwables.throw    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,IllegalArgumentException)	30	None	replace
339	[BUG]  [BUGGY]  NodeUtil.throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  NodeUtil.throw  new  IllegalArgumentException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	NodeUtil.throw  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(       "       ");    Throwables.throw    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  <identifier>  expected	30	None	replace
340	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  Compiler());  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Compiler)  [FE]            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  Compiler());  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	NodeTraversal.traverse(compiler,  root,  new  Compiler());	  throw    new    UnsupportedOperationException(       "       ");    throw    new    UnsupportedOperationException(   ".       ");    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,Compiler)	96	None	replace
341	[BUG]  [BUGGY]  handleMissingStatement(root);  [CE]  cannot  find  symbol  [FE]                                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(root);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(root);	  handleMissingStatement(nodeTypes);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
342	[BUG]  [BUGGY]  handleMissingStatement(curNode);  [CE]  cannot  find  symbol  [FE]                                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(curNode);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(curNode);	  handleMissingStatement(nodeTypes);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
343	[BUG]  [BUGGY]  handleMissingStatement(sourceName);  [CE]  cannot  find  symbol  [FE]                                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(sourceName);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(sourceName);	  handleMissingStatement(nodeTypes);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
344	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  JSTypePruningCallback());  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  JSTypePruningCallback());  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	NodeTraversal.traverse(compiler,  root,  new  JSTypePruningCallback());	  throw    new    UnsupportedOperationException(       "       ");    throw    new    UnsupportedOperationException(   "       ");    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
345	[BUG]  [BUGGY]  catch(IOException  cb)  {  [CE]  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  catch(IOException  cb)  {  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	catch(IOException  cb)  {	  catch(IOException    t)    {    	non-compiled	[CE]  	58	None	replace
346	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  IllegalStateException( " "));  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,IllegalStateException)  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  IllegalStateException( " "));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	NodeTraversal.traverse(compiler,  root,  new  IllegalStateException( " "));	  throw    new    IllegalStateException(       "       ");    Throwables.throw    new    IllegalStateException(   "       ");    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,IllegalStateException)	48	None	replace
347	[BUG]  [BUGGY]  NodeUtil.throw  new  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  NodeUtil.throw  new  IllegalStateException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	NodeUtil.throw  new  IllegalStateException( " ");	  throw    new    IllegalStateException(       "       ");    Throwables.throw    new    IllegalStateException(   "       ");    	non-compiled	[CE]  <identifier>  expected	48	None	replace
348	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " "):  unexpectedException( " ");  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " "):  unexpectedException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw  new  IllegalStateException( " "):  unexpectedException( " ");	  throw    new    IllegalStateException(   "   ")    :    unexpectedException(   "   ");    	non-compiled	[CE]  <identifier>  expected	113	None	replace
349	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException( " "))  :  unexpectedException( " ");  [CE]  <identifier>  expected  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  IllegalStateException( " "))  :  unexpectedException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  IllegalStateException( " "))  :  unexpectedException( " ");	  throw    new    IllegalStateException(   "   ")    :    unexpectedException(   "   ");    	non-compiled	[CE]  <identifier>  expected	113	None	replace
350	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  UnsupportedOperationException( " "));  [CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,UnsupportedOperationException)  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  UnsupportedOperationException( " "));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	NodeTraversal.traverse(compiler,  root,  new  UnsupportedOperationException( " "));	  throw    new    UnsupportedOperationException(       "       ");    Throwables.throw    new    UnsupportedOperationException(   "       ");    	non-compiled	[CE]  no  suitable  method  found  for  traverse(AbstractCompiler,Node,UnsupportedOperationException)	55	None	replace
351	[BUG]  [BUGGY]  Throwables.throw  new  IOException( " ");  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw  new  IOException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw  new  IOException( " ");	  throw    new    IOException(   "   ");    	non-compiled	[CE]  <identifier>  expected	94	None	replace
352	[BUG]  [BUGGY]  Context.report(UNKNOWN_SYNCHRONIZED,  sourceName);  [CE]  cannot  find  symbol  UNKNOWN_SYNCHRONIZED  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(UNKNOWN_SYNCHRONIZED,  sourceName);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(UNKNOWN_SYNCHRONIZED,  sourceName);	  Context.report(UNKNOWN_SYNCHRONIZED);    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_SYNCHRONIZED	109	None	replace
353	[BUG]  [BUGGY]  Context.report(UNKNOWN_SYNCHRONIZED,  unexpectedException);  [CE]  cannot  find  symbol  UNKNOWN_SYNCHRONIZED  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(UNKNOWN_SYNCHRONIZED,  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(UNKNOWN_SYNCHRONIZED,  unexpectedException);	  Context.report(UNKNOWN_SYNCHRONIZED);    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_SYNCHRONIZED	109	None	replace
354	[BUG]  [BUGGY]  Context.report(UNKNOWN_SOURCE);  [CE]  cannot  find  symbol  UNKNOWN_SOURCE  [FE]                              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(UNKNOWN_SOURCE);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(UNKNOWN_SOURCE);	  Context.report(UNKNOWN_SYNCHRONIZED);    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_SOURCE	109	None	replace
355	[BUG]  [BUGGY]  Context.report(UNKNOWN_SYNCHRONIZED,  inputId);  [CE]  cannot  find  symbol  UNKNOWN_SYNCHRONIZED  [FE]                                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(UNKNOWN_SYNCHRONIZED,  inputId);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(UNKNOWN_SYNCHRONIZED,  inputId);	  Context.report(UNKNOWN_SYNCHRONIZED);    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_SYNCHRONIZED	109	None	replace
356	[BUG]  [BUGGY]  Context.report(UNKNOWN_SYNTHETIC);  [CE]  cannot  find  symbol  UNKNOWN_SYNTHETIC  [FE]                                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(UNKNOWN_SYNTHETIC);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(UNKNOWN_SYNTHETIC);	  Context.report(UNKNOWN_SYNCHRONIZED);    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_SYNTHETIC	109	None	replace
357	[BUG]  [BUGGY]  Context.report(UNKNOWN_SYNCHRONIZED,  message);  [CE]  cannot  find  symbol  UNKNOWN_SYNCHRONIZED  [FE]                                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(UNKNOWN_SYNCHRONIZED,  message);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(UNKNOWN_SYNCHRONIZED,  message);	  Context.report(UNKNOWN_SYNCHRONIZED);    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_SYNCHRONIZED	109	None	replace
358	[BUG]  [BUGGY]  Throwables.throw(new  RuntimeException(sourceName));  [CE]  <identifier>  expected  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  RuntimeException(sourceName));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  RuntimeException(sourceName));	  Throwables.throw(new    RuntimeException(   "   "));    	non-compiled	[CE]  <identifier>  expected	95	None	replace
359	[BUG]  [BUGGY]  Throwables.throw(new  RuntimeException( "Unexpected  source  name "));  [CE]  <identifier>  expected  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  RuntimeException( "Unexpected  source  name "));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  RuntimeException( "Unexpected  source  name "));	  Throwables.throw(new    RuntimeException(   "   "));    	non-compiled	[CE]  <identifier>  expected	95	None	replace
360	[BUG]  [BUGGY]  handleMissingStatement(root,  inputId);  [CE]  cannot  find  symbol  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(root,  inputId);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(root,  inputId);	  handleMissingStatement(e,    root);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
361	[BUG]  [BUGGY]  handleMissingStatement(root,  nodeTypes);  [CE]  cannot  find  symbol  nodeTypes  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(root,  nodeTypes);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(root,  nodeTypes);	  handleMissingStatement(e,    root);    	non-compiled	[CE]  cannot  find  symbol  nodeTypes	87	None	replace
362	[BUG]  [BUGGY]  handleMissingStatement(root,  MISSING_SOURCE);  [CE]  cannot  find  symbol  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(root,  MISSING_SOURCE);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(root,  MISSING_SOURCE);	  handleMissingStatement(e,    root);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
363	[BUG]  [BUGGY]  handleMissingStatement(root,  sourceName);  [CE]  cannot  find  symbol  [FE]                              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(root,  sourceName);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(root,  sourceName);	  handleMissingStatement(e,    root);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
364	[BUG]  [BUGGY]  handleMissingStatement(sourceName,  root);  [CE]  cannot  find  symbol  [FE]                                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(sourceName,  root);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(sourceName,  root);	  handleMissingStatement(e,    root);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
365	[BUG]  [BUGGY]  handleMissingStatement(root,  cb);  [CE]  cannot  find  symbol  cb  [FE]                                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(root,  cb);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(root,  cb);	  handleMissingStatement(e,    root);    	non-compiled	[CE]  cannot  find  symbol  cb	87	None	replace
366	[BUG]  [BUGGY]  handleMissingStatement(root,  unexpectedException);  [CE]  cannot  find  symbol  [FE]                                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(root,  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(root,  unexpectedException);	  handleMissingStatement(e,    root);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
367	[BUG]  [BUGGY]  Throwable  cb  =  inputId.unexpectedException( " ");  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cb  =  inputId.unexpectedException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cb  =  inputId.unexpectedException( " ");	  Throwable    cb    =    sourceName.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
368	[BUG]  [BUGGY]  Throwable  sourceName  =  cb.unexpectedException( " ");  [CE]  cannot  find  symbol  cb  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  sourceName  =  cb.unexpectedException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  sourceName  =  cb.unexpectedException( " ");	  Throwable    cb    =    sourceName.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  cb	3	None	replace
369	[BUG]  [BUGGY]  Throwable  cb  =  sourceName,  scopeCreator.unexpectedException( " ");  [CE]  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cb  =  sourceName,  scopeCreator.unexpectedException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cb  =  sourceName,  scopeCreator.unexpectedException( " ");	  Throwable    cb    =    sourceName.unexpectedException(   "   ");    	non-compiled	[CE]  	3	None	replace
370	[BUG]  [BUGGY]  Throwable  cb  =  root.unexpectedException( " ");  [CE]  cannot  find  symbol  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cb  =  root.unexpectedException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cb  =  root.unexpectedException( " ");	  Throwable    cb    =    sourceName.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
371	[BUG]  [BUGGY]  Throwable  cb  =  curNode.unexpectedException( " ");  [CE]  cannot  find  symbol  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cb  =  curNode.unexpectedException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cb  =  curNode.unexpectedException( " ");	  Throwable    cb    =    sourceName.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
372	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  NODE_TRAVERSAL_ERROR,  inputId));  [CE]  no  suitable  method  found  for  make(String,Node,DiagnosticType,InputId)  [FE]                                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  NODE_TRAVERSAL_ERROR,  inputId));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  NODE_TRAVERSAL_ERROR,  inputId));	          Context.report(JSError.make(sourceName,    curNode,    NON_GLOBAL_ERROR,    inputId));    	non-compiled	[CE]  no  suitable  method  found  for  make(String,Node,DiagnosticType,InputId)	17	None	replace
373	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  inputId,  MISSING_SOURCE));  [CE]  cannot  find  symbol  NON_GLOBAL_ERROR  [FE]                                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  inputId,  MISSING_SOURCE));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  inputId,  MISSING_SOURCE));	          Context.report(JSError.make(sourceName,    curNode,    NON_GLOBAL_ERROR,    inputId));    	non-compiled	[CE]  cannot  find  symbol  NON_GLOBAL_ERROR	17	None	replace
374	[BUG]  [BUGGY]  cfgs.printStackTrace(unexpectedException);  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  cfgs.printStackTrace(unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	cfgs.printStackTrace(unexpectedException);	  cfgs.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
375	[BUG]  [BUGGY]  Cfgs.printStackTrace(unexpectedException);  [CE]  cannot  find  symbol  Cfgs  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Cfgs.printStackTrace(unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Cfgs.printStackTrace(unexpectedException);	  cfgs.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  Cfgs	25	None	replace
376	[BUG]  [BUGGY]  cfgs.printStackTrace(unknownException);  [CE]  cannot  find  symbol  unknownException  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  cfgs.printStackTrace(unknownException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	cfgs.printStackTrace(unknownException);	  cfgs.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  unknownException	25	None	replace
377	[BUG]  [BUGGY]  Cfgs.printStackTrace(unknownException);  [CE]  cannot  find  symbol  unknownException  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Cfgs.printStackTrace(unknownException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Cfgs.printStackTrace(unknownException);	  cfgs.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  unknownException	25	None	replace
378	[BUG]  [BUGGY]  handleMissingScopeException(root,  sourceName,  unexpectedException);  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingScopeException(root,  sourceName,  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(root,  sourceName,  unexpectedException);	  handleMissingScopeException(root,    sourceName);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
379	[BUG]  [BUGGY]  handleMissingScopeException(root,  sourceName,  cb);  [CE]  cannot  find  symbol  cb  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingScopeException(root,  sourceName,  cb);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(root,  sourceName,  cb);	  handleMissingScopeException(root,    sourceName);    	non-compiled	[CE]  cannot  find  symbol  cb	6	None	replace
380	[BUG]  [BUGGY]  handleMissingScopeException(root,  sourceName,  inputId);  [CE]  cannot  find  symbol  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingScopeException(root,  sourceName,  inputId);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(root,  sourceName,  inputId);	  handleMissingScopeException(root,    sourceName);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
381	[BUG]  [BUGGY]  handleMissingScopeException(root,  sourceName,  error);  [CE]  cannot  find  symbol  error  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingScopeException(root,  sourceName,  error);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(root,  sourceName,  error);	  handleMissingScopeException(root,    sourceName);    	non-compiled	[CE]  cannot  find  symbol  error	6	None	replace
382	[BUG]  [BUGGY]  handleMissingScopeException(root,  sourceName,  undefined);  [CE]  cannot  find  symbol  undefined  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingScopeException(root,  sourceName,  undefined);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(root,  sourceName,  undefined);	  handleMissingScopeException(root,    sourceName);    	non-compiled	[CE]  cannot  find  symbol  undefined	6	None	replace
383	[BUG]  [BUGGY]  scopeCreator.report(null);  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  scopeCreator.report(null);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scopeCreator.report(null);	  cb.report(null);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
384	[BUG]  [BUGGY]  scopeCallback.report(null);  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  scopeCallback.report(null);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scopeCallback.report(null);	  cb.report(null);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
385	[BUG]  [BUGGY]  scope.report(null);  [CE]  cannot  find  symbol  scope  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  scope.report(null);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scope.report(null);	  cb.report(null);    	non-compiled	[CE]  cannot  find  symbol  scope	79	None	replace
386	[BUG]  [BUGGY]  scopecreator.report(null);  [CE]  cannot  find  symbol  scopecreator  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  scopecreator.report(null);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scopecreator.report(null);	  cb.report(null);    	non-compiled	[CE]  cannot  find  symbol  scopecreator	79	None	replace
387	[BUG]  [BUGGY]  cfgs.report(null);  [CE]  cannot  find  symbol  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  cfgs.report(null);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	cfgs.report(null);	  cb.report(null);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
388	[BUG]  [BUGGY]  callback.report(null);  [CE]  cannot  find  symbol  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  callback.report(null);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	callback.report(null);	  cb.report(null);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
389	[BUG]  [BUGGY]  scopeCallback.report(unexpectedException);  [CE]  cannot  find  symbol  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  scopeCallback.report(unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scopeCallback.report(unexpectedException);	  cb.report(null);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
390	[BUG]  [BUGGY]  handleMissingStatement(unexpectedException,  sourceName);  [CE]  cannot  find  symbol  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(unexpectedException,  sourceName);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(unexpectedException,  sourceName);	  handleMissingStatement(unexpectedException);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
391	[BUG]  [BUGGY]  handleMissingStatement(unexpectedException,  curNode);  [CE]  cannot  find  symbol  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(unexpectedException,  curNode);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(unexpectedException,  curNode);	  handleMissingStatement(unexpectedException);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
392	[BUG]  [BUGGY]  handleMissingStatement(unexpectedException,  root);  [CE]  cannot  find  symbol  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(unexpectedException,  root);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(unexpectedException,  root);	  handleMissingStatement(unexpectedException);    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
393	[BUG]  [BUGGY]  handleMissingStatement(unexpectedException,  cb);  [CE]  cannot  find  symbol  cb  [FE]                              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(unexpectedException,  cb);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(unexpectedException,  cb);	  handleMissingStatement(unexpectedException);    	non-compiled	[CE]  cannot  find  symbol  cb	37	None	replace
394	[BUG]  [BUGGY]  handleMissingScopeException( " ",  unexpectedException);  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingScopeException( " ",  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException( " ",  unexpectedException);	  handleMissingScopeException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
395	[BUG]  [BUGGY]  handleMissingScopeException(sourceName, " ");  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingScopeException(sourceName, " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(sourceName, " ");	  handleMissingScopeException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
396	[BUG]  [BUGGY]  handleMissingScopeException(null);  [CE]  cannot  find  symbol  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingScopeException(null);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(null);	  handleMissingScopeException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
397	[BUG]  [BUGGY]  handleMissingScopeException(sourceName,  sourceName);  [CE]  cannot  find  symbol  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingScopeException(sourceName,  sourceName);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(sourceName,  sourceName);	  handleMissingScopeException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
398	[BUG]  [BUGGY]  handleMissingScopeException( ", ");  [CE]  cannot  find  symbol  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingScopeException( ", ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException( ", ");	  handleMissingScopeException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
399	[BUG]  [BUGGY]  scanScope(root,  scopeCreator.unexpectedException( " "));  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  scanScope(root,  scopeCreator.unexpectedException( " "));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scanScope(root,  scopeCreator.unexpectedException( " "));	  throw    scopeCreator.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
400	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( " ");  [CE]  not  a  statement  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throw  new  IllegalArgumentException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throw  new  IllegalArgumentException( " ");	  throw    new    IllegalArgumentException(       "       ");    Throw    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  not  a  statement	29	None	replace
401	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message,   "   "));  [CE]  cannot  find  symbol  message  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message,   "   "));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message,   "   "));	  Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE,   "   "));    	non-compiled	[CE]  cannot  find  symbol  message	84	None	replace
402	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message,''));  [CE]  empty  character  literal  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message,''));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message,''));	  Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE,   "   "));    	non-compiled	[CE]  empty  character  literal	84	None	replace
403	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message,  null));  [CE]  cannot  find  symbol  message  [FE]                              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message,  null));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message,  null));	  Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE,   "   "));    	non-compiled	[CE]  cannot  find  symbol  message	84	None	replace
404	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  label,   "   "));  [CE]  cannot  find  symbol  label  [FE]                                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  label,   "   "));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  label,   "   "));	  Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE,   "   "));    	non-compiled	[CE]  cannot  find  symbol  label	84	None	replace
405	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message,  scopeCreator));  [CE]  cannot  find  symbol  message  [FE]                                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message,  scopeCreator));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message,  scopeCreator));	  Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE,   "   "));    	non-compiled	[CE]  cannot  find  symbol  message	84	None	replace
406	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  message,  MISSING_SOURCE,   "   "));  [CE]  cannot  find  symbol  message  [FE]                                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  message,  MISSING_SOURCE,   "   "));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  message,  MISSING_SOURCE,   "   "));	  Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE,   "   "));    	non-compiled	[CE]  cannot  find  symbol  message	84	None	replace
407	[BUG]  [BUGGY]  catch(NodeFormatException  e)  {  [CE]  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  catch(NodeFormatException  e)  {  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	catch(NodeFormatException  e)  {	  catch(Exception    e)    {    	non-compiled	[CE]  	121	None	replace
408	[BUG]  [BUGGY]  Catch(Throwable  e)  {  [CE]  ')'  expected  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Catch(Throwable  e)  {  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Catch(Throwable  e)  {	  catch(Exception    e)    {    	non-compiled	[CE]  ')'  expected	121	None	replace
409	[BUG]  [BUGGY]  timeout  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  t  =  new  IllegalArgumentException( " ");  unexpectedException.printStackTrace();  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	add	Throwable  t  =  new  IllegalArgumentException( " ");  unexpectedException.printStackTrace();	  Throwable    t    =    new    IllegalArgumentException(   "   ");    timeout    	compilable	timeout	100	1	replace
410	[BUG]  [BUGGY]  Throwable  t  =  new  IllegalArgumentException( " ");  unexpectedException.printStackTrace();  timeout  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  t  =  new  IllegalArgumentException( " ");  unexpectedException.printStackTrace();  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  t  =  new  IllegalArgumentException( " ");  unexpectedException.printStackTrace();	  Throwable    t    =    new    IllegalArgumentException(   "   ");    timeout    	compilable	timeout	100	1	replace
411	[BUG]  [BUGGY]  if(unexpectedException)  {  Throwable  t  =  new  IllegalArgumentException( " ");  timeout++;  }  [CE]  incompatible  types  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(unexpectedException)  {  Throwable  t  =  new  IllegalArgumentException( " ");  timeout++;  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(unexpectedException)  {  Throwable  t  =  new  IllegalArgumentException( " ");  timeout++;  }	  Throwable    t    =    new    IllegalArgumentException(   "   ");    timeout    	non-compiled	[CE]  incompatible  types	100	None	replace
412	[BUG]  [BUGGY]  Throwable  t  =  new  IllegalStatementException( " ");  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  t  =  new  IllegalStatementException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  t  =  new  IllegalStatementException( " ");	  Throwable    t    =    new    IllegalArgumentException(   "   ");    timeout    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
413	[BUG]  [BUGGY]  if(unexpectedException)  {  Throwable  t  =  new  IllegalArgumentException( " ");  timeout.println();  }  [CE]  incompatible  types  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(unexpectedException)  {  Throwable  t  =  new  IllegalArgumentException( " ");  timeout.println();  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(unexpectedException)  {  Throwable  t  =  new  IllegalArgumentException( " ");  timeout.println();  }	  Throwable    t    =    new    IllegalArgumentException(   "   ");    timeout    	non-compiled	[CE]  incompatible  types	100	None	replace
414	[BUG]  [BUGGY]  if(unexpectedException)  {  Throwable  t  =  new  IllegalArgumentException( " ");  timeout  =  TimeZone.getDefault();  }  [CE]  incompatible  types  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(unexpectedException)  {  Throwable  t  =  new  IllegalArgumentException( " ");  timeout  =  TimeZone.getDefault();  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(unexpectedException)  {  Throwable  t  =  new  IllegalArgumentException( " ");  timeout  =  TimeZone.getDefault();  }	  Throwable    t    =    new    IllegalArgumentException(   "   ");    timeout    	non-compiled	[CE]  incompatible  types	100	None	replace
415	[BUG]  [BUGGY]  if(unexpectedException)  {  Throwable  t  =  new  IllegalArgumentException( " ");  timeout(1);  }  [CE]  incompatible  types  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(unexpectedException)  {  Throwable  t  =  new  IllegalArgumentException( " ");  timeout(1);  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(unexpectedException)  {  Throwable  t  =  new  IllegalArgumentException( " ");  timeout(1);  }	  Throwable    t    =    new    IllegalArgumentException(   "   ");    timeout    	non-compiled	[CE]  incompatible  types	100	None	replace
416	[BUG]  [BUGGY]  handleMissingStatement(currentNode);  [CE]  cannot  find  symbol  currentNode  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(currentNode);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(currentNode);	  handleMissingStatement(n);    	non-compiled	[CE]  cannot  find  symbol  currentNode	39	None	replace
417	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException( " "),  sourceName,  unexpectedException);  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  IllegalStateException( " "),  sourceName,  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  IllegalStateException( " "),  sourceName,  unexpectedException);	  Throwables.throw(new    IllegalStateException(   "   "),    unexpectedException);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
418	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException( " "  +  sourceName  + ") ",  unexpectedException);  [CE]  <identifier>  expected  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  IllegalStateException( " "  +  sourceName  + ") ",  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  IllegalStateException( " "  +  sourceName  + ") ",  unexpectedException);	  Throwables.throw(new    IllegalStateException(   "   "),    unexpectedException);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
419	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException( " "),  sourceName);  [CE]  <identifier>  expected  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  IllegalStateException( " "),  sourceName);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  IllegalStateException( " "),  sourceName);	  Throwables.throw(new    IllegalStateException(   "   "),    unexpectedException);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
420	[BUG]  [BUGGY]  handleMissingScopeException(root,  cb,  unexpectedException);  [CE]  cannot  find  symbol  cb  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingScopeException(root,  cb,  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(root,  cb,  unexpectedException);	  handleMissingScopeException(root,    unexpectedException);    	non-compiled	[CE]  cannot  find  symbol  cb	5	None	replace
421	[BUG]  [BUGGY]  handleMissingScopeException(root,  cfgs,  unexpectedException);  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingScopeException(root,  cfgs,  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(root,  cfgs,  unexpectedException);	  handleMissingScopeException(root,    unexpectedException);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
422	[BUG]  [BUGGY]  handleMissingScopeException(root,  root,  unexpectedException);  [CE]  cannot  find  symbol  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingScopeException(root,  root,  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(root,  root,  unexpectedException);	  handleMissingScopeException(root,    unexpectedException);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
423	[BUG]  [BUGGY]  Throwable  cb  =  scopeCreator.unexpectedException( " ",  unexpectedException);  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cb  =  scopeCreator.unexpectedException( " ",  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cb  =  scopeCreator.unexpectedException( " ",  unexpectedException);	  Throwable    cb    =    scopeCreator.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
424	[BUG]  [BUGGY]  Throwable  cb  =  scopeCreator.unexpectedException( ", ");  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cb  =  scopeCreator.unexpectedException( ", ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cb  =  scopeCreator.unexpectedException( ", ");	  Throwable    cb    =    scopeCreator.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
425	[BUG]  [BUGGY]  Throwable  cb  =  scopeCreator.unexpectedException(sourceName);  [CE]  cannot  find  symbol  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cb  =  scopeCreator.unexpectedException(sourceName);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cb  =  scopeCreator.unexpectedException(sourceName);	  Throwable    cb    =    scopeCreator.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
426	[BUG]  [BUGGY]  Throwable  cb  =  pathCreator.unexpectedException( " ");  [CE]  cannot  find  symbol  pathCreator  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cb  =  pathCreator.unexpectedException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cb  =  pathCreator.unexpectedException( " ");	  Throwable    cb    =    scopeCreator.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  pathCreator	92	None	replace
427	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(sourceName));  [CE]  <identifier>  expected  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(sourceName));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw  new  IllegalStateException( " ".equals(sourceName));	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	43	None	replace
428	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ",  unexpectedException);  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ",  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw  new  IllegalStateException( " ",  unexpectedException);	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	43	None	replace
429	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(inputId));  [CE]  <identifier>  expected  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(inputId));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw  new  IllegalStateException( " ".equals(inputId));	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	43	None	replace
430	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equalsIgnoreCase(sourceName));  [CE]  <identifier>  expected  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equalsIgnoreCase(sourceName));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw  new  IllegalStateException( " ".equalsIgnoreCase(sourceName));	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	43	None	replace
431	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " "),  unexpectedException);  [CE]  <identifier>  expected  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " "),  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw  new  IllegalStateException( " "),  unexpectedException);	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	43	None	replace
432	[BUG]  [BUGGY]  Throwables.throw  new  UnexpectedException( " ",  unexpectedException);  [CE]  <identifier>  expected  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw  new  UnexpectedException( " ",  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw  new  UnexpectedException( " ",  unexpectedException);	  Throwables.throw    new    UnexpectedException(   "   ");    	non-compiled	[CE]  <identifier>  expected	74	None	replace
433	[BUG]  [BUGGY]  Throwables.throw  new  UnexpectedException( "Unexpected  source  name: "  +  inputId);  [CE]  <identifier>  expected  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw  new  UnexpectedException( "Unexpected  source  name: "  +  inputId);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw  new  UnexpectedException( "Unexpected  source  name: "  +  inputId);	  Throwables.throw    new    UnexpectedException(   "   ");    	non-compiled	[CE]  <identifier>  expected	74	None	replace
434	[BUG]  [BUGGY]  Throwables.throw  new  UnexpectedException( "Unexpected  source  name: "  +  sourceName);  [CE]  <identifier>  expected  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw  new  UnexpectedException( "Unexpected  source  name: "  +  sourceName);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw  new  UnexpectedException( "Unexpected  source  name: "  +  sourceName);	  Throwables.throw    new    UnexpectedException(   "   ");    	non-compiled	[CE]  <identifier>  expected	74	None	replace
435	[BUG]  [BUGGY]  timeout  [FE]            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  throw  new  IllegalStateException( ", ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	add	throw  new  IllegalStateException( ", ");	  throw    new    IllegalStateException(       "       ");    throw    new    IllegalStateException(   ",       ");    	compilable	timeout	110	1	replace
436	[BUG]  [BUGGY]  throw  new  IllegalStateException( ", ");  timeout  [FE]            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  throw  new  IllegalStateException( ", ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw  new  IllegalStateException( ", ");	  throw    new    IllegalStateException(       "       ");    throw    new    IllegalStateException(   ",       ");    	compilable	timeout	110	1	replace
437	[BUG]  [BUGGY]  Throwable  t  =  new  IllegalArgumentException(   "   ");  Throwable  t  =  new  IllegalArgumentException('   ");  [CE]  unclosed  character  literal  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  t  =  new  IllegalArgumentException(   "   ");  Throwable  t  =  new  IllegalArgumentException('   ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable    t    =    new    IllegalArgumentException(   "   ");    Throwable  t  =  new  IllegalArgumentException('   ");	  timeout    	non-compiled	[CE]  unclosed  character  literal	99	None	add
438	[BUG]  [BUGGY]  Throwable  t  =  new  IllegalArgumentException(   "   ");  Throwable  t  =  new  IllegalArgumentException(, "   ");  [CE]  illegal  start  of  expression  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  t  =  new  IllegalArgumentException(   "   ");  Throwable  t  =  new  IllegalArgumentException(, "   ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable    t    =    new    IllegalArgumentException(   "   ");    Throwable  t  =  new  IllegalArgumentException(, "   ");	  timeout    	non-compiled	[CE]  illegal  start  of  expression	99	None	add
439	[BUG]  [BUGGY]  handleMissingStatement(unknownNode,  curNode);  [CE]  cannot  find  symbol  unknownNode  [FE]                                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(unknownNode,  curNode);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(unknownNode,  curNode);	  handleMissingStatement(e,    curNode);    	non-compiled	[CE]  cannot  find  symbol  unknownNode	42	None	replace
440	[BUG]  [BUGGY]  traverseMissingStatement(root,  curNode);  [CE]  cannot  find  symbol  [FE]                                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  traverseMissingStatement(root,  curNode);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	traverseMissingStatement(root,  curNode);	  handleMissingStatement(e,    curNode);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
441	[BUG]  [BUGGY]  Cfgs.printStackTrace();  [CE]  cannot  find  symbol  Cfgs  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Cfgs.printStackTrace();  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Cfgs.printStackTrace();	  cfgs.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  Cfgs	25	None	replace
442	[BUG]  [BUGGY]  cfgs.printStackTrace(inputId);  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  cfgs.printStackTrace(inputId);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	cfgs.printStackTrace(inputId);	  cfgs.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
443	[BUG]  [BUGGY]  Throwables.throw(new  IllegalArgumentException( " "),  unexpectedException);  [CE]  <identifier>  expected  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  IllegalArgumentException( " "),  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  IllegalArgumentException( " "),  unexpectedException);	  Throwables.throw(new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	73	None	replace
444	[BUG]  [BUGGY]  Throwables.throw(new  IllegalArgumentException( " ").printStackTrace();  [CE]  <identifier>  expected  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  IllegalArgumentException( " ").printStackTrace();  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  IllegalArgumentException( " ").printStackTrace();	  Throwables.throw(new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	73	None	replace
445	[BUG]  [BUGGY]  handleMissingScopeException(root,  unexpectedException,  sourceName);  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingScopeException(root,  unexpectedException,  sourceName);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(root,  unexpectedException,  sourceName);	  handleMissingScopeException(root,    unexpectedException);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
446	[BUG]  [BUGGY]  handleMissingScopeException(root,  INVALID_SOURCE);  [CE]  cannot  find  symbol  INVALID_SOURCE  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingScopeException(root,  INVALID_SOURCE);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(root,  INVALID_SOURCE);	  handleMissingScopeException(root,    unexpectedException);    	non-compiled	[CE]  cannot  find  symbol  INVALID_SOURCE	5	None	replace
447	[BUG]  [BUGGY]  Throwable  cb  =  scopeCreator.unexpectedException( " "  +  unexpectedException);  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cb  =  scopeCreator.unexpectedException( " "  +  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cb  =  scopeCreator.unexpectedException( " "  +  unexpectedException);	  Throwable    cb    =    scopeCreator.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
448	[BUG]  [BUGGY]  Throwable  cb  =  scopeCreator.unexpectedException(sourceName, " ");  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cb  =  scopeCreator.unexpectedException(sourceName, " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cb  =  scopeCreator.unexpectedException(sourceName, " ");	  Throwable    cb    =    scopeCreator.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
449	[BUG]  [BUGGY]  Throwable  cb  =  scopeCreator.unexpectedException( "? ");  [CE]  cannot  find  symbol  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cb  =  scopeCreator.unexpectedException( "? ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cb  =  scopeCreator.unexpectedException( "? ");	  Throwable    cb    =    scopeCreator.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
450	[BUG]  [BUGGY]  Context.report(null,  NODE_TRAVERSAL_ERROR);  [CE]  cannot  find  symbol  Context  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(null,  NODE_TRAVERSAL_ERROR);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(null,  NODE_TRAVERSAL_ERROR);	  Context.report(null,    MISSING_SOURCE);    	non-compiled	[CE]  cannot  find  symbol  Context	104	None	replace
451	[BUG]  [BUGGY]  Throwable  scopeCreator  =  scopeCreator.unexpectedException( " ");  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  scopeCreator  =  scopeCreator.unexpectedException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  scopeCreator  =  scopeCreator.unexpectedException( " ");	  throw    scopeCreator.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
452	[BUG]  [BUGGY]  handleMissingStatement(root,  scopeCreator);  [CE]  cannot  find  symbol  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(root,  scopeCreator);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(root,  scopeCreator);	  handleMissingStatement(e,    root);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
453	[BUG]  [BUGGY]  timeout  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  t  =  new  UnsupportedOperationException( " ");  t.printStackTrace();  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	add	Throwable  t  =  new  UnsupportedOperationException( " ");  t.printStackTrace();	  throw    new    UnsupportedOperationException(   "   "),    unexpectedException;    	compilable	timeout	120	1	replace
454	[BUG]  [BUGGY]  Throwable  t  =  new  UnsupportedOperationException( " ");  t.printStackTrace();  timeout  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  t  =  new  UnsupportedOperationException( " ");  t.printStackTrace();  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  t  =  new  UnsupportedOperationException( " ");  t.printStackTrace();	  throw    new    UnsupportedOperationException(   "   "),    unexpectedException;    	compilable	timeout	120	1	replace
455	[BUG]  [BUGGY]  timeout  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  throw  new  UnsupportedOperationException( " "  +  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	add	throw  new  UnsupportedOperationException( " "  +  unexpectedException);	  throw    new    UnsupportedOperationException(   "   "),    unexpectedException;    	compilable	timeout	120	1	replace
456	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( " "  +  unexpectedException);  timeout  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  throw  new  UnsupportedOperationException( " "  +  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw  new  UnsupportedOperationException( " "  +  unexpectedException);	  throw    new    UnsupportedOperationException(   "   "),    unexpectedException;    	compilable	timeout	120	1	replace
457	[BUG]  [BUGGY]  new  UnsupportedOperationException( " "),  unexpectedException;  [CE]  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  new  UnsupportedOperationException( " "),  unexpectedException;  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	new  UnsupportedOperationException( " "),  unexpectedException;	  throw    new    UnsupportedOperationException(   "   "),    unexpectedException;    	non-compiled	[CE]  	120	None	replace
458	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  INVALID_SOURCE_ERROR));  [CE]  cannot  find  symbol  INVALID_SOURCE_ERROR  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  INVALID_SOURCE_ERROR));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  INVALID_SOURCE_ERROR));	  Context.report(JSError.make(sourceName,    curNode,    NON_GLOBAL_ERROR));    	non-compiled	[CE]  cannot  find  symbol  INVALID_SOURCE_ERROR	20	None	replace
459	[BUG]  [BUGGY]  BugzillaPlugin.log(nodeTypes,  unexpectedException);  [CE]  cannot  find  symbol  nodeTypes  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  BugzillaPlugin.log(nodeTypes,  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	BugzillaPlugin.log(nodeTypes,  unexpectedException);	  bug.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  nodeTypes	27	None	replace
460	[BUG]  [BUGGY]  BugzillaPlugin.log(unexpectedException);  [CE]  cannot  find  symbol  BugzillaPlugin  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  BugzillaPlugin.log(unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	BugzillaPlugin.log(unexpectedException);	  bug.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  BugzillaPlugin	27	None	replace
461	[BUG]  [BUGGY]  handleMissingSourCE(unexpectedException,  root);  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSourCE(unexpectedException,  root);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSourCE(unexpectedException,  root);	  handleMissingSourCE(unexpectedException,    sourceName);    	non-compiled	[CE]  cannot  find  symbol	105	None	replace
462	[BUG]  [BUGGY]  timeout  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(inputId!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	add	if(inputId!=  null)  {  throw  new  IllegalStateException( " ");  }	  throw    new    IllegalStateException(       "       ");    throw    new    IllegalStateException('       ");    	compilable	timeout	86	1	replace
463	[BUG]  [BUGGY]  if(inputId!=  null)  {  throw  new  IllegalStateException( " ");  }  timeout  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(inputId!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(inputId!=  null)  {  throw  new  IllegalStateException( " ");  }	  throw    new    IllegalStateException(       "       ");    throw    new    IllegalStateException('       ");    	compilable	timeout	86	1	replace
464	[BUG]  [BUGGY]  timeout  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(inputId  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	add	if(inputId  ==  null)  {  throw  new  IllegalStateException( " ");  }	  throw    new    IllegalStateException(       "       ");    throw    new    IllegalStateException('       ");    	compilable	timeout	86	1	replace
465	[BUG]  [BUGGY]  if(inputId  ==  null)  {  throw  new  IllegalStateException( " ");  }  timeout  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(inputId  ==  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(inputId  ==  null)  {  throw  new  IllegalStateException( " ");  }	  throw    new    IllegalStateException(       "       ");    throw    new    IllegalStateException('       ");    	compilable	timeout	86	1	replace
466	[BUG]  [BUGGY]  timeout  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(inputId!=  null)  {  throw  new  IllegalStateException( " ");  }  else  {  return;  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	add	if(inputId!=  null)  {  throw  new  IllegalStateException( " ");  }  else  {  return;  }	  throw    new    IllegalStateException(       "       ");    throw    new    IllegalStateException('       ");    	compilable	timeout	86	1	replace
467	[BUG]  [BUGGY]  if(inputId!=  null)  {  throw  new  IllegalStateException( " ");  }  else  {  return;  }  timeout  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(inputId!=  null)  {  throw  new  IllegalStateException( " ");  }  else  {  return;  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(inputId!=  null)  {  throw  new  IllegalStateException( " ");  }  else  {  return;  }	  throw    new    IllegalStateException(       "       ");    throw    new    IllegalStateException('       ");    	compilable	timeout	86	1	replace
468	[BUG]  [BUGGY]  if(inputId!=  null)  {  throw  new  IllegalStateException( " ".equals(sourceName));  }  [CE]  no  suitable  constructor  found  for  IllegalStateException(boolean)  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(inputId!=  null)  {  throw  new  IllegalStateException( " ".equals(sourceName));  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(inputId!=  null)  {  throw  new  IllegalStateException( " ".equals(sourceName));  }	  throw    new    IllegalStateException(       "       ");    throw    new    IllegalStateException('       ");    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalStateException(boolean)	86	None	replace
469	[BUG]  [BUGGY]  Context.report(null,  NON_GLOBAL_ERROR);  [CE]  cannot  find  symbol  NON_GLOBAL_ERROR  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(null,  NON_GLOBAL_ERROR);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(null,  NON_GLOBAL_ERROR);	  Context.report(null);    	non-compiled	[CE]  cannot  find  symbol  NON_GLOBAL_ERROR	21	None	replace
470	[BUG]  [BUGGY]  Context.report(UNKNOWN_SYMBOL_ERROR);  [CE]  cannot  find  symbol  UNKNOWN_SYMBOL_ERROR  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(UNKNOWN_SYMBOL_ERROR);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(UNKNOWN_SYMBOL_ERROR);	  Context.report(null);    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_SYMBOL_ERROR	21	None	replace
471	[BUG]  [BUGGY]  handleMissingScopeException(root,  MISSING_SOURCE,  sourceName);  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingScopeException(root,  MISSING_SOURCE,  sourceName);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(root,  MISSING_SOURCE,  sourceName);	  handleMissingScopeException(root,    sourceName);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
472	[BUG]  [BUGGY]  handleMissingScopeException(root,  MISSING_SOURCE);  [CE]  cannot  find  symbol  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingScopeException(root,  MISSING_SOURCE);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(root,  MISSING_SOURCE);	  handleMissingScopeException(root,    sourceName);    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
473	[BUG]  [BUGGY]  Context.report(UNKNOWN_TYPE);  [CE]  cannot  find  symbol  UNKNOWN_TYPE  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(UNKNOWN_TYPE);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(UNKNOWN_TYPE);	  Context.report(UNKNOWN_SYNCHRONIZED);    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_TYPE	109	None	replace
474	[BUG]  [BUGGY]  Context.report(UNKNOWN_EXPR_TYPE);  [CE]  cannot  find  symbol  UNKNOWN_EXPR_TYPE  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(UNKNOWN_EXPR_TYPE);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(UNKNOWN_EXPR_TYPE);	  Context.report(UNKNOWN_SYNCHRONIZED);    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_EXPR_TYPE	109	None	replace
475	[BUG]  [BUGGY]  Throwables.throw  new  RuntimeException( ", ");  [CE]  <identifier>  expected  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw  new  RuntimeException( ", ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw  new  RuntimeException( ", ");	  Throwables.throw    new    RuntimeException(   "   ");    	non-compiled	[CE]  <identifier>  expected	45	None	replace
476	[BUG]  [BUGGY]  scopeCtrl.printStackTrace(unexpectedException);  [CE]  cannot  find  symbol  scopeCtrl  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  scopeCtrl.printStackTrace(unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scopeCtrl.printStackTrace(unexpectedException);	  scopeCtrl.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  scopeCtrl	83	None	replace
477	[BUG]  [BUGGY]  scopeCtrl.printStackTrace(System.err);  [CE]  cannot  find  symbol  scopeCtrl  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  scopeCtrl.printStackTrace(System.err);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scopeCtrl.printStackTrace(System.err);	  scopeCtrl.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  scopeCtrl	83	None	replace
478	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  INVALID_SOURCE_ERROR,  sourceName));  [CE]  cannot  find  symbol  INVALID_SOURCE_ERROR  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  INVALID_SOURCE_ERROR,  sourceName));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  INVALID_SOURCE_ERROR,  sourceName));	          Context.report(JSError.make(sourceName,    curNode,    NON_GLOBAL_ERROR,    sourceName));    	non-compiled	[CE]  cannot  find  symbol  INVALID_SOURCE_ERROR	13	None	replace
479	[BUG]  [BUGGY]  timeout  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(inputId!=  null)  {  throw  new  IllegalStateException( ". ");  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	add	if(inputId!=  null)  {  throw  new  IllegalStateException( ". ");  }	  throw    new    IllegalStateException(       "       ");    throw    new    IllegalStateException(.   "       ");    	compilable	timeout	49	1	replace
480	[BUG]  [BUGGY]  if(inputId!=  null)  {  throw  new  IllegalStateException( ". ");  }  timeout  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(inputId!=  null)  {  throw  new  IllegalStateException( ". ");  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(inputId!=  null)  {  throw  new  IllegalStateException( ". ");  }	  throw    new    IllegalStateException(       "       ");    throw    new    IllegalStateException(.   "       ");    	compilable	timeout	49	1	replace
481	[BUG]  [BUGGY]  JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  inputId,  MISSING_SOURCE));  [CE]  ';'  expected  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  inputId,  MISSING_SOURCE));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  inputId,  MISSING_SOURCE));	  throw    new    UnsupportedOperationException(       "       ");    JSError.make(sourceName,    curNode,    NON_GLOBAL_ERROR,    inputId));    	non-compiled	[CE]  ';'  expected	128	None	replace
482	[BUG]  [BUGGY]  Error.make(sourceName,  curNode,  MISSING_SOURCE,  inputId));  [CE]  ';'  expected  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Error.make(sourceName,  curNode,  MISSING_SOURCE,  inputId));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Error.make(sourceName,  curNode,  MISSING_SOURCE,  inputId));	  throw    new    UnsupportedOperationException(       "       ");    JSError.make(sourceName,    curNode,    NON_GLOBAL_ERROR,    inputId));    	non-compiled	[CE]  ';'  expected	128	None	replace
483	[BUG]  [BUGGY]  scopeCreator.printStackTrace(System.err);  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  scopeCreator.printStackTrace(System.err);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scopeCreator.printStackTrace(System.err);	  scopecreator.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
484	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message),  cb);  [CE]  cannot  find  symbol  message  [FE]                                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message),  cb);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message),  cb);	          Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE),    cb);    	non-compiled	[CE]  cannot  find  symbol  message	16	None	replace
485	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  cb,  MISSING_SOURCE),  sourceName);  [CE]  cannot  find  symbol  cb  [FE]                                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  cb,  MISSING_SOURCE),  sourceName);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  cb,  MISSING_SOURCE),  sourceName);	          Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE),    cb);    	non-compiled	[CE]  cannot  find  symbol  cb	16	None	replace
486	[BUG]  [BUGGY]  timeout  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  throw  new  RuntimeException( ", ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	add	throw  new  RuntimeException( ", ");	  throw    new    RuntimeException(       "       ");    throw    new    RuntimeException(   ",       ");    	compilable	timeout	34	1	replace
487	[BUG]  [BUGGY]  throw  new  RuntimeException( ", ");  timeout  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  throw  new  RuntimeException( ", ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw  new  RuntimeException( ", ");	  throw    new    RuntimeException(       "       ");    throw    new    RuntimeException(   ",       ");    	compilable	timeout	34	1	replace
488	[BUG]  [BUGGY]  timeout  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  throw  new  RuntimeException( " ",  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	add	throw  new  RuntimeException( " ",  unexpectedException);	  throw    new    RuntimeException(       "       ");    throw    new    RuntimeException(   ",       ");    	compilable	timeout	34	1	replace
489	[BUG]  [BUGGY]  throw  new  RuntimeException( " ",  unexpectedException);  timeout  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  throw  new  RuntimeException( " ",  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw  new  RuntimeException( " ",  unexpectedException);	  throw    new    RuntimeException(       "       ");    throw    new    RuntimeException(   ",       ");    	compilable	timeout	34	1	replace
490	[BUG]  [BUGGY]  throw  new  NodeTypePruningException( " ");  [CE]  cannot  find  symbol  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  throw  new  NodeTypePruningException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw  new  NodeTypePruningException( " ");	  throw    new    RuntimeException(       "       ");    throw    new    RuntimeException(   ",       ");    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
491	[BUG]  [BUGGY]  Throwable  cfgs  =  scopeCreator.unexpectedException( " ");  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cfgs  =  scopeCreator.unexpectedException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cfgs  =  scopeCreator.unexpectedException( " ");	  throw    cfgs.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
492	[BUG]  [BUGGY]  handleMissingSOURCE(sourceName,  cfgs,  unexpectedException);  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSOURCE(sourceName,  cfgs,  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(sourceName,  cfgs,  unexpectedException);	  handleMissingSOURCE(sourceName,    unexpectedException);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
493	[BUG]  [BUGGY]  cb.report(nodeTypes);  [CE]  cannot  find  symbol  nodeTypes  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  cb.report(nodeTypes);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	cb.report(nodeTypes);	  cb.report(null);    	non-compiled	[CE]  cannot  find  symbol  nodeTypes	79	None	replace
494	[BUG]  [BUGGY]  cb.report(null,  INVALID_SOURCE);  [CE]  cannot  find  symbol  INVALID_SOURCE  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  cb.report(null,  INVALID_SOURCE);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	cb.report(null,  INVALID_SOURCE);	  cb.report(null);    	non-compiled	[CE]  cannot  find  symbol  INVALID_SOURCE	79	None	replace
495	[BUG]  [BUGGY]  scopeCreator.unexpectedException(sourceName, " ");  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  scopeCreator.unexpectedException(sourceName, " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scopeCreator.unexpectedException(sourceName, " ");	  scopeCreator.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
496	[BUG]  [BUGGY]  scopeCreator.unexpectedException( "? ");  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  scopeCreator.unexpectedException( "? ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scopeCreator.unexpectedException( "? ");	  scopeCreator.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
497	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  UNKNOWN_EXPR_TYPE,  MISSING_SOURCE));  [CE]  cannot  find  symbol  UNKNOWN_EXPR_TYPE  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  UNKNOWN_EXPR_TYPE,  MISSING_SOURCE));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  UNKNOWN_EXPR_TYPE,  MISSING_SOURCE));	  Context.report(JSError.make(sourceName,    curNode,    UNKNOWN_EXPR_TYPE));    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_EXPR_TYPE	97	None	replace
498	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  NON_GLOBAL_EXPR_TYPE));  [CE]  cannot  find  symbol  NON_GLOBAL_EXPR_TYPE  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  NON_GLOBAL_EXPR_TYPE));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  NON_GLOBAL_EXPR_TYPE));	  Context.report(JSError.make(sourceName,    curNode,    UNKNOWN_EXPR_TYPE));    	non-compiled	[CE]  cannot  find  symbol  NON_GLOBAL_EXPR_TYPE	97	None	replace
499	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  inputId));  [CE]  no  suitable  method  found  for  make(String,Node,InputId)  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  inputId));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  inputId));	  Context.report(JSError.make(sourceName,    curNode,    UNKNOWN_EXPR_TYPE));    	non-compiled	[CE]  no  suitable  method  found  for  make(String,Node,InputId)	97	None	replace
500	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException( " "  +  sourceName  + ") ");  [CE]  <identifier>  expected  [FE]            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  IllegalStateException( " "  +  sourceName  + ") ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  IllegalStateException( " "  +  sourceName  + ") ");	  Throwables.throw(new    IllegalStateException(   "   "));    	non-compiled	[CE]  <identifier>  expected	50	None	replace
501	[BUG]  [BUGGY]  timeout  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  t  =  new  IllegalStateException( " ");  t.printStackTrace();  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	add	Throwable  t  =  new  IllegalStateException( " ");  t.printStackTrace();	  throw    new    IllegalStateException(   "   "),    unexpectedException;    	compilable	timeout	112	1	replace
502	[BUG]  [BUGGY]  Throwable  t  =  new  IllegalStateException( " ");  t.printStackTrace();  timeout  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  t  =  new  IllegalStateException( " ");  t.printStackTrace();  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  t  =  new  IllegalStateException( " ");  t.printStackTrace();	  throw    new    IllegalStateException(   "   "),    unexpectedException;    	compilable	timeout	112	1	replace
503	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException( " ")),  unexpectedException;  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  IllegalStateException( " ")),  unexpectedException;  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  IllegalStateException( " ")),  unexpectedException;	  throw    new    IllegalStateException(   "   "),    unexpectedException;    	non-compiled	[CE]  <identifier>  expected	112	None	replace
504	[BUG]  [BUGGY]  catch(JSConstantiationException  t)  {  [CE]  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  catch(JSConstantiationException  t)  {  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	catch(JSConstantiationException  t)  {	  catch(RuntimeException    t)    {    	non-compiled	[CE]  	61	None	replace
505	[BUG]  [BUGGY]  catch(RuntimeException  t,  unexpectedException)  {  [CE]  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  catch(RuntimeException  t,  unexpectedException)  {  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	catch(RuntimeException  t,  unexpectedException)  {	  catch(RuntimeException    t)    {    	non-compiled	[CE]  	61	None	replace
506	[BUG]  [BUGGY]  handleMissingSOURCE(uniqueException);  [CE]  cannot  find  symbol  uniqueException  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSOURCE(uniqueException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(uniqueException);	  handleMissingSOURCE(exception);    	non-compiled	[CE]  cannot  find  symbol  uniqueException	67	None	replace
507	[BUG]  [BUGGY]  if(inputId!=  null)  {  Throwable  t  =  new  IllegalStateException( " ");  timeout  =  System.currentTimeMillis();  }  [CE]  cannot  find  symbol  timeout  [FE]            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(inputId!=  null)  {  Throwable  t  =  new  IllegalStateException( " ");  timeout  =  System.currentTimeMillis();  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(inputId!=  null)  {  Throwable  t  =  new  IllegalStateException( " ");  timeout  =  System.currentTimeMillis();  }	  Throwable    t    =    new    IllegalStateException(   "   ");    timeout    	non-compiled	[CE]  cannot  find  symbol  timeout	77	None	replace
508	[BUG]  [BUGGY]  if(inputId!=  null)  {  Throwable  t  =  new  IllegalStateException( " ");  timeout++;  }  [CE]  cannot  find  symbol  timeout  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(inputId!=  null)  {  Throwable  t  =  new  IllegalStateException( " ");  timeout++;  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(inputId!=  null)  {  Throwable  t  =  new  IllegalStateException( " ");  timeout++;  }	  Throwable    t    =    new    IllegalStateException(   "   ");    timeout    	non-compiled	[CE]  cannot  find  symbol  timeout	77	None	replace
509	[BUG]  [BUGGY]  if(inputId!=  null)  {  Throwable  t  =  new  IllegalStateException( " ");  timeout  =  TimeZone.getDefault();  }  [CE]  cannot  find  symbol  timeout  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(inputId!=  null)  {  Throwable  t  =  new  IllegalStateException( " ");  timeout  =  TimeZone.getDefault();  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(inputId!=  null)  {  Throwable  t  =  new  IllegalStateException( " ");  timeout  =  TimeZone.getDefault();  }	  Throwable    t    =    new    IllegalStateException(   "   ");    timeout    	non-compiled	[CE]  cannot  find  symbol  timeout	77	None	replace
510	[BUG]  [BUGGY]  if(inputId!=  null)  {  Throwable  t  =  new  IllegalStateException( " ");  timeout  =  System.err;  }  [CE]  cannot  find  symbol  timeout  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(inputId!=  null)  {  Throwable  t  =  new  IllegalStateException( " ");  timeout  =  System.err;  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(inputId!=  null)  {  Throwable  t  =  new  IllegalStateException( " ");  timeout  =  System.err;  }	  Throwable    t    =    new    IllegalStateException(   "   ");    timeout    	non-compiled	[CE]  cannot  find  symbol  timeout	77	None	replace
511	[BUG]  [BUGGY]  timeout  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(inputId!=  null)  {  Throwable  t  =  new  IllegalStateException( " ");  unexpectedException.printStackTrace();  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	add	if(inputId!=  null)  {  Throwable  t  =  new  IllegalStateException( " ");  unexpectedException.printStackTrace();  }	  Throwable    t    =    new    IllegalStateException(   "   ");    timeout    	compilable	timeout	77	1	replace
512	[BUG]  [BUGGY]  if(inputId!=  null)  {  Throwable  t  =  new  IllegalStateException( " ");  unexpectedException.printStackTrace();  }  timeout  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(inputId!=  null)  {  Throwable  t  =  new  IllegalStateException( " ");  unexpectedException.printStackTrace();  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(inputId!=  null)  {  Throwable  t  =  new  IllegalStateException( " ");  unexpectedException.printStackTrace();  }	  Throwable    t    =    new    IllegalStateException(   "   ");    timeout    	compilable	timeout	77	1	replace
513	[BUG]  [BUGGY]  Throwable  t  =  new  IllegalStateException(   "   ");  Throwable  t  =  new  IllegalStateException('   ");  [CE]  unclosed  character  literal  [FE]            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  t  =  new  IllegalStateException(   "   ");  Throwable  t  =  new  IllegalStateException('   ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable    t    =    new    IllegalStateException(   "   ");    Throwable  t  =  new  IllegalStateException('   ");	  timeout    	non-compiled	[CE]  unclosed  character  literal	76	None	add
514	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  sourceName,  label));  [CE]  cannot  find  symbol  label  [FE]                                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  sourceName,  label));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  sourceName,  label));	          Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE,    sourceName));    	non-compiled	[CE]  cannot  find  symbol  label	18	None	replace
515	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  sourceName,  message));  [CE]  cannot  find  symbol  message  [FE]                                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  sourceName,  message));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  sourceName,  message));	          Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE,    sourceName));    	non-compiled	[CE]  cannot  find  symbol  message	18	None	replace
516	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  n,  MISSING_SOURCE,  sourceName));  [CE]  cannot  find  symbol  n  [FE]                                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  n,  MISSING_SOURCE,  sourceName));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  n,  MISSING_SOURCE,  sourceName));	          Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE,    sourceName));    	non-compiled	[CE]  cannot  find  symbol  n	18	None	replace
517	[BUG]  [BUGGY]  traverseMissingSOURCE(sourceName,  unknownException);  [CE]  cannot  find  symbol  unknownException  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  traverseMissingSOURCE(sourceName,  unknownException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	traverseMissingSOURCE(sourceName,  unknownException);	  traverseMissingSOURCE(unexpectedException);    	non-compiled	[CE]  cannot  find  symbol  unknownException	106	None	replace
518	[BUG]  [BUGGY]  catch(IOException  t,  unexpectedException)  {  [CE]  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  catch(IOException  t,  unexpectedException)  {  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	catch(IOException  t,  unexpectedException)  {	  catch(IOException    t)    {    	non-compiled	[CE]  	58	None	replace
519	[BUG]  [BUGGY]  JSError.make(sourceName,  curNode,  MISSING_SOURCE,  sourceName));  [CE]  ';'  expected  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  JSError.make(sourceName,  curNode,  MISSING_SOURCE,  sourceName));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	JSError.make(sourceName,  curNode,  MISSING_SOURCE,  sourceName));	  throw    new    UnsupportedOperationException(       "       ");    JSError.make(sourceName,    curNode,    NON_GLOBAL_ERROR,    sourceName));    	non-compiled	[CE]  ';'  expected	127	None	replace
520	[BUG]  [BUGGY]  JSError.make(sourceName,  curNode,  NODE_TRAVERSAL_ERROR,  sourceName));  [CE]  ';'  expected  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  JSError.make(sourceName,  curNode,  NODE_TRAVERSAL_ERROR,  sourceName));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	JSError.make(sourceName,  curNode,  NODE_TRAVERSAL_ERROR,  sourceName));	  throw    new    UnsupportedOperationException(       "       ");    JSError.make(sourceName,    curNode,    NON_GLOBAL_ERROR,    sourceName));    	non-compiled	[CE]  ';'  expected	127	None	replace
521	[BUG]  [BUGGY]  timeout  [FE]            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(inputId!=  null)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	add	if(inputId!=  null)  {  throw  new  UnsupportedOperationException( " ");  }	  throw    new    UnsupportedOperationException(       "       ");    throw    new    UnsupportedOperationException(   "       ");    	compilable	timeout	53	1	replace
522	[BUG]  [BUGGY]  if(inputId!=  null)  {  throw  new  UnsupportedOperationException( " ");  }  timeout  [FE]            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(inputId!=  null)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(inputId!=  null)  {  throw  new  UnsupportedOperationException( " ");  }	  throw    new    UnsupportedOperationException(       "       ");    throw    new    UnsupportedOperationException(   "       ");    	compilable	timeout	53	1	replace
523	[BUG]  [BUGGY]  timeout  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(inputId!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	add	if(inputId!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    UnsupportedOperationException(       "       ");    throw    new    UnsupportedOperationException(   "       ");    	compilable	timeout	53	1	replace
524	[BUG]  [BUGGY]  if(inputId!=  null)  {  throw  new  IllegalArgumentException( " ");  }  timeout  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(inputId!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(inputId!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    UnsupportedOperationException(       "       ");    throw    new    UnsupportedOperationException(   "       ");    	compilable	timeout	53	1	replace
525	[BUG]  [BUGGY]  timeout  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(inputId!=  null)  {  throw  new  UnsupportedOperationException( " ");  }  else  {  return;  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	add	if(inputId!=  null)  {  throw  new  UnsupportedOperationException( " ");  }  else  {  return;  }	  throw    new    UnsupportedOperationException(       "       ");    throw    new    UnsupportedOperationException(   "       ");    	compilable	timeout	53	1	replace
526	[BUG]  [BUGGY]  if(inputId!=  null)  {  throw  new  UnsupportedOperationException( " ");  }  else  {  return;  }  timeout  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(inputId!=  null)  {  throw  new  UnsupportedOperationException( " ");  }  else  {  return;  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(inputId!=  null)  {  throw  new  UnsupportedOperationException( " ");  }  else  {  return;  }	  throw    new    UnsupportedOperationException(       "       ");    throw    new    UnsupportedOperationException(   "       ");    	compilable	timeout	53	1	replace
527	[BUG]  [BUGGY]  timeout  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(inputId  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	add	if(inputId  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(       "       ");    throw    new    IllegalArgumentException(   "       ");    	compilable	timeout	28	1	replace
528	[BUG]  [BUGGY]  if(inputId  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  timeout  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(inputId  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(inputId  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(       "       ");    throw    new    IllegalArgumentException(   "       ");    	compilable	timeout	28	1	replace
529	[BUG]  [BUGGY]  handleMissingScopeException(sourceName,  null);  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingScopeException(sourceName,  null);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(sourceName,  null);	  handleMissingScopeException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
530	[BUG]  [BUGGY]  catch(RuntimeException  nfe)  {  [CE]  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  catch(RuntimeException  nfe)  {  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	catch(RuntimeException  nfe)  {	  catch(NodeNotFoundException    nfe)    {    	non-compiled	[CE]  	60	None	replace
531	[BUG]  [BUGGY]  Callback  callback  =  cb.printStackTrace();  [CE]  cannot  find  symbol  cb  [FE]            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Callback  callback  =  cb.printStackTrace();  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Callback  callback  =  cb.printStackTrace();	  callback.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  cb	82	None	replace
532	[BUG]  [BUGGY]  callback.printStackTrace(outputId);  [CE]  cannot  find  symbol  outputId  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  callback.printStackTrace(outputId);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	callback.printStackTrace(outputId);	  callback.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  outputId	82	None	replace
533	[BUG]  [BUGGY]  callback.printStackTrace(null);  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  callback.printStackTrace(null);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	callback.printStackTrace(null);	  callback.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
534	[BUG]  [BUGGY]  JSError.make(sourceName,  cb,  NON_GLOBAL_ERROR,  sourceName));  [CE]  ';'  expected  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  JSError.make(sourceName,  cb,  NON_GLOBAL_ERROR,  sourceName));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	JSError.make(sourceName,  cb,  NON_GLOBAL_ERROR,  sourceName));	  throw    new    IOException(   "   ");    	non-compiled	[CE]  ';'  expected	94	None	replace
535	[BUG]  [BUGGY]  JSError.make(sourceName,  cb,  MISSING_SOURCE, " "),  unexpectedException);  [CE]  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  JSError.make(sourceName,  cb,  MISSING_SOURCE, " "),  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	JSError.make(sourceName,  cb,  MISSING_SOURCE, " "),  unexpectedException);	  throw    new    IOException(   "   ");    	non-compiled	[CE]  	94	None	replace
536	[BUG]  [BUGGY]  handleMissingStatement(null,  inputId);  [CE]  cannot  find  symbol  [FE]                              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(null,  inputId);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(null,  inputId);	  handleMissingStatement(null);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
537	[BUG]  [BUGGY]  JSError.make(sourceName,  curNode,  INVALID_SOURCE,  sourceName));  [CE]  ';'  expected  [FE]            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  JSError.make(sourceName,  curNode,  INVALID_SOURCE,  sourceName));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	JSError.make(sourceName,  curNode,  INVALID_SOURCE,  sourceName));	  throw    new    UnsupportedOperationException(       "       ");    JSError.make(sourceName,    curNode,    MISSING_SOURCE,    sourceName));    	non-compiled	[CE]  ';'  expected	125	None	replace
538	[BUG]  [BUGGY]  Error.make(sourceName,  curNode,  MISSING_SOURCE,  message));  [CE]  ';'  expected  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Error.make(sourceName,  curNode,  MISSING_SOURCE,  message));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Error.make(sourceName,  curNode,  MISSING_SOURCE,  message));	  throw    new    UnsupportedOperationException(       "       ");    JSError.make(sourceName,    curNode,    MISSING_SOURCE,    sourceName));    	non-compiled	[CE]  ';'  expected	125	None	replace
539	[BUG]  [BUGGY]  traverseMissingStatement(root);  [CE]  cannot  find  symbol  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  traverseMissingStatement(root);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	traverseMissingStatement(root);	  traverseMissingStatement();    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
540	[BUG]  [BUGGY]  traverseMissingStatement(curNode);  [CE]  cannot  find  symbol  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  traverseMissingStatement(curNode);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	traverseMissingStatement(curNode);	  traverseMissingStatement();    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
541	[BUG]  [BUGGY]  handleMissingStatement(node);  [CE]  cannot  find  symbol  node  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(node);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(node);	  handleMissingStatement(n);    	non-compiled	[CE]  cannot  find  symbol  node	39	None	replace
542	[BUG]  [BUGGY]  Throwable  t  =  new  UnsupportedOperationException( " ");  t.initCause(unknownException);  [CE]  cannot  find  symbol  unknownException  [FE]            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  t  =  new  UnsupportedOperationException( " ");  t.initCause(unknownException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  t  =  new  UnsupportedOperationException( " ");  t.initCause(unknownException);	  throw    new    UnsupportedOperationException(       "       ");    throw    new    UnsupportedOperationException(   ".       ");    	non-compiled	[CE]  cannot  find  symbol  unknownException	96	None	replace
543	[BUG]  [BUGGY]  timeout  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  t  =  new  UnsupportedOperationException( " ");  t.initCause(unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	add	Throwable  t  =  new  UnsupportedOperationException( " ");  t.initCause(unexpectedException);	  throw    new    UnsupportedOperationException(       "       ");    throw    new    UnsupportedOperationException(   ".       ");    	compilable	timeout	96	1	replace
544	[BUG]  [BUGGY]  Throwable  t  =  new  UnsupportedOperationException( " ");  t.initCause(unexpectedException);  timeout  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  t  =  new  UnsupportedOperationException( " ");  t.initCause(unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  t  =  new  UnsupportedOperationException( " ");  t.initCause(unexpectedException);	  throw    new    UnsupportedOperationException(       "       ");    throw    new    UnsupportedOperationException(   ".       ");    	compilable	timeout	96	1	replace
545	[BUG]  [BUGGY]  timeout  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  t  =  new  UnsupportedOperationException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	add	Throwable  t  =  new  UnsupportedOperationException( " ");	  throw    new    UnsupportedOperationException(       "       ");    throw    new    UnsupportedOperationException(   ".       ");    	compilable	timeout	96	1	replace
546	[BUG]  [BUGGY]  Throwable  t  =  new  UnsupportedOperationException( " ");  timeout  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  t  =  new  UnsupportedOperationException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  t  =  new  UnsupportedOperationException( " ");	  throw    new    UnsupportedOperationException(       "       ");    throw    new    UnsupportedOperationException(   ".       ");    	compilable	timeout	96	1	replace
547	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  label,  MISSING_SOURCE,   "   "));  [CE]  cannot  find  symbol  label  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  label,  MISSING_SOURCE,   "   "));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  label,  MISSING_SOURCE,   "   "));	  Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE,   "   "));    	non-compiled	[CE]  cannot  find  symbol  label	84	None	replace
548	[BUG]  [BUGGY]  scopeCallback.printStackTrace(inputId);  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  scopeCallback.printStackTrace(inputId);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scopeCallback.printStackTrace(inputId);	  scopeCallback.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
549	[BUG]  [BUGGY]  scopeCallback.printStackTrace(System.err);  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  scopeCallback.printStackTrace(System.err);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scopeCallback.printStackTrace(System.err);	  scopeCallback.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
550	[BUG]  [BUGGY]  Paths.unexpectedException( " ");  [CE]  cannot  find  symbol  Paths  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Paths.unexpectedException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Paths.unexpectedException( " ");	  Throwables.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  Paths	4	None	replace
551	[BUG]  [BUGGY]  MutableMap.unexpectedException( " ");  [CE]  cannot  find  symbol  MutableMap  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  MutableMap.unexpectedException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	MutableMap.unexpectedException( " ");	  Throwables.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  MutableMap	4	None	replace
552	[BUG]  [BUGGY]  Throwables.throw(new  UnexpectedException( " "),  unexpectedException);  [CE]  <identifier>  expected  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  UnexpectedException( " "),  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  UnexpectedException( " "),  unexpectedException);	  Throwables.throw(new    UnexpectedException(   "   "));    	non-compiled	[CE]  <identifier>  expected	75	None	replace
553	[BUG]  [BUGGY]  Throwables.throw(new  UnexpectedException( ", "));  [CE]  <identifier>  expected  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  UnexpectedException( ", "));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  UnexpectedException( ", "));	  Throwables.throw(new    UnexpectedException(   "   "));    	non-compiled	[CE]  <identifier>  expected	75	None	replace
554	[BUG]  [BUGGY]  Throwable  cb  =  key.unexpectedException( " ");  [CE]  cannot  find  symbol  key  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cb  =  key.unexpectedException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cb  =  key.unexpectedException( " ");	  Throwable    cb    =    sourceName.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  key	3	None	replace
555	[BUG]  [BUGGY]  Throwable  cb  =  nodeTypes.unexpectedException( "   ");  [CE]  cannot  find  symbol  nodeTypes  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cb  =  nodeTypes.unexpectedException( "   ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cb  =  nodeTypes.unexpectedException( "   ");	  Throwable    cb    =    sourceName.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  nodeTypes	3	None	replace
556	[BUG]  [BUGGY]  handleMissingScopeException(root,  null,  inputId);  [CE]  cannot  find  symbol  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingScopeException(root,  null,  inputId);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(root,  null,  inputId);	  handleMissingScopeException(root,    null);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
557	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException( " "),  unexpectedException,  sourceName);  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  IllegalStateException( " "),  unexpectedException,  sourceName);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  IllegalStateException( " "),  unexpectedException,  sourceName);	  Throwables.throw(new    IllegalStateException(   "   "),    unexpectedException);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
558	[BUG]  [BUGGY]  Throw  new  IllegalStatementException( " ");  [CE]  not  a  statement  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throw  new  IllegalStatementException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throw  new  IllegalStatementException( " ");	  throw    new    IllegalArgumentException(       "       ");    Throw    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  not  a  statement	29	None	replace
559	[BUG]  [BUGGY]  Throwables.throw(new  RuntimeException( " "),  cb,  unexpectedException);  [CE]  <identifier>  expected  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  RuntimeException( " "),  cb,  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  RuntimeException( " "),  cb,  unexpectedException);	  Throwables.throw(new    RuntimeException(   "   "),    unexpectedException);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
560	[BUG]  [BUGGY]  Throwables.throw(new  RuntimeException( " "),  sourceName);  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  RuntimeException( " "),  sourceName);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  RuntimeException( " "),  sourceName);	  Throwables.throw(new    RuntimeException(   "   "),    unexpectedException);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
561	[BUG]  [BUGGY]  handleMissingScopeException(root,  node);  [CE]  cannot  find  symbol  node  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingScopeException(root,  node);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(root,  node);	  handleMissingScopeException(curNode);    	non-compiled	[CE]  cannot  find  symbol  node	114	None	replace
562	[BUG]  [BUGGY]  handleMissingScopeException(root,  unknownNode);  [CE]  cannot  find  symbol  unknownNode  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingScopeException(root,  unknownNode);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(root,  unknownNode);	  handleMissingScopeException(curNode);    	non-compiled	[CE]  cannot  find  symbol  unknownNode	114	None	replace
563	[BUG]  [BUGGY]  if(inputId!=  null)  {  Throwable  t  =  new  IllegalArgumentException( " ");  timeout++;  }  [CE]  cannot  find  symbol  timeout  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(inputId!=  null)  {  Throwable  t  =  new  IllegalArgumentException( " ");  timeout++;  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(inputId!=  null)  {  Throwable  t  =  new  IllegalArgumentException( " ");  timeout++;  }	  Throwable    t    =    new    IllegalArgumentException(   "   ");    timeout    	non-compiled	[CE]  cannot  find  symbol  timeout	100	None	replace
564	[BUG]  [BUGGY]  if(inputId!=  null)  {  Throwable  t  =  new  IllegalArgumentException( " ");  timeout  =  System.currentTimeMillis();  }  [CE]  cannot  find  symbol  timeout  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(inputId!=  null)  {  Throwable  t  =  new  IllegalArgumentException( " ");  timeout  =  System.currentTimeMillis();  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(inputId!=  null)  {  Throwable  t  =  new  IllegalArgumentException( " ");  timeout  =  System.currentTimeMillis();  }	  Throwable    t    =    new    IllegalArgumentException(   "   ");    timeout    	non-compiled	[CE]  cannot  find  symbol  timeout	100	None	replace
565	[BUG]  [BUGGY]  if(inputId!=  null)  {  Throwable  t  =  new  IllegalArgumentException( " ");  timeout  =  TimeZone.getDefault();  }  [CE]  cannot  find  symbol  timeout  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(inputId!=  null)  {  Throwable  t  =  new  IllegalArgumentException( " ");  timeout  =  TimeZone.getDefault();  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(inputId!=  null)  {  Throwable  t  =  new  IllegalArgumentException( " ");  timeout  =  TimeZone.getDefault();  }	  Throwable    t    =    new    IllegalArgumentException(   "   ");    timeout    	non-compiled	[CE]  cannot  find  symbol  timeout	100	None	replace
566	[BUG]  [BUGGY]  if(inputId!=  null)  {  Throwable  t  =  new  IllegalArgumentException( " ");  timeout  =  System.err;  }  [CE]  cannot  find  symbol  timeout  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(inputId!=  null)  {  Throwable  t  =  new  IllegalArgumentException( " ");  timeout  =  System.err;  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(inputId!=  null)  {  Throwable  t  =  new  IllegalArgumentException( " ");  timeout  =  System.err;  }	  Throwable    t    =    new    IllegalArgumentException(   "   ");    timeout    	non-compiled	[CE]  cannot  find  symbol  timeout	100	None	replace
567	[BUG]  [BUGGY]  handleMissingSOURCE(unexpectedException,  root,  inputId);  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSOURCE(unexpectedException,  root,  inputId);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(unexpectedException,  root,  inputId);	  handleMissingSOURCE(unexpectedException,    root);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
568	[BUG]  [BUGGY]  handleMissingSOURCE(unexpectedException,  root,  null);  [CE]  cannot  find  symbol  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSOURCE(unexpectedException,  root,  null);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(unexpectedException,  root,  null);	  handleMissingSOURCE(unexpectedException,    root);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
569	[BUG]  [BUGGY]  Throwable  cause  =  new  UnexpectedException( " "  +  unexpectedException);  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  new  UnexpectedException( " "  +  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cause  =  new  UnexpectedException( " "  +  unexpectedException);	  Throwable    cause    =    new    UnexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
570	[BUG]  [BUGGY]  Throwable  cause  =  new  UnexpectedException( ", ");  [CE]  cannot  find  symbol  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  new  UnexpectedException( ", ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cause  =  new  UnexpectedException( ", ");	  Throwable    cause    =    new    UnexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
571	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " "  +  unexpectedException);  [CE]  <identifier>  expected  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " "  +  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw  new  IllegalStateException( " "  +  unexpectedException);	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	43	None	replace
572	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( ", ");  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( ", ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw  new  IllegalStateException( ", ");	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	43	None	replace
573	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " "),  unexpectedException;  [CE]  <identifier>  expected  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " "),  unexpectedException;  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw  new  IllegalStateException( " "),  unexpectedException;	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	43	None	replace
574	[BUG]  [BUGGY]  handleMissingStatement(unknownNode);  [CE]  cannot  find  symbol  unknownNode  [FE]                                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(unknownNode);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(unknownNode);	  handleMissingStatement(nodeTypes);    	non-compiled	[CE]  cannot  find  symbol  unknownNode	41	None	replace
575	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  nodeTypes);  [CE]  cannot  find  symbol  nodeTypes  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  NodeTraversal.traverse(compiler,  root,  nodeTypes);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	NodeTraversal.traverse(compiler,  root,  nodeTypes);	  throw    new    RuntimeException(       "       ");    throw    new    RuntimeException(       "       ");    	non-compiled	[CE]  cannot  find  symbol  nodeTypes	32	None	replace
576	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  NON_GLOBAL_EXPR_RESULT));  [CE]  cannot  find  symbol  NON_GLOBAL_EXPR_RESULT  [FE]                              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  NON_GLOBAL_EXPR_RESULT));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  NON_GLOBAL_EXPR_RESULT));	          Context.report(JSError.make(sourceName,    curNode,    INVALID_SOURCE));    	non-compiled	[CE]  cannot  find  symbol  NON_GLOBAL_EXPR_RESULT	14	None	replace
577	[BUG]  [BUGGY]  timeout  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  throw  new  IllegalArgumentException( ", ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	add	throw  new  IllegalArgumentException( ", ");	  throw    new    IllegalArgumentException(       "       ");    throw    new    IllegalArgumentException(   ",       ");    	compilable	timeout	124	1	replace
578	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( ", ");  timeout  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  throw  new  IllegalArgumentException( ", ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw  new  IllegalArgumentException( ", ");	  throw    new    IllegalArgumentException(       "       ");    throw    new    IllegalArgumentException(   ",       ");    	compilable	timeout	124	1	replace
579	[BUG]  [BUGGY]  traverseMissingScopeException(root,  inputId);  [CE]  cannot  find  symbol  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  traverseMissingScopeException(root,  inputId);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	traverseMissingScopeException(root,  inputId);	  traverseMissingScopeException(root);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
580	[BUG]  [BUGGY]  traverseMissingScopeException(root,  cfgs);  [CE]  cannot  find  symbol  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  traverseMissingScopeException(root,  cfgs);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	traverseMissingScopeException(root,  cfgs);	  traverseMissingScopeException(root);    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
581	[BUG]  [BUGGY]  traverseMissingScopeException(root,  unwrapped);  [CE]  cannot  find  symbol  unwrapped  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  traverseMissingScopeException(root,  unwrapped);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	traverseMissingScopeException(root,  unwrapped);	  traverseMissingScopeException(root);    	non-compiled	[CE]  cannot  find  symbol  unwrapped	8	None	replace
582	[BUG]  [BUGGY]  reportUnexpectedException( " "  +  unexpectedException);  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  reportUnexpectedException( " "  +  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	reportUnexpectedException( " "  +  unexpectedException);	  reportUnexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
583	[BUG]  [BUGGY]  Reporter.error( "Unexpected  source  name: "  +  sourceName);  [CE]  cannot  find  symbol  Reporter  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Reporter.error( "Unexpected  source  name: "  +  sourceName);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Reporter.error( "Unexpected  source  name: "  +  sourceName);	  reportUnexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  Reporter	89	None	replace
584	[BUG]  [BUGGY]  catch(NodeNotFoundException  e,  unexpectedException)  {  [CE]  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  catch(NodeNotFoundException  e,  unexpectedException)  {  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	catch(NodeNotFoundException  e,  unexpectedException)  {	  catch(NodeNotFoundException    e)    {    	non-compiled	[CE]  	62	None	replace
585	[BUG]  [BUGGY]  handleMissingStatement(unknownException,  sourceName);  [CE]  cannot  find  symbol  unknownException  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(unknownException,  sourceName);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(unknownException,  sourceName);	  handleMissingStatement(unknownException);    	non-compiled	[CE]  cannot  find  symbol  unknownException	38	None	replace
586	[BUG]  [BUGGY]  handleMissingStatement(unknownException,  root);  [CE]  cannot  find  symbol  unknownException  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(unknownException,  root);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(unknownException,  root);	  handleMissingStatement(unknownException);    	non-compiled	[CE]  cannot  find  symbol  unknownException	38	None	replace
587	[BUG]  [BUGGY]  catch(Exception  t,  unexpectedException)  {  [CE]  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  catch(Exception  t,  unexpectedException)  {  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	catch(Exception  t,  unexpectedException)  {	  catch(Exception    t)    {    	non-compiled	[CE]  	57	None	replace
588	[BUG]  [BUGGY]  scopeCreator.printStackTrace(inputId);  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  scopeCreator.printStackTrace(inputId);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scopeCreator.printStackTrace(inputId);	  scopeCreator.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
589	[BUG]  [BUGGY]  scopeCreator.printStackTrace(sourceName);  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  scopeCreator.printStackTrace(sourceName);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scopeCreator.printStackTrace(sourceName);	  scopeCreator.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
590	[BUG]  [BUGGY]  handleMissingSOURCE(sourceName,  unknownException);  [CE]  cannot  find  symbol  unknownException  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSOURCE(sourceName,  unknownException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(sourceName,  unknownException);	  handleMissingSOURCE(unexpectedException,    sourceName);    	non-compiled	[CE]  cannot  find  symbol  unknownException	63	None	replace
591	[BUG]  [BUGGY]  Context.report(null,  NODE_TRAVERSAL_ERROR,   "Unexpected  exception ");  [CE]  cannot  find  symbol  Context  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(null,  NODE_TRAVERSAL_ERROR,   "Unexpected  exception ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(null,  NODE_TRAVERSAL_ERROR,   "Unexpected  exception ");	  Context.report(null,    MISSING_SOURCE,   "Unexpected    exception   ");    	non-compiled	[CE]  cannot  find  symbol  Context	103	None	replace
592	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  INVALID_SOURCE,  label));  [CE]  cannot  find  symbol  INVALID_SOURCE  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  INVALID_SOURCE,  label));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  INVALID_SOURCE,  label));	          Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE,    message));    	non-compiled	[CE]  cannot  find  symbol  INVALID_SOURCE	107	None	replace
593	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  MISSING_SOURCE,  label));  [CE]  cannot  find  symbol  NON_GLOBAL_ERROR  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  MISSING_SOURCE,  label));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  MISSING_SOURCE,  label));	          Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE,    message));    	non-compiled	[CE]  cannot  find  symbol  NON_GLOBAL_ERROR	107	None	replace
594	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  label));  [CE]  cannot  find  symbol  NON_GLOBAL_ERROR  [FE]                              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  label));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  label));	          Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE,    message));    	non-compiled	[CE]  cannot  find  symbol  NON_GLOBAL_ERROR	107	None	replace
595	[BUG]  [BUGGY]  Throwable  t  =  new  IllegalStateException( " "):  unexpectedException( " ");  [CE]  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  t  =  new  IllegalStateException( " "):  unexpectedException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  t  =  new  IllegalStateException( " "):  unexpectedException( " ");	  throw    new    IllegalStateException(   "   ")    :    unexpectedException(   "   ");    	non-compiled	[CE]  	113	None	replace
596	[BUG]  [BUGGY]  new  IllegalStateException( " ")  :  unexpectedException( " ");  [CE]  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  new  IllegalStateException( " ")  :  unexpectedException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	new  IllegalStateException( " ")  :  unexpectedException( " ");	  throw    new    IllegalStateException(   "   ")    :    unexpectedException(   "   ");    	non-compiled	[CE]  	113	None	replace
597	[BUG]  [BUGGY]  timeout  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  throw  new  RuntimeException( ". ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	add	throw  new  RuntimeException( ". ");	  throw    new    RuntimeException(       "       ");    throw    new    RuntimeException(.   "       ");    	compilable	timeout	90	1	replace
598	[BUG]  [BUGGY]  throw  new  RuntimeException( ". ");  timeout  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  throw  new  RuntimeException( ". ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw  new  RuntimeException( ". ");	  throw    new    RuntimeException(       "       ");    throw    new    RuntimeException(.   "       ");    	compilable	timeout	90	1	replace
599	[BUG]  [BUGGY]  cb.report(null, "Unexpected  exception: "  +  unexpectedException);  [CE]  cannot  find  symbol  cb  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  cb.report(null, "Unexpected  exception: "  +  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	cb.report(null, "Unexpected  exception: "  +  unexpectedException);	  throw    new    RuntimeException(       "       ");    throw    new    RuntimeException(.   "       ");    	non-compiled	[CE]  cannot  find  symbol  cb	90	None	replace
600	[BUG]  [BUGGY]  cb.report(nodeTypes.size()  -  1);  [CE]  cannot  find  symbol  nodeTypes  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  cb.report(nodeTypes.size()  -  1);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	cb.report(nodeTypes.size()  -  1);	  throw    new    RuntimeException(       "       ");    throw    new    RuntimeException(.   "       ");    	non-compiled	[CE]  cannot  find  symbol  nodeTypes	90	None	replace
601	[BUG]  [BUGGY]  UnsupportedOperationException(sourceName,  cb);  [CE]  cannot  find  symbol  cb  [FE]            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  UnsupportedOperationException(sourceName,  cb);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	UnsupportedOperationException(sourceName,  cb);	  UnsupportedOperationException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  cb	78	None	replace
602	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  n,  curNode,  MISSING_SOURCE),  unexpectedException);  [CE]  cannot  find  symbol  n  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  n,  curNode,  MISSING_SOURCE),  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  n,  curNode,  MISSING_SOURCE),  unexpectedException);	  Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE),    unexpectedException);    	non-compiled	[CE]  cannot  find  symbol  n	19	None	replace
603	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(inputId));  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(inputId));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw  new  IllegalArgumentException( " ".equals(inputId));	  throw    new    IllegalArgumentException(       "       ");    throw    new    IllegalArgumentException(   ".       ");    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(boolean)	80	None	replace
604	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ".equals(inputId)?  null  :  inputId);  [CE]  no  suitable  constructor  found  for  IllegalArgumentException(InputId)  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  throw  new  IllegalArgumentException( " ".equals(inputId)?  null  :  inputId);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw  new  IllegalArgumentException( " ".equals(inputId)?  null  :  inputId);	  throw    new    IllegalArgumentException(       "       ");    throw    new    IllegalArgumentException(   ".       ");    	non-compiled	[CE]  no  suitable  constructor  found  for  IllegalArgumentException(InputId)	80	None	replace
605	[BUG]  [BUGGY]  catch(NodeFormatException  ex)  {  [CE]  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  catch(NodeFormatException  ex)  {  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	catch(NodeFormatException  ex)  {	  catch(Exception    ex)    {    	non-compiled	[CE]  	123	None	replace
606	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  n,  curNode,  MISSING_SOURCE));  [CE]  cannot  find  symbol  n  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  n,  curNode,  MISSING_SOURCE));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  n,  curNode,  MISSING_SOURCE));	          Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE));    	non-compiled	[CE]  cannot  find  symbol  n	12	None	replace
607	[BUG]  [BUGGY]  traverseMissingScopeException(root,  unexpectedException,  sourceName);  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  traverseMissingScopeException(root,  unexpectedException,  sourceName);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	traverseMissingScopeException(root,  unexpectedException,  sourceName);	  traverseMissingScopeException(root,    unexpectedException);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
608	[BUG]  [BUGGY]  traverseMissingScopeException(root,  MISSING_SOURCE);  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  traverseMissingScopeException(root,  MISSING_SOURCE);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	traverseMissingScopeException(root,  MISSING_SOURCE);	  traverseMissingScopeException(root,    unexpectedException);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
609	[BUG]  [BUGGY]  traverseMissingScopeException(root,  INVALID_SOURCE);  [CE]  cannot  find  symbol  INVALID_SOURCE  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  traverseMissingScopeException(root,  INVALID_SOURCE);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	traverseMissingScopeException(root,  INVALID_SOURCE);	  traverseMissingScopeException(root,    unexpectedException);    	non-compiled	[CE]  cannot  find  symbol  INVALID_SOURCE	88	None	replace
610	[BUG]  [BUGGY]  Throwables.throw  new  UnexpectedException( " "  +  unexpectedException);  [CE]  <identifier>  expected  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw  new  UnexpectedException( " "  +  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw  new  UnexpectedException( " "  +  unexpectedException);	  Throwables.throw    new    UnexpectedException(   "   ");    	non-compiled	[CE]  <identifier>  expected	74	None	replace
611	[BUG]  [BUGGY]  Throwables.throw  new  UnexpectedException( ", ");  [CE]  <identifier>  expected  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw  new  UnexpectedException( ", ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw  new  UnexpectedException( ", ");	  Throwables.throw    new    UnexpectedException(   "   ");    	non-compiled	[CE]  <identifier>  expected	74	None	replace
612	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  n,  curNode,  MISSING_SOURCE,  inputId));  [CE]  cannot  find  symbol  n  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  n,  curNode,  MISSING_SOURCE,  inputId));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  n,  curNode,  MISSING_SOURCE,  inputId));	  Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE,    inputId));    	non-compiled	[CE]  cannot  find  symbol  n	101	None	replace
613	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  INVALID_NAME,  inputId));  [CE]  cannot  find  symbol  INVALID_NAME  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  INVALID_NAME,  inputId));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  INVALID_NAME,  inputId));	  Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE,    inputId));    	non-compiled	[CE]  cannot  find  symbol  INVALID_NAME	101	None	replace
614	[BUG]  [BUGGY]  Throwable  cause  =  new  IllegalArgumentException(   "   ");  Throwable  cause  =  new  IllegalArgumentException('   ");  [CE]  unclosed  character  literal  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  new  IllegalArgumentException(   "   ");  Throwable  cause  =  new  IllegalArgumentException('   ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable    cause    =    new    IllegalArgumentException(   "   ");    Throwable  cause  =  new  IllegalArgumentException('   ");	  timeout    	non-compiled	[CE]  unclosed  character  literal	116	None	add
615	[BUG]  [BUGGY]  Throwable  cause  =  new  IllegalArgumentException(   "   ");  Throwable  cause  =  new  IllegalArgumentException( ")   ");  [CE]  variable  cause  is  already  defined  in  method  traverse(Node)  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  new  IllegalArgumentException(   "   ");  Throwable  cause  =  new  IllegalArgumentException( ")   ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable    cause    =    new    IllegalArgumentException(   "   ");    Throwable  cause  =  new  IllegalArgumentException( ")   ");	  timeout    	non-compiled	[CE]  variable  cause  is  already  defined  in  method  traverse(Node)	116	None	add
616	[BUG]  [BUGGY]  throw  new  RuntimeException(, " ");  [CE]  illegal  start  of  expression  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  throw  new  RuntimeException(, " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw  new  RuntimeException(, " ");	  throw    new    RuntimeException(       "       ");    throw    new    RuntimeException(,   "       ");    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
617	[BUG]  [BUGGY]  cb.report(null,  null);  [CE]  cannot  find  symbol  cb  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  cb.report(null,  null);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	cb.report(null,  null);	  throw    new    RuntimeException(       "       ");    throw    new    RuntimeException(,   "       ");    	non-compiled	[CE]  cannot  find  symbol  cb	35	None	replace
618	[BUG]  [BUGGY]  timeout  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  throw  new  IllegalArgumentException( ". ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	add	throw  new  IllegalArgumentException( ". ");	  throw    new    IllegalArgumentException(       "       ");    throw    new    IllegalArgumentException(.   "       ");    	compilable	timeout	81	1	replace
619	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( ". ");  timeout  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  throw  new  IllegalArgumentException( ". ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw  new  IllegalArgumentException( ". ");	  throw    new    IllegalArgumentException(       "       ");    throw    new    IllegalArgumentException(.   "       ");    	compilable	timeout	81	1	replace
620	[BUG]  [BUGGY]  Throwable  cause  =  cb.getCurrentMatcherException( " ");  [CE]  cannot  find  symbol  cb  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  cb.getCurrentMatcherException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cause  =  cb.getCurrentMatcherException( " ");	  throw    new    IllegalArgumentException(       "       ");    throw    new    IllegalArgumentException(.   "       ");    	non-compiled	[CE]  cannot  find  symbol  cb	81	None	replace
621	[BUG]  [BUGGY]  Throwable  cause  =  cb.getCurrentMissingException();  [CE]  cannot  find  symbol  cb  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  cb.getCurrentMissingException();  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cause  =  cb.getCurrentMissingException();	  throw    new    IllegalArgumentException(       "       ");    throw    new    IllegalArgumentException(.   "       ");    	non-compiled	[CE]  cannot  find  symbol  cb	81	None	replace
622	[BUG]  [BUGGY]  timeout  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " "  +  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	add	Throwable  cause  =  new  IllegalArgumentException( " "  +  unexpectedException);	  Throwable    cause    =    new    IllegalArgumentException(   "   ");    timeout    	compilable	timeout	117	1	replace
623	[BUG]  [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " "  +  unexpectedException);  timeout  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " "  +  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cause  =  new  IllegalArgumentException( " "  +  unexpectedException);	  Throwable    cause    =    new    IllegalArgumentException(   "   ");    timeout    	compilable	timeout	117	1	replace
624	[BUG]  [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " ");  cb.initCurrentScope();  [CE]  cannot  find  symbol  cb  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " ");  cb.initCurrentScope();  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cause  =  new  IllegalArgumentException( " ");  cb.initCurrentScope();	  Throwable    cause    =    new    IllegalArgumentException(   "   ");    timeout    	non-compiled	[CE]  cannot  find  symbol  cb	117	None	replace
625	[BUG]  [BUGGY]  timeout  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " "  +  unexpectedException.getMessage());  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	add	Throwable  cause  =  new  IllegalArgumentException( " "  +  unexpectedException.getMessage());	  Throwable    cause    =    new    IllegalArgumentException(   "   ");    timeout    	compilable	timeout	117	1	replace
626	[BUG]  [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " "  +  unexpectedException.getMessage());  timeout  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " "  +  unexpectedException.getMessage());  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cause  =  new  IllegalArgumentException( " "  +  unexpectedException.getMessage());	  Throwable    cause    =    new    IllegalArgumentException(   "   ");    timeout    	compilable	timeout	117	1	replace
627	[BUG]  [BUGGY]  catch(UnsupportedOperationException  e)  {  [CE]  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  catch(UnsupportedOperationException  e)  {  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	catch(UnsupportedOperationException  e)  {	  catch(Exception    e)    {    	non-compiled	[CE]  	121	None	replace
628	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  unexpectedException);  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw  new  IllegalArgumentException( " "  +  unexpectedException);	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	44	None	replace
629	[BUG]  [BUGGY]  scope.printStackTrace(outputId);  [CE]  cannot  find  symbol  outputId  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  scope.printStackTrace(outputId);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scope.printStackTrace(outputId);	  scope.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  outputId	23	None	replace
630	[BUG]  [BUGGY]  scope.printStackTrace(System.err);  [CE]  cannot  find  symbol  scope  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  scope.printStackTrace(System.err);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scope.printStackTrace(System.err);	  scope.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  scope	23	None	replace
631	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  inputId,  scopeCreator));  [CE]  cannot  find  symbol  NON_GLOBAL_ERROR  [FE]                                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  inputId,  scopeCreator));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  inputId,  scopeCreator));	          Context.report(JSError.make(sourceName,    curNode,    NON_GLOBAL_ERROR,    inputId));    	non-compiled	[CE]  cannot  find  symbol  NON_GLOBAL_ERROR	17	None	replace
632	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  UNKNOWN_SOURCE_ERROR,  inputId));  [CE]  cannot  find  symbol  UNKNOWN_SOURCE_ERROR  [FE]                                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  UNKNOWN_SOURCE_ERROR,  inputId));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  UNKNOWN_SOURCE_ERROR,  inputId));	          Context.report(JSError.make(sourceName,    curNode,    NON_GLOBAL_ERROR,    inputId));    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_SOURCE_ERROR	17	None	replace
633	[BUG]  [BUGGY]  handleMissingStatement(unwrappedNode,  curNode);  [CE]  cannot  find  symbol  unwrappedNode  [FE]                                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(unwrappedNode,  curNode);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(unwrappedNode,  curNode);	  handleMissingStatement(e,    curNode);    	non-compiled	[CE]  cannot  find  symbol  unwrappedNode	42	None	replace
634	[BUG]  [BUGGY]  Throwable  cause  =  System.err.println( "Unexpected  IllegalArgumentException ");  [CE]  incompatible  types  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  System.err.println( "Unexpected  IllegalArgumentException ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cause  =  System.err.println( "Unexpected  IllegalArgumentException ");	  throw    new    IllegalArgumentException(       "       ");    throw    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  incompatible  types	28	None	replace
635	[BUG]  [BUGGY]  Throwable  cause  =  System.err.println( "Unexpected  IllegalStatement ");  [CE]  incompatible  types  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  System.err.println( "Unexpected  IllegalStatement ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cause  =  System.err.println( "Unexpected  IllegalStatement ");	  throw    new    IllegalArgumentException(       "       ");    throw    new    IllegalArgumentException(   "       ");    	non-compiled	[CE]  incompatible  types	28	None	replace
636	[BUG]  [BUGGY]  handleMissingStatement(n,  root);  [CE]  cannot  find  symbol  n  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(n,  root);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(n,  root);	  handleMissingStatement(e,    root);    	non-compiled	[CE]  cannot  find  symbol  n	87	None	replace
637	[BUG]  [BUGGY]  handleMissingStatement(unknownNode,  root);  [CE]  cannot  find  symbol  unknownNode  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(unknownNode,  root);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(unknownNode,  root);	  handleMissingStatement(e,    root);    	non-compiled	[CE]  cannot  find  symbol  unknownNode	87	None	replace
638	[BUG]  [BUGGY]  handleMissingStatement(root,  cfgs);  [CE]  cannot  find  symbol  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(root,  cfgs);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(root,  cfgs);	  handleMissingStatement(e,    root);    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
639	[BUG]  [BUGGY]  if(include)  {  throw  new  IllegalStateException( " ");  }  [CE]  cannot  find  symbol  include  [FE]            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(include)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(include)  {  throw  new  IllegalStateException( " ");  }	  throw    new    IllegalStateException(       "       ");    throw    new    IllegalStateException(   "       ");    	non-compiled	[CE]  cannot  find  symbol  include	46	None	replace
640	[BUG]  [BUGGY]  Throwable  cause  =  System.err.println( "Unexpected  IllegalStateException ");  [CE]  incompatible  types  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  System.err.println( "Unexpected  IllegalStateException ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cause  =  System.err.println( "Unexpected  IllegalStateException ");	  throw    new    IllegalStateException(       "       ");    throw    new    IllegalStateException(   "       ");    	non-compiled	[CE]  incompatible  types	46	None	replace
641	[BUG]  [BUGGY]  timeout  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  new  RuntimeException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	add	Throwable  cause  =  new  RuntimeException( " ");	  throw    new    RuntimeException(       "       ");    throw    new    RuntimeException(,   "       ");    	compilable	timeout	35	1	replace
642	[BUG]  [BUGGY]  Throwable  cause  =  new  RuntimeException( " ");  timeout  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  new  RuntimeException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cause  =  new  RuntimeException( " ");	  throw    new    RuntimeException(       "       ");    throw    new    RuntimeException(,   "       ");    	compilable	timeout	35	1	replace
643	[BUG]  [BUGGY]  if(include)  {  throw  new  UnsupportedOperationException( " ");  }  [CE]  cannot  find  symbol  include  [FE]            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(include)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(include)  {  throw  new  UnsupportedOperationException( " ");  }	  throw    new    UnsupportedOperationException(       "       ");    throw    new    UnsupportedOperationException(   "       ");    	non-compiled	[CE]  cannot  find  symbol  include	53	None	replace
644	[BUG]  [BUGGY]  if(include)  {  throw  new  UnsupportedOperationException( " ");  }  else  {  traverse(null,  null);  }  [CE]  cannot  find  symbol  include  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(include)  {  throw  new  UnsupportedOperationException( " ");  }  else  {  traverse(null,  null);  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(include)  {  throw  new  UnsupportedOperationException( " ");  }  else  {  traverse(null,  null);  }	  throw    new    UnsupportedOperationException(       "       ");    throw    new    UnsupportedOperationException(   "       ");    	non-compiled	[CE]  cannot  find  symbol  include	53	None	replace
645	[BUG]  [BUGGY]  if(include)  {  throw  new  UnsupportedOperationException( " ");  }  else  {  traverse(root,  null);  }  [CE]  cannot  find  symbol  include  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(include)  {  throw  new  UnsupportedOperationException( " ");  }  else  {  traverse(root,  null);  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(include)  {  throw  new  UnsupportedOperationException( " ");  }  else  {  traverse(root,  null);  }	  throw    new    UnsupportedOperationException(       "       ");    throw    new    UnsupportedOperationException(   "       ");    	non-compiled	[CE]  cannot  find  symbol  include	53	None	replace
646	[BUG]  [BUGGY]  Context.report(UNKNOWN_SYNTHETIC,  sourceName);  [CE]  cannot  find  symbol  UNKNOWN_SYNTHETIC  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(UNKNOWN_SYNTHETIC,  sourceName);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(UNKNOWN_SYNTHETIC,  sourceName);	  throw    new    UnsupportedOperationException(       "       ");    Throw    new    UnsupportedOperationException(   "       ");    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_SYNTHETIC	54	None	replace
647	[BUG]  [BUGGY]  handleMissingSOURCE(unexpectedException,  root,  cfgs);  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSOURCE(unexpectedException,  root,  cfgs);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(unexpectedException,  root,  cfgs);	  handleMissingSOURCE(unexpectedException,    root);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
648	[BUG]  [BUGGY]  if(nodeTypes  ==  null)  {  Throwable  t  =  new  IllegalArgumentException( " ");  timeout++;  }  [CE]  cannot  find  symbol  nodeTypes  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(nodeTypes  ==  null)  {  Throwable  t  =  new  IllegalArgumentException( " ");  timeout++;  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(nodeTypes  ==  null)  {  Throwable  t  =  new  IllegalArgumentException( " ");  timeout++;  }	  Throwable    t    =    new    IllegalArgumentException(   "   ");    timeout    	non-compiled	[CE]  cannot  find  symbol  nodeTypes	100	None	replace
649	[BUG]  [BUGGY]  if(nodeTypes  ==  null)  {  Throwable  t  =  new  IllegalArgumentException( " ");  timeout(1);  }  [CE]  cannot  find  symbol  nodeTypes  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(nodeTypes  ==  null)  {  Throwable  t  =  new  IllegalArgumentException( " ");  timeout(1);  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(nodeTypes  ==  null)  {  Throwable  t  =  new  IllegalArgumentException( " ");  timeout(1);  }	  Throwable    t    =    new    IllegalArgumentException(   "   ");    timeout    	non-compiled	[CE]  cannot  find  symbol  nodeTypes	100	None	replace
650	[BUG]  [BUGGY]  if(nodeTypes  ==  null)  {  Throwable  t  =  new  IllegalArgumentException( " ");  unexpectedException.printStackTrace();  }  [CE]  cannot  find  symbol  nodeTypes  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(nodeTypes  ==  null)  {  Throwable  t  =  new  IllegalArgumentException( " ");  unexpectedException.printStackTrace();  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(nodeTypes  ==  null)  {  Throwable  t  =  new  IllegalArgumentException( " ");  unexpectedException.printStackTrace();  }	  Throwable    t    =    new    IllegalArgumentException(   "   ");    timeout    	non-compiled	[CE]  cannot  find  symbol  nodeTypes	100	None	replace
651	[BUG]  [BUGGY]  if(inputId!=  null)  {  Throwable  t  =  new  IllegalArgumentException( " ");  timeout(1);  }  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(inputId!=  null)  {  Throwable  t  =  new  IllegalArgumentException( " ");  timeout(1);  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(inputId!=  null)  {  Throwable  t  =  new  IllegalArgumentException( " ");  timeout(1);  }	  Throwable    t    =    new    IllegalArgumentException(   "   ");    timeout    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
652	[BUG]  [BUGGY]  Throwable  cause  =  System.err.println( "Unexpected  IllegalStateException ");  throw  new  IllegalStateException( " ");  [CE]  incompatible  types  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  System.err.println( "Unexpected  IllegalStateException ");  throw  new  IllegalStateException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cause  =  System.err.println( "Unexpected  IllegalStateException ");  throw  new  IllegalStateException( " ");	  throw    new    IllegalStateException(       "       ");    throw    new    IllegalStateException(.   "       ");    	non-compiled	[CE]  incompatible  types	49	None	replace
653	[BUG]  [BUGGY]  Throwable  cause  =  System.err.println( "Unexpected  IOException ");  [CE]  incompatible  types  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  System.err.println( "Unexpected  IOException ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cause  =  System.err.println( "Unexpected  IOException ");	  throw    new    IllegalStateException(       "       ");    throw    new    IllegalStateException(.   "       ");    	non-compiled	[CE]  incompatible  types	49	None	replace
654	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  UNKNOWN_SOURCE,  MISSING_SOURCE));  [CE]  cannot  find  symbol  UNKNOWN_SOURCE  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  UNKNOWN_SOURCE,  MISSING_SOURCE));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  UNKNOWN_SOURCE,  MISSING_SOURCE));	  Context.report(JSError.make(sourceName,    curNode,    UNKNOWN_SOURCE));    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_SOURCE	98	None	replace
655	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  IOContext.UNKNOWN_SOURCE));  [CE]  cannot  find  symbol  IOContext  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  IOContext.UNKNOWN_SOURCE));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  IOContext.UNKNOWN_SOURCE));	  Context.report(JSError.make(sourceName,    curNode,    UNKNOWN_SOURCE));    	non-compiled	[CE]  cannot  find  symbol  IOContext	98	None	replace
656	[BUG]  [BUGGY]  handleMissingScopeException(curNode,  sourceName);  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingScopeException(curNode,  sourceName);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(curNode,  sourceName);	  handleMissingScopeException(curNode);    	non-compiled	[CE]  cannot  find  symbol	114	None	replace
657	[BUG]  [BUGGY]  new  IllegalStateException( " "),  unexpectedException;  [CE]  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  new  IllegalStateException( " "),  unexpectedException;  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	new  IllegalStateException( " "),  unexpectedException;	  throw    new    IllegalStateException(   "   "),    unexpectedException;    	non-compiled	[CE]  	112	None	replace
658	[BUG]  [BUGGY]  throw  unexpectedException( " ");  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  throw  unexpectedException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw  unexpectedException( " ");	  throw    scopeCreator.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
659	[BUG]  [BUGGY]  Reporter.warning( "Unexpected  exception: "  +  cb.getMessage());  [CE]  cannot  find  symbol  cb  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Reporter.warning( "Unexpected  exception: "  +  cb.getMessage());  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Reporter.warning( "Unexpected  exception: "  +  cb.getMessage());	  reportUnexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  cb	89	None	replace
660	[BUG]  [BUGGY]  Reporter.warning( "Unexpected  path: "  +  inputId);  [CE]  cannot  find  symbol  Reporter  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Reporter.warning( "Unexpected  path: "  +  inputId);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Reporter.warning( "Unexpected  path: "  +  inputId);	  reportUnexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  Reporter	89	None	replace
661	[BUG]  [BUGGY]  Reporter.error( "Unexpected  path: "  +  inputId);  [CE]  cannot  find  symbol  Reporter  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Reporter.error( "Unexpected  path: "  +  inputId);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Reporter.error( "Unexpected  path: "  +  inputId);	  reportUnexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  Reporter	89	None	replace
662	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( " ").printStackTrace();  [CE]  incompatible  types  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  throw  new  UnsupportedOperationException( " ").printStackTrace();  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw  new  UnsupportedOperationException( " ").printStackTrace();	  throw    new    UnsupportedOperationException(   "   "),    unexpectedException);    	non-compiled	[CE]  incompatible  types	119	None	replace
663	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  label,  MISSING_SOURCE,  sourceName));  [CE]  cannot  find  symbol  label  [FE]                                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  label,  MISSING_SOURCE,  sourceName));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  label,  MISSING_SOURCE,  sourceName));	          Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE,    sourceName));    	non-compiled	[CE]  cannot  find  symbol  label	18	None	replace
664	[BUG]  [BUGGY]  Throwable  cb  =  scopeCreator.unexpectedException( "Unexpected  exception: ");  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cb  =  scopeCreator.unexpectedException( "Unexpected  exception: ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cb  =  scopeCreator.unexpectedException( "Unexpected  exception: ");	  Throwable    cb    =    scopeCreator.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
665	[BUG]  [BUGGY]  Throwable  cb  =  scopeCreator.unexpectedException( "Unexpected  source  name: ");  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cb  =  scopeCreator.unexpectedException( "Unexpected  source  name: ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cb  =  scopeCreator.unexpectedException( "Unexpected  source  name: ");	  Throwable    cb    =    scopeCreator.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
666	[BUG]  [BUGGY]  handleMissingSOURCE(sourceName,  path,  unexpectedException);  [CE]  cannot  find  symbol  path  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSOURCE(sourceName,  path,  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(sourceName,  path,  unexpectedException);	  handleMissingSOURCE(sourceName,    unexpectedException);    	non-compiled	[CE]  cannot  find  symbol  path	65	None	replace
667	[BUG]  [BUGGY]  catch(IOException  _)  {  [CE]  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  catch(IOException  _)  {  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	catch(IOException  _)  {	  catch(IOException    t)    {    	non-compiled	[CE]  	58	None	replace
668	[BUG]  [BUGGY]  Throwables.wrap(new  IllegalStateException( " ");  [CE]  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.wrap(new  IllegalStateException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.wrap(new  IllegalStateException( " ");	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  	43	None	replace
669	[BUG]  [BUGGY]  Throwables.throw  new  AssertionError( " ");  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw  new  AssertionError( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw  new  AssertionError( " ");	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	43	None	replace
670	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ")  [CE]  <identifier>  expected  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ")  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw  new  IllegalStateException( " ")	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	43	None	replace
671	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException( " "),  cb,  unexpectedException);  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  IllegalStateException( " "),  cb,  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  IllegalStateException( " "),  cb,  unexpectedException);	  Throwables.throw(new    IllegalStateException(   "   "),    unexpectedException);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
672	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException( " "),  unexpectedException,  MISSING_SOURCE);  [CE]  <identifier>  expected  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  IllegalStateException( " "),  unexpectedException,  MISSING_SOURCE);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  IllegalStateException( " "),  unexpectedException,  MISSING_SOURCE);	  Throwables.throw(new    IllegalStateException(   "   "),    unexpectedException);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
673	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  inputId,  MISSING_SOURCE));  [CE]  no  suitable  method  found  for  make(String,Node,InputId,String)  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  inputId,  MISSING_SOURCE));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  inputId,  MISSING_SOURCE));	  Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE,    inputId));    	non-compiled	[CE]  no  suitable  method  found  for  make(String,Node,InputId,String)	101	None	replace
674	[BUG]  [BUGGY]  handleMissingScopeException(curNode,  unexpectedException);  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingScopeException(curNode,  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(curNode,  unexpectedException);	  handleMissingScopeException(root,    unexpectedException);    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
675	[BUG]  [BUGGY]  NodeUtil.throw  new  UnsupportedOperationException( " ");  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  NodeUtil.throw  new  UnsupportedOperationException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	NodeUtil.throw  new  UnsupportedOperationException( " ");	  throw    new    UnsupportedOperationException(       "       ");    Throwables.throw    new    UnsupportedOperationException(   "       ");    	non-compiled	[CE]  <identifier>  expected	55	None	replace
676	[BUG]  [BUGGY]  handleMissingScopeException(curNode,  unwrapped);  [CE]  cannot  find  symbol  unwrapped  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingScopeException(curNode,  unwrapped);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(curNode,  unwrapped);	  handleMissingScopeException(root,    unwrapped);    	non-compiled	[CE]  cannot  find  symbol  unwrapped	10	None	replace
677	[BUG]  [BUGGY]  traverseMissingScopeException( " ");  [CE]  cannot  find  symbol  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  traverseMissingScopeException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	traverseMissingScopeException( " ");	  handleMissingScopeException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
678	[BUG]  [BUGGY]  handleMissingSourCE(unknownException);  [CE]  cannot  find  symbol  unknownException  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSourCE(unknownException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSourCE(unknownException);	  handleMissingSOURCE(exception);    	non-compiled	[CE]  cannot  find  symbol  unknownException	67	None	replace
679	[BUG]  [BUGGY]  handleMissingSOURCE(unwrapped);  [CE]  cannot  find  symbol  unwrapped  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSOURCE(unwrapped);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(unwrapped);	  handleMissingSOURCE(exception);    	non-compiled	[CE]  cannot  find  symbol  unwrapped	67	None	replace
680	[BUG]  [BUGGY]  handleMissingScopeException(curNode,  null);  [CE]  cannot  find  symbol  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingScopeException(curNode,  null);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(curNode,  null);	  handleMissingScopeException(root,    null);    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
681	[BUG]  [BUGGY]  handleMissingScopeException(root,  null,  undefined);  [CE]  cannot  find  symbol  undefined  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingScopeException(root,  null,  undefined);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(root,  null,  undefined);	  handleMissingScopeException(root,    null);    	non-compiled	[CE]  cannot  find  symbol  undefined	7	None	replace
682	[BUG]  [BUGGY]  handleMissingScopeException(root,  null,  unsupportedOperation);  [CE]  cannot  find  symbol  unsupportedOperation  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingScopeException(root,  null,  unsupportedOperation);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(root,  null,  unsupportedOperation);	  handleMissingScopeException(root,    null);    	non-compiled	[CE]  cannot  find  symbol  unsupportedOperation	7	None	replace
683	[BUG]  [BUGGY]  if(unexpectedException.printStackTrace())  {  throw  new  IllegalStateException( " ");  }  [CE]  incompatible  types  [FE]            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(unexpectedException.printStackTrace())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(unexpectedException.printStackTrace())  {  throw  new  IllegalStateException( " ");  }	  throw    new    IllegalStateException(   "   ");    unexpectedException.printStackTrace();    	non-compiled	[CE]  incompatible  types	111	None	replace
684	[BUG]  [BUGGY]  if(unexpectedException.printStackTrace())  {  throw  new  IllegalStateException( " ");  }  else  {  traverseBranch(root,  null);  }  [CE]  incompatible  types  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(unexpectedException.printStackTrace())  {  throw  new  IllegalStateException( " ");  }  else  {  traverseBranch(root,  null);  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(unexpectedException.printStackTrace())  {  throw  new  IllegalStateException( " ");  }  else  {  traverseBranch(root,  null);  }	  throw    new    IllegalStateException(   "   ");    unexpectedException.printStackTrace();    	non-compiled	[CE]  incompatible  types	111	None	replace
685	[BUG]  [BUGGY]  if(unexpectedException.printStackTrace())  {  throw  new  IllegalStateException( " ");  }  else  {  traverseBranch(root,  scopeCreator);  }  [CE]  incompatible  types  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(unexpectedException.printStackTrace())  {  throw  new  IllegalStateException( " ");  }  else  {  traverseBranch(root,  scopeCreator);  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(unexpectedException.printStackTrace())  {  throw  new  IllegalStateException( " ");  }  else  {  traverseBranch(root,  scopeCreator);  }	  throw    new    IllegalStateException(   "   ");    unexpectedException.printStackTrace();    	non-compiled	[CE]  incompatible  types	111	None	replace
686	[BUG]  [BUGGY]  if(unexpectedException.printStackTrace())  {  throw  new  IllegalStateException( " ");  }  else  {  traverse(root,  null);  }  [CE]  incompatible  types  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(unexpectedException.printStackTrace())  {  throw  new  IllegalStateException( " ");  }  else  {  traverse(root,  null);  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(unexpectedException.printStackTrace())  {  throw  new  IllegalStateException( " ");  }  else  {  traverse(root,  null);  }	  throw    new    IllegalStateException(   "   ");    unexpectedException.printStackTrace();    	non-compiled	[CE]  incompatible  types	111	None	replace
687	[BUG]  [BUGGY]  if(unexpectedException.printStackTrace())  {  throw  new  IllegalStateException( " ");  }  else  {  traverse(null,  curNode);  }  [CE]  incompatible  types  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(unexpectedException.printStackTrace())  {  throw  new  IllegalStateException( " ");  }  else  {  traverse(null,  curNode);  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(unexpectedException.printStackTrace())  {  throw  new  IllegalStateException( " ");  }  else  {  traverse(null,  curNode);  }	  throw    new    IllegalStateException(   "   ");    unexpectedException.printStackTrace();    	non-compiled	[CE]  incompatible  types	111	None	replace
688	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message,  root));  [CE]  cannot  find  symbol  message  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message,  root));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message,  root));	  Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE,   "   "));    	non-compiled	[CE]  cannot  find  symbol  message	84	None	replace
689	[BUG]  [BUGGY]  Throwables.throw(new  UnexpectedException( " ").printStackTrace());  [CE]  <identifier>  expected  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  UnexpectedException( " ").printStackTrace());  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  UnexpectedException( " ").printStackTrace());	  Throwables.throw(new    UnexpectedException(   "   "));    	non-compiled	[CE]  <identifier>  expected	75	None	replace
690	[BUG]  [BUGGY]  Throwables.throw(new  UnexpectedException( " ");  [CE]  <identifier>  expected  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  UnexpectedException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  UnexpectedException( " ");	  Throwables.throw(new    UnexpectedException(   "   "));    	non-compiled	[CE]  <identifier>  expected	75	None	replace
691	[BUG]  [BUGGY]  Throwables.throw(new  UnexpectedException(sourceName,   " "));  [CE]  <identifier>  expected  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  UnexpectedException(sourceName,   " "));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  UnexpectedException(sourceName,   " "));	  Throwables.throw(new    UnexpectedException(   "   "));    	non-compiled	[CE]  <identifier>  expected	75	None	replace
692	[BUG]  [BUGGY]  Deque.throw  new  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Deque.throw  new  IllegalStateException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Deque.throw  new  IllegalStateException( " ");	  throw    new    IllegalStateException(       "       ");    Throwables.throw    new    IllegalStateException(   "       ");    	non-compiled	[CE]  <identifier>  expected	48	None	replace
693	[BUG]  [BUGGY]  Throwables.throw(new  RuntimeException(sourceName,  sourceName));  [CE]  <identifier>  expected  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  RuntimeException(sourceName,  sourceName));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  RuntimeException(sourceName,  sourceName));	  Throwables.throw(new    RuntimeException(   "   "));    	non-compiled	[CE]  <identifier>  expected	95	None	replace
694	[BUG]  [BUGGY]  Throwables.throw(new  RuntimeException(sourceName,   " "));  [CE]  <identifier>  expected  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  RuntimeException(sourceName,   " "));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  RuntimeException(sourceName,   " "));	  Throwables.throw(new    RuntimeException(   "   "));    	non-compiled	[CE]  <identifier>  expected	95	None	replace
695	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException( " ").printStackTrace();  [CE]  <identifier>  expected  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  IllegalStateException( " ").printStackTrace();  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  IllegalStateException( " ").printStackTrace();	  Throwables.throw(new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	51	None	replace
696	[BUG]  [BUGGY]  Throwables.throw(new  UnsupportedOperationException( " ");  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  UnsupportedOperationException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  UnsupportedOperationException( " ");	  Throwables.throw(new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	51	None	replace
697	[BUG]  [BUGGY]  handleMissingStatement(unknown);  [CE]  cannot  find  symbol  unknown  [FE]                              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(unknown);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(unknown);	  handleMissingStatement(null);    	non-compiled	[CE]  cannot  find  symbol  unknown	40	None	replace
698	[BUG]  [BUGGY]  handleMissingStatement(cb,  null);  [CE]  cannot  find  symbol  cb  [FE]                                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(cb,  null);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(cb,  null);	  handleMissingStatement(null);    	non-compiled	[CE]  cannot  find  symbol  cb	40	None	replace
699	[BUG]  [BUGGY]  handleMissingStatement(unwrapped);  [CE]  cannot  find  symbol  unwrapped  [FE]                                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(unwrapped);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(unwrapped);	  handleMissingStatement(null);    	non-compiled	[CE]  cannot  find  symbol  unwrapped	40	None	replace
700	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  INVALID_SOURCE,  label),  unexpectedException);  [CE]  cannot  find  symbol  INVALID_SOURCE  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  INVALID_SOURCE,  label),  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  INVALID_SOURCE,  label),  unexpectedException);	  Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE),    unexpectedException);    	non-compiled	[CE]  cannot  find  symbol  INVALID_SOURCE	19	None	replace
701	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  label,  unknownException);  [CE]  ')'  expected  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  label,  unknownException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  MISSING_SOURCE,  label,  unknownException);	  Context.report(JSError.make(sourceName,    curNode,    MISSING_SOURCE),    unexpectedException);    	non-compiled	[CE]  ')'  expected	19	None	replace
702	[BUG]  [BUGGY]  Context.report(UNKNOWN_SYMBOL_ERROR, " ");  [CE]  cannot  find  symbol  UNKNOWN_SYMBOL_ERROR  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(UNKNOWN_SYMBOL_ERROR, " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(UNKNOWN_SYMBOL_ERROR, " ");	  Throwables.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_SYMBOL_ERROR	4	None	replace
703	[BUG]  [BUGGY]  Context.report(UNKNOWN_SYMBOL_ERROR, "Unexpected  exception ");  [CE]  cannot  find  symbol  UNKNOWN_SYMBOL_ERROR  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(UNKNOWN_SYMBOL_ERROR, "Unexpected  exception ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(UNKNOWN_SYMBOL_ERROR, "Unexpected  exception ");	  Throwables.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_SYMBOL_ERROR	4	None	replace
704	[BUG]  [BUGGY]  Context.report(UNKNOWN_SYMBOL_ERROR, "Unexpected  path: "  +  inputId);  [CE]  cannot  find  symbol  UNKNOWN_SYMBOL_ERROR  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(UNKNOWN_SYMBOL_ERROR, "Unexpected  path: "  +  inputId);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(UNKNOWN_SYMBOL_ERROR, "Unexpected  path: "  +  inputId);	  Throwables.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_SYMBOL_ERROR	4	None	replace
705	[BUG]  [BUGGY]  Context.report(UNKNOWN_SYMBOL_ERROR,  sourceName);  [CE]  cannot  find  symbol  UNKNOWN_SYMBOL_ERROR  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(UNKNOWN_SYMBOL_ERROR,  sourceName);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(UNKNOWN_SYMBOL_ERROR,  sourceName);	  Throwables.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_SYMBOL_ERROR	4	None	replace
706	[BUG]  [BUGGY]  Context.report(UNKNOWN_SYMBOL_ERROR,  inputId);  [CE]  cannot  find  symbol  UNKNOWN_SYMBOL_ERROR  [FE]                              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(UNKNOWN_SYMBOL_ERROR,  inputId);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(UNKNOWN_SYMBOL_ERROR,  inputId);	  Throwables.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_SYMBOL_ERROR	4	None	replace
707	[BUG]  [BUGGY]  Context.report(UNKNOWN_SYMBOL_ERROR, "Unexpected  ' "  +  inputId  + "' ");  [CE]  cannot  find  symbol  UNKNOWN_SYMBOL_ERROR  [FE]                                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(UNKNOWN_SYMBOL_ERROR, "Unexpected  ' "  +  inputId  + "' ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(UNKNOWN_SYMBOL_ERROR, "Unexpected  ' "  +  inputId  + "' ");	  Throwables.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_SYMBOL_ERROR	4	None	replace
708	[BUG]  [BUGGY]  Throwable  cause  =  new  UnexpectedException( "Unexpected  path: "  +  inputId);  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  new  UnexpectedException( "Unexpected  path: "  +  inputId);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cause  =  new  UnexpectedException( "Unexpected  path: "  +  inputId);	  Throwable    cause    =    new    UnexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
709	[BUG]  [BUGGY]  Throwable  cause  =  new  UnexpectedException( "Current  context  not  an  object  of  type ");  [CE]  cannot  find  symbol  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  new  UnexpectedException( "Current  context  not  an  object  of  type ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cause  =  new  UnexpectedException( "Current  context  not  an  object  of  type ");	  Throwable    cause    =    new    UnexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
710	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "),  unexpectedException;  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "),  unexpectedException;  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw  new  IllegalArgumentException( " "),  unexpectedException;	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	44	None	replace
711	[BUG]  [BUGGY]  Throwables.wrap(new  IllegalArgumentException( " ");  [CE]  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.wrap(new  IllegalArgumentException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.wrap(new  IllegalArgumentException( " ");	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	44	None	replace
712	[BUG]  [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  STRICT_MODULE_ERROR));  [CE]  cannot  find  symbol  STRICT_MODULE_ERROR  [FE]                              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(JSError.make(sourceName,  curNode,  STRICT_MODULE_ERROR));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(JSError.make(sourceName,  curNode,  STRICT_MODULE_ERROR));	          Context.report(JSError.make(sourceName,    curNode,    INVALID_SOURCE));    	non-compiled	[CE]  cannot  find  symbol  STRICT_MODULE_ERROR	14	None	replace
713	[BUG]  [BUGGY]  catch(UnsupportedOperationException  t)  {  [CE]  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  catch(UnsupportedOperationException  t)  {  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	catch(UnsupportedOperationException  t)  {	  catch(Exception    t)    {    	non-compiled	[CE]  	57	None	replace
714	[BUG]  [BUGGY]  UnsupportedOperationException( " ");  JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message));  [CE]  [FE]            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  UnsupportedOperationException( " ");  JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	UnsupportedOperationException( " ");  JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message));	  throw    new    UnsupportedOperationException(       "       ");    JSError.make(sourceName,    curNode,    MISSING_SOURCE,    sourceName));    	non-compiled	[CE]  	125	None	replace
715	[BUG]  [BUGGY]  UnsupportedOperationException.make(sourceName,  curNode,  MISSING_SOURCE,  message));  [CE]  ';'  expected  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  UnsupportedOperationException.make(sourceName,  curNode,  MISSING_SOURCE,  message));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	UnsupportedOperationException.make(sourceName,  curNode,  MISSING_SOURCE,  message));	  throw    new    UnsupportedOperationException(       "       ");    JSError.make(sourceName,    curNode,    MISSING_SOURCE,    sourceName));    	non-compiled	[CE]  ';'  expected	125	None	replace
716	[BUG]  [BUGGY]  Throwable  cause  =  JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message);  [CE]  cannot  find  symbol  message  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cause  =  JSError.make(sourceName,  curNode,  MISSING_SOURCE,  message);	  throw    new    UnsupportedOperationException(       "       ");    JSError.make(sourceName,    curNode,    MISSING_SOURCE,    sourceName));    	non-compiled	[CE]  cannot  find  symbol  message	125	None	replace
717	[BUG]  [BUGGY]  scopeCtrl.printStackTrace(unknownException);  [CE]  cannot  find  symbol  unknownException  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  scopeCtrl.printStackTrace(unknownException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scopeCtrl.printStackTrace(unknownException);	  scopeCtrl.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  unknownException	83	None	replace
718	[BUG]  [BUGGY]  Throwable  cause  =  System.err.println( "Unexpected  ' "  +  inputId  + "' ");  [CE]  incompatible  types  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  System.err.println( "Unexpected  ' "  +  inputId  + "' ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cause  =  System.err.println( "Unexpected  ' "  +  inputId  + "' ");	  throw    new    RuntimeException(       "       ");    throw    new    RuntimeException(.   "       ");    	non-compiled	[CE]  incompatible  types	90	None	replace
719	[BUG]  [BUGGY]  Throwable  cause  =  System.err.println( "Unexpected  exception: ");  [CE]  incompatible  types  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  System.err.println( "Unexpected  exception: ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cause  =  System.err.println( "Unexpected  exception: ");	  throw    new    RuntimeException(       "       ");    throw    new    RuntimeException(.   "       ");    	non-compiled	[CE]  incompatible  types	90	None	replace
720	[BUG]  [BUGGY]  throw  new  IllegalStateException( " ")  :  unknownException( " ");  [CE]  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  throw  new  IllegalStateException( " ")  :  unknownException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw  new  IllegalStateException( " ")  :  unknownException( " ");	  throw    new    IllegalStateException(   "   ")    :    unexpectedException(   "   ");    	non-compiled	[CE]  	113	None	replace
721	[BUG]  [BUGGY]  Throwables.throw(new  RuntimeException( " "),  cfgs);  [CE]  <identifier>  expected  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  RuntimeException( " "),  cfgs);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  RuntimeException( " "),  cfgs);	  Throwables.throw(new    RuntimeException(   "   "),    unexpectedException);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
722	[BUG]  [BUGGY]  Throwables.throw  new  RuntimeException( "Unexpected  path: "  +  inputId);  [CE]  <identifier>  expected  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw  new  RuntimeException( "Unexpected  path: "  +  inputId);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw  new  RuntimeException( "Unexpected  path: "  +  inputId);	  Throwables.throw    new    RuntimeException(   "   ");    	non-compiled	[CE]  <identifier>  expected	45	None	replace
723	[BUG]  [BUGGY]  Throwables.throw  new  RuntimeException( " "),  unexpectedException);  [CE]  <identifier>  expected  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw  new  RuntimeException( " "),  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw  new  RuntimeException( " "),  unexpectedException);	  Throwables.throw    new    RuntimeException(   "   ");    	non-compiled	[CE]  <identifier>  expected	45	None	replace
724	[BUG]  [BUGGY]  Throwables.throw  new  RuntimeException( " "),  unexpectedException;  [CE]  <identifier>  expected  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw  new  RuntimeException( " "),  unexpectedException;  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw  new  RuntimeException( " "),  unexpectedException;	  Throwables.throw    new    RuntimeException(   "   ");    	non-compiled	[CE]  <identifier>  expected	45	None	replace
725	[BUG]  [BUGGY]  Context.report(UNKNOWN_EXPR_RESULT);  [CE]  cannot  find  symbol  UNKNOWN_EXPR_RESULT  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(UNKNOWN_EXPR_RESULT);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(UNKNOWN_EXPR_RESULT);	  Context.report(UNKNOWN_SYNCHRONIZED);    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_EXPR_RESULT	109	None	replace
726	[BUG]  [BUGGY]  Context.report(UNKNOWN_STANDARD);  [CE]  cannot  find  symbol  UNKNOWN_STANDARD  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(UNKNOWN_STANDARD);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(UNKNOWN_STANDARD);	  Context.report(UNKNOWN_SYNCHRONIZED);    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_STANDARD	109	None	replace
727	[BUG]  [BUGGY]  scopeRoots.printStackTrace();  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  scopeRoots.printStackTrace();  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scopeRoots.printStackTrace();	  scope.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
728	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( " ");  JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  message));  [CE]  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  throw  new  UnsupportedOperationException( " ");  JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  message));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw  new  UnsupportedOperationException( " ");  JSError.make(sourceName,  curNode,  NON_GLOBAL_ERROR,  message));	  throw    new    UnsupportedOperationException(       "       ");    JSError.make(sourceName,    curNode,    NON_GLOBAL_ERROR,    sourceName));    	non-compiled	[CE]  	127	None	replace
729	[BUG]  [BUGGY]  if(unexpectedException.printStackTrace())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  incompatible  types  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(unexpectedException.printStackTrace())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(unexpectedException.printStackTrace())  {  throw  new  IllegalArgumentException( " ");  }	  throw    new    IllegalArgumentException(   "   ");    unexpectedException.printStackTrace();    	non-compiled	[CE]  incompatible  types	115	None	replace
730	[BUG]  [BUGGY]  if(unexpectedException.printStackTrace())  {  throw  new  IllegalArgumentException( " ");  }  else  {  traverseBranch(root,  null);  }  [CE]  incompatible  types  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(unexpectedException.printStackTrace())  {  throw  new  IllegalArgumentException( " ");  }  else  {  traverseBranch(root,  null);  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(unexpectedException.printStackTrace())  {  throw  new  IllegalArgumentException( " ");  }  else  {  traverseBranch(root,  null);  }	  throw    new    IllegalArgumentException(   "   ");    unexpectedException.printStackTrace();    	non-compiled	[CE]  incompatible  types	115	None	replace
731	[BUG]  [BUGGY]  if(unexpectedException.printStackTrace())  {  throw  new  IllegalArgumentException( " ");  }  else  {  traverse(root,  null);  }  [CE]  incompatible  types  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(unexpectedException.printStackTrace())  {  throw  new  IllegalArgumentException( " ");  }  else  {  traverse(root,  null);  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(unexpectedException.printStackTrace())  {  throw  new  IllegalArgumentException( " ");  }  else  {  traverse(root,  null);  }	  throw    new    IllegalArgumentException(   "   ");    unexpectedException.printStackTrace();    	non-compiled	[CE]  incompatible  types	115	None	replace
732	[BUG]  [BUGGY]  if(unexpectedException.printStackTrace())  {  throw  new  IllegalArgumentException( " ");  }  else  {  traverseBranch(root,  scopeCreator);  }  [CE]  incompatible  types  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(unexpectedException.printStackTrace())  {  throw  new  IllegalArgumentException( " ");  }  else  {  traverseBranch(root,  scopeCreator);  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(unexpectedException.printStackTrace())  {  throw  new  IllegalArgumentException( " ");  }  else  {  traverseBranch(root,  scopeCreator);  }	  throw    new    IllegalArgumentException(   "   ");    unexpectedException.printStackTrace();    	non-compiled	[CE]  incompatible  types	115	None	replace
733	[BUG]  [BUGGY]  bugReporter.printStackTrace();  [CE]  cannot  find  symbol  bugReporter  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  bugReporter.printStackTrace();  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	bugReporter.printStackTrace();	  bug.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  bugReporter	27	None	replace
734	[BUG]  [BUGGY]  bug.printStackTrace(unknownException);  [CE]  cannot  find  symbol  unknownException  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  bug.printStackTrace(unknownException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	bug.printStackTrace(unknownException);	  bug.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  unknownException	27	None	replace
735	[BUG]  [BUGGY]  bug.printStackTrace(unexpectedException);  [CE]  cannot  find  symbol  bug  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  bug.printStackTrace(unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	bug.printStackTrace(unexpectedException);	  bug.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  bug	27	None	replace
736	[BUG]  [BUGGY]  if(unexpectedException.printStackTrace())  {  throw  new  RuntimeException( " ");  }  [CE]  incompatible  types  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(unexpectedException.printStackTrace())  {  throw  new  RuntimeException( " ");  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(unexpectedException.printStackTrace())  {  throw  new  RuntimeException( " ");  }	  throw    new    RuntimeException(   "   ");    unexpectedException.printStackTrace();    	non-compiled	[CE]  incompatible  types	129	None	replace
737	[BUG]  [BUGGY]  if(unexpectedException.printStackTrace())  {  throw  new  RuntimeException( " ");  }  else  {  traverseBranch(root,  null);  }  [CE]  incompatible  types  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(unexpectedException.printStackTrace())  {  throw  new  RuntimeException( " ");  }  else  {  traverseBranch(root,  null);  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(unexpectedException.printStackTrace())  {  throw  new  RuntimeException( " ");  }  else  {  traverseBranch(root,  null);  }	  throw    new    RuntimeException(   "   ");    unexpectedException.printStackTrace();    	non-compiled	[CE]  incompatible  types	129	None	replace
738	[BUG]  [BUGGY]  if(unexpectedException.printStackTrace())  {  throw  new  RuntimeException( " ");  }  else  {  traverse(root,  null);  }  [CE]  incompatible  types  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(unexpectedException.printStackTrace())  {  throw  new  RuntimeException( " ");  }  else  {  traverse(root,  null);  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(unexpectedException.printStackTrace())  {  throw  new  RuntimeException( " ");  }  else  {  traverse(root,  null);  }	  throw    new    RuntimeException(   "   ");    unexpectedException.printStackTrace();    	non-compiled	[CE]  incompatible  types	129	None	replace
739	[BUG]  [BUGGY]  UnsupportedOperationException( "Current  context  not  an  object  of  type ");  [CE]  cannot  find  symbol  [FE]            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  UnsupportedOperationException( "Current  context  not  an  object  of  type ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	UnsupportedOperationException( "Current  context  not  an  object  of  type ");	  UnsupportedOperationException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
740	[BUG]  [BUGGY]  UnsupportedOperationException(sourceName, " "));  [CE]  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  UnsupportedOperationException(sourceName, " "));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	UnsupportedOperationException(sourceName, " "));	  UnsupportedOperationException(   "   ");    	non-compiled	[CE]  	78	None	replace
741	[BUG]  [BUGGY]  UnsupportedOperationException(sourceName,   "Unsupported  scope  callback ");  [CE]  cannot  find  symbol  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  UnsupportedOperationException(sourceName,   "Unsupported  scope  callback ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	UnsupportedOperationException(sourceName,   "Unsupported  scope  callback ");	  UnsupportedOperationException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
742	[BUG]  [BUGGY]  handleMissingSOURCE(unwrappedException);  [CE]  cannot  find  symbol  unwrappedException  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSOURCE(unwrappedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(unwrappedException);	  handleMissingSOURCE(missingException);    	non-compiled	[CE]  cannot  find  symbol  unwrappedException	69	None	replace
743	[BUG]  [BUGGY]  handleMissingSOURCE(unexpectedException,  curNode,  cb);  [CE]  cannot  find  symbol  cb  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSOURCE(unexpectedException,  curNode,  cb);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(unexpectedException,  curNode,  cb);	  handleMissingSOURCE(unexpectedException,    curNode);    	non-compiled	[CE]  cannot  find  symbol  cb	64	None	replace
744	[BUG]  [BUGGY]  handleMissingSOURCE(unexpectedException,  curNode,  path);  [CE]  cannot  find  symbol  path  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSOURCE(unexpectedException,  curNode,  path);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(unexpectedException,  curNode,  path);	  handleMissingSOURCE(unexpectedException,    curNode);    	non-compiled	[CE]  cannot  find  symbol  path	64	None	replace
745	[BUG]  [BUGGY]  if(unexpectedException.printStackTrace())  {  throw  new  UnsupportedOperationException( " ");  }  [CE]  incompatible  types  [FE]            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(unexpectedException.printStackTrace())  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(unexpectedException.printStackTrace())  {  throw  new  UnsupportedOperationException( " ");  }	  throw    new    UnsupportedOperationException(   "   ");    unexpectedException.printStackTrace();    	non-compiled	[CE]  incompatible  types	118	None	replace
746	[BUG]  [BUGGY]  if(unexpectedException.printStackTrace())  {  throw  new  UnsupportedOperationException( " ");  }  else  {  traverseBranch(root,  null);  }  [CE]  incompatible  types  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(unexpectedException.printStackTrace())  {  throw  new  UnsupportedOperationException( " ");  }  else  {  traverseBranch(root,  null);  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(unexpectedException.printStackTrace())  {  throw  new  UnsupportedOperationException( " ");  }  else  {  traverseBranch(root,  null);  }	  throw    new    UnsupportedOperationException(   "   ");    unexpectedException.printStackTrace();    	non-compiled	[CE]  incompatible  types	118	None	replace
747	[BUG]  [BUGGY]  catch(NodeFormat.MISSING_SOURCE)  {  [CE]  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  catch(NodeFormat.MISSING_SOURCE)  {  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	catch(NodeFormat.MISSING_SOURCE)  {	  catch(Exception    e)    {    	non-compiled	[CE]  	121	None	replace
748	[BUG]  [BUGGY]  catch(NoSuchElementException  e)  {  [CE]  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  catch(NoSuchElementException  e)  {  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	catch(NoSuchElementException  e)  {	  catch(Exception    e)    {    	non-compiled	[CE]  	121	None	replace
749	[BUG]  [BUGGY]  handleMissingScopeException(root,  scopeRoot);  [CE]  cannot  find  symbol  scopeRoot  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingScopeException(root,  scopeRoot);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(root,  scopeRoot);	  handleMissingScopeException(root,    cb);    	non-compiled	[CE]  cannot  find  symbol  scopeRoot	9	None	replace
750	[BUG]  [BUGGY]  handleMissingScopeException(root,  callback);  [CE]  cannot  find  symbol  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingScopeException(root,  callback);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingScopeException(root,  callback);	  handleMissingScopeException(root,    cb);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
751	[BUG]  [BUGGY]  Throwables.throw(new  IllegalArgumentException( " ").printStackTrace());  [CE]  <identifier>  expected  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  IllegalArgumentException( " ").printStackTrace());  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  IllegalArgumentException( " ").printStackTrace());	  Throwables.throw(new    IllegalArgumentException(   "   "));    	non-compiled	[CE]  <identifier>  expected	70	None	replace
752	[BUG]  [BUGGY]  Throwables.throw(new  IllegalArgumentException( " "  +  sourceName  + ") ");  [CE]  <identifier>  expected  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  IllegalArgumentException( " "  +  sourceName  + ") ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  IllegalArgumentException( " "  +  sourceName  + ") ");	  Throwables.throw(new    IllegalArgumentException(   "   "));    	non-compiled	[CE]  <identifier>  expected	70	None	replace
753	[BUG]  [BUGGY]  cb.report(null,  MISSING_SOURCE);  [CE]  cannot  find  symbol  cb  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  cb.report(null,  MISSING_SOURCE);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	cb.report(null,  MISSING_SOURCE);	  throw    new    RuntimeException(       "       ");    throw    new    RuntimeException('       ");    	non-compiled	[CE]  cannot  find  symbol  cb	36	None	replace
754	[BUG]  [BUGGY]  if(nodeTypes  ==  null)  {  Throwable  t  =  new  IllegalStateException( " ");  timeout++;  }  [CE]  cannot  find  symbol  nodeTypes  [FE]            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(nodeTypes  ==  null)  {  Throwable  t  =  new  IllegalStateException( " ");  timeout++;  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(nodeTypes  ==  null)  {  Throwable  t  =  new  IllegalStateException( " ");  timeout++;  }	  Throwable    t    =    new    IllegalStateException(   "   ");    timeout    	non-compiled	[CE]  cannot  find  symbol  nodeTypes	77	None	replace
755	[BUG]  [BUGGY]  if(nodeTypes  ==  null)  {  Throwable  t  =  new  IllegalStateException( " ");  timeout(1);  }  [CE]  cannot  find  symbol  nodeTypes  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(nodeTypes  ==  null)  {  Throwable  t  =  new  IllegalStateException( " ");  timeout(1);  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(nodeTypes  ==  null)  {  Throwable  t  =  new  IllegalStateException( " ");  timeout(1);  }	  Throwable    t    =    new    IllegalStateException(   "   ");    timeout    	non-compiled	[CE]  cannot  find  symbol  nodeTypes	77	None	replace
756	[BUG]  [BUGGY]  if(nodeTypes  ==  null)  {  Throwable  t  =  new  IllegalStateException( " ");  unexpectedException.printStackTrace();  }  [CE]  cannot  find  symbol  nodeTypes  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(nodeTypes  ==  null)  {  Throwable  t  =  new  IllegalStateException( " ");  unexpectedException.printStackTrace();  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(nodeTypes  ==  null)  {  Throwable  t  =  new  IllegalStateException( " ");  unexpectedException.printStackTrace();  }	  Throwable    t    =    new    IllegalStateException(   "   ");    timeout    	non-compiled	[CE]  cannot  find  symbol  nodeTypes	77	None	replace
757	[BUG]  [BUGGY]  if(include)  {  Throwable  t  =  new  IllegalStateException( " ");  timeout(1);  }  [CE]  cannot  find  symbol  include  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(include)  {  Throwable  t  =  new  IllegalStateException( " ");  timeout(1);  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(include)  {  Throwable  t  =  new  IllegalStateException( " ");  timeout(1);  }	  Throwable    t    =    new    IllegalStateException(   "   ");    timeout    	non-compiled	[CE]  cannot  find  symbol  include	77	None	replace
758	[BUG]  [BUGGY]  if(nodeTypes  ==  null)  {  Throwable  t  =  new  IllegalStateException( " ");  timeout.println();  }  [CE]  cannot  find  symbol  nodeTypes  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  if(nodeTypes  ==  null)  {  Throwable  t  =  new  IllegalStateException( " ");  timeout.println();  }  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	if(nodeTypes  ==  null)  {  Throwable  t  =  new  IllegalStateException( " ");  timeout.println();  }	  Throwable    t    =    new    IllegalStateException(   "   ");    timeout    	non-compiled	[CE]  cannot  find  symbol  nodeTypes	77	None	replace
759	[BUG]  [BUGGY]  traverseMissingScopeException(root,  undefined);  [CE]  cannot  find  symbol  undefined  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  traverseMissingScopeException(root,  undefined);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	traverseMissingScopeException(root,  undefined);	  traverseMissingScopeException(root);    	non-compiled	[CE]  cannot  find  symbol  undefined	8	None	replace
760	[BUG]  [BUGGY]  Throwables.throw  new  UnexpectedException( " "),  unexpectedException);  [CE]  <identifier>  expected  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw  new  UnexpectedException( " "),  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw  new  UnexpectedException( " "),  unexpectedException);	  Throwables.throw    new    UnexpectedException(   "   ");    	non-compiled	[CE]  <identifier>  expected	74	None	replace
761	[BUG]  [BUGGY]  Throwables.throw  new  UnexpectedException( " "),  unexpectedException;  [CE]  <identifier>  expected  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw  new  UnexpectedException( " "),  unexpectedException;  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw  new  UnexpectedException( " "),  unexpectedException;	  Throwables.throw    new    UnexpectedException(   "   ");    	non-compiled	[CE]  <identifier>  expected	74	None	replace
762	[BUG]  [BUGGY]  scopeCallback.printStackTrace(cb);  [CE]  cannot  find  symbol  cb  [FE]            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  scopeCallback.printStackTrace(cb);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scopeCallback.printStackTrace(cb);	  scopeCallback.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  cb	22	None	replace
763	[BUG]  [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " ");  cb.printStackTrace();  [CE]  cannot  find  symbol  cb  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cause  =  new  IllegalArgumentException( " ");  cb.printStackTrace();  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cause  =  new  IllegalArgumentException( " ");  cb.printStackTrace();	  Throwable    cause    =    new    IllegalArgumentException(   "   ");    timeout    	non-compiled	[CE]  cannot  find  symbol  cb	117	None	replace
764	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException( " ").printStackTrace());  [CE]  <identifier>  expected  [FE]            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  IllegalStateException( " ").printStackTrace());  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  IllegalStateException( " ").printStackTrace());	  Throwables.throw(new    IllegalStateException(   "   "));    	non-compiled	[CE]  <identifier>  expected	50	None	replace
765	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException( " ").equals(inputId));  [CE]  <identifier>  expected  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw(new  IllegalStateException( " ").equals(inputId));  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw(new  IllegalStateException( " ").equals(inputId));	  Throwables.throw(new    IllegalStateException(   "   "));    	non-compiled	[CE]  <identifier>  expected	50	None	replace
766	[BUG]  [BUGGY]  Throwable  cb  =  this.sourceName.unexpectedException( " ");  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwable  cb  =  this.sourceName.unexpectedException( " ");  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwable  cb  =  this.sourceName.unexpectedException( " ");	  Throwable    cb    =    sourceName.unexpectedException(   "   ");    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
767	[BUG]  [BUGGY]  throw  new  UnsupportedOperationException( " "  +  cb.getMessage(),  unexpectedException);  [CE]  cannot  find  symbol  cb  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  throw  new  UnsupportedOperationException( " "  +  cb.getMessage(),  unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	throw  new  UnsupportedOperationException( " "  +  cb.getMessage(),  unexpectedException);	  throw    new    UnsupportedOperationException(   "   "),    unexpectedException;    	non-compiled	[CE]  cannot  find  symbol  cb	120	None	replace
768	[BUG]  [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " "),  unexpectedException;  [CE]  <identifier>  expected  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Throwables.throw  new  UnsupportedOperationException( " "),  unexpectedException;  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Throwables.throw  new  UnsupportedOperationException( " "),  unexpectedException;	  throw    new    UnsupportedOperationException(   "   "),    unexpectedException;    	non-compiled	[CE]  <identifier>  expected	120	None	replace
769	[BUG]  [BUGGY]  cfgs.printStackTrace(outputId);  [CE]  cannot  find  symbol  outputId  [FE]                  RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  cfgs.printStackTrace(outputId);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	cfgs.printStackTrace(outputId);	  cfgs.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  outputId	25	None	replace
770	[BUG]  [BUGGY]  cfgs.printStackTrace(null);  [CE]  cannot  find  symbol  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  cfgs.printStackTrace(null);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	cfgs.printStackTrace(null);	  cfgs.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
771	[BUG]  [BUGGY]  scopecreator.printStackTrace(unknownException);  [CE]  cannot  find  symbol  unknownException  [FE]                    RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  scopecreator.printStackTrace(unknownException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scopecreator.printStackTrace(unknownException);	  scopecreator.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  unknownException	26	None	replace
772	[BUG]  [BUGGY]  scopecreator.printStackTrace(unexpectedException);  [CE]  cannot  find  symbol  scopecreator  [FE]                      RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  scopecreator.printStackTrace(unexpectedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scopecreator.printStackTrace(unexpectedException);	  scopecreator.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  scopecreator	26	None	replace
773	[BUG]  [BUGGY]  scopecreator.printStackTrace(System.err);  [CE]  cannot  find  symbol  scopecreator  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  scopecreator.printStackTrace(System.err);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	scopecreator.printStackTrace(System.err);	  scopecreator.printStackTrace();    	non-compiled	[CE]  cannot  find  symbol  scopecreator	26	None	replace
774	[BUG]  [BUGGY]  traverseMissingSOURCE(unexpectedException,  cb);  [CE]  cannot  find  symbol  cb  [FE]                RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  traverseMissingSOURCE(unexpectedException,  cb);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	traverseMissingSOURCE(unexpectedException,  cb);	  traverseMissingSOURCE(unexpectedException);    	non-compiled	[CE]  cannot  find  symbol  cb	106	None	replace
775	[BUG]  [BUGGY]  Context.report(null,  UnsupportedOperation.EXIT_TYPE);  [CE]  cannot  find  symbol  UnsupportedOperation  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(null,  UnsupportedOperation.EXIT_TYPE);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(null,  UnsupportedOperation.EXIT_TYPE);	  Context.report(null);    	non-compiled	[CE]  cannot  find  symbol  UnsupportedOperation	21	None	replace
776	[BUG]  [BUGGY]  Context.report(null,  UnsupportedOperation.INVALID_SOURCE);  [CE]  cannot  find  symbol  UnsupportedOperation  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(null,  UnsupportedOperation.INVALID_SOURCE);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(null,  UnsupportedOperation.INVALID_SOURCE);	  Context.report(null);    	non-compiled	[CE]  cannot  find  symbol  UnsupportedOperation	21	None	replace
777	[BUG]  [BUGGY]  Context.report(null,  UNKNOWN_SYMBOL);  [CE]  cannot  find  symbol  UNKNOWN_SYMBOL  [FE]                              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  Context.report(null,  UNKNOWN_SYMBOL);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	Context.report(null,  UNKNOWN_SYMBOL);	  Context.report(null);    	non-compiled	[CE]  cannot  find  symbol  UNKNOWN_SYMBOL	21	None	replace
778	[BUG]  [BUGGY]  handleMissingStatement(unexpectedException,  parent);  [CE]  cannot  find  symbol  parent  [FE]                        RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(unexpectedException,  parent);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(unexpectedException,  parent);	  handleMissingStatement(unexpectedException);    	non-compiled	[CE]  cannot  find  symbol  parent	37	None	replace
779	[BUG]  [BUGGY]  handleMissingStatement(unwrappedException);  [CE]  cannot  find  symbol  unwrappedException  [FE]                          RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(unwrappedException);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(unwrappedException);	  handleMissingStatement(unknownException);    	non-compiled	[CE]  cannot  find  symbol  unwrappedException	38	None	replace
780	[BUG]  [BUGGY]  handleMissingStatement(unknownException,  curNode);  [CE]  cannot  find  symbol  unknownException  [FE]                            RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingStatement(unknownException,  curNode);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingStatement(unknownException,  curNode);	  handleMissingStatement(unknownException);    	non-compiled	[CE]  cannot  find  symbol  unknownException	38	None	replace
781	[BUG]  [BUGGY]  handleMissingSOURCE(unexpectedException,  MISSING_SOURCE,  sourceName);  [CE]  cannot  find  symbol  [FE]              RuntimeException      [CONTEXT]      public  void  traverse(Node  root)  {  try  {  inputId  =  NodeUtil.getInputId(root);  sourceName  =       "     ";  curNode  =  root;  pushScope(root);  traverseBranch(root,  null);  popScope();  }  catch  (Exception  unexpectedException)  {      [BUGGY]  handleMissingSOURCE(unexpectedException,  MISSING_SOURCE,  sourceName);  [BUGGY]      }  }  [CLASS]  NodeTraversal  AbstractPostOrderCallback  AbstractScopedCallback  AbstractShallowCallback  AbstractShallowStatementCallback  AbstractNodeTypePruningCallback  [METHOD]  traverse  [RETURN_TYPE]  void  Node  root  [VARIABLES]  ScopedCallback  scopeCallback  AbstractCompiler  compiler  Callback  callback  cb  Set  nodeTypes  boolean  include  DiagnosticType  NODE_TRAVERSAL_ERROR  Node  curNode  n  parent  root  InputId  inputId  ScopeCreator  scopeCreator  String  MISSING_SOURCE  label  message  sourceName  Deque  cfgs  scopeRoots  scopes  Exception  unexpectedException  	projects/Closure37/src/com/google/javascript/jscomp/NodeTraversal.java	1.0	280	280	1	replace	handleMissingSOURCE(unexpectedException,  MISSING_SOURCE,  sourceName);	  handleMissingSOURCE(unexpectedException,    sourceName);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
