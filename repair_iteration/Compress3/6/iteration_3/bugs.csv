bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  out  =  os.readFully(blockSize,  recordSize,  LONGFILE_GNU);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.readFully(blockSize,  recordSize,  LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.readFully(blockSize,  recordSize,  LONGFILE_GNU);	  out    =    os.readFully(blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
2	[BUG]  [BUGGY]  OutputStream  out  =  os.readFully(blockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.readFully(blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.readFully(blockSize,  recordSize);	  out    =    os.readFully(blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
3	[BUG]  [BUGGY]  out  =  os.readFully(blockSize,  recordSize  +  1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.readFully(blockSize,  recordSize  +  1);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.readFully(blockSize,  recordSize  +  1);	  out    =    os.readFully(blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
4	[BUG]  [BUGGY]  out  =  os.readFully(blockSize,  recordSize,  this.assemLen);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.readFully(blockSize,  recordSize,  this.assemLen);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.readFully(blockSize,  recordSize,  this.assemLen);	  out    =    os.readFully(blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
5	[BUG]  [BUGGY]  out  =  os.readFully(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.readFully(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.readFully(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU);	  out    =    os.readFully(blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
6	[BUG]  [BUGGY]  out  =  os.readFully(recordSize,  blockSize);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.readFully(recordSize,  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.readFully(recordSize,  blockSize);	  out    =    os.readFully(blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
7	[BUG]  [BUGGY]  OutputStream  out  =  os.read(blockSize,  recordSize,  LONGFILE_GNU);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.read(blockSize,  recordSize,  LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.read(blockSize,  recordSize,  LONGFILE_GNU);	  OutputStream    out    =    os.read(blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
8	[BUG]  [BUGGY]  OutputStream  out  =  os.read();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.read();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.read();	  OutputStream    out    =    os.read(blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
9	[BUG]  [BUGGY]  OutputStream  out  =  os.read(blockSize,  blockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.read(blockSize,  blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.read(blockSize,  blockSize,  recordSize);	  OutputStream    out    =    os.read(blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
10	[BUG]  [BUGGY]  OutputStream  out  =  os.read(blockSize,  recordSize,  LONGFILE_ERROR);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.read(blockSize,  recordSize,  LONGFILE_ERROR);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.read(blockSize,  recordSize,  LONGFILE_ERROR);	  OutputStream    out    =    os.read(blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
11	[BUG]  [BUGGY]  OutputStream  out  =  os.read(blockSize,  recordSize,  8);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.read(blockSize,  recordSize,  8);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.read(blockSize,  recordSize,  8);	  OutputStream    out    =    os.read(blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
12	[BUG]  [BUGGY]  out  =  os.getOutputBuffer(buffer,  blockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputBuffer(buffer,  blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOutputBuffer(buffer,  blockSize,  recordSize);	  out    =    os.getOutputBuffer(buffer,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
13	[BUG]  [BUGGY]  out  =  buffer.getOutputBuffer(os,  recordSize);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  buffer.getOutputBuffer(os,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  buffer.getOutputBuffer(os,  recordSize);	  out    =    os.getOutputBuffer(buffer,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
14	[BUG]  [BUGGY]  OutputStream  out  =  os.getOutputBuffer(blockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.getOutputBuffer(blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.getOutputBuffer(blockSize,  recordSize);	  out    =    os.getOutputBuffer(buffer,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
15	[BUG]  [BUGGY]  OutputStream  os  =  os.getOutputBuffer(blockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  os.getOutputBuffer(blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  os.getOutputBuffer(blockSize,  recordSize);	  out    =    os.getOutputBuffer(buffer,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
16	[BUG]  [BUGGY]  out  =  os.readFile(blockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.readFile(blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.readFile(blockSize,  recordSize);	  out    =    os.readFile();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
17	[BUG]  [BUGGY]  OutputStream  out  =  os.readFile();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.readFile();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.readFile();	  out    =    os.readFile();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
18	[BUG]  [BUGGY]  os  =  os.readFile();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  os.readFile();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  os.readFile();	  out    =    os.readFile();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
19	[BUG]  [BUGGY]  out  =  os.readFile(blockSize);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.readFile(blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.readFile(blockSize);	  out    =    os.readFile();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
20	[BUG]  [BUGGY]  out  =  os.getBytes(currName,  recordSize);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getBytes(currName,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getBytes(currName,  recordSize);	  out    =    os.getBytes(currName);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
21	[BUG]  [BUGGY]  out  =  os.getBytes(currName,  blockSize);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getBytes(currName,  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getBytes(currName,  blockSize);	  out    =    os.getBytes(currName);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
22	[BUG]  [BUGGY]  out  =  os.getBytes(lONGFILE_ERROR);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getBytes(lONGFILE_ERROR);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getBytes(lONGFILE_ERROR);	  out    =    os.getBytes(currName);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
23	[BUG]  [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize  -  2);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize  -  2);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  new  OutputStream(os,  blockSize,  recordSize  -  2);	  out    =    new    OutputStream(os,    blockSize,    recordSize    -    1);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
24	[BUG]  [BUGGY]  OutputStream  out  =  new  OutputStream(os,  blockSize,  recordSize  -  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  OutputStream(os,  blockSize,  recordSize  -  1);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  new  OutputStream(os,  blockSize,  recordSize  -  1);	  out    =    new    OutputStream(os,    blockSize,    recordSize    -    1);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
25	[BUG]  [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize  -  1L);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize  -  1L);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  new  OutputStream(os,  blockSize,  recordSize  -  1L);	  out    =    new    OutputStream(os,    blockSize,    recordSize    -    1);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
26	[BUG]  [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize  -  4);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize  -  4);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  new  OutputStream(os,  blockSize,  recordSize  -  4);	  out    =    new    OutputStream(os,    blockSize,    recordSize    -    1);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
27	[BUG]  [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize  /  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize  /  1);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  new  OutputStream(os,  blockSize,  recordSize  /  1);	  out    =    new    OutputStream(os,    blockSize,    recordSize    -    1);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
28	[BUG]  [BUGGY]  out  =  os.toByteArray(blockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.toByteArray(blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.toByteArray(blockSize,  recordSize);	  out    =    os.toByteArray(blockSize);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
29	[BUG]  [BUGGY]  out  =  os.toByteArray(blockSize  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.toByteArray(blockSize  +  1);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.toByteArray(blockSize  +  1);	  out    =    os.toByteArray(blockSize);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
30	[BUG]  [BUGGY]  OutputStream  out  =  os.toByteArray(blockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.toByteArray(blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.toByteArray(blockSize,  recordSize);	  out    =    os.toByteArray(blockSize);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
31	[BUG]  [BUGGY]  os  =  os.getIn();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  os.getIn();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  os.getIn();	  os    =    os.getOut();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
32	[BUG]  [BUGGY]  os  =  os.getInput();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  os.getInput();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  os.getInput();	  os    =    os.getOut();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
33	[BUG]  [BUGGY]  os  =  os.read();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  os.read();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  os.read();	  os    =    os.getOut();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
34	[BUG]  [BUGGY]  Os  os  =  os.getOut();  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  Os  os  =  os.getOut();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	Os  os  =  os.getOut();	  os    =    os.getOut();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
35	[BUG]  [BUGGY]  os  =  os.openStream();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  os.openStream();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  os.openStream();	  os    =    os.getOut();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
36	[BUG]  [BUGGY]  out  =  os.readLine()  *  blockSize;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.readLine()  *  blockSize;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.readLine()  *  blockSize;	  out    =    os.readLine()    +    blockSize;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
37	[BUG]  [BUGGY]  out  =  os.readLine()  /  blockSize;  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.readLine()  /  blockSize;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.readLine()  /  blockSize;	  out    =    os.readLine()    +    blockSize;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
38	[BUG]  [BUGGY]  out  =  os.readLine()  +  blockSize,  recordSize;  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.readLine()  +  blockSize,  recordSize;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.readLine()  +  blockSize,  recordSize;	  out    =    os.readLine()    +    blockSize;    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
39	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  0);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  0);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  0);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_TEST_OUTPUT);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
40	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  true);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  true);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  true);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_TEST_OUTPUT);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
41	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  currName);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  currName);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  currName);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_TEST_OUTPUT);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
42	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  null);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  null);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  null);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_TEST_OUTPUT);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
43	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  false);  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  false);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  false);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_TEST_OUTPUT);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
44	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  buffer);  [CE]  illegal  start  of  type  [FE]                                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  buffer);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  buffer);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_TEST_OUTPUT);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
45	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  closed);  [CE]  illegal  start  of  type  [FE]                                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  closed);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  closed);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_TEST_OUTPUT);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
46	[BUG]  [BUGGY]  out  =  os.readLine()  *  recordSize;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.readLine()  *  recordSize;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.readLine()  *  recordSize;	  out    =    os.readLine()    +    recordSize;    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
47	[BUG]  [BUGGY]  out  =  os.readLine()  /  recordSize;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.readLine()  /  recordSize;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.readLine()  /  recordSize;	  out    =    os.readLine()    +    recordSize;    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
48	[BUG]  [BUGGY]  out  =  os.readLine()  -  recordSize;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.readLine()  -  recordSize;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.readLine()  -  recordSize;	  out    =    os.readLine()    +    recordSize;    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
49	[BUG]  [BUGGY]  out  =  os.readLine()  +  BlockSize;  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.readLine()  +  BlockSize;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.readLine()  +  BlockSize;	  out    =    os.readLine()    +    recordSize;    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
50	[BUG]  [BUGGY]  out  =  os.readLine()  +  this.blockSize;  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.readLine()  +  this.blockSize;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.readLine()  +  this.blockSize;	  out    =    os.readLine()    +    recordSize;    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
51	[BUG]  [BUGGY]  OutputStream  os  =  this.os.getOut();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  this.os.getOut();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  this.os.getOut();	  OutputStream    os    =    os.getOut();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
52	[BUG]  [BUGGY]  OutputStream  os  =  os.getIn();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  os.getIn();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  os.getIn();	  OutputStream    os    =    os.getOut();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
53	[BUG]  [BUGGY]  OutputStream  os  =  os.getInputStream();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  os.getInputStream();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  os.getInputStream();	  OutputStream    os    =    os.getOut();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
54	[BUG]  [BUGGY]  OutputStream  os  =  os.openStream();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  os.openStream();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  os.openStream();	  OutputStream    os    =    os.getOut();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
55	[BUG]  [BUGGY]  OutputStream  os  =  getOut();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  getOut();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  getOut();	  OutputStream    os    =    os.getOut();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
56	[BUG]  [BUGGY]  OutputStream  out  =  this.os.getInputStream();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  this.os.getInputStream();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  this.os.getInputStream();	  OutputStream    out    =    os.getInputStream();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
57	[BUG]  [BUGGY]  OutputStream  out  =  os.getInputStream(blockSize);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.getInputStream(blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.getInputStream(blockSize);	  OutputStream    out    =    os.getInputStream();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
58	[BUG]  [BUGGY]  OutputStream  out  =  os.openStream();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.openStream();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.openStream();	  OutputStream    out    =    os.getInputStream();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
59	[BUG]  [BUGGY]  OutputStream  out  =  os.getErrorStream();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.getErrorStream();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.getErrorStream();	  OutputStream    out    =    os.getInputStream();    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
60	[BUG]  [BUGGY]  out  =  os.getOutputStream(blockSize,  recordSize,  LONGFILE_GNU);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputStream(blockSize,  recordSize,  LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOutputStream(blockSize,  recordSize,  LONGFILE_GNU);	  out    =    os.getOutputStream(blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
61	[BUG]  [BUGGY]  out  =  os.getOutputStream(blockSize,  recordSize  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputStream(blockSize,  recordSize  +  1);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOutputStream(blockSize,  recordSize  +  1);	  out    =    os.getOutputStream(blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
62	[BUG]  [BUGGY]  out  =  os.getOutputStream(blockSize,  recordSize,  8);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputStream(blockSize,  recordSize,  8);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOutputStream(blockSize,  recordSize,  8);	  out    =    os.getOutputStream(blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
63	[BUG]  [BUGGY]  out  =  os.getOutputStream(blockSize,  recordSize,  this.assemLen);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputStream(blockSize,  recordSize,  this.assemLen);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOutputStream(blockSize,  recordSize,  this.assemLen);	  out    =    os.getOutputStream(blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
64	[BUG]  [BUGGY]  out  =  os.getOutputStream(blockSize,  blockSize);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputStream(blockSize,  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOutputStream(blockSize,  blockSize);	  out    =    os.getOutputStream(blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
65	[BUG]  [BUGGY]  OutputStream  out  =  os.getOutputStream(blockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.getOutputStream(blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.getOutputStream(blockSize,  recordSize);	  out    =    os.getOutputStream(blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
66	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_VERSION,  TarBuffer.DEFAULT_BUFFER);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_VERSION,  TarBuffer.DEFAULT_BUFFER);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_VERSION,  TarBuffer.DEFAULT_BUFFER);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_VERSION);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
67	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_VERSION,  TarBuffer.DEFAULT_BACKSLASH);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_VERSION,  TarBuffer.DEFAULT_BACKSLASH);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_VERSION,  TarBuffer.DEFAULT_BACKSLASH);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_VERSION);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
68	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_VERSION,  TarBuffer.DEFAULT_FILE_ERROR);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_VERSION,  TarBuffer.DEFAULT_FILE_ERROR);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_VERSION,  TarBuffer.DEFAULT_FILE_ERROR);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_VERSION);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
69	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_VERSION,  TarBuffer.DEFAULT_LONGFILE_ERROR);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_VERSION,  TarBuffer.DEFAULT_LONGFILE_ERROR);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_VERSION,  TarBuffer.DEFAULT_LONGFILE_ERROR);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_VERSION);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
70	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_VERSION,  TarBuffer.DEFAULT_TOKEN);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_VERSION,  TarBuffer.DEFAULT_TOKEN);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_VERSION,  TarBuffer.DEFAULT_TOKEN);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_VERSION);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
71	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_VERSION,  TarBuffer.DEFAULT_FONT);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_VERSION,  TarBuffer.DEFAULT_FONT);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_VERSION,  TarBuffer.DEFAULT_FONT);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_VERSION);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
72	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_ERROR,  currName);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_ERROR,  currName);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_ERROR,  currName);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_TEST_ERROR);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
73	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_ERROR,  true);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_ERROR,  true);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_ERROR,  true);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_TEST_ERROR);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
74	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_ERROR,  LONGFILE_GNU);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_ERROR,  LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_ERROR,  LONGFILE_GNU);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_TEST_ERROR);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
75	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_ERROR,  0);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_ERROR,  0);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_ERROR,  0);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_TEST_ERROR);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
76	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_ERROR,  false);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_ERROR,  false);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_ERROR,  false);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_TEST_ERROR);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
77	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_ERROR,  null);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_ERROR,  null);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_ERROR,  null);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_TEST_ERROR);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
78	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_ERROR,  Long.MAX_VALUE);  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_ERROR,  Long.MAX_VALUE);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_ERROR,  Long.MAX_VALUE);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_TEST_ERROR);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
79	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  true);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  true);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  true);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
80	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  false);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  false);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  false);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
81	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  0);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  0);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  0);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
82	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  null);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  null);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  null);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
83	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  Long.MAX_VALUE);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  Long.MAX_VALUE);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  Long.MAX_VALUE);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
84	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  currName);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  currName);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  currName);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
85	[BUG]  [BUGGY]  Os  os  =  os.getOutputStream();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  Os  os  =  os.getOutputStream();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	Os  os  =  os.getOutputStream();	  os    =    os.getOutputStream();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
86	[BUG]  [BUGGY]  this.os  =  os.getOutputStream();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.os  =  os.getOutputStream();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this.os  =  os.getOutputStream();	  os    =    os.getOutputStream();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
87	[BUG]  [BUGGY]  Os  out  =  os.getOutputStream();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  Os  out  =  os.getOutputStream();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	Os  out  =  os.getOutputStream();	  os    =    os.getOutputStream();    	non-compiled	[CE]  <identifier>  expected	23	None	replace
88	[BUG]  [BUGGY]  out  =  os.getAstRoot(blockSize,  recordSize,  LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getAstRoot(blockSize,  recordSize,  LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getAstRoot(blockSize,  recordSize,  LONGFILE_GNU);	  out    =    os.getAstRoot(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
89	[BUG]  [BUGGY]  out  =  os.getAstRoot(blockSize,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getAstRoot(blockSize,  recordSize  +  1);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getAstRoot(blockSize,  recordSize  +  1);	  out    =    os.getAstRoot(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
90	[BUG]  [BUGGY]  out  =  os.getAstRoot(blockSize,  blockSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getAstRoot(blockSize,  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getAstRoot(blockSize,  blockSize);	  out    =    os.getAstRoot(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
91	[BUG]  [BUGGY]  out  =  os.getAstRoot(blockSize,  recordSize,  8);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getAstRoot(blockSize,  recordSize,  8);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getAstRoot(blockSize,  recordSize,  8);	  out    =    os.getAstRoot(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
92	[BUG]  [BUGGY]  out  =  os.getAstRoot(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getAstRoot(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getAstRoot(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU);	  out    =    os.getAstRoot(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
93	[BUG]  [BUGGY]  out  =  os.getAstRoot(blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_ERROR);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getAstRoot(blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_ERROR);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getAstRoot(blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_ERROR);	  out    =    os.getAstRoot(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
94	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH,  true);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH,  true);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH,  true);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_BACKSLASH);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
95	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH,  0);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH,  0);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH,  0);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_BACKSLASH);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
96	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH,  false);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH,  false);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH,  false);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_BACKSLASH);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
97	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH,  null);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH,  null);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH,  null);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_BACKSLASH);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
98	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH,  currName);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH,  currName);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH,  currName);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_BACKSLASH);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
99	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH,  buffer);  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH,  buffer);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH,  buffer);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_BACKSLASH);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
100	[BUG]  [BUGGY]  out  =  os.getBytes(blockSize  +  1);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getBytes(blockSize  +  1);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getBytes(blockSize  +  1);	  out    =    os.getBytes(blockSize);    	non-compiled	[CE]  <identifier>  expected	1	None	replace
101	[BUG]  [BUGGY]  out  =  os.getOutputBuffer(blockSize  +  recordSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputBuffer(blockSize  +  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOutputBuffer(blockSize  +  recordSize);	  out    =    os.getOutputBuffer(blockSize);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
102	[BUG]  [BUGGY]  OutputStream  out  =  os.getOutputBuffer(blockSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.getOutputBuffer(blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.getOutputBuffer(blockSize);	  out    =    os.getOutputBuffer(blockSize);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
103	[BUG]  [BUGGY]  out  =  os.getOut()  +  blockSize;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOut()  +  blockSize;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOut()  +  blockSize;	  out    =    os.getOut()    +    recordSize;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
104	[BUG]  [BUGGY]  out  =  os.getOut()  *  recordSize;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOut()  *  recordSize;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOut()  *  recordSize;	  out    =    os.getOut()    +    recordSize;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
105	[BUG]  [BUGGY]  OutputStream  out  =  os.getOut()  +  blockSize;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.getOut()  +  blockSize;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.getOut()  +  blockSize;	  out    =    os.getOut()    +    recordSize;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
106	[BUG]  [BUGGY]  out  =  os.getIn()  +  blockSize;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getIn()  +  blockSize;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getIn()  +  blockSize;	  out    =    os.getOut()    +    recordSize;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
107	[BUG]  [BUGGY]  out  =  os.getOut()  +  BlockSize;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOut()  +  BlockSize;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOut()  +  BlockSize;	  out    =    os.getOut()    +    recordSize;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
108	[BUG]  [BUGGY]  out  =  os.getOut()  /  recordSize;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOut()  /  recordSize;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOut()  /  recordSize;	  out    =    os.getOut()    +    recordSize;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
109	[BUG]  [BUGGY]  out  =  os.getOut()  *  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOut()  *  1;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOut()  *  1;	  out    =    os.getOut()    +    1;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
110	[BUG]  [BUGGY]  out  = " "  +  os.getOut()  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  = " "  +  os.getOut()  +  1;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  = " "  +  os.getOut()  +  1;	  out    =    os.getOut()    +    1;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
111	[BUG]  [BUGGY]  OutputStream  out  =  os.getIn();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.getIn();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.getIn();	  OutputStream    out    =    os.getOut();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
112	[BUG]  [BUGGY]  OutputStream  out  =  this.os.getOut();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  this.os.getOut();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  this.os.getOut();	  OutputStream    out    =    os.getOut();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
113	[BUG]  [BUGGY]  OutputStream  out  =  os.getOut()  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.getOut()  +  1;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.getOut()  +  1;	  OutputStream    out    =    os.getOut();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
114	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  LONGFILE_GNU);	  this(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
115	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  false);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  false);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  false);	  this(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
116	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  0);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  0);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  0);	  this(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
117	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  true);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  true);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  true);	  this(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
118	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  null);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  null);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  null);	  this(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
119	[BUG]  [BUGGY]  OutputStream  os  =  os.getInputStream(blockSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  os.getInputStream(blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  os.getInputStream(blockSize);	  out    =    os.getInputStream(recordSize);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
120	[BUG]  [BUGGY]  OutputStream  out  =  os.getInputStream(blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.getInputStream(blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.getInputStream(blockSize,  recordSize);	  out    =    os.getInputStream(recordSize);    	non-compiled	[CE]  <identifier>  expected	67	None	replace
121	[BUG]  [BUGGY]  out  =  os.getOutputStream(lockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputStream(lockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOutputStream(lockSize,  recordSize);	  out    =    os.getOutputStream(blockSize);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
122	[BUG]  [BUGGY]  os  =  os.getOutputStream(blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  os.getOutputStream(blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  os.getOutputStream(blockSize,  recordSize);	  out    =    os.getOutputStream(blockSize);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
123	[BUG]  [BUGGY]  OutputStream  out  =  new  OutputStream(os,  blockSize,  recordSize,  this.assemLen);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  OutputStream(os,  blockSize,  recordSize,  this.assemLen);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  new  OutputStream(os,  blockSize,  recordSize,  this.assemLen);	  out    =    new    OutputStream(os,    blockSize,    recordSize,    assemLen);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
124	[BUG]  [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize,  0,  assemLen);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize,  0,  assemLen);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  new  OutputStream(os,  blockSize,  recordSize,  0,  assemLen);	  out    =    new    OutputStream(os,    blockSize,    recordSize,    assemLen);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
125	[BUG]  [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize,  assemLen  +  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize,  assemLen  +  1);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  new  OutputStream(os,  blockSize,  recordSize,  assemLen  +  1);	  out    =    new    OutputStream(os,    blockSize,    recordSize,    assemLen);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
126	[BUG]  [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize,  this.assemBuf);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize,  this.assemBuf);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  new  OutputStream(os,  blockSize,  recordSize,  this.assemBuf);	  out    =    new    OutputStream(os,    blockSize,    recordSize,    assemLen);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
127	[BUG]  [BUGGY]  out  =  os.readLine(blockSize,  recordSize,  LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.readLine(blockSize,  recordSize,  LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.readLine(blockSize,  recordSize,  LONGFILE_GNU);	  out    =    os.readLine(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
128	[BUG]  [BUGGY]  out  =  os.readLine(blockSize,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.readLine(blockSize,  blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.readLine(blockSize,  blockSize,  recordSize);	  out    =    os.readLine(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
129	[BUG]  [BUGGY]  out  =  os.readLine(blockSize,  blockSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.readLine(blockSize,  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.readLine(blockSize,  blockSize);	  out    =    os.readLine(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
130	[BUG]  [BUGGY]  out  =  os.readLine(blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.readLine(blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.readLine(blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH);	  out    =    os.readLine(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
131	[BUG]  [BUGGY]  out  =  os.readLine(blockSize,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.readLine(blockSize,  recordSize  +  1);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.readLine(blockSize,  recordSize  +  1);	  out    =    os.readLine(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
132	[BUG]  [BUGGY]  OutputStream  os  =  os.getOutputBuffer(blockSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  os.getOutputBuffer(blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  os.getOutputBuffer(blockSize);	  out    =    os.getOutputBuffer(recordSize);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
133	[BUG]  [BUGGY]  os  =  os.getOutputBuffer(blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  os.getOutputBuffer(blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  os.getOutputBuffer(blockSize,  recordSize);	  out    =    os.getOutputBuffer(recordSize);    	non-compiled	[CE]  <identifier>  expected	58	None	replace
134	[BUG]  [BUGGY]  out  =  os.getOutputBuffer(blockSize,  recordSize,  LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputBuffer(blockSize,  recordSize,  LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOutputBuffer(blockSize,  recordSize,  LONGFILE_GNU);	  out    =    os.getOutputBuffer(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
135	[BUG]  [BUGGY]  out  =  os.getOutputBuffer(blockSize,  recordSize  +  1);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputBuffer(blockSize,  recordSize  +  1);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOutputBuffer(blockSize,  recordSize  +  1);	  out    =    os.getOutputBuffer(blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
136	[BUG]  [BUGGY]  out  =  os.getOutputBuffer(blockSize,  recordSize,  this.assemLen);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputBuffer(blockSize,  recordSize,  this.assemLen);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOutputBuffer(blockSize,  recordSize,  this.assemLen);	  out    =    os.getOutputBuffer(blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
137	[BUG]  [BUGGY]  out  =  os.getOutputBuffer(blockSize,  recordSize,  8);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputBuffer(blockSize,  recordSize,  8);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOutputBuffer(blockSize,  recordSize,  8);	  out    =    os.getOutputBuffer(blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
138	[BUG]  [BUGGY]  out  =  os.getOutputBuffer(blockSize,  recordSize,  buffer.length);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputBuffer(blockSize,  recordSize,  buffer.length);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOutputBuffer(blockSize,  recordSize,  buffer.length);	  out    =    os.getOutputBuffer(blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
139	[BUG]  [BUGGY]  out  =  os.getOutputBuffer(blockSize,  recordSize,  LONGFILE_ERROR);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputBuffer(blockSize,  recordSize,  LONGFILE_ERROR);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOutputBuffer(blockSize,  recordSize,  LONGFILE_ERROR);	  out    =    os.getOutputBuffer(blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
140	[BUG]  [BUGGY]  out  =  os.getOutputBuffer(false);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputBuffer(false);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOutputBuffer(false);	  out    =    os.getOutputBuffer(true);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
141	[BUG]  [BUGGY]  out  =  os.getOutputBuffer(true,  blockSize);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputBuffer(true,  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOutputBuffer(true,  blockSize);	  out    =    os.getOutputBuffer(true);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
142	[BUG]  [BUGGY]  out  =  os.getOutputBuffer(false,  recordSize);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputBuffer(false,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOutputBuffer(false,  recordSize);	  out    =    os.getOutputBuffer(true);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
143	[BUG]  [BUGGY]  out  =  os.getOutputBuffer(false,  blockSize);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputBuffer(false,  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOutputBuffer(false,  blockSize);	  out    =    os.getOutputBuffer(true);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
144	[BUG]  [BUGGY]  out  =  os.getOutputBuffer(true,  recordSize);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputBuffer(true,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOutputBuffer(true,  recordSize);	  out    =    os.getOutputBuffer(true);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
145	[BUG]  [BUGGY]  OutputStream  out  =  os.getOutputBuffer(false);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.getOutputBuffer(false);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.getOutputBuffer(false);	  out    =    os.getOutputBuffer(true);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
146	[BUG]  [BUGGY]  out  =  os.getOutputBuffer(0,  recordSize);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputBuffer(0,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOutputBuffer(0,  recordSize);	  out    =    os.getOutputBuffer(true);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
147	[BUG]  [BUGGY]  OutputStream  out  =  os.getAstRoot();  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.getAstRoot();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.getAstRoot();	  out    =    os.getAstRoot();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
148	[BUG]  [BUGGY]  os  =  os.getAstRoot();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  os.getAstRoot();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  os.getAstRoot();	  out    =    os.getAstRoot();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
149	[BUG]  [BUGGY]  out  =  os.getAstRoot(blockSize);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getAstRoot(blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getAstRoot(blockSize);	  out    =    os.getAstRoot();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
150	[BUG]  [BUGGY]  out  =  os.getAstRoot()  +  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getAstRoot()  +  1;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getAstRoot()  +  1;	  out    =    os.getAstRoot();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
151	[BUG]  [BUGGY]  out  =  os.getAstRoot(true);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getAstRoot(true);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getAstRoot(true);	  out    =    os.getAstRoot();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
152	[BUG]  [BUGGY]  out  =  os.getInputStream(lockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getInputStream(lockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getInputStream(lockSize,  recordSize);	  out    =    os.getInputStream(blockSize);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
153	[BUG]  [BUGGY]  os  =  os.getInputStream(blockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  os.getInputStream(blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  os.getInputStream(blockSize,  recordSize);	  out    =    os.getInputStream(blockSize);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
154	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR,  LONGFILE_GNU);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR,  LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR,  LONGFILE_GNU);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_LONGFILE_ERROR);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
155	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR,  currName);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR,  currName);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR,  currName);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_LONGFILE_ERROR);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
156	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR,  true);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR,  true);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR,  true);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_LONGFILE_ERROR);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
157	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR,  0);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR,  0);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR,  0);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_LONGFILE_ERROR);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
158	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR,  Long.MAX_VALUE);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR,  Long.MAX_VALUE);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR,  Long.MAX_VALUE);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_LONGFILE_ERROR);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
159	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR,  false);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR,  false);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR,  false);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_LONGFILE_ERROR);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
160	[BUG]  [BUGGY]  OutputStream  out  =  os.toString();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.toString();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.toString();	  out    =    os.toString();    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
161	[BUG]  [BUGGY]  out  =  os.toString()  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.toString()  +  1;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.toString()  +  1;	  out    =    os.toString();    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
162	[BUG]  [BUGGY]  out  =  os.toString()  +  recordSize;  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.toString()  +  recordSize;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.toString()  +  recordSize;	  out    =    os.toString();    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
163	[BUG]  [BUGGY]  out  =  os.getCanonicalFile();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getCanonicalFile();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getCanonicalFile();	  out    =    os.openStream();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
164	[BUG]  [BUGGY]  out  =  os.getCurrentSegment();  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getCurrentSegment();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getCurrentSegment();	  out    =    os.openStream();    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
165	[BUG]  [BUGGY]  out  =  os.read(lockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.read(lockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.read(lockSize,  recordSize);	  out    =    os.read(blockSize);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
166	[BUG]  [BUGGY]  OutputStream  out  =  this.os.readLine();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  this.os.readLine();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  this.os.readLine();	  OutputStream    out    =    os.readLine();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
167	[BUG]  [BUGGY]  OutputStream  out  =  os.readFully();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.readFully();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.readFully();	  OutputStream    out    =    os.readLine();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
168	[BUG]  [BUGGY]  OutputStream  out  =  os.readLine()  +  1;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.readLine()  +  1;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.readLine()  +  1;	  OutputStream    out    =    os.readLine();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
169	[BUG]  [BUGGY]  OutputStream  out  =  os.readLine()  +  blockSize;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.readLine()  +  blockSize;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.readLine()  +  blockSize;	  OutputStream    out    =    os.readLine();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
170	[BUG]  [BUGGY]  out  =  os.getOutputBuffer(1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputBuffer(1);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOutputBuffer(1);	  out    =    os.getOutputBuffer(0);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
171	[BUG]  [BUGGY]  out  =  os.getOutputBuffer(2);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputBuffer(2);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOutputBuffer(2);	  out    =    os.getOutputBuffer(0);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
172	[BUG]  [BUGGY]  OutputStream  out  =  os.readUTF();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.readUTF();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.readUTF();	  out    =    os.readUTF();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
173	[BUG]  [BUGGY]  out  =  os.readUTF(blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.readUTF(blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.readUTF(blockSize,  recordSize);	  out    =    os.readUTF();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
174	[BUG]  [BUGGY]  os  =  os.readUTF();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  os.readUTF();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  os.readUTF();	  out    =    os.readUTF();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
175	[BUG]  [BUGGY]  out  =  this.os.readUTF();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  this.os.readUTF();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  this.os.readUTF();	  out    =    os.readUTF();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
176	[BUG]  [BUGGY]  OutputStream  out  =  os.getBytes(blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.getBytes(blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.getBytes(blockSize,  recordSize);	  out    =    os.getBytes(lockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
177	[BUG]  [BUGGY]  OutputStream  os  =  os.getBytes(blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  os.getBytes(blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  os.getBytes(blockSize,  recordSize);	  out    =    os.getBytes(lockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
178	[BUG]  [BUGGY]  os  =  os.getBytes(blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  os.getBytes(blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  os.getBytes(blockSize,  recordSize);	  out    =    os.getBytes(lockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
179	[BUG]  [BUGGY]  out  =  os.getBytes(blockSize,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getBytes(blockSize,  recordSize  +  1);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getBytes(blockSize,  recordSize  +  1);	  out    =    os.getBytes(lockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
180	[BUG]  [BUGGY]  OutputStream  out  =  this.os.getOutputStream();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  this.os.getOutputStream();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  this.os.getOutputStream();	  OutputStream    out    =    os.getOutputStream();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
181	[BUG]  [BUGGY]  OutputStream  out  =  os.getOutputStream(blockSize);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.getOutputStream(blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.getOutputStream(blockSize);	  OutputStream    out    =    os.getOutputStream();    	non-compiled	[CE]  <identifier>  expected	22	None	replace
182	[BUG]  [BUGGY]  OutputStream  os  =  this.os.getOutputStream();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  this.os.getOutputStream();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  this.os.getOutputStream();	  OutputStream    os    =    os.getOutputStream();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
183	[BUG]  [BUGGY]  OutputStream  os  =  getOutputStream();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  getOutputStream();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  getOutputStream();	  OutputStream    os    =    os.getOutputStream();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
184	[BUG]  [BUGGY]  OutputStream  os  =  new  FileOutputStream(os.getAbsolutePath());  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  FileOutputStream(os.getAbsolutePath());  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  new  FileOutputStream(os.getAbsolutePath());	  OutputStream    os    =    os.getOutputStream();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
185	[BUG]  [BUGGY]  out  =  os.readFully(recordSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.readFully(recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.readFully(recordSize);	  out    =    os.readFully();    	non-compiled	[CE]  <identifier>  expected	8	None	replace
186	[BUG]  [BUGGY]  OutputStream  os  =  this.os.readLine();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  this.os.readLine();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  this.os.readLine();	  OutputStream    os    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
187	[BUG]  [BUGGY]  OutputStream  os  =  new  FileOutputStream(blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  FileOutputStream(blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  new  FileOutputStream(blockSize,  recordSize);	  OutputStream    os    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
188	[BUG]  [BUGGY]  OutputStream  os  =  new  FileOutputStream(os.getBytes());  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  FileOutputStream(os.getBytes());  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  new  FileOutputStream(os.getBytes());	  OutputStream    os    =    os.readLine();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
189	[BUG]  [BUGGY]  OutputStream  os  =  getCurrentOutputStream();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  getCurrentOutputStream();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  getCurrentOutputStream();	  OutputStream    os    =    os.readLine();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
190	[BUG]  [BUGGY]  OutputStream  os  =  this.out.readLine();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  this.out.readLine();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  this.out.readLine();	  OutputStream    os    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
191	[BUG]  [BUGGY]  OutputStream  os  =  new  FileOutputStream(os.readLine());  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  FileOutputStream(os.readLine());  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  new  FileOutputStream(os.readLine());	  OutputStream    os    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
192	[BUG]  [BUGGY]  out  =  os.getIn()  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getIn()  +  1;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getIn()  +  1;	  out    =    os.getIn();    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
193	[BUG]  [BUGGY]  OutputStream  out  =  os.toByteArray(blockSize);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.toByteArray(blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.toByteArray(blockSize);	  out    =    os.toByteArray(recordSize);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
194	[BUG]  [BUGGY]  os  =  os.toByteArray(blockSize);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  os.toByteArray(blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  os.toByteArray(blockSize);	  out    =    os.toByteArray(recordSize);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
195	[BUG]  [BUGGY]  OutputStream  os  =  os.toByteArray(blockSize);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  os.toByteArray(blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  os.toByteArray(blockSize);	  out    =    os.toByteArray(recordSize);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
196	[BUG]  [BUGGY]  out  =  os.getOutputPath()  +  1;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputPath()  +  1;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOutputPath()  +  1;	  out    =    os.getOutputPath();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
197	[BUG]  [BUGGY]  out  =  os.getOutputPath()  +  recordSize;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputPath()  +  recordSize;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOutputPath()  +  recordSize;	  out    =    os.getOutputPath();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
198	[BUG]  [BUGGY]  OutputStream  out  =  os.getOutputPath();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.getOutputPath();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.getOutputPath();	  out    =    os.getOutputPath();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
199	[BUG]  [BUGGY]  os  =  os.getOutputPath();  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  os.getOutputPath();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  os.getOutputPath();	  out    =    os.getOutputPath();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
200	[BUG]  [BUGGY]  out  =  os.getInputPath();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getInputPath();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getInputPath();	  out    =    os.getOutputPath();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
201	[BUG]  [BUGGY]  out  =  os.getOutputPath()  +  2;  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputPath()  +  2;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOutputPath()  +  2;	  out    =    os.getOutputPath();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
202	[BUG]  [BUGGY]  OutputStream  out  =  this.os.getOutputBuffer();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  this.os.getOutputBuffer();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  this.os.getOutputBuffer();	  OutputStream    out    =    os.getOutputBuffer();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
203	[BUG]  [BUGGY]  OutputStream  out  =  os.getInputBuffer();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.getInputBuffer();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.getInputBuffer();	  OutputStream    out    =    os.getOutputBuffer();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
204	[BUG]  [BUGGY]  OutputStream  out  =  os.getOutputBuffer(0);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.getOutputBuffer(0);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.getOutputBuffer(0);	  OutputStream    out    =    os.getOutputBuffer();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
205	[BUG]  [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize,  LONGFILE_TRUNCATE);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize,  LONGFILE_TRUNCATE);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  new  OutputStream(os,  blockSize,  recordSize,  LONGFILE_TRUNCATE);	  out    =    new    OutputStream(os,    blockSize,    recordSize,    LONGFILE_GNU);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
206	[BUG]  [BUGGY]  OutputStream  out  =  new  OutputStream(os,  blockSize,  recordSize,  LONGFILE_GNU);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  OutputStream(os,  blockSize,  recordSize,  LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  new  OutputStream(os,  blockSize,  recordSize,  LONGFILE_GNU);	  out    =    new    OutputStream(os,    blockSize,    recordSize,    LONGFILE_GNU);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
207	[BUG]  [BUGGY]  os  =  new  OutputStream(os,  blockSize,  recordSize,  LONGFILE_GNU);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  OutputStream(os,  blockSize,  recordSize,  LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  new  OutputStream(os,  blockSize,  recordSize,  LONGFILE_GNU);	  out    =    new    OutputStream(os,    blockSize,    recordSize,    LONGFILE_GNU);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
208	[BUG]  [BUGGY]  OutputStream  out  =  new  OutputStream(os,  blockSize,  recordSize,  LONGFILE_TRUNCATE);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  OutputStream(os,  blockSize,  recordSize,  LONGFILE_TRUNCATE);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  new  OutputStream(os,  blockSize,  recordSize,  LONGFILE_TRUNCATE);	  out    =    new    OutputStream(os,    blockSize,    recordSize,    LONGFILE_GNU);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
209	[BUG]  [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize,  LONGFILE_GLUNCATE);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize,  LONGFILE_GLUNCATE);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  new  OutputStream(os,  blockSize,  recordSize,  LONGFILE_GLUNCATE);	  out    =    new    OutputStream(os,    blockSize,    recordSize,    LONGFILE_GNU);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
210	[BUG]  [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize,  TarBuffer.TRUNCATE);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize,  TarBuffer.TRUNCATE);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  new  OutputStream(os,  blockSize,  recordSize,  TarBuffer.TRUNCATE);	  out    =    new    OutputStream(os,    blockSize,    recordSize,    LONGFILE_GNU);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
211	[BUG]  [BUGGY]  out  =  os.getBytes(blockSize  +  recordSize,  blockSize);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getBytes(blockSize  +  recordSize,  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getBytes(blockSize  +  recordSize,  blockSize);	  out    =    os.getBytes(blockSize    +    recordSize);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
212	[BUG]  [BUGGY]  out  =  os.getBytes(blockSize  +  recordSize,  LONGFILE_GNU);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getBytes(blockSize  +  recordSize,  LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getBytes(blockSize  +  recordSize,  LONGFILE_GNU);	  out    =    os.getBytes(blockSize    +    recordSize);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
213	[BUG]  [BUGGY]  out  =  os.getBytes(blockSize  +  recordSize,  bufferSize);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getBytes(blockSize  +  recordSize,  bufferSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getBytes(blockSize  +  recordSize,  bufferSize);	  out    =    os.getBytes(blockSize    +    recordSize);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
214	[BUG]  [BUGGY]  out  =  os.getBytes(blockSize  +  recordSize,  false);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getBytes(blockSize  +  recordSize,  false);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getBytes(blockSize  +  recordSize,  false);	  out    =    os.getBytes(blockSize    +    recordSize);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
215	[BUG]  [BUGGY]  out  =  os.getBytes(blockSize  +  recordSize,  this.assemLen);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getBytes(blockSize  +  recordSize,  this.assemLen);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getBytes(blockSize  +  recordSize,  this.assemLen);	  out    =    os.getBytes(blockSize    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
216	[BUG]  [BUGGY]  OutputStream  out  =  os.getBytes(blockSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.getBytes(blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.getBytes(blockSize);	  out    =    os.getBytes(recordSize);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
217	[BUG]  [BUGGY]  OutputStream  os  =  os.getBytes(blockSize);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  os.getBytes(blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  os.getBytes(blockSize);	  out    =    os.getBytes(recordSize);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
218	[BUG]  [BUGGY]  Os  os  =  os.readLine();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  Os  os  =  os.readLine();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	Os  os  =  os.readLine();	  os    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
219	[BUG]  [BUGGY]  os  =  os.readFully();  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  os.readFully();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  os.readFully();	  os    =    os.readLine();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
220	[BUG]  [BUGGY]  this.os  =  os.readLine();  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.os  =  os.readLine();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this.os  =  os.readLine();	  os    =    os.readLine();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
221	[BUG]  [BUGGY]  os  =  this.os.readLine();  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  this.os.readLine();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  this.os.readLine();	  os    =    os.readLine();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
222	[BUG]  [BUGGY]  this.out  =  new  OutputStream(os,  blockSize,  recordSize  +  1);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.out  =  new  OutputStream(os,  blockSize,  recordSize  +  1);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this.out  =  new  OutputStream(os,  blockSize,  recordSize  +  1);	  this.out    =    new    OutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
223	[BUG]  [BUGGY]  this.out  =  new  OutputStream(os,  blockSize,  recordSize,  LONGFILE_GNU);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.out  =  new  OutputStream(os,  blockSize,  recordSize,  LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this.out  =  new  OutputStream(os,  blockSize,  recordSize,  LONGFILE_GNU);	  this.out    =    new    OutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
224	[BUG]  [BUGGY]  this.out  =  new  OutputStream(os,  blockSize,  recordSize  -  1);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.out  =  new  OutputStream(os,  blockSize,  recordSize  -  1);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this.out  =  new  OutputStream(os,  blockSize,  recordSize  -  1);	  this.out    =    new    OutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
225	[BUG]  [BUGGY]  this.out  =  new  OutputStream(os,  blockSize,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.out  =  new  OutputStream(os,  blockSize,  0,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this.out  =  new  OutputStream(os,  blockSize,  0,  recordSize);	  this.out    =    new    OutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
226	[BUG]  [BUGGY]  this.out  =  new  OutputStream(os,  blockSize,  assemLen);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.out  =  new  OutputStream(os,  blockSize,  assemLen);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this.out  =  new  OutputStream(os,  blockSize,  assemLen);	  this.out    =    new    OutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
227	[BUG]  [BUGGY]  this.out  =  new  OutputStream(os,  blockSize,  recordSize,  assemLen);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.out  =  new  OutputStream(os,  blockSize,  recordSize,  assemLen);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this.out  =  new  OutputStream(os,  blockSize,  recordSize,  assemLen);	  this.out    =    new    OutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
228	[BUG]  [BUGGY]  OutputStream  os  =  new  OutputStream(os,  blockSize,  recordSize  +  1);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  OutputStream(os,  blockSize,  recordSize  +  1);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  new  OutputStream(os,  blockSize,  recordSize  +  1);	  OutputStream    os    =    new    OutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
229	[BUG]  [BUGGY]  OutputStream  os  =  new  OutputStream(os,  blockSize,  recordSize,  LONGFILE_GNU);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  OutputStream(os,  blockSize,  recordSize,  LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  new  OutputStream(os,  blockSize,  recordSize,  LONGFILE_GNU);	  OutputStream    os    =    new    OutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
230	[BUG]  [BUGGY]  OutputStream  os  =  new  OutputStream(os,  blockSize,  recordSize,  this.assemLen);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  OutputStream(os,  blockSize,  recordSize,  this.assemLen);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  new  OutputStream(os,  blockSize,  recordSize,  this.assemLen);	  OutputStream    os    =    new    OutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
231	[BUG]  [BUGGY]  InputStream  os  =  new  OutputStream(os,  blockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  InputStream  os  =  new  OutputStream(os,  blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	InputStream  os  =  new  OutputStream(os,  blockSize,  recordSize);	  OutputStream    os    =    new    OutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
232	[BUG]  [BUGGY]  OutputStream  os  =  new  OutputStream(os,  blockSize,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  OutputStream(os,  blockSize,  0,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  new  OutputStream(os,  blockSize,  0,  recordSize);	  OutputStream    os    =    new    OutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
233	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  0);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  0);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  0);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
234	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  true);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  true);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  true);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
235	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  currName);  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  currName);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  currName);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
236	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  null);  [CE]  illegal  start  of  type  [FE]                                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  null);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  null);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
237	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  false);  [CE]  illegal  start  of  type  [FE]                                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  false);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  false);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
238	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  assemLen);  [CE]  illegal  start  of  type  [FE]                                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  assemLen);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  assemLen);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
239	[BUG]  [BUGGY]  super(os,  blockSize,  recordSize,  LONGFILE_GNU);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  super(os,  blockSize,  recordSize,  LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	super(os,  blockSize,  recordSize,  LONGFILE_GNU);	  super(os,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
240	[BUG]  [BUGGY]  super(os,  blockSize,  recordSize,  assemLen);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  super(os,  blockSize,  recordSize,  assemLen);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	super(os,  blockSize,  recordSize,  assemLen);	  super(os,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
241	[BUG]  [BUGGY]  super(os,  blockSize,  recordSize,  false);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  super(os,  blockSize,  recordSize,  false);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	super(os,  blockSize,  recordSize,  false);	  super(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
242	[BUG]  [BUGGY]  super(os,  blockSize,  recordSize,  true);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  super(os,  blockSize,  recordSize,  true);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	super(os,  blockSize,  recordSize,  true);	  super(os,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
243	[BUG]  [BUGGY]  super(os,  blockSize,  recordSize,  0);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  super(os,  blockSize,  recordSize,  0);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	super(os,  blockSize,  recordSize,  0);	  super(os,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
244	[BUG]  [BUGGY]  super(os,  blockSize,  recordSize,  this.assemLen);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  super(os,  blockSize,  recordSize,  this.assemLen);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	super(os,  blockSize,  recordSize,  this.assemLen);	  super(os,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
245	[BUG]  [BUGGY]  os  =  os.getInputBuffer();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  os.getInputBuffer();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  os.getInputBuffer();	  os    =    os.getOutputBuffer();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
246	[BUG]  [BUGGY]  os  =  os.getOutputBuffer(blockSize);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  os.getOutputBuffer(blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  os.getOutputBuffer(blockSize);	  os    =    os.getOutputBuffer();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
247	[BUG]  [BUGGY]  os  =  os.getOutputBuffer(true);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  os.getOutputBuffer(true);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  os.getOutputBuffer(true);	  os    =    os.getOutputBuffer();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
248	[BUG]  [BUGGY]  this.os  =  os.toByteArray();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.os  =  os.toByteArray();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this.os  =  os.toByteArray();	  os    =    os.toByteArray();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
249	[BUG]  [BUGGY]  os  =  os.getAstRoot(blockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  os.getAstRoot(blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  os.getAstRoot(blockSize,  recordSize);	  os    =    os.toByteArray();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
250	[BUG]  [BUGGY]  out  =  os.getInputStream(blockSize,  recordSize,  LONGFILE_GNU);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getInputStream(blockSize,  recordSize,  LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getInputStream(blockSize,  recordSize,  LONGFILE_GNU);	  out    =    os.getInputStream(blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
251	[BUG]  [BUGGY]  out  =  os.getInputStream(blockSize,  recordSize  +  1);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getInputStream(blockSize,  recordSize  +  1);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getInputStream(blockSize,  recordSize  +  1);	  out    =    os.getInputStream(blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
252	[BUG]  [BUGGY]  out  =  os.getInputStream(blockSize,  recordSize,  8);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getInputStream(blockSize,  recordSize,  8);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getInputStream(blockSize,  recordSize,  8);	  out    =    os.getInputStream(blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
253	[BUG]  [BUGGY]  out  =  os.getInputStream(blockSize,  blockSize);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getInputStream(blockSize,  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getInputStream(blockSize,  blockSize);	  out    =    os.getInputStream(blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
254	[BUG]  [BUGGY]  out  =  os.getInputStream(blockSize,  recordSize,  this.assemLen);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getInputStream(blockSize,  recordSize,  this.assemLen);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getInputStream(blockSize,  recordSize,  this.assemLen);	  out    =    os.getInputStream(blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
255	[BUG]  [BUGGY]  out  = " "  +  os.readLine()  +  1;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  = " "  +  os.readLine()  +  1;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  = " "  +  os.readLine()  +  1;	  out    =    os.readLine()    +    1;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
256	[BUG]  [BUGGY]  out  =  os.readLine()  *  1;  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.readLine()  *  1;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.readLine()  *  1;	  out    =    os.readLine()    +    1;    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
257	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_GNU);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_GNU);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_FILE_ERROR);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
258	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_ERROR,  LONGFILE_GNU);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_ERROR,  LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_ERROR,  LONGFILE_GNU);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_FILE_ERROR);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
259	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_ERROR,  currName);  [CE]  illegal  start  of  type  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_ERROR,  currName);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_ERROR,  currName);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_FILE_ERROR);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
260	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_ERROR,  true);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_ERROR,  true);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_ERROR,  true);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_FILE_ERROR);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
261	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_ERROR,  0);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_ERROR,  0);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_ERROR,  0);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_FILE_ERROR);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
262	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_ERROR,  false);  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_ERROR,  false);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_ERROR,  false);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_FILE_ERROR);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
263	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_ERROR,  Long.MAX_VALUE);  [CE]  illegal  start  of  type  [FE]                                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_ERROR,  Long.MAX_VALUE);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_ERROR,  Long.MAX_VALUE);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_FILE_ERROR);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
264	[BUG]  [BUGGY]  OutputStream  os  =  new  OutputStream(blockSize,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  OutputStream(blockSize,  recordSize  +  1);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  new  OutputStream(blockSize,  recordSize  +  1);	  OutputStream    os    =    new    OutputStream(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
265	[BUG]  [BUGGY]  OutputStream  os  =  new  OutputStream(blockSize,  recordSize,  LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  OutputStream(blockSize,  recordSize,  LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  new  OutputStream(blockSize,  recordSize,  LONGFILE_GNU);	  OutputStream    os    =    new    OutputStream(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
266	[BUG]  [BUGGY]  OutputStream  os  =  new  OutputStream(blockSize,  recordSize,  this.assemLen);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  OutputStream(blockSize,  recordSize,  this.assemLen);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  new  OutputStream(blockSize,  recordSize,  this.assemLen);	  OutputStream    os    =    new    OutputStream(blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
267	[BUG]  [BUGGY]  OutputStream  os  =  new  OutputStream(blockSize,  blockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  OutputStream(blockSize,  blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  new  OutputStream(blockSize,  blockSize,  recordSize);	  OutputStream    os    =    new    OutputStream(blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
268	[BUG]  [BUGGY]  OutputStream  os  =  new  OutputStream(blockSize,  recordSize,  LONGFILE_ERROR);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  OutputStream(blockSize,  recordSize,  LONGFILE_ERROR);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  new  OutputStream(blockSize,  recordSize,  LONGFILE_ERROR);	  OutputStream    os    =    new    OutputStream(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
269	[BUG]  [BUGGY]  OutputStream  os  =  new  OutputStream(blockSize,  recordSize,  TarBuffer.DEFAULT);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  OutputStream(blockSize,  recordSize,  TarBuffer.DEFAULT);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  new  OutputStream(blockSize,  recordSize,  TarBuffer.DEFAULT);	  OutputStream    os    =    new    OutputStream(blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
270	[BUG]  [BUGGY]  OutputStream  out  =  new  OutputStream(os,  blockSize,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  OutputStream(os,  blockSize,  recordSize  +  1);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  new  OutputStream(os,  blockSize,  recordSize  +  1);	  out    =    new    OutputStream(os,    blockSize,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
271	[BUG]  [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize  +  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize  +  2);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  new  OutputStream(os,  blockSize,  recordSize  +  2);	  out    =    new    OutputStream(os,    blockSize,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
272	[BUG]  [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize  +  1,  recordSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize  +  1,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  new  OutputStream(os,  blockSize,  recordSize  +  1,  recordSize);	  out    =    new    OutputStream(os,    blockSize,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
273	[BUG]  [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize  +  4);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize  +  4);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  new  OutputStream(os,  blockSize,  recordSize  +  4);	  out    =    new    OutputStream(os,    blockSize,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
274	[BUG]  [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize  +  1L);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize  +  1L);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  new  OutputStream(os,  blockSize,  recordSize  +  1L);	  out    =    new    OutputStream(os,    blockSize,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
275	[BUG]  [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize  +  3);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize  +  3);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  new  OutputStream(os,  blockSize,  recordSize  +  3);	  out    =    new    OutputStream(os,    blockSize,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
276	[BUG]  [BUGGY]  OutputStream  out  =  new  OutputStream(os,  blockSize,  recordSize,  assemLen);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  OutputStream(os,  blockSize,  recordSize,  assemLen);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  new  OutputStream(os,  blockSize,  recordSize,  assemLen);	  OutputStream    out    =    new    OutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
277	[BUG]  [BUGGY]  OutputStream  out  =  new  OutputStream(os,  blockSize,  0,  recordSize);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  OutputStream(os,  blockSize,  0,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  new  OutputStream(os,  blockSize,  0,  recordSize);	  OutputStream    out    =    new    OutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
278	[BUG]  [BUGGY]  OutputStream  out  =  new  OutputStream(os,  blockSize,  assemLen);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  OutputStream(os,  blockSize,  assemLen);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  new  OutputStream(os,  blockSize,  assemLen);	  OutputStream    out    =    new    OutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
279	[BUG]  [BUGGY]  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  0;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this.assemLen  =  0;	  super(os,    blockSize,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
280	[BUG]  [BUGGY]  super(os,  blockSize,  recordSize);  this.assemLen  =  1;  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  super(os,  blockSize,  recordSize);  this.assemLen  =  1;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	super(os,  blockSize,  recordSize);  this.assemLen  =  1;	  super(os,    blockSize,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
281	[BUG]  [BUGGY]  os.write(blockSize,  recordSize);  this.assemLen  =  0;  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os.write(blockSize,  recordSize);  this.assemLen  =  0;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os.write(blockSize,  recordSize);  this.assemLen  =  0;	  super(os,    blockSize,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
282	[BUG]  [BUGGY]  super(os,  blockSize,  recordSize);  this.assemLen  =  2;  [CE]  illegal  start  of  type  [FE]                                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  super(os,  blockSize,  recordSize);  this.assemLen  =  2;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	super(os,  blockSize,  recordSize);  this.assemLen  =  2;	  super(os,    blockSize,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
283	[BUG]  [BUGGY]  os  =  os.getInputStream();  this.assemLen  =  0;  [CE]  illegal  start  of  type  [FE]                                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  os.getInputStream();  this.assemLen  =  0;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  os.getInputStream();  this.assemLen  =  0;	  super(os,    blockSize,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
284	[BUG]  [BUGGY]  OutputStream  out  =  this.os.getOutputFile();  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  this.os.getOutputFile();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  this.os.getOutputFile();	  OutputStream    out    =    os.getOutputFile();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
285	[BUG]  [BUGGY]  out  =  os.read(blockSize,  recordSize,  LONGFILE_GNU);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.read(blockSize,  recordSize,  LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.read(blockSize,  recordSize,  LONGFILE_GNU);	  out    =    os.read(blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
286	[BUG]  [BUGGY]  out  =  os.read(blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.read(blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.read(blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH);	  out    =    os.read(blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
287	[BUG]  [BUGGY]  out  =  os.read(blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_ERROR);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.read(blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_ERROR);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.read(blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_ERROR);	  out    =    os.read(blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
288	[BUG]  [BUGGY]  out  =  os.read(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.read(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.read(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR);	  out    =    os.read(blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
289	[BUG]  [BUGGY]  out  =  os.read(blockSize,  recordSize,  TarBuffer.DEFAULT_BUFFER);  [CE]  illegal  start  of  type  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.read(blockSize,  recordSize,  TarBuffer.DEFAULT_BUFFER);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.read(blockSize,  recordSize,  TarBuffer.DEFAULT_BUFFER);	  out    =    os.read(blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
290	[BUG]  [BUGGY]  os  =  os.getInputFile();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  os.getInputFile();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  os.getInputFile();	  os    =    os.getOutputFile();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
291	[BUG]  [BUGGY]  OutputStream  os  =  os.getOutputStream(blockSize);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  os.getOutputStream(blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  os.getOutputStream(blockSize);	  out    =    os.getOutputStream(recordSize);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
292	[BUG]  [BUGGY]  os  =  os.getOutputStream(blockSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  os.getOutputStream(blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  os.getOutputStream(blockSize);	  out    =    os.getOutputStream(recordSize);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
293	[BUG]  [BUGGY]  OutputStream  os  =  os.getOutputStream(blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  os.getOutputStream(blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  os.getOutputStream(blockSize,  recordSize);	  out    =    os.getOutputStream(recordSize);    	non-compiled	[CE]  <identifier>  expected	72	None	replace
294	[BUG]  [BUGGY]  out  =  os.getOutputFile()  +  blockSize;  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputFile()  +  blockSize;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOutputFile()  +  blockSize;	  out    =    os.getOutputFile()    +    recordSize;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
295	[BUG]  [BUGGY]  out  =  os.getOutputFile()  /  recordSize;  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputFile()  /  recordSize;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOutputFile()  /  recordSize;	  out    =    os.getOutputFile()    +    recordSize;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
296	[BUG]  [BUGGY]  out  =  os.getOutputFile()  *  recordSize;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputFile()  *  recordSize;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOutputFile()  *  recordSize;	  out    =    os.getOutputFile()    +    recordSize;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
297	[BUG]  [BUGGY]  out  =  os.getOutputFile(),  blockSize  +  recordSize;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputFile(),  blockSize  +  recordSize;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOutputFile(),  blockSize  +  recordSize;	  out    =    os.getOutputFile()    +    recordSize;    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
298	[BUG]  [BUGGY]  OutputStream  out  =  os.getOutputFile()  +  blockSize;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.getOutputFile()  +  blockSize;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.getOutputFile()  +  blockSize;	  out    =    os.getOutputFile()    +    recordSize;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
299	[BUG]  [BUGGY]  out  =  os.getBytes(blockSize,  recordSize,  LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getBytes(blockSize,  recordSize,  LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getBytes(blockSize,  recordSize,  LONGFILE_GNU);	  out    =    os.getBytes(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
300	[BUG]  [BUGGY]  out  =  os.getBytes(blockSize,  blockSize);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getBytes(blockSize,  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getBytes(blockSize,  blockSize);	  out    =    os.getBytes(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
301	[BUG]  [BUGGY]  out  =  os.getBytes(blockSize,  recordSize,  currBytes);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getBytes(blockSize,  recordSize,  currBytes);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getBytes(blockSize,  recordSize,  currBytes);	  out    =    os.getBytes(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
302	[BUG]  [BUGGY]  out  =  os.getBytes(blockSize,  recordSize,  8);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getBytes(blockSize,  recordSize,  8);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getBytes(blockSize,  recordSize,  8);	  out    =    os.getBytes(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
303	[BUG]  [BUGGY]  out  =  os.getBytes(blockSize,  recordSize,  this.assemLen);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getBytes(blockSize,  recordSize,  this.assemLen);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getBytes(blockSize,  recordSize,  this.assemLen);	  out    =    os.getBytes(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
304	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU,  LONGFILE_TRUNCATE);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU,  LONGFILE_TRUNCATE);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU,  LONGFILE_TRUNCATE);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_LONGFILE_GNU);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
305	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_TRUNCATE);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_TRUNCATE);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_TRUNCATE);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_LONGFILE_GNU);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
306	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU,  true);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU,  true);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU,  true);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_LONGFILE_GNU);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
307	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU,  TarBuffer.DEFAULT_LONGFILE_TRUNCATE);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU,  TarBuffer.DEFAULT_LONGFILE_TRUNCATE);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU,  TarBuffer.DEFAULT_LONGFILE_TRUNCATE);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_LONGFILE_GNU);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
308	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU,  0);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU,  0);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU,  0);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_LONGFILE_GNU);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
309	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU,  TarBuffer.DEFAULT_LONGFILE_ERROR);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU,  TarBuffer.DEFAULT_LONGFILE_ERROR);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU,  TarBuffer.DEFAULT_LONGFILE_ERROR);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_LONGFILE_GNU);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
310	[BUG]  [BUGGY]  os  =  new  OutputStream(os,  blockSize,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  OutputStream(os,  blockSize,  recordSize  +  1);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  new  OutputStream(os,  blockSize,  recordSize  +  1);	  os    =    new    OutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
311	[BUG]  [BUGGY]  os  =  new  OutputStream(os,  blockSize,  recordSize,  this.assemLen);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  OutputStream(os,  blockSize,  recordSize,  this.assemLen);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  new  OutputStream(os,  blockSize,  recordSize,  this.assemLen);	  os    =    new    OutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
312	[BUG]  [BUGGY]  this.os  =  new  OutputStream(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.os  =  new  OutputStream(os,  blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this.os  =  new  OutputStream(os,  blockSize,  recordSize);	  os    =    new    OutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
313	[BUG]  [BUGGY]  os  =  new  OutputStream(os,  blockSize,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  OutputStream(os,  blockSize,  0,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  new  OutputStream(os,  blockSize,  0,  recordSize);	  os    =    new    OutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
314	[BUG]  [BUGGY]  os  =  new  OutputStream(os,  blockSize,  recordSize,  this.longFileMode);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  OutputStream(os,  blockSize,  recordSize,  this.longFileMode);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  new  OutputStream(os,  blockSize,  recordSize,  this.longFileMode);	  os    =    new    OutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
315	[BUG]  [BUGGY]  OutputStream  out  =  os.readInt();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.readInt();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.readInt();	  out    =    os.readInt();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
316	[BUG]  [BUGGY]  out  =  os.readUnsignedInt();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.readUnsignedInt();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.readUnsignedInt();	  out    =    os.readInt();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
317	[BUG]  [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize,  this.assemLen  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize,  this.assemLen  +  1);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  new  OutputStream(os,  blockSize,  recordSize,  this.assemLen  +  1);	  out    =    new    OutputStream(os,    blockSize,    recordSize,    this.assemLen);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
318	[BUG]  [BUGGY]  out  =  new  OutputStream(os,  blockSize,  this.assemLen,  recordSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  OutputStream(os,  blockSize,  this.assemLen,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  new  OutputStream(os,  blockSize,  this.assemLen,  recordSize);	  out    =    new    OutputStream(os,    blockSize,    recordSize,    this.assemLen);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
319	[BUG]  [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize,  this.assemLen,  this.longFileMode);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize,  this.assemLen,  this.longFileMode);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  new  OutputStream(os,  blockSize,  recordSize,  this.assemLen,  this.longFileMode);	  out    =    new    OutputStream(os,    blockSize,    recordSize,    this.assemLen);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
320	[BUG]  [BUGGY]  out  =  new  OutputStream(os,  blockSize,  this.assemBuf,  this.assemLen);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  OutputStream(os,  blockSize,  this.assemBuf,  this.assemLen);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  new  OutputStream(os,  blockSize,  this.assemBuf,  this.assemLen);	  out    =    new    OutputStream(os,    blockSize,    recordSize,    this.assemLen);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
321	[BUG]  [BUGGY]  Os  os  =  os.getInputStream();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  Os  os  =  os.getInputStream();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	Os  os  =  os.getInputStream();	  os    =    os.getInputStream();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
322	[BUG]  [BUGGY]  os  =  this.os.getInputStream();  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  this.os.getInputStream();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  this.os.getInputStream();	  os    =    os.getInputStream();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
323	[BUG]  [BUGGY]  out  =  new  OutputStream(os,  blockSize,  assemLen,  recordSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  OutputStream(os,  blockSize,  assemLen,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  new  OutputStream(os,  blockSize,  assemLen,  recordSize);	  out    =    new    OutputStream(os,    blockSize,    assemLen);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
324	[BUG]  [BUGGY]  out  =  new  OutputStream(os,  blockSize,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  OutputStream(os,  blockSize,  0,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  new  OutputStream(os,  blockSize,  0,  recordSize);	  out    =    new    OutputStream(os,    blockSize,    assemLen);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
325	[BUG]  [BUGGY]  OutputStream  out  =  this.os.toByteArray();  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  this.os.toByteArray();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  this.os.toByteArray();	  OutputStream    out    =    os.toByteArray();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
326	[BUG]  [BUGGY]  OutputStream  out  =  os.getAstRoot(blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.getAstRoot(blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.getAstRoot(blockSize,  recordSize);	  OutputStream    out    =    os.toByteArray();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
327	[BUG]  [BUGGY]  out  =  os.readFully(lockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.readFully(lockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.readFully(lockSize,  recordSize);	  out    =    os.readFully(blockSize);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
328	[BUG]  [BUGGY]  OutputStream  out  =  os.readFully(blockSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.readFully(blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.readFully(blockSize);	  out    =    os.readFully(blockSize);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
329	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BUFFER,  true);  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BUFFER,  true);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BUFFER,  true);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_BUFFER);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
330	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BUFFER,  currName);  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BUFFER,  currName);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BUFFER,  currName);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_BUFFER);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
331	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BUFFER,  false);  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BUFFER,  false);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BUFFER,  false);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_BUFFER);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
332	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BUFFER,  0);  [CE]  <identifier>  expected  [FE]                                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BUFFER,  0);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BUFFER,  0);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_BUFFER);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
333	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BUFFER,  null);  [CE]  illegal  start  of  type  [FE]                                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BUFFER,  null);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BUFFER,  null);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_BUFFER);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
334	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BUFFER,  Long.MAX_VALUE);  [CE]  illegal  start  of  type  [FE]                                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BUFFER,  Long.MAX_VALUE);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BUFFER,  Long.MAX_VALUE);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_BUFFER);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
335	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BUFFER,  buffer);  [CE]  illegal  start  of  type  [FE]                                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BUFFER,  buffer);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BUFFER,  buffer);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_BUFFER);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
336	[BUG]  [BUGGY]  os  =  os.toArray(new  String[os.size()  ]);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  os.toArray(new  String[os.size()  ]);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  os.toArray(new  String[os.size()  ]);	  os    =    os.getOutputBuffer();    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
337	[BUG]  [BUGGY]  os  =  os.getWriter();  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  os.getWriter();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  os.getWriter();	  os    =    os.getOutputStream();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
338	[BUG]  [BUGGY]  OutputStream  out  =  os.writeOutputBuffer(blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.writeOutputBuffer(blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.writeOutputBuffer(blockSize,  recordSize);	  OutputStream    out    =    os.getOutputBuffer();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
339	[BUG]  [BUGGY]  OutputStream  os  =  getOutputStream(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  getOutputStream(os,  blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  getOutputStream(os,  blockSize,  recordSize);	  OutputStream    os    =    os.getOutputStream();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
340	[BUG]  [BUGGY]  OutputStream  os  =  getOutputStream(os);  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  getOutputStream(os);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  getOutputStream(os);	  OutputStream    os    =    os.getOutputStream();    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
341	[BUG]  [BUGGY]  out  =  new  OutputStream(os,  blockSize,  this.recordSize,  this.assemLen);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  OutputStream(os,  blockSize,  this.recordSize,  this.assemLen);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  new  OutputStream(os,  blockSize,  this.recordSize,  this.assemLen);	  out    =    new    OutputStream(os,    blockSize,    recordSize,    this.assemLen);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
342	[BUG]  [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize,  this.assemLen  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize,  this.assemLen  -  1);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  new  OutputStream(os,  blockSize,  recordSize,  this.assemLen  -  1);	  out    =    new    OutputStream(os,    blockSize,    recordSize,    this.assemLen);    	non-compiled	[CE]  <identifier>  expected	32	None	replace
343	[BUG]  [BUGGY]  OutputStream  os  =  new  OutputStream(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  OutputStream(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  new  OutputStream(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR);	  OutputStream    os    =    new    OutputStream(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
344	[BUG]  [BUGGY]  OutputStream  os  =  new  OutputStream(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  OutputStream(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  new  OutputStream(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU);	  OutputStream    os    =    new    OutputStream(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
345	[BUG]  [BUGGY]  OutputStream  os  =  new  OutputStream(blockSize,  recordSize  +  2);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  OutputStream(blockSize,  recordSize  +  2);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  new  OutputStream(blockSize,  recordSize  +  2);	  OutputStream    os    =    new    OutputStream(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
346	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TRUNCATE);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TRUNCATE);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TRUNCATE);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_LONGFILE_GNU);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
347	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU,  TarBuffer.DEFAULT_TRUNCATE);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU,  TarBuffer.DEFAULT_TRUNCATE);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU,  TarBuffer.DEFAULT_TRUNCATE);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_LONGFILE_GNU);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
348	[BUG]  [BUGGY]  out  =  os.toPath();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.toPath();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.toPath();	  out    =    os.toString();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
349	[BUG]  [BUGGY]  out  =  os.getOut()  +  this.blockSize;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOut()  +  this.blockSize;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOut()  +  this.blockSize;	  out    =    os.getOut()    +    recordSize;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
350	[BUG]  [BUGGY]  out  =  os.getBytes(LONGFILE_ERROR);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getBytes(LONGFILE_ERROR);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getBytes(LONGFILE_ERROR);	  out    =    os.getBytes(currName);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
351	[BUG]  [BUGGY]  out  =  os.readFully(blockSize,  recordSize)+  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.readFully(blockSize,  recordSize)+  1;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.readFully(blockSize,  recordSize)+  1;	  out    =    os.readFully(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
352	[BUG]  [BUGGY]  out  =  os.getOutputStream(blockSize  +  recordSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputStream(blockSize  +  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOutputStream(blockSize  +  recordSize);	  out    =    os.getOutputStream(blockSize);    	non-compiled	[CE]  <identifier>  expected	24	None	replace
353	[BUG]  [BUGGY]  os  =  os.getOut()  +  recordSize;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  os.getOut()  +  recordSize;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  os.getOut()  +  recordSize;	  os    =    os.getOut();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
354	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  LONGFILE_GNU);  [CE]  illegal  start  of  type  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  LONGFILE_GNU);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
355	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH,  LONGFILE_GNU);  [CE]  illegal  start  of  type  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH,  LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH,  LONGFILE_GNU);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_BACKSLASH);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
356	[BUG]  [BUGGY]  out  =  os.getInputStream(blockSize,  recordSize)+  1;  [CE]  illegal  start  of  type  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getInputStream(blockSize,  recordSize)+  1;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getInputStream(blockSize,  recordSize)+  1;	  out    =    os.getInputStream(blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
357	[BUG]  [BUGGY]  OutputStream  os  =  os.getInputStream(blockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  os.getInputStream(blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  os.getInputStream(blockSize,  recordSize);	  out    =    os.getInputStream(blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
358	[BUG]  [BUGGY]  out  =  os.getInputStream(blockSize,  recordSize  +  2);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getInputStream(blockSize,  recordSize  +  2);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getInputStream(blockSize,  recordSize  +  2);	  out    =    os.getInputStream(blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
359	[BUG]  [BUGGY]  out  =  os.readLine(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.readLine(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.readLine(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR);	  out    =    os.readLine(blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
360	[BUG]  [BUGGY]  OutputStream  out  =  os.readLine(blockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.readLine(blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.readLine(blockSize,  recordSize);	  out    =    os.readLine(blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
361	[BUG]  [BUGGY]  out  =  os.readLine(blockSize,  recordSize)+  1;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.readLine(blockSize,  recordSize)+  1;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.readLine(blockSize,  recordSize)+  1;	  out    =    os.readLine(blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
362	[BUG]  [BUGGY]  out  =  os.readLine(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.readLine(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.readLine(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU);	  out    =    os.readLine(blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
363	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_GNU);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_GNU);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_FILE_ERROR);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
364	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  LONGFILE_GNU);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_TEST_OUTPUT);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
365	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  recordSize);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  recordSize);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_TEST_OUTPUT);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
366	[BUG]  [BUGGY]  out  =  os.getOutputFile()  -  recordSize;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputFile()  -  recordSize;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOutputFile()  -  recordSize;	  out    =    os.getOutputFile()    +    recordSize;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
367	[BUG]  [BUGGY]  out  =  os.getOutputFile()  +  BlockSize;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputFile()  +  BlockSize;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOutputFile()  +  BlockSize;	  out    =    os.getOutputFile()    +    recordSize;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
368	[BUG]  [BUGGY]  out  =  os.getInputFile()  +  blockSize;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getInputFile()  +  blockSize;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getInputFile()  +  blockSize;	  out    =    os.getOutputFile()    +    recordSize;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
369	[BUG]  [BUGGY]  out  =  os.close();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.close();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.close();	  out    =    os.openStream();    	non-compiled	[CE]  <identifier>  expected	83	None	replace
370	[BUG]  [BUGGY]  out  =  os.openStream(true);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.openStream(true);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.openStream(true);	  out    =    os.openStream();    	non-compiled	[CE]  <identifier>  expected	83	None	replace
371	[BUG]  [BUGGY]  out  =  os.getOutputPath()  +  File.separatorChar  +  recordSize;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputPath()  +  File.separatorChar  +  recordSize;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOutputPath()  +  File.separatorChar  +  recordSize;	  out    =    os.getOutputPath();    	non-compiled	[CE]  <identifier>  expected	36	None	replace
372	[BUG]  [BUGGY]  out  =  os.getOutputPath()  +  System.currentTimeMillis();  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputPath()  +  System.currentTimeMillis();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOutputPath()  +  System.currentTimeMillis();	  out    =    os.getOutputPath();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
373	[BUG]  [BUGGY]  out  =  os.getOutputPath()  +  fileSize;  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputPath()  +  fileSize;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOutputPath()  +  fileSize;	  out    =    os.getOutputPath();    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
374	[BUG]  [BUGGY]  OutputStream  out  =  os.getOutputStream(recordSize);  [CE]  illegal  start  of  type  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.getOutputStream(recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.getOutputStream(recordSize);	  OutputStream    out    =    os.getOutputStream();    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
375	[BUG]  [BUGGY]  out  =  os.getBytes(blockSize  +  recordSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getBytes(blockSize  +  recordSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getBytes(blockSize  +  recordSize,  recordSize);	  out    =    os.getBytes(blockSize    +    recordSize);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
376	[BUG]  [BUGGY]  out  =  os.getBytes(blockSize  +  recordSize,  currName);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getBytes(blockSize  +  recordSize,  currName);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getBytes(blockSize  +  recordSize,  currName);	  out    =    os.getBytes(blockSize    +    recordSize);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
377	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_VERSION,  TarBuffer.DEFAULT_LONGFILE_GNU);  [CE]  illegal  start  of  type  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_VERSION,  TarBuffer.DEFAULT_LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_VERSION,  TarBuffer.DEFAULT_LONGFILE_GNU);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_VERSION);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
378	[BUG]  [BUGGY]  out  =  this.os.readLine(),  os.readLine();  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  this.os.readLine(),  os.readLine();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  this.os.readLine(),  os.readLine();	  out    =    this.os.readLine();    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
379	[BUG]  [BUGGY]  out  =  this.os.readLine()  &&  this.assemLen;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  this.os.readLine()  &&  this.assemLen;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  this.os.readLine()  &&  this.assemLen;	  out    =    this.os.readLine();    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
380	[BUG]  [BUGGY]  out  =  os.getAstRoot(blockSize,  recordSize)+  1;  [CE]  illegal  start  of  type  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getAstRoot(blockSize,  recordSize)+  1;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getAstRoot(blockSize,  recordSize)+  1;	  out    =    os.getAstRoot(blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
381	[BUG]  [BUGGY]  out  =  os.getAstRoot(blockSize,  recordSize  +  2);  [CE]  illegal  start  of  type  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getAstRoot(blockSize,  recordSize  +  2);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getAstRoot(blockSize,  recordSize  +  2);	  out    =    os.getAstRoot(blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
382	[BUG]  [BUGGY]  out  =  os.getAstRoot(blockSize,  recordSize  +  4);  [CE]  illegal  start  of  type  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getAstRoot(blockSize,  recordSize  +  4);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getAstRoot(blockSize,  recordSize  +  4);	  out    =    os.getAstRoot(blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
383	[BUG]  [BUGGY]  out  =  os.getAstRoot(blockSize,  recordSize-1);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getAstRoot(blockSize,  recordSize-1);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getAstRoot(blockSize,  recordSize-1);	  out    =    os.getAstRoot(blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
384	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BUFFER,  LONGFILE_GNU);  [CE]  illegal  start  of  type  [FE]                                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BUFFER,  LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BUFFER,  LONGFILE_GNU);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_BUFFER);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
385	[BUG]  [BUGGY]  Os  os  =  new  OutputStream(os,  blockSize,  recordSize);  [CE]  illegal  start  of  type  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  Os  os  =  new  OutputStream(os,  blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	Os  os  =  new  OutputStream(os,  blockSize,  recordSize);	  os    =    new    OutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
386	[BUG]  [BUGGY]  os  =  new  OutputStream(os,  blockSize,  recordSize)+  1;  [CE]  illegal  start  of  type  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  OutputStream(os,  blockSize,  recordSize)+  1;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  new  OutputStream(os,  blockSize,  recordSize)+  1;	  os    =    new    OutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
387	[BUG]  [BUGGY]  out  =  os.readFile(recordSize);  [CE]  illegal  start  of  type  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.readFile(recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.readFile(recordSize);	  out    =    os.readFile();    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
388	[BUG]  [BUGGY]  os  =  os.getLine();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  os.getLine();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  os.getLine();	  os    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
389	[BUG]  [BUGGY]  os  =  os.getStream();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  os.getStream();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  os.getStream();	  os    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
390	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LBRACKET_ERROR);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LBRACKET_ERROR);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LBRACKET_ERROR);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_LONGFILE_ERROR);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
391	[BUG]  [BUGGY]  OutputStream  os  =  os.getLine();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  os.getLine();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  os.getLine();	  OutputStream    os    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
392	[BUG]  [BUGGY]  out  =  os.getOutputBuffer(blockSize,  recordSize)+  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputBuffer(blockSize,  recordSize)+  1;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOutputBuffer(blockSize,  recordSize)+  1;	  out    =    os.getOutputBuffer(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
393	[BUG]  [BUGGY]  out  =  os.getOutputBuffer(blockSize,  recordSize  +  2);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputBuffer(blockSize,  recordSize  +  2);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOutputBuffer(blockSize,  recordSize  +  2);	  out    =    os.getOutputBuffer(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
394	[BUG]  [BUGGY]  this.out  =  new  OutputStream(os,  blockSize,  0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.out  =  new  OutputStream(os,  blockSize,  0);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this.out  =  new  OutputStream(os,  blockSize,  0);	  this.out    =    new    OutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
395	[BUG]  [BUGGY]  this.out  =  new  OutputStream(os,  blockSize,  recordSize)+  1;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.out  =  new  OutputStream(os,  blockSize,  recordSize)+  1;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this.out  =  new  OutputStream(os,  blockSize,  recordSize)+  1;	  this.out    =    new    OutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
396	[BUG]  [BUGGY]  OutputStream  out  =  os.read(blockSize,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.read(blockSize,  recordSize  +  1);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.read(blockSize,  recordSize  +  1);	  OutputStream    out    =    os.read(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
397	[BUG]  [BUGGY]  OutputStream  out  =  os.read(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.read(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.read(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR);	  OutputStream    out    =    os.read(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
398	[BUG]  [BUGGY]  OutputStream  out  =  os.read(blockSize,  recordSize,  TarBuffer.DEFAULT_OUTPUT);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.read(blockSize,  recordSize,  TarBuffer.DEFAULT_OUTPUT);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.read(blockSize,  recordSize,  TarBuffer.DEFAULT_OUTPUT);	  OutputStream    out    =    os.read(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
399	[BUG]  [BUGGY]  OutputStream  out  =  os.getLine();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.getLine();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.getLine();	  OutputStream    out    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
400	[BUG]  [BUGGY]  OutputStream  out  =  os.writeOut(blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.writeOut(blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.writeOut(blockSize,  recordSize);	  OutputStream    out    =    os.getOut();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
401	[BUG]  [BUGGY]  OutputStream  out  =  os.getOut()  +  recordSize;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.getOut()  +  recordSize;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.getOut()  +  recordSize;	  OutputStream    out    =    os.getOut();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
402	[BUG]  [BUGGY]  OutputStream  out  =  os.writeOut(blockSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.writeOut(blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.writeOut(blockSize);	  OutputStream    out    =    os.getOut();    	non-compiled	[CE]  <identifier>  expected	25	None	replace
403	[BUG]  [BUGGY]  os  =  os.getInputStream(blockSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  os.getInputStream(blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  os.getInputStream(blockSize);	  os    =    os.getInputStream();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
404	[BUG]  [BUGGY]  out  =  os.toByteArray(0);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.toByteArray(0);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.toByteArray(0);	  out    =    os.toByteArray(recordSize);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
405	[BUG]  [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize  +  5);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize  +  5);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  new  OutputStream(os,  blockSize,  recordSize  +  5);	  out    =    new    OutputStream(os,    blockSize,    recordSize    +    1);    	non-compiled	[CE]  <identifier>  expected	31	None	replace
406	[BUG]  [BUGGY]  out  =  os.getBytes(blockSize,  recordSize)+  1;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getBytes(blockSize,  recordSize)+  1;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getBytes(blockSize,  recordSize)+  1;	  out    =    os.getBytes(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
407	[BUG]  [BUGGY]  out  =  os.getBytes(blockSize,  recordSize  +  2);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getBytes(blockSize,  recordSize  +  2);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getBytes(blockSize,  recordSize  +  2);	  out    =    os.getBytes(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
408	[BUG]  [BUGGY]  out  =  os.getBytes(blockSize,  recordSize  +  4);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getBytes(blockSize,  recordSize  +  4);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getBytes(blockSize,  recordSize  +  4);	  out    =    os.getBytes(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
409	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  LONGFILE_GNU);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
410	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  LONGFILE_ERROR);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  LONGFILE_ERROR);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  LONGFILE_ERROR);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
411	[BUG]  [BUGGY]  out  =  os.getOutputStream(blockSize,  recordSize)+  1;  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputStream(blockSize,  recordSize)+  1;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOutputStream(blockSize,  recordSize)+  1;	  out    =    os.getOutputStream(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
412	[BUG]  [BUGGY]  out  =  os.getOutputStream(blockSize,  recordSize  +  2);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputStream(blockSize,  recordSize  +  2);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOutputStream(blockSize,  recordSize  +  2);	  out    =    os.getOutputStream(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
413	[BUG]  [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize  -  3);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize  -  3);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  new  OutputStream(os,  blockSize,  recordSize  -  3);	  out    =    new    OutputStream(os,    blockSize,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
414	[BUG]  [BUGGY]  OutputStream  os  =  os.readUTF();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  os.readUTF();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  os.readUTF();	  out    =    os.readUTF();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
415	[BUG]  [BUGGY]  out  =  os.getUTF();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getUTF();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getUTF();	  out    =    os.readUTF();    	non-compiled	[CE]  <identifier>  expected	10	None	replace
416	[BUG]  [BUGGY]  out  =  os.getAstRoot(recordSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getAstRoot(recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getAstRoot(recordSize);	  out    =    os.getAstRoot();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
417	[BUG]  [BUGGY]  out  =  os.getAstRoot()  +  recordSize;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getAstRoot()  +  recordSize;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getAstRoot()  +  recordSize;	  out    =    os.getAstRoot();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
418	[BUG]  [BUGGY]  OutputStream  out  =  os.toByteArray(recordSize);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.toByteArray(recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.toByteArray(recordSize);	  OutputStream    out    =    os.toByteArray();    	non-compiled	[CE]  <identifier>  expected	13	None	replace
419	[BUG]  [BUGGY]  out  =  os.getBytes(recordSize,  blockSize);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getBytes(recordSize,  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getBytes(recordSize,  blockSize);	  out    =    os.getBytes(lockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	6	None	replace
420	[BUG]  [BUGGY]  super(os,  blockSize,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  super(os,  blockSize,  recordSize  +  1);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	super(os,  blockSize,  recordSize  +  1);	  super(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
421	[BUG]  [BUGGY]  super(os,  blockSize,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  super(os,  blockSize,  recordSize  -  1);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	super(os,  blockSize,  recordSize  -  1);	  super(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
422	[BUG]  [BUGGY]  super(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  super(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	super(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU);	  super(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
423	[BUG]  [BUGGY]  super(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  super(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	super(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_ERROR);	  super(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
424	[BUG]  [BUGGY]  super(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_CLOSE_ERROR);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  super(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_CLOSE_ERROR);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	super(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_CLOSE_ERROR);	  super(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
425	[BUG]  [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize,  TarBuffer.LONGFILE_TRUNCATE);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize,  TarBuffer.LONGFILE_TRUNCATE);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  new  OutputStream(os,  blockSize,  recordSize,  TarBuffer.LONGFILE_TRUNCATE);	  out    =    new    OutputStream(os,    blockSize,    recordSize,    LONGFILE_GNU);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
426	[BUG]  [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize,  0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize,  0);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  new  OutputStream(os,  blockSize,  recordSize,  0);	  out    =    new    OutputStream(os,    blockSize,    recordSize,    LONGFILE_GNU);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
427	[BUG]  [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize,  TarBuffer.LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize,  TarBuffer.LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  new  OutputStream(os,  blockSize,  recordSize,  TarBuffer.LONGFILE_GNU);	  out    =    new    OutputStream(os,    blockSize,    recordSize,    LONGFILE_GNU);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
428	[BUG]  [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TRUNCATE);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TRUNCATE);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  new  OutputStream(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TRUNCATE);	  out    =    new    OutputStream(os,    blockSize,    recordSize,    LONGFILE_GNU);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
429	[BUG]  [BUGGY]  OutputStream  out  =  new  OutputStream(os,  blockSize,  recordSize,  TarBuffer.DEFAULT);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  OutputStream(os,  blockSize,  recordSize,  TarBuffer.DEFAULT);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  new  OutputStream(os,  blockSize,  recordSize,  TarBuffer.DEFAULT);	  OutputStream    out    =    new    OutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
430	[BUG]  [BUGGY]  OutputStream  out  =  new  OutputStream(os,  blockSize,  recordSize.length);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  OutputStream(os,  blockSize,  recordSize.length);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  new  OutputStream(os,  blockSize,  recordSize.length);	  OutputStream    out    =    new    OutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
431	[BUG]  [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize,  8);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize,  8);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  new  OutputStream(os,  blockSize,  recordSize,  8);	  out    =    new    OutputStream(os,    blockSize,    recordSize,    assemLen);    	non-compiled	[CE]  <identifier>  expected	30	None	replace
432	[BUG]  [BUGGY]  out  =  os.toByteArray(blockSize  +  recordSize);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.toByteArray(blockSize  +  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.toByteArray(blockSize  +  recordSize);	  out    =    os.toByteArray(blockSize);    	non-compiled	[CE]  <identifier>  expected	57	None	replace
433	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;	  super(os,    blockSize,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
434	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);	  super(os,    blockSize,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
435	[BUG]  [BUGGY]  os  =  os.readLine();  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  os.readLine();  this.assemLen  =  0;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  os.readLine();  this.assemLen  =  0;	  super(os,    blockSize,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
436	[BUG]  [BUGGY]  out  =  os.read(blockSize,  recordSize  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.read(blockSize,  recordSize  +  1);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.read(blockSize,  recordSize  +  1);	  out    =    os.read(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
437	[BUG]  [BUGGY]  out  =  os.read(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.read(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.read(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU);	  out    =    os.read(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
438	[BUG]  [BUGGY]  OutputStream  os  =  os.getWriter();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  os.getWriter();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  os.getWriter();	  OutputStream    os    =    os.getOut();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
439	[BUG]  [BUGGY]  out  =  os.getInputBuffer(blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getInputBuffer(blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getInputBuffer(blockSize,  recordSize);	  out    =    os.getOutputBuffer(buffer,    recordSize);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
440	[BUG]  [BUGGY]  out  =  os.readObject();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.readObject();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.readObject();	  out    =    os.readInt();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
441	[BUG]  [BUGGY]  out  =  os.readFully(blockSize  +  recordSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.readFully(blockSize  +  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.readFully(blockSize  +  recordSize);	  out    =    os.readFully(blockSize);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
442	[BUG]  [BUGGY]  out  =  os.getInputStream(blockSize  +  recordSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getInputStream(blockSize  +  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getInputStream(blockSize  +  recordSize);	  out    =    os.getInputStream(blockSize);    	non-compiled	[CE]  <identifier>  expected	52	None	replace
443	[BUG]  [BUGGY]  os  =  os.getMessage();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  os.getMessage();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  os.getMessage();	  os    =    os.toByteArray();    	non-compiled	[CE]  <identifier>  expected	14	None	replace
444	[BUG]  [BUGGY]  out  =  os.getOut()  +  blockSize,  recordSize;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOut()  +  blockSize,  recordSize;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOut()  +  blockSize,  recordSize;	  out    =    os.getOut()    +    recordSize;    	non-compiled	[CE]  <identifier>  expected	69	None	replace
445	[BUG]  [BUGGY]  OutputStream  out  =  new  OutputStream(os,  blockSize,  recordSize)+  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  OutputStream(os,  blockSize,  recordSize)+  1;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  new  OutputStream(os,  blockSize,  recordSize)+  1;	  OutputStream    out    =    new    OutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
446	[BUG]  [BUGGY]  OutputStream  out  =  new  OutputStream(os,  blockSize,  fileSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  new  OutputStream(os,  blockSize,  fileSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  new  OutputStream(os,  blockSize,  fileSize);	  OutputStream    out    =    new    OutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
447	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  fileMode);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  fileMode);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT,  fileMode);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT);    	non-compiled	[CE]  <identifier>  expected	43	None	replace
448	[BUG]  [BUGGY]  out  =  os.getOutputBuffer(blockSize,  recordSize,  TarBuffer.DEFAULT);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputBuffer(blockSize,  recordSize,  TarBuffer.DEFAULT);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOutputBuffer(blockSize,  recordSize,  TarBuffer.DEFAULT);	  out    =    os.getOutputBuffer(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
449	[BUG]  [BUGGY]  out  =  os.getOutputBuffer(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputBuffer(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOutputBuffer(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU);	  out    =    os.getOutputBuffer(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	46	None	replace
450	[BUG]  [BUGGY]  out  =  os.readBytes(blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.readBytes(blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.readBytes(blockSize,  recordSize);	  out    =    os.getBytes(recordSize);    	non-compiled	[CE]  <identifier>  expected	2	None	replace
451	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  READFILE_GNU);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  READFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  READFILE_GNU);	  this(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
452	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.LONGFILE_GNU);	  this(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
453	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_LONGFILE_GNU);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
454	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_GNU);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_GNU);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
455	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BACKSLASH);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BACKSLASH);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE,  TarBuffer.DEFAULT_BACKSLASH);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_RCDSIZE);    	non-compiled	[CE]  <identifier>  expected	80	None	replace
456	[BUG]  [BUGGY]  out  =  os.readLine()  +  blocks.length;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.readLine()  +  blocks.length;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.readLine()  +  blocks.length;	  out    =    os.readLine()    +    recordSize;    	non-compiled	[CE]  <identifier>  expected	63	None	replace
457	[BUG]  [BUGGY]  out  =  os.getOutputBuffer(lockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputBuffer(lockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOutputBuffer(lockSize,  recordSize);	  out    =    os.getOutputBuffer(buffer,    recordSize);    	non-compiled	[CE]  <identifier>  expected	82	None	replace
458	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU,  TarBuffer.DEFAULT_CLONGFILE_ERROR);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU,  TarBuffer.DEFAULT_CLONGFILE_ERROR);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU,  TarBuffer.DEFAULT_CLONGFILE_ERROR);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_LONGFILE_GNU);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
459	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU,  READFILE_TRUNCATE);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU,  READFILE_TRUNCATE);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU,  READFILE_TRUNCATE);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_LONGFILE_GNU);    	non-compiled	[CE]  <identifier>  expected	75	None	replace
460	[BUG]  [BUGGY]  os  =  os.toString();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  os.toString();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  os.toString();	  os    =    os.getOut();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
461	[BUG]  [BUGGY]  os  =  os.getReadStream();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  os.getReadStream();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  os.getReadStream();	  os    =    os.getInputStream();    	non-compiled	[CE]  <identifier>  expected	51	None	replace
462	[BUG]  [BUGGY]  OutputStream  os  =  new  OutputStream(recordSize,  blockSize);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  OutputStream(recordSize,  blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  new  OutputStream(recordSize,  blockSize);	  OutputStream    os    =    new    OutputStream(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
463	[BUG]  [BUGGY]  OutputStream  os  =  new  OutputStream(blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  OutputStream(blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  new  OutputStream(blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH);	  OutputStream    os    =    new    OutputStream(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	54	None	replace
464	[BUG]  [BUGGY]  out  =  os.getInputStream(blockSize,  recordSize,  TarBuffer.DEFAULT);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getInputStream(blockSize,  recordSize,  TarBuffer.DEFAULT);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getInputStream(blockSize,  recordSize,  TarBuffer.DEFAULT);	  out    =    os.getInputStream(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	66	None	replace
465	[BUG]  [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize,  TONGFILE_GNU);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize,  TONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  new  OutputStream(os,  blockSize,  recordSize,  TONGFILE_GNU);	  out    =    new    OutputStream(os,    blockSize,    recordSize,    LONGFILE_GNU);    	non-compiled	[CE]  <identifier>  expected	29	None	replace
466	[BUG]  [BUGGY]  out  =  os.read(blockSize,  recordSize,  TarBuffer.DEFAULT);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.read(blockSize,  recordSize,  TarBuffer.DEFAULT);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.read(blockSize,  recordSize,  TarBuffer.DEFAULT);	  out    =    os.read(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
467	[BUG]  [BUGGY]  out  =  os.read(blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.read(blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.read(blockSize,  recordSize,  TarBuffer.DEFAULT_RCDSIZE);	  out    =    os.read(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
468	[BUG]  [BUGGY]  os  =  os.readFully(blockSize,  recordSize);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  os.readFully(blockSize,  recordSize);  this.assemLen  =  0;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  os.readFully(blockSize,  recordSize);  this.assemLen  =  0;	  super(os,    blockSize,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
469	[BUG]  [BUGGY]  os  =  os.readFully();  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  os.readFully();  this.assemLen  =  0;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  os.readFully();  this.assemLen  =  0;	  super(os,    blockSize,    recordSize);    this.assemLen    =    0;    	non-compiled	[CE]  <identifier>  expected	42	None	replace
470	[BUG]  [BUGGY]  out  =  os.getBytes(blockSize,  recordSize,  TarBuffer.DEFAULT);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getBytes(blockSize,  recordSize,  TarBuffer.DEFAULT);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getBytes(blockSize,  recordSize,  TarBuffer.DEFAULT);	  out    =    os.getBytes(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
471	[BUG]  [BUGGY]  out  =  os.getBytes(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getBytes(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getBytes(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU);	  out    =    os.getBytes(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
472	[BUG]  [BUGGY]  out  =  os.getBytes(blockSize,  recordSize,  READFILE_GNU);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getBytes(blockSize,  recordSize,  READFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getBytes(blockSize,  recordSize,  READFILE_GNU);	  out    =    os.getBytes(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	3	None	replace
473	[BUG]  [BUGGY]  OutputStream  os  =  os.getOut()  +  1;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  os.getOut()  +  1;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  os.getOut()  +  1;	  out    =    os.getOut()    +    1;    	non-compiled	[CE]  <identifier>  expected	27	None	replace
474	[BUG]  [BUGGY]  out  =  os.getOutputStream(blockSize,  recordSize,  TarBuffer.DEFAULT);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputStream(blockSize,  recordSize,  TarBuffer.DEFAULT);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOutputStream(blockSize,  recordSize,  TarBuffer.DEFAULT);	  out    =    os.getOutputStream(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
475	[BUG]  [BUGGY]  out  =  os.getOutputStream(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputStream(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOutputStream(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU);	  out    =    os.getOutputStream(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	71	None	replace
476	[BUG]  [BUGGY]  os  =  os.readLine()  ||  os.readLine();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  os.readLine()  ||  os.readLine();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  os.readLine()  ||  os.readLine();	  os    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
477	[BUG]  [BUGGY]  os  =  os.getCurrentSegment();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  os.getCurrentSegment();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  os.getCurrentSegment();	  os    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	20	None	replace
478	[BUG]  [BUGGY]  OutputStream  os  =  os.readLine()  ||  os.readLine();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  os.readLine()  ||  os.readLine();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  os.readLine()  ||  os.readLine();	  OutputStream    os    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	18	None	replace
479	[BUG]  [BUGGY]  this.out  =  new  OutputStream(os,  blockSize,  fileSize);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.out  =  new  OutputStream(os,  blockSize,  fileSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this.out  =  new  OutputStream(os,  blockSize,  fileSize);	  this.out    =    new    OutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	85	None	replace
480	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_ERROR,  READFILE_GNU);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_ERROR,  READFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_ERROR,  READFILE_GNU);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_FILE_ERROR);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
481	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_GENU);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_GENU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_GENU);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_FILE_ERROR);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
482	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_GLNU);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_GLNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_FILE_GLNU);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_FILE_ERROR);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
483	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH,  TarBuffer.DEFAULT_GNU);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH,  TarBuffer.DEFAULT_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH,  TarBuffer.DEFAULT_GNU);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_BACKSLASH);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
484	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH,  TarBuffer.DEFAULT_LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH,  TarBuffer.DEFAULT_LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH,  TarBuffer.DEFAULT_LONGFILE_GNU);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_BACKSLASH);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
485	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH,  fileMode);  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH,  fileMode);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH,  fileMode);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_BACKSLASH);    	non-compiled	[CE]  <identifier>  expected	41	None	replace
486	[BUG]  [BUGGY]  out  =  os.getAstRoot(blockSize,  recordSize,  TarBuffer.DEFAULT);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getAstRoot(blockSize,  recordSize,  TarBuffer.DEFAULT);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getAstRoot(blockSize,  recordSize,  TarBuffer.DEFAULT);	  out    =    os.getAstRoot(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
487	[BUG]  [BUGGY]  out  =  os.getAstRoot(blockSize,  recordSize,  TarBuffer.DEFAULT_BASE_ERROR);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getAstRoot(blockSize,  recordSize,  TarBuffer.DEFAULT_BASE_ERROR);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getAstRoot(blockSize,  recordSize,  TarBuffer.DEFAULT_BASE_ERROR);	  out    =    os.getAstRoot(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
488	[BUG]  [BUGGY]  out  =  os.readFile(LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.readFile(LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.readFile(LONGFILE_GNU);	  out    =    os.readFile();    	non-compiled	[CE]  <identifier>  expected	11	None	replace
489	[BUG]  [BUGGY]  OutputStream  os  =  os.read(blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  os.read(blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  os.read(blockSize,  recordSize);	  out    =    os.read(blockSize);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
490	[BUG]  [BUGGY]  OutputStream  out  =  os.read(blockSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.read(blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.read(blockSize);	  out    =    os.read(blockSize);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
491	[BUG]  [BUGGY]  super(os,  blockSize,  recordSize,  TarBuffer.DEFAULT);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  super(os,  blockSize,  recordSize,  TarBuffer.DEFAULT);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	super(os,  blockSize,  recordSize,  TarBuffer.DEFAULT);	  super(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	38	None	replace
492	[BUG]  [BUGGY]  OutputStream  os  =  os.toByteArray();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  os.toByteArray();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  os.toByteArray();	  OutputStream    os    =    os.getOut();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
493	[BUG]  [BUGGY]  OutputStream  os  =  os.read();  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  os.read();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  os.read();	  OutputStream    os    =    os.getOut();    	non-compiled	[CE]  <identifier>  expected	68	None	replace
494	[BUG]  [BUGGY]  this.out  =  os.toByteArray(blockSize);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.out  =  os.toByteArray(blockSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this.out  =  os.toByteArray(blockSize);	  out    =    os.toByteArray(recordSize);    	non-compiled	[CE]  <identifier>  expected	56	None	replace
495	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  fileMode);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  fileMode);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  fileMode);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_TEST_OUTPUT);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
496	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  READFILE_GNU);  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  READFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_OUTPUT,  READFILE_GNU);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_TEST_OUTPUT);    	non-compiled	[CE]  <identifier>  expected	76	None	replace
497	[BUG]  [BUGGY]  out  =  os.readFully(blockSize,  recordSize,  TarBuffer.DEFAULT);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.readFully(blockSize,  recordSize,  TarBuffer.DEFAULT);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.readFully(blockSize,  recordSize,  TarBuffer.DEFAULT);	  out    =    os.readFully(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
498	[BUG]  [BUGGY]  out  =  os.readFully(blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.readFully(blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.readFully(blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH);	  out    =    os.readFully(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	7	None	replace
499	[BUG]  [BUGGY]  OutputStream  out  =  os.readLine()  ||  os.readLine();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.readLine()  ||  os.readLine();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.readLine()  ||  os.readLine();	  OutputStream    out    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
500	[BUG]  [BUGGY]  OutputStream  out  =  os.readLine()  ||  blockSize  >  recordSize;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.readLine()  ||  blockSize  >  recordSize;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.readLine()  ||  blockSize  >  recordSize;	  OutputStream    out    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
501	[BUG]  [BUGGY]  OutputStream  out  =  os.readLine()  ||  blockSize  >  recordSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.readLine()  ||  blockSize  >  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.readLine()  ||  blockSize  >  recordSize);	  OutputStream    out    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
502	[BUG]  [BUGGY]  OutputStream  out  =  os.readLine()  ||  recordSize  >  0;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.readLine()  ||  recordSize  >  0;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.readLine()  ||  recordSize  >  0;	  OutputStream    out    =    os.readLine();    	non-compiled	[CE]  <identifier>  expected	17	None	replace
503	[BUG]  [BUGGY]  os  =  os.readFully(blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  os.readFully(blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  os.readFully(blockSize,  recordSize);	  out    =    os.readFully(blockSize);    	non-compiled	[CE]  <identifier>  expected	65	None	replace
504	[BUG]  [BUGGY]  out  =  os.getAstRoot(LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getAstRoot(LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getAstRoot(LONGFILE_GNU);	  out    =    os.getAstRoot();    	non-compiled	[CE]  <identifier>  expected	16	None	replace
505	[BUG]  [BUGGY]  this.assemLen  =  new  OutputStream(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this.assemLen  =  new  OutputStream(os,  blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this.assemLen  =  new  OutputStream(os,  blockSize,  recordSize);	  out    =    new    OutputStream(os,    blockSize,    assemLen);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
506	[BUG]  [BUGGY]  out  =  os.getOutputFile().getAbsolutePath()  +  recordSize;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getOutputFile().getAbsolutePath()  +  recordSize;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getOutputFile().getAbsolutePath()  +  recordSize;	  out    =    os.getOutputFile()    +    recordSize;    	non-compiled	[CE]  <identifier>  expected	60	None	replace
507	[BUG]  [BUGGY]  out  =  os.getBytes(blockSize  +  recordSize,  fileSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getBytes(blockSize  +  recordSize,  fileSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getBytes(blockSize  +  recordSize,  fileSize);	  out    =    os.getBytes(blockSize    +    recordSize);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
508	[BUG]  [BUGGY]  OutputStream  out  =  os.read(blockSize,  recordSize,  TarBuffer.DEFAULT);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.read(blockSize,  recordSize,  TarBuffer.DEFAULT);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.read(blockSize,  recordSize,  TarBuffer.DEFAULT);	  OutputStream    out    =    os.read(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
509	[BUG]  [BUGGY]  OutputStream  out  =  os.read(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.read(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.read(blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GNU);	  OutputStream    out    =    os.read(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
510	[BUG]  [BUGGY]  OutputStream  out  =  os.read(blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  out  =  os.read(blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  out  =  os.read(blockSize,  recordSize,  TarBuffer.DEFAULT_BACKSLASH);	  OutputStream    out    =    os.read(blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	79	None	replace
511	[BUG]  [BUGGY]  OutputStream  os  =  new  OutputStream(os,  blockSize,  recordSize  -  1);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  OutputStream(os,  blockSize,  recordSize  -  1);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  new  OutputStream(os,  blockSize,  recordSize  -  1);	  out    =    new    OutputStream(os,    blockSize,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
512	[BUG]  [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize  -  1,  recordSize);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  new  OutputStream(os,  blockSize,  recordSize  -  1,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  new  OutputStream(os,  blockSize,  recordSize  -  1,  recordSize);	  out    =    new    OutputStream(os,    blockSize,    recordSize    -    1);    	non-compiled	[CE]  <identifier>  expected	53	None	replace
513	[BUG]  [BUGGY]  out  =  os.getBytes(lONGFILE_GNU);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.getBytes(lONGFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.getBytes(lONGFILE_GNU);	  out    =    os.getBytes(currName);    	non-compiled	[CE]  <identifier>  expected	5	None	replace
514	[BUG]  [BUGGY]  os  =  os.getOutputBuffer(buffer,  recordSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  os.getOutputBuffer(buffer,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  os.getOutputBuffer(buffer,  recordSize);	  os    =    os.getOutputBuffer();    	non-compiled	[CE]  <identifier>  expected	48	None	replace
515	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GLNU);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GLNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_LONGFILE_GLNU);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_LONGFILE_ERROR);    	non-compiled	[CE]  <identifier>  expected	73	None	replace
516	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_ERROR,  READFILE_GNU);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_ERROR,  READFILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_TEST_ERROR,  READFILE_GNU);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_TEST_ERROR);    	non-compiled	[CE]  <identifier>  expected	74	None	replace
517	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_VERSION,  TarBuffer.DEFAULT_FILE_GNU);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_VERSION,  TarBuffer.DEFAULT_FILE_GNU);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_VERSION,  TarBuffer.DEFAULT_FILE_GNU);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_VERSION);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
518	[BUG]  [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_VERSION,  TarBuffer.DEFAULT_CLOSE);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_VERSION,  TarBuffer.DEFAULT_CLOSE);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	this(os,  blockSize,  recordSize,  TarBuffer.DEFAULT_VERSION,  TarBuffer.DEFAULT_CLOSE);	  this(os,    blockSize,    recordSize,    TarBuffer.DEFAULT_VERSION);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
519	[BUG]  [BUGGY]  OutputStream  os  =  new  OutputStream(os,  blockSize,  recordSize)+  1;  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  OutputStream(os,  blockSize,  recordSize)+  1;  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  new  OutputStream(os,  blockSize,  recordSize)+  1;	  OutputStream    os    =    new    OutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
520	[BUG]  [BUGGY]  OutputStream  os  =  new  OutputStream(os,  blockSize,  this.recordSize);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  new  OutputStream(os,  blockSize,  this.recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  new  OutputStream(os,  blockSize,  this.recordSize);	  OutputStream    os    =    new    OutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
521	[BUG]  [BUGGY]  UnsupportedOutputStream  os  =  new  OutputStream(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  UnsupportedOutputStream  os  =  new  OutputStream(os,  blockSize,  recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	UnsupportedOutputStream  os  =  new  OutputStream(os,  blockSize,  recordSize);	  OutputStream    os    =    new    OutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	84	None	replace
522	[BUG]  [BUGGY]  os  =  new  OutputStream(os,  blockSize,  recordSize,  TarBuffer.DEFAULT);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  OutputStream(os,  blockSize,  recordSize,  TarBuffer.DEFAULT);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  new  OutputStream(os,  blockSize,  recordSize,  TarBuffer.DEFAULT);	  os    =    new    OutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
523	[BUG]  [BUGGY]  os  =  new  OutputStream(os,  blockSize,  this.recordSize);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  os  =  new  OutputStream(os,  blockSize,  this.recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	os  =  new  OutputStream(os,  blockSize,  this.recordSize);	  os    =    new    OutputStream(os,    blockSize,    recordSize);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
524	[BUG]  [BUGGY]  OutputStream  os  =  os.getOutputStream(recordSize);  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  OutputStream  os  =  os.getOutputStream(recordSize);  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	OutputStream  os  =  os.getOutputStream(recordSize);	  OutputStream    os    =    os.getOutputStream();    	non-compiled	[CE]  <identifier>  expected	70	None	replace
525	[BUG]  [BUGGY]  out  =  os.toUTC();  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {      [BUGGY]  out  =  os.toUTC();  [BUGGY]        this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  this.assemBuf  =  new  byte[recordSize];  this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	out  =  os.toUTC();	  out    =    os.toString();    	non-compiled	[CE]  <identifier>  expected	77	None	replace
