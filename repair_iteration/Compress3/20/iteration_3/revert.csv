projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals("Archive")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("Archive")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()&&currName.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().endsWith("Archive")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.")||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()&&currName!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().length()!=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()&&entry.getName().length()!=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName()!=null||entry.isDirectory()||entry.getName().length()!=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName()==null||entry.isDirectory()||entry.getName().length()!=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().length()>=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().length()!=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith(".Archive")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("Archive")||entry.getName().endsWith("Archive_")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("Archive")||entry.getName().endsWith("Archive")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("Archive")||entry.getName().endsWith("Archive-")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("Archive_")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("Archive")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181buffer.writeRecord(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currBytes==null){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181buffer.writeRecord(recordBuf);currBytes=0;
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currBytes==null){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(currBytes[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currBytes==null){buffer.writeRecord(currBytes);}else{buffer.writeRecord(currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currBytes==null){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.")||entry.getName().startsWith("ArchiveEntry.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("ArchiveEntry.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.")||entry.getName().startsWith("ArchiveEntry.title")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.")||entry.getName().startsWith("ArchiveEntry.class")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.")||entry.getName().startsWith("ArchiveEntry.name")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.")||entry.getName().startsWith("ArchiveEntry.url")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()&&entry.getName().equals("Archive")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals("Archive")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals(TarArchiveEntry.class.getSimpleName())){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals(TarArchiveEntry.class.getName())){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals(TarArchiveEntry.SOURCENAME_ERROR)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals(TarArchiveEntry.class)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||currName.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName.isDirectory()||currName.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(currName)&&currName.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getDirectory()!=null&&currName.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().length()==0&&currName.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName.isDirectory()&&entry.getName().length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()&&entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.isDirectory()||currName.equals(entry.getName())){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.isArchive()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()&&entry.getName().endsWith("Archive")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().endsWith("Archive_")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().endsWith(".Archive")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().startsWith("Archive")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().endsWith("Archive-")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||currName!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(currName)&&currName!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getDirectory()!=null&&currName!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()&&currName==null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||currName==null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith(currName)&&currName!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry==null&&entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.getName().endsWith("Archive")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.getName().equals("Archive")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.getName().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.getName().length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()&&entry.getName().equals(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||currName.equals(entry.getName())){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(!entry.isDirectory()&&entry.getName().equals(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName.isDirectory()||entry.getName().equals(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(currName)||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().length()>=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getSize().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().length()<=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()&&entry.getName().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName()!=null||entry.isDirectory()||entry.getName().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().length()==0||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("ArchiveEntry.")||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.")&&entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals("ArchiveEntry.")||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.zip")||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith(PRINT_SIZE)||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.")||entry.getName().endsWith(".dir")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals(tarrName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals("Archive-")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.")||entry.getName().endsWith("ArchiveEntry.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.")||entry.getName().startsWith("url")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals("ArchiveEntry.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currBytes==null){buffer.writeRecord(currBytes);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currBytes!=null){buffer.writeRecord(currBytes);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currBytes==null){buffer.writeRecord(currBytes);currBytes=0;}else{buffer.writeRecord(currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currBytes!=null){buffer.writeRecord(currBytes);currBytes=0;}else{buffer.writeRecord(currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("Archive")||entry.getName().endsWith("-")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("Archive")||entry.getName().endsWith("Archiver")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.")||entry.getName().endsWith(".js")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName()!=null&&entry.isDirectory()||entry.getName().length()!=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null&&entry.isDirectory()||entry.getName().equals(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null||entry.isDirectory()||entry.getName().equals(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().startsWith(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null&&entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName()!=null&&currName!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getDirectory()==null&&currName!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().startsWith("ArchiveEntry.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().endsWith("ArchiveEntry.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.getName().startsWith("ArchiveEntry.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null&&entry.isDirectory()&&currName.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null||entry.isDirectory()&&currName.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null||entry.isDirectory()&&currName.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().length()==1){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName()==null||entry.isDirectory()||entry.getName().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().endsWith(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getSize().equals(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals(currName)&&currSize<=entry.getSize()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null&&entry.isDirectory()&&entry.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(closed){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(closed){buffer.writeRecord(recordBuf);currBytes=0;}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(closed){buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currBytes==null){buffer.writeRecord(recordBuf);currBytes=0;}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currBytes==null){buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getSize().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getSize().length()!=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().endsWith(".Archive_")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().endsWith(".Archive.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.isDirectory()||entry.getName().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.isDirectory()||entry.getName().equals("Archive")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.isDirectory()||entry.getName().startsWith("ArchiveEntry.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.isDirectory()||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().length()==0||entry.getName().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith(".ArchiveEntry.")||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith(".ArchiveEntry.")||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith(".ArchiveEntry.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry==null&&entry!=null&&entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.isDirectory()||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("Archive")||entry.getName().endsWith("Archive:")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("Archive")||entry.getName().endsWith(".js")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals("ArchiveEntry.url")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals("Archive/")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals("ArchiveEntry.title")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.getName().length()>=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null||entry.getName().length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.getName().length()<=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry==null&&entry.getName().length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.getName().length()<0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()&&entry.getName().equals(TarArchiveEntry.SOURCENAME_ERROR)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(TarArchiveEntry.SOURCENAME_ERROR)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals(TarArchiveEntry.SOURCENAME_ERROR,currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(TarArchiveEntry.SOURCENAME_ERROR)||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals(TarArchiveEntry.SOURCENAME_GNU)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals(TarArchiveEntry.NAME_ERROR)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry==null||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null||entry.getName().equals("Archive")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry>=null&&entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null||entry.getName().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().endsWith("Archive.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("Archive.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().startsWith("Archive.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()&&entry.getName().endsWith(".Archive.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()&&entry.getName().endsWith("Archive.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.getSize().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry==null&&entry.getName().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()&&currName.equals(entry.getName())){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getDirectory()!=null&&entry.getName().equals(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getDirectory()==null&&entry.getName().equals(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null&&entry.isDirectory()&&entry.getName().equals(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&currName.isDirectory()&&entry.getName().equals(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&currName.equals(entry.getName())||entry.getName().equals(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null||entry.isDirectory()||entry.getName().equals(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&currName.isDirectory()||entry.getName().equals(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&currName.length()>0||entry.getName().equals(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.title")||entry.getName().startsWith("ArchiveEntry.title")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith(".ArchiveEntry.")||entry.getName().startsWith(".title")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.")||entry.getName().startsWith(".ArchiveEntry.title")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith(".ArchiveEntry.title")||entry.getName().startsWith(".ArchiveEntry.title")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null){buffer.writeRecord(currBytes);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null){buffer.writeRecord(currBytes);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181buffer.writeRecord(currBytes);currBytes=0;
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null){buffer.writeRecord(currName);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null){buffer.writeRecord(currName);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null){currName=entry.getName();buffer.writeRecord(currBytes);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getDirectory()!=null&&entry.getName().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getDirectory()==null&&entry.getName().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(!entry.isDirectory()&&entry.getName().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals("ArchiveEntry.")&&entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals("ArchiveEntry.title")||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals("ArchiveEntry.name")||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(TarArchiveEntry.class.getName())||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals("ArchiveEntry.zip")||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals("ArchiveEntry.")||entry.getName().equals("Directory")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.")||entry.getName().startsWith("ArchiveEntry.URL")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.")||entry.getName().startsWith(".url")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.")||entry.getName().startsWith(".ArchiveEntry.url")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.url")||entry.getName().startsWith("ArchiveEntry.url")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.")||entry.getName().startsWith(".ArchiveEntry.URL")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry==null){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(currName)){if(currBytes==null){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(currName)){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(currName)){currBytes=null;for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(!closed){buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null){buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(closed){buffer.writeRecord(assemBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181while(!closed){recordBuf.writeRecord(recordBuf);currBytes=0;
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181while(!closed){buffer.writeRecord(recordBuf);currBytes=0;
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getSize().length()!=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().length()==0||entry.getName().length()!=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().length()==0&&entry.getName().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().length()!=0||entry.getName().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().length()==0||entry.getSize().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().length()==0||entry.getName().length()>=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().length()>0||entry.getName().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()&&entry.isDirectory()||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.isDirectory()||entry.getName()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.isDirectory()||entry.isVersion()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isName()||entry.isDirectory()||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.isDirectory()||entry.getName().endsWith("Archive")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()&&entry.getName().endsWith("Archive_")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().startsWith("Archive_")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals("Archive_")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().startsWith(".Archive_")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("Archive")||entry.getName().startsWith("Archive")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("Archive")||entry.getName().startsWith("Archive-")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("Archive")||entry.getName().startsWith("Archive_")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith(".Archive")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName()||currName!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getDirectory()!=null||currName!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getDirectory()==null||currName!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith(".Archive")||entry.getName().endsWith(".js")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("Archive")||entry.getName().startsWith(".js")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("Archive")||entry.getName().endsWith("/.js")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("ArchiveEntry.")||entry.getName().endsWith("ArchiveEntry.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("ArchiveEntry.")||entry.getName().endsWith("ArchiveEntry.title")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("ArchiveEntry.")||entry.getName().endsWith("ArchiveEntry.class")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("ArchiveEntry.")||entry.getName().endsWith("ArchiveEntry.zip")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("ArchiveEntry.")||entry.getName().endsWith("ArchiveEntry.name")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("ArchiveEntry.")||entry.getName().endsWith("ArchiveEntry.type")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()&&entry.getName().equals(TarArchiveEntry.class)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(TarArchiveEntry.class)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals(ArchiveEntry.class)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals(TarArchiveEntry.class,currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(TarArchiveEntry.class)||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals(TarArchiveEntry.SHORT_NAME)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().length()<0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getSize().length()>=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName()!=null||entry.isDirectory()&&entry.getName().length()!=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName()==null||entry.isDirectory()&&entry.getName().length()!=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("Archive_")||entry.getName().endsWith("Archive_")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith(".Archive_")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("Archive_")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("Archive_")||entry.getName().startsWith("Archive_")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("Archive_")||entry.getSize().endsWith("Archive_")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("Archive_")||entry.getName().endsWith(".Archive_")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()&&entry.getSize().length()!=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getDirectory()!=null||entry.getSize().length()!=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getDirectory()==null||entry.getSize().length()!=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getSize().length()>=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()&&entry.getName().endsWith(".Archive_")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName.length()==0&&entry.getName().length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().length()==0||currName.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().length()==0&&currName.length()!=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().length()==0&&currName.length()>=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().length()!=0&&currName.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().length()==0&&currName.length()<=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName.equals(entry.getName())||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName.equals(entry.getName())&&entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(currName)&&entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(currName)||entry.isDirectory()||currName.equals(entry.getName())){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(!entry.getName().equals(currName)||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(currName)||entry.isDirectory()||currName.startsWith("Archive")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()&&entry.isDirectory()||entry.getName().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().length()==0||entry.isDirectory()||entry.getName().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.isDirectory()||entry.getName().length()!=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.isDirectory()||entry.getSize().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals("ArchiveEntry.")||entry.getName().equals("ArchiveEntry.title")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals("ArchiveEntry.")||entry.getName().equals("ArchiveEntry.class")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals("ArchiveEntry.")||entry.getName().equals("ArchiveEntry.name")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(TarArchiveEntry.class.getSimpleName())){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals("ArchiveEntry.")||entry.getName().equals("ArchiveEntry.url")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(TarArchiveEntry.class.getName())){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getDirectory()!=null&&entry.getName().endsWith("Archive")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(!entry.isDirectory()&&entry.getName().endsWith("Archive")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry==null||entry.isDirectory()||entry.getName().equals(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null||entry.isDirectory()||entry.getName().equals(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null||entry.isDirectory()&&entry.getName().equals(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null||entry.getName().equals(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null||entry.isDirectory()||entry.getName().equals("Archive")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(currName)){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getEntry()!=null){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(currName)){currBytes=null;for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()&&entry.getName().endsWith(".Archive")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(currName)&&currName==null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getDirectory()!=null&&currName==null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getDirectory()==null&&currName==null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.isDirectory()&&currSize>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&currName.isDirectory()&&entry.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.isDirectory()||entry.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.isDirectory()&&currName.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&currName.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null&&entry.isDirectory()||entry.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry==null&&entry.isDirectory()&&currSize>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName()==null||entry.isDirectory()||entry.getName().length()>=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.")||entry.isDirectory()||entry.getName().startsWith("ArchiveEntry.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.isDirectory()||entry.getName().endsWith("ArchiveEntry.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()&&entry.isDirectory()||entry.getName().startsWith("ArchiveEntry.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.isDirectory()||entry.getName().startsWith(TarArchiveEntry.class)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.isDirectory()||entry.getName().startsWith(PRINT_SIZE)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("Archive-")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().startsWith("Archive-")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()&&entry.getName().endsWith("Archive-")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null||entry.isDirectory()||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.isDirectory()&&entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.isDirectory()||entry.getName().equals("Archive")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry==null||entry.isDirectory()||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry==null&&entry.isDirectory()||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.getName()||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals("Archive")||entry.isDirectory()||entry.getName().equals("Archive")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.isDirectory()||entry.getName().equals(TarArchiveEntry.class.getName())){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.isDirectory()||entry.getName().equals(TarArchiveEntry.class)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.isDirectory()||entry.getName().equals(TarArchiveEntry.class.getSimpleName())){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.isDirectory()||entry.getSize().equals("Archive")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith(".Archive_")||entry.getName().endsWith(".Archive_")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith(".Archive")||entry.getName().endsWith(".Archive_")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("Archive_")&&entry.getName().endsWith("Archive_")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null){if(currBytes==null){buffer.writeRecord(recordBuf);currBytes=0;}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(closed){if(currBytes==null){buffer.writeRecord(recordBuf);currBytes=0;}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(currName)){if(currBytes==null){buffer.writeRecord(recordBuf);currBytes=0;}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null){buffer.writeRecord(recordBuf);currBytes=0;}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null){buffer.writeRecord(recordBuf);currBytes=0;}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(currName)){if(currBytes==null){buffer.writeRecord(recordBuf);currBytes=0;}else{buffer.writeRecord(recordBuf);}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(currName)){if(currBytes!=null){buffer.writeRecord(recordBuf);currBytes=0;}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null){buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currBytes!=null){buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null){buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null){buffer.writeRecord(recordBuf);currBytes=1;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals("Archive-")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()&&entry.getName().equals("Archive-")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry!=null&&entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null||entry!=null&&entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry==null||entry!=null&&entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry==null&&entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry>=null&&entry!=null&&entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry!=null||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("Archive-")||entry.getName().endsWith("Archive-")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith(".Archive")||entry.getName().endsWith(".Archive-")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("Archive_")||entry.getName().endsWith("Archive-")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("Archive")||entry.getName().startsWith("Archive-")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null){if(currBytes!=null){buffer.writeRecord(currBytes);currBytes=0;}else{buffer.writeRecord(currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getEntry()!=null){if(currBytes!=null){buffer.writeRecord(currBytes);currBytes=0;}else{buffer.writeRecord(currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals("Archive")){if(currBytes!=null){buffer.writeRecord(currBytes);currBytes=0;}else{buffer.writeRecord(currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null){buffer.writeRecord(currName);currBytes=0;}else{buffer.writeRecord(currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null){if(currBytes!=null){buffer.writeRecord(currBytes);currBytes=0;}else{buffer.writeRecord(currBytes);}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null){buffer.writeRecord(currBytes);currBytes=0;}else{buffer.writeRecord(currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getEntry()!=null){if(currBytes!=null){buffer.writeRecord(currBytes);currBytes=0;}else{buffer.writeRecord(currBytes);}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()&&entry.isArchive()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.isAssignableFrom(entry.getName())){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.isArchive()||currName.equals(entry.getName())){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.isArchive()||currName.startsWith("Archive")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.isName()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry==null){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName()!=null){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null){for(inti=0;i<records.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("ArchiveEntry.")||entry.getName().startsWith("ArchiveEntry.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith(TarArchiveEntry.class)||entry.getName().startsWith(TarArchiveEntry.class)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith(".ArchiveEntry.")||entry.getName().startsWith(".ArchiveEntry.class")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.")||entry.getName().endsWith(".ArchiveEntry.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.")&&entry.getName().startsWith("ArchiveEntry.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181buffer.writeRecord(recordBuf);currBytes=1;
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181buffer.writeRecord(assemBuf);currBytes=0;
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName.isDirectory()||currName.length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName.isDirectory()||currName.length()!=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName.isDirectory()||currName.length()>=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName.length()==0||currName.isDirectory()||currName.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null||currName.isDirectory()||currName.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName.isDirectory()||currName.length()<=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.getName().equals(TarArchiveEntry.class.getSimpleName())){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry==null&&entry.getName().equals("Archive")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.getName().equals(TarArchiveEntry.class)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.getName().equals("Archive_")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.getName().equals("Archive-")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()&&entry.getName()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName()||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName()<LONGFILE_ERROR){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getSize()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName()<len){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName()!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()&&entry.getName().endsWith("ArchiveEntry.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().endsWith(".ArchiveEntry.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().endsWith(TarArchiveEntry.class)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().endsWith(".ArchiveEntry.class")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()&&entry.getSize().equals(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||currName.equals(entry.getSize())){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(currName)||entry.isDirectory()||entry.getSize().equals(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null&&entry.isDirectory()||entry.getSize().equals(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName.equals(entry.getName())||entry.getSize().equals(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||currName.length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||currName.length()!=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||currName!=null&&currName.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||currName.length()>=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("ArchiveEntry.")&&entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("ArchiveEntry.zip")||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith(".ArchiveEntry.class")||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith(".ArchiveEntry.name")||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith(".zip")||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(!closed){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null){if(closed){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null){if(closed){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(closed){buffer.writeRecord(recordBuf,recordSize);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(closed){buffer.writeRecord(assemBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(closed){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()&&entry.getName().equals(TarArchiveEntry.class.getName())){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals(ArchiveEntry.class.getName())){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(!entry.isDirectory()&&entry.getName().equals(TarArchiveEntry.class.getName())){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith(".ArchiveEntry.zip")||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(currBytes[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(currBytes[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(currBytes[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(currBytes[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(currName)){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(currBytes[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(currName)){if(currBytes==null){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(currBytes[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(currName)){currBytes=null;for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(currBytes[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.name")||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(!entry.isDirectory()&&currName.equals(entry.getName())){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(!entry.isDirectory()||entry.getName().equals(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null&&!entry.isDirectory()&&entry.getName().equals(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(!entry.isDirectory()&&entry.getName().startsWith(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&currName.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null&&entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&currName.equals(entry.getName())){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&currName.isEmpty()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getSize().length()<=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null&&entry.isDirectory()||currName.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&currName.isDirectory()&&currName.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null&&entry.isDirectory()&&currSize.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null&&entry.isDirectory()||currName.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getDirectory()!=null&&entry.getName().equals("Archive")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getDirectory()==null&&entry.getName().equals("Archive")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(!entry.isDirectory()&&entry.getName().equals("Archive")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals("Archive")||entry.getName().equals("Archive")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals("Archive")||entry.getName().equals("Archive-")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals("Archive")||entry.getName().equals("ArchiveInputStream")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals("Archive")||entry.getName().equals("ArchiveOutputStream")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()&&entry.getName().startsWith(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||currName.startsWith(entry.getName())){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("Archive")||entry.getName().endsWith("Archive")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("Archive")||entry.getName().startsWith("Archive")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.getName().endsWith(".Archive")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.getName().endsWith("Archive_")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.getName().endsWith("Archive-")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null||entry.getName().endsWith("Archive")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.getName().startsWith("Archive")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181buffer.writeRecord(currBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181buffer.writeRecord(recordBuf,currBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181buffer.writeRecord(currName);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181buffer.writeRecord(assemBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181buffer.writeRecord(recordBuf+currBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181buffer.writeRecord(currBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith(".ArchiveEntry.class")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith(currName)&&currSize!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith(currName)||currName!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith(currName)&&currSize==null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName.startsWith(entry.getName())&&currName!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith(currName)&&currSize>=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith(currName)&&currSize!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals("Archive/")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()&&entry.getName().equals("Archive/")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals("Archive/")||entry.getName().equals("Archive/")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getParent()!=null&&currName!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.")||entry.getName().startsWith(".ArchiveEntry.class")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith(".ArchiveEntry.class")||entry.getName().startsWith(".ArchiveEntry.class")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.")||entry.getName().endsWith("ArchiveEntry.class")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("ArchiveEntry.")||entry.getName().startsWith("ArchiveEntry.class")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.")||entry.getName().startsWith("ArchiveEntry.class)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().length()>1){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().length()<=1){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getSize().length()==1){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName.isDirectory()||entry.getName().length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().isDirectory()||entry.getName().length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(!currName.isDirectory()&&entry.getName().length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().length()>0||currName.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getRecordSize().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getLongSize().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getSize().length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()&&entry.getName().equals(tarrName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(tarrName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(!entry.isDirectory()&&entry.getName().equals(tarrName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(tarrName)||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith(".zip")||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith(LONGFILE_ERROR)||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.zip")&&entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith(PRINT_SIZE)&&entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith(PRINT_SIZE)||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith(PRINT_SIZE)||entry.getName().endsWith("Archive")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(PRINT_SIZE)||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith(PRINT_SIZE)&&entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("Archive")||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null||entry.isDirectory()||currName.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null&&entry.isDirectory()&&currName.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry==null&&entry.isDirectory()&&currName.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null||entry.isDirectory()||currName.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null||entry.getName().length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null||entry.isDirectory()&&currName.length()!=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()&&entry.getName().startsWith("ArchiveEntry.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().startsWith(TarArchiveEntry.class)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().startsWith(".ArchiveEntry.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName()==null||entry.getName().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName()==null||entry.isDirectory()&&entry.getName().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName()==null||entry.isDirectory()||entry.getSize().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith(".ArchiveEntry.")||entry.getName().endsWith(".dir")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.")&&entry.getName().endsWith(".dir")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("ArchiveEntry.")||entry.getName().endsWith(".dir")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith(".dir")||entry.getName().endsWith(".dir")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals("ArchiveEntry.")||entry.getName().endsWith(".dir")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals("ArchiveEntry.title")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()&&entry.getName().equals("ArchiveEntry.title")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals(TarArchiveEntry.TITLE_NAME)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals(TarArchiveEntry.TITLE_ERROR)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals(TarArchiveEntry.TEST_NAME)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName()!=null&&entry.isDirectory()||entry.getName().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName()!=null||entry.isDirectory()&&entry.getName().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName()!=null||entry.getName().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getSize()!=null||entry.isDirectory()||entry.getName().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith(".ArchiveEntry.")||entry.getName().endsWith(".js")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.")&&entry.getName().endsWith(".js")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.")||entry.getName().endsWith("/.js")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("ArchiveEntry.")||entry.getName().endsWith(".js")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.")||entry.getName().endsWith("ArchiveEntry.js")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()&&entry.getName().equals(TarArchiveEntry.class.getSimpleName())){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getSimpleName().equals(TarArchiveEntry.class.getName())){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(TarArchiveEntry.class.getSimpleName())||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName()!=null&&currName.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getDirectory()!=null||currName.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getDirectory()==null&&currName.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null&&entry.getDirectory()!=null&&currName.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getDirectory()!=null&&entry.getName().length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getDirectory()!=null&&currName.length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null){if(closed){buffer.writeRecord(recordBuf);currBytes=0;}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(!closed){buffer.writeRecord(recordBuf);currBytes=0;}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null){if(closed){buffer.writeRecord(recordBuf);currBytes=0;}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181Entry<K,V>entry=entry.getEntry();if(entry!=null){buffer.writeRecord(recordBuf);currBytes=0;}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null){if(closed){buffer.writeRecord(recordBuf);}currBytes=0;}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(closed){buffer.writeRecord(recordBuf,currBytes);currBytes=0;}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.")||entry.getName().startsWith(".ArchiveEntry.name")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.")||entry.getName().endsWith(".ArchiveEntry.name")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.")||entry.getName().endsWith("ArchiveEntry.name")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith(".ArchiveEntry.")||entry.getName().startsWith(".ArchiveEntry.name")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("ArchiveEntry.")||entry.getName().startsWith("ArchiveEntry.name")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName.equals(entry.getName())){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(currName)||currSize<=LONGFILE_GNU){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(currName)||currSize>entry.getSize()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(currName)||currSize<=LONGFILE_ERROR){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null&&entry.getName().equals(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(currName)||currSize<entry.getSize()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(!entry.getName().equals(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()&&entry.isDirectory()||currName.equals(entry.getName())){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName.equals(entry.getName())||entry.isDirectory()||entry.isDirectory()||currName.equals(entry.getName())){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName.equals(entry.getName())||entry.isDirectory()||currName.equals(entry.getName())){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null&&entry.isDirectory()||entry.isDirectory()||currName.equals(entry.getName())){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.isDirectory()&&currName.equals(entry.getName())){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName()!=null&&currName==null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName()==null&&currName!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName()!=null||currName!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName()==null||currName!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null&&entry.getName()!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getSize()!=null&&currName!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith(TarArchiveEntry.class)||entry.getName().endsWith(TarArchiveEntry.class)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.")||entry.getName().endsWith(".ArchiveEntry.class")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith(LONGFILE_ERROR)||entry.getName().endsWith("ArchiveEntry.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith(".ArchiveEntry.")||entry.getName().endsWith(".ArchiveEntry.class")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals("Archive")||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().length()==0&&entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName.isDirectory()&&entry.getName().equals(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName.isDirectory()||currName.equals(entry.getName())){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName.length()==0||entry.getName().equals(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(!currName.isDirectory()&&entry.getName().equals(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName.isDirectory()||entry.getName().equals(entry.getName())){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("Archive")||entry.getName().startsWith("-")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("Archive_")||entry.getName().endsWith("-")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("Archive")&&entry.getName().endsWith("-")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith(".Archive")||entry.getName().endsWith(".Archive")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()&&entry.getName().startsWith("Archive")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().startsWith(".Archive")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.")||entry.getName().endsWith("url")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith(".ArchiveEntry.")||entry.getName().startsWith(".url")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("ArchiveEntry.")||entry.getName().startsWith("url")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.")&&entry.getName().startsWith("url")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()&&entry.getName().length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().length()<=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName()!=null&&entry.isDirectory()&&entry.getName().length()!=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getDirectory()!=null&&entry.getName().length()!=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null){if(currBytes==null){buffer.writeRecord(currBytes);currBytes=0;}else{buffer.writeRecord(currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals("Archive")){if(currBytes==null){buffer.writeRecord(currBytes);currBytes=0;}else{buffer.writeRecord(currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null){if(currBytes==null){buffer.writeRecord(currBytes);currBytes=0;}else{buffer.writeRecord(currBytes);}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null){if(currBytes==null){buffer.writeRecord(currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().length()!=0&&entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().length()!=0||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getSize().length()==0||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().length()==1||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().length()>=0||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()&&entry.getSize().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().length()==0||entry.isDirectory()||entry.getSize().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals("Archive")||entry.getSize().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getDirectory()==null||entry.getSize().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getLongFileMode().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null&&currName.equals(entry.getName())){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null&&currName.equals(entry.getName())){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(closed){if(currBytes==null){buffer.writeRecord(currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null){buffer.writeRecord(currBytes);}else{buffer.writeRecord(currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null){if(currBytes==null){buffer.writeRecord(currBytes);}else{buffer.writeRecord(currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(closed){if(currBytes==null){buffer.writeRecord(currBytes);}else{buffer.writeRecord(currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null){buffer.writeRecord(currBytes);}else{buffer.writeRecord(currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null){if(currBytes==null){buffer.writeRecord(currBytes);}else{buffer.writeRecord(currBytes);}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName.equals(entry.getName())&&currName!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(currName)&&currSize!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(currName)&&currSize==null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(currName)||currName!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName.equals(entry.getName())&&currSize!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(currName)&&currSize>=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName.getName().equals(entry.getName())&&currName!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith(LONGFILE_ERROR)&&entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("Archive:")||entry.getName().endsWith("Archive:")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("Archive")||entry.getName().startsWith("Archive:")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith(".Archive")||entry.getName().endsWith(".Archive:")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("Archive-")||entry.getName().endsWith("Archive:")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.getName().endsWith("ArchiveEntry.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.getName().startsWith(".ArchiveEntry.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry==null&&entry.getName().startsWith("ArchiveEntry.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null||entry.getName().startsWith("ArchiveEntry.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.getName().startsWith(TarArchiveEntry.class)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.getName().endsWith(".ArchiveEntry.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("Archive")||entry.getName().endsWith(".Archive")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith(".Archive")||entry.getName().endsWith(".Archiver")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("Archive")||entry.getName().startsWith("Archiver")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("Archive")||entry.getName().endsWith(".Archiver")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null){buffer.writeRecord(currBytes);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName()||currName==null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName.isDirectory()||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getDirectory()||currName==null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||currName>=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()&&entry.getName().endsWith(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(!entry.isDirectory()&&entry.getName().endsWith(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith(currName)||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()&&entry.getName().length()>=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName()!=null||entry.isDirectory()||entry.getName().length()>=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()&&entry.getName().equals(currName)&&currSize<=entry.getSize()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals(currName)&&currSize==entry.getSize()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(currName)&&currSize<entry.getSize()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals(currName)&&currSize>=entry.getSize()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals(currName)&&currSize!=entry.getSize()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||currName.equals(entry.getName())&&currSize<entry.getSize()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals(currName)&&currSize<entry.getSize()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName.equals(entry.getName())&&currName.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName.equals(entry.getName())&&currName.length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(currName)||currName.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(currName)&&currSize.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName.equals(entry.getName())&&entry.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName.equals(entry.getName())&&currName.length()>=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(currName)&&currSize>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals("ArchiveEntry.url")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()&&entry.getName().equals("ArchiveEntry.url")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals("ArchiveEntry.URL")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals(TarArchiveEntry.URL_KEY)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals(TarArchiveEntry.URL)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals(TarArchiveEntry.URL_DEFAULT)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName.length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName.length()!=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName.length()<0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName.length()>=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null||currName.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName.length()<=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName()!=null&&entry.isDirectory()&&entry.getName().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null||entry.isDirectory()&&currName.length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(closed){buffer.writeRecord(currBytes);currBytes=0;}else{buffer.writeRecord(currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null){buffer.writeRecord(currBytes);currBytes=0;}else{buffer.writeRecord(currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null){buffer.writeRecord(currBytes);currBytes=0;}else{buffer.writeRecord(currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null){buffer.writeRecord(currName);currBytes=0;}else{buffer.writeRecord(currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(!closed){buffer.writeRecord(currBytes);currBytes=0;}else{buffer.writeRecord(currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null&&entry.getName().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null&&entry.isDirectory()&&entry.getSize().equals(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null||entry.isDirectory()||entry.getSize().equals(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getDirectory()!=null&&entry.getSize().equals(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith(".Archive")||entry.getName().endsWith(".-")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith(".Archive")||entry.getName().endsWith("./.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currSize==0){buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(closed){buffer.writeRecord(currBytes);}else{buffer.writeRecord(currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null){buffer.writeRecord(currBytes);}else{buffer.writeRecord(currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(closed||currBytes==null){buffer.writeRecord(currBytes);}else{buffer.writeRecord(currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(closed){buffer.writeRecord(currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null){buffer.writeRecord(currName);}else{buffer.writeRecord(currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.isDirectory()||entry.getName().equals("Archive-")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.isDirectory()||entry.getName().equals(TarArchiveEntry.SOURCENAME_ERROR)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.isDirectory()||entry.getName().equals(PRINT_SIZE)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()&&entry.getName().endsWith("Archive")||entry.getName().endsWith("Archive-")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName()==null||entry.isDirectory()||entry.getName().startsWith(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().startsWith(currName+File.separator)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(closed){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(currBytes[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null){for(inti=0;i<records.length;i++){buffer.writeRecord(currBytes[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(closed){for(inti=0;i<records.length;i++){buffer.writeRecord(currBytes[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName()==null&&entry.isDirectory()&&entry.getName().length()!=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName()==null&&entry.isDirectory()||entry.getName().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().length()>>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName()==null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName()>=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName()<LONGFILE_GNU){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null&&entry.getName().equals(currName)||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null||entry.getName().equals(currName)||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(currName)||entry.isDirectory()||currSize==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().startsWith(tarrName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals(tarrName)||currName!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith(".Archive")||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith(".Archive")||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals(ArchiveEntry.SOURCENAME_ERROR)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals(TarArchiveEntry.SOURCENAME_ERROR)&&currName!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName()!=null&&entry.isDirectory()||entry.getSize().length()!=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getDirectory()!=null&&entry.getSize().length()!=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals("ArchiveEntry.")||entry.getName().equals("ArchiveEntry.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.isDirectory()&&entry.getName().equals(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null&&entry.isDirectory()&&entry.getName().equals(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null&&entry.isDirectory()||entry.getName().equals(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null&&entry.isDirectory()&&currName.length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null&&entry.isDirectory()&&currName.length()>=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.isDirectory()||entry.isRecord()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getRecordSize().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(PRINT_NAME)||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null&&currName.isDirectory()||entry.getName().equals(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null||currName.isDirectory()||entry.getName().equals(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null||currName.isDirectory()||entry.getName().equals(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals(TarArchiveEntry.class.getName())||currName!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals(TarArchiveEntry.class.getName())&&currName!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().startsWith(".Archive.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("Archive")||entry.getName().startsWith("ArchiveEntry.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("Archive")||entry.getName().startsWith("ArchiveEntry.url")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("Archive")||entry.getName().startsWith("ArchiveEntry.name")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("Archive")||entry.getName().startsWith("Archive:")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(closed){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(closed){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().startsWith("ArchiveEntry.")||entry.getName().startsWith("ArchiveEntry.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals("ArchiveEntry.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(closed){buffer.writeRecord(currBytes);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currBytes!=null){buffer.writeRecord(currBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().length()==0&&currName!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals(currName)&&currBytes<=entry.getSize()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(currName)&&currSize==entry.getSize()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(currName)&&currBytes<=entry.getSize()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.dir")||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getSize()==0||entry.isDirectory()||entry.getName().length()!=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.")||entry.getName().startsWith(".class")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.")&&entry.getName().startsWith("ArchiveEntry.class")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.")||entry.getName().endsWith(".class")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith(".ArchiveEntry.")||entry.getName().startsWith(".class")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.isDirectory()&&entry.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null&&entry.isDirectory()&&entry.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null&&entry.isDirectory()||entry.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry==null&&entry.isDirectory()&&entry.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("Archive")||entry.getName().endsWith("Archiver")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("Archive")&&entry.getName().endsWith("Archiver")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("./")||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith(".jar")||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName()==null&&currName==null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("ArchiveEntry.")||entry.getName().endsWith("/.*")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("ArchiveEntry.zip")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null&&entry.getDirectory()==null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals("Archive/*")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.")&&entry.getName().startsWith("ArchiveEntry.title")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.")||entry.getName().startsWith(".title")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("Archive")&&entry.getName().endsWith(".js")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith(".Archive")||entry.getName().startsWith(".js")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("/")||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("Archive")&&entry.getName().endsWith("Archive")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith(".Archive")||entry.getName().endsWith(".Archive.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null&&entry.getDirectory()!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getSize()!=null&&entry.getSize().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getSize()==null||entry.getSize().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getType()==Token.NAME||entry.getSize().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getSize()!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith(currName)&&currBytes==null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName.startsWith(entry.getName())&&currSize!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currBytes!=null){buffer.writeRecord(recordBuf);currBytes=0;}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null){buffer.writeRecord(recordBuf);currBytes=0;}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currBytes==null){buffer.writeRecord(recordBuf,currBytes);currBytes=0;}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(closed){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currBytes!=null){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currBytes==null){for(inti=0;i<records.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getSize()==0||entry.isDirectory()||entry.getName().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null||currName.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null||entry.isDirectory()&&currName.length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null){buffer.writeRecord(currBytes);currSize=0;}else{buffer.writeRecord(currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null&&currName.isDirectory()&&entry.getName().length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(currName)||currSize==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("Archive_")||entry.getName().endsWith("Archiver_")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("Archive_")||entry.getName().endsWith("$$")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getDirectory()==null&&entry.getName().length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals(TarArchiveEntry.NAME)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals(TarArchiveEntry.class)&&currName!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.getName().equals("ArchiveEntry.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.getName().startsWith(PRINT_SIZE)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(currName)&&currBytes==null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName.equals(entry.getName())&&currSize==null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.isDirectory()&&entry.getName().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(closed||recordBuf!=null){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(closed){buffer.writeRecord(recordBuf,currBytes);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(closed||recordBuf==null){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(closed){buffer.writeRecord(recordBuf,0,recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("Archive_")||entry.getName().endsWith("Archive_")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals("Archive)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.isDirectory()&&entry.getName().equals("Archive")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.isDirectory()||entry.getName().startsWith(".ArchiveEntry.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.isDirectory()||entry.getName().equals("ArchiveEntry.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null||currName.isDirectory()||currName.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null&&currName.isDirectory()||currName.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.isDirectory()||currName!=null&&currName.equals(entry.getName())){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.isDirectory()||currName==null&&currName.equals(entry.getName())){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null||entry.isDirectory()||entry.isDirectory()||currName.equals(entry.getName())){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName.getName().equals(entry.getName())&&currName.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(currName)&&currBytes.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName.equals(entry.getName())&&currSize>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName.getName().equals(currName)&&currSize>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(currName)&&currSize!=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.getName().equals("ArchiveEntry.name")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.getName().equals("ArchiveEntry.title")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(closed||recordBuf!=null){buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(closed){buffer.writeRecord(recordBuf,currBytes);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(closed){buffer.writeRecord(recordBuf);currBytes=1;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181buffer.writeBytes(currBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181buffer.writeRecordBytes(currBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.")&&entry.getName().startsWith("ArchiveEntry.url")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName()!=null&&entry.isDirectory()||entry.getName().endsWith(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getSize()!=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith(".ArchiveEntry.")||entry.getName().endsWith(".dir")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith(".")||entry.getName().endsWith(".dir")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null){for(inti=0;i<records.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null){for(inti=0;i<recordsBuf.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith(".ArchiveEntry.")&&entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.hasName()||entry.getName().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith(".ArchiveEntry.")||entry.getName().endsWith(".js")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().endsWith("Archiver_")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().length()!=0&&entry.getName().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals(PRINT_NAME)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("ArchiveEntry.")||entry.getName().endsWith("-")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("ArchiveEntry.")||entry.getName().endsWith("._")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null&&currName.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.isDirectory()||entry.getName().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(closed||currName!=null){buffer.writeRecord(recordBuf);currBytes=0;}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(closed){buffer.writeRecord(assemBuf);currBytes=0;}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(closed){buffer.writeRecord(recordBuf+currBytes);currBytes=0;}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.")&&entry.getName().startsWith("ArchiveEntry.name")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null||entry.isDirectory()||entry.getName().equals(tarrName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null||entry.isDirectory()||entry.getName().equals(PRINT_NAME)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals("Archive")||entry.getName().equals("ArchiveEntry.name")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals("Archive")||entry.getName().equals("ArchiveEntry.url")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals("ArchiveEntry.URL")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null&&entry.isDirectory()||currName.equals(entry.getName())){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null&&entry.isDirectory()&&currName.equals(entry.getName())){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null||currName.equals(entry.getName())){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null||currName.equals(entry.getName())){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.isInternal()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.isArchive()||recordSize==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().endsWith(PRINT_SIZE)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith(".ArchiveEntry.")||entry.getName().endsWith(".ArchiveEntry.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.")&&entry.getName().endsWith("ArchiveEntry.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith(PRINT_SIZE)||entry.getName().endsWith(PRINT_SIZE)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith(".ArchiveEntry.")||entry.getName().startsWith(".ArchiveEntry.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.")||entry.getName().startsWith(".ArchiveEntry.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getDirectory()||currName!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith(".Archive_")||entry.getName().endsWith(".js")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith(".Archive")&&entry.getName().endsWith(".js")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("Archive_")||entry.getName().endsWith(".js")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith(LONGFILE_ERROR)||entry.getName().startsWith("ArchiveEntry.url")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("ArchiveEntry.")||entry.getName().startsWith("ArchiveEntry.url")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.")||entry.getName().endsWith(".url")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().endsWith(",Archive_")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().length()<0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith(",ArchiveEntry.")||entry.getName().endsWith(".js")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currBytes==null||recordBuf.length<0){buffer.writeRecord(recordBuf);currBytes=0;}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.isDirectory()||currName.startsWith(entry.getName())){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.isDirectory()||currName==null||currName.equals(entry.getName())){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.isDirectory()||currName.equals(entry.getLongName())){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("ArchiveEntry.")||entry.getName().endsWith("ArchiveEntry.close")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().indexOf(currName)>-1){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().indexOf(currName)>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName.equals(entry.getName())||entry.getName().equals(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null){buffer.writeRecord(recordBuf);currBytes=0;}else{buffer.writeRecord(currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry==null){buffer.writeRecord(currBytes);currBytes=0;}else{buffer.writeRecord(currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.getName().endsWith(".js")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName()||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.isDirectory()||entry.getSize()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("Archive_")||entry.getName().endsWith("Archiver")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith(".Archive_")||entry.getName().endsWith(".Archiver")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().length()>=0&&currName.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null&&entry.getName().length()==0&&currName.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(closed||recordBuf!=null){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(closed){buffer.writeRecord(recordBuf,recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName.isDirectory()&&entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(closed||recordBuf!=null){buffer.writeRecord(recordBuf);currBytes=0;}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(closed){buffer.writeRecord(recordBuf,currBytes+1);currBytes=0;}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName.equals(entry.getName())&&entry.getSize()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(currName)&&currSize<=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.isDirectory()&&entry.getName().length()!=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith(LONGFILE_ERROR)||entry.getName().endsWith(".dir")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getLongSize().length()!=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getLongFileMode().length()!=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("Archive")||entry.getName().startsWith("ArchiveEntry.close")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().startsWith(TarArchiveEntry.class.getSimpleName())){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getSize()!=null||entry.isDirectory()||entry.getName().length()!=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.isDirectory()||entry.getName().endsWith(".ArchiveEntry.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith(".Archive_")||entry.getName().endsWith(".Archive-")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("Archive-")||entry.getName().endsWith(".Archive-")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("Archive")||entry.getName().endsWith(".Archive-")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getDirectory()==null||entry.getName().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().startsWith(PRINT_SIZE)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.getName().endsWith(".Archive_")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.getName().startsWith(LONGFILE_GNU)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().endsWith(LONGFILE_GNU)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null&&recordBuf.length>0){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181while(currName!=null&&recordBuf.length>0){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName()!=null&&entry.getDirectory().length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName()!=null&&entry.getName().length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith(".ArchiveEntry.")||entry.getName().endsWith(".ArchiveEntry.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith(".ArchiveEntry.dir")||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith(LONGFILE_GNU)||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith(PRINT_SIZE+recordSize)||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getDirectory()==null||entry.getSize().equals(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName()+currName){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith(LONGFILE_ERROR)||entry.getName().startsWith("ArchiveEntry.title")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith("ArchiveEntry.")||entry.getName().endsWith(".title")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals(".Archive-")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals(PRINT_SIZE)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.isDirectory()||currName!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName()+currName!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null||entry.isDirectory()||currName!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null||entry.isDirectory()||entry.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.getSize()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.isDirectory()||entry.getName().equals("Archive/")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals("ArchiveEntry.length")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals("Archive")||entry.getName().equals("ArchiveEntry.length")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals("Archive")||entry.getName().equals("ArchiveEntry.title")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currBytes>0){buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181while(closed){recordBuf.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181while(!closed){buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().endsWith(tarrName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getSize().equals(tarrName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals("ArchiveEntry.close")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals("ArchiveEntry.zip")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals("ArchiveEntry.")||entry.getName().equals("ArchiveEntry.close")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currBytes<0){buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currBytes>=null){buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getParent()==null&&currName!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName()==null&&entry.isDirectory()||entry.getName().length()!=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry==null||entry.isDirectory()||currName.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currSize==0||entry.isDirectory()&&currName.length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null||entry.isDirectory()||currName.length()<0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith(currName)&&currName!=null){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().length()<=4){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.isDirectory()||entry.getName().length()>=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.isDirectory()||entry.getName().length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith(LONGFILE_ERROR)||entry.getName().startsWith("ArchiveEntry.class")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith(".ArchiveEntry.class")||entry.getName().startsWith(".class")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith(TarArchiveEntry.class)||entry.getName().startsWith("ArchiveEntry.class")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith(LONGFILE_ERROR)||entry.getName().startsWith("ArchiveEntry.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith(".ArchiveEntry.")||entry.getName().startsWith(".ArchiveEntry.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("ArchiveEntry.")||entry.getName().endsWith("Directory")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith(".js")||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().length()==0||entry.getName().length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().length()>=0||entry.getName().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().endsWith(",ArchiveEntry.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals(TarArchiveEntry.SOURCENAME_ERROR)||entry.getName().equals(TarConstants.NAMELEN)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.getName().equals("ArchiveEntry.length")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.getName().equals("ArchiveEntry.close")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().startsWith("Archive:")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181buffer.writeRecordHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181buffer.writeRecordBytes(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(currName)||entry.getName().equals(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(currName)&&currSize<=entry.getSize()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals(currName)||currSize<=entry.getSize()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("Archive")||entry.getName().endsWith("._")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith(".ArchiveEntry.")||entry.getName().startsWith(".url")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().endsWith(".Archive-")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().startsWith(LONGFILE_ERROR)||entry.getName().startsWith("ArchiveEntry.name")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||currName.length()<0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||currName.length()<=0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null&&entry.isDirectory()||currName.endsWith(".js")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currBytes==null||currBytes<0){buffer.writeRecord(currBytes);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().startsWith(TarArchiveEntry.class.getName())){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().endsWith(TarArchiveEntry.class.getName())){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.isDirectory()||entry.getName().equals(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("Archive_")||entry.getName().endsWith("Archive:")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().endsWith(LONGFILE_ERROR)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getSize().endsWith(currName)){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("Archive_")||entry.getName().endsWith("/")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().length()>0||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().length()<0||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null&&entry.isDirectory()||entry.getName()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().equals("ArchiveEntry")||entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals("ArchiveEntry.close")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith("Archive-")||entry.getName().endsWith("-")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith(".Archive")||entry.getName().endsWith("./.*")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().endsWith(".Archive_")||entry.getName().endsWith(".-")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().length()<4){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getFileMode()==LONGFILE_GNU||entry.getSize().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getFileMode()==LONGFILE_GNU){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry==null||entry.getName().endsWith("ArchiveEntry.")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry==null||entry.getName().equals("Archive")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null&&entry.isDirectory()&&currSize>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null&&entry.isDirectory()&&recordSize>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null&&entry.isDirectory()&&entry.getName().equals(currName)&&currSize<=entry.getSize()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getName().length()<2||entry.getName().length()==1){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null||entry.getName().equals(entry.getName())){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName.equals(entry.getName())&&entry.getName().length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName.length()>0&&entry.getName().length()>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName!=null){buffer.writeRecord(currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry==null){buffer.writeRecord(currBytes);}else{buffer.writeRecord(currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry!=null){buffer.writeRecord(currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.getSize()==null||entry.isDirectory()||entry.getName().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(!entry.getName().equals(currName)&&entry.isDirectory()){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getLongSize().length()==0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currBytes!=null&&currBytes.length>0){buffer.writeRecord(currBytes);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currBytes!=null&&currBytes<=LONGFILE_GNU){buffer.writeRecord(currBytes);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currBytes!=null&&currBytes<=entry.getSize()){buffer.writeRecord(currBytes);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(entry.isDirectory()||entry.getName().equals(".Archive")){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currBytes==null||recordBuf.length<0){buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currBytes==null||currBytes<0){buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currBytes==null||recordBuf.length<4){buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null||entry.isDirectory()&&currSize>0){
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java181if(currName==null||currName.isDirectory()&&entry.getName().length()>0){
