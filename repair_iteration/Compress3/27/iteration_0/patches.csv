bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(buffer!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);  [BUGGY]  if(buffer!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]    [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(buffer!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	}  	non-compiled	[CE]  <identifier>  expected	53	None	replace
2	[BUG]  [BUGGY]  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);  [BUGGY]  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeRecord(recordBuf);  }  [BUGGY]    [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeRecord(recordBuf);  }	}  	non-compiled	[CE]  <identifier>  expected	53	None	replace
3	[BUG]  [BUGGY]  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);  [BUGGY]  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]    [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }	}  	non-compiled	[CE]  <identifier>  expected	53	None	replace
4	[BUG]  [BUGGY]  if(buffer!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(REcordBuf[i]);  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);  [BUGGY]  if(buffer!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(REcordBuf[i]);  }  [BUGGY]    [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(buffer!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(REcordBuf[i]);  }	}  	non-compiled	[CE]  <identifier>  expected	53	None	replace
5	[BUG]  [BUGGY]  if(buffer!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getBytes());  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]  private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);  [BUGGY]  if(buffer!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getBytes());  }  [BUGGY]    [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(buffer!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getBytes());  }	}  	non-compiled	[CE]  <identifier>  expected	53	None	replace
6	[BUG]  [BUGGY]  if(buffer!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(lONGFILE_GNU);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError  [CONTEXT]  private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);  [BUGGY]  if(buffer!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(lONGFILE_GNU);  }  [BUGGY]    [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(buffer!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(lONGFILE_GNU);  }	}  	non-compiled	[CE]  <identifier>  expected	53	None	replace
7	[BUG]  [BUGGY]  if(buffer!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError  [CONTEXT]  private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);  [BUGGY]  if(buffer!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }  [BUGGY]    [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(buffer!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }	}  	non-compiled	[CE]  <identifier>  expected	53	None	replace
8	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]                  AssertionFailedError  [CONTEXT]  private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);  [BUGGY]    [BUGGY]    [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	  	}  	non-compiled	[CE]  <identifier>  expected	53	None	replace
9	[BUG]  [BUGGY]  System.arraycopy(recordBuf,  0,  buffer,  recordBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);  [BUGGY]  System.arraycopy(recordBuf,  0,  buffer,  recordBuf,  0,  recordBuf.length);  [BUGGY]    [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	System.arraycopy(recordBuf,  0,  buffer,  recordBuf,  0,  recordBuf.length);	}  	non-compiled	[CE]  <identifier>  expected	53	None	replace
10	[BUG]  [BUGGY]  System.arraycopy(recordBuf,  0,  buffer,  i,  recordBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);  [BUGGY]  System.arraycopy(recordBuf,  0,  buffer,  i,  recordBuf,  0,  recordBuf.length);  [BUGGY]    [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	System.arraycopy(recordBuf,  0,  buffer,  i,  recordBuf,  0,  recordBuf.length);	}  	non-compiled	[CE]  <identifier>  expected	53	None	replace
11	[BUG]  [BUGGY]  os.write(buffer,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);  [BUGGY]  os.write(buffer,  0,  recordBuf.length);  [BUGGY]    [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	os.write(buffer,  0,  recordBuf.length);	}  	non-compiled	[CE]  <identifier>  expected	53	None	replace
12	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf);  [CE]  <identifier>  expected  [FE]          AssertionFailedError  [CONTEXT]  private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);  [BUGGY]  buffer.writeRecord(recordBuf);  [BUGGY]    [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	buffer.writeRecord(recordBuf);	}  	non-compiled	[CE]  <identifier>  expected	53	None	replace
13	[BUG]  [BUGGY]  writeEOFRecord(buffer,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]  private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);  [BUGGY]  writeEOFRecord(buffer,  0,  recordBuf.length);  [BUGGY]    [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	writeEOFRecord(buffer,  0,  recordBuf.length);	}  	non-compiled	[CE]  <identifier>  expected	53	None	replace
14	[BUG]  [BUGGY]  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeBytes(recordBuf);  }  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);  [BUGGY]  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeBytes(recordBuf);  }  [BUGGY]    [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeBytes(recordBuf);  }	}  	non-compiled	[CE]  <identifier>  expected	53	None	replace
15	[BUG]  [BUGGY]  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeLong(recordBuf.length);  }  [CE]  <identifier>  expected  [FE]      AssertionFailedError  [CONTEXT]  private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);  [BUGGY]  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeLong(recordBuf.length);  }  [BUGGY]    [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeLong(recordBuf.length);  }	}  	non-compiled	[CE]  <identifier>  expected	53	None	replace
16	[BUG]  [BUGGY]  if(buffer!=  null)  {  buffer.writeBytes(recordBuf);  }  else  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError  [CONTEXT]  private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);  [BUGGY]  if(buffer!=  null)  {  buffer.writeBytes(recordBuf);  }  else  {  buffer.writeRecord(recordBuf);  }  [BUGGY]    [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(buffer!=  null)  {  buffer.writeBytes(recordBuf);  }  else  {  buffer.writeRecord(recordBuf);  }	}  	non-compiled	[CE]  <identifier>  expected	53	None	replace
