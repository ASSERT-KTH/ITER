bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getBytes());  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getBytes());  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getBytes());  }	  if(buffer!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i].getBytes());    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
2	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getBytes());  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getBytes());  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getBytes());  }	  if(buffer!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i].getBytes());    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
3	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getBytes());  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getBytes());  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getBytes());  }	  if(buffer!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i].getBytes());    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
4	[BUG]  [BUGGY]  while(buffer!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getBytes());  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  while(buffer!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getBytes());  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	while(buffer!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getBytes());  }	  if(buffer!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i].getBytes());    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
5	[BUG]  [BUGGY]  while(buffer!=  null  &&  recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getBytes());  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  while(buffer!=  null  &&  recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getBytes());  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	while(buffer!=  null  &&  recordBuf[i]!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getBytes());  }	  if(buffer!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i].getBytes());    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
6	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  System.arraycopy(assemBuf,  0,  recordBuf,  0,  recordBuf.length);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	System.arraycopy(assemBuf,  0,  recordBuf,  0,  recordBuf.length);	  if(buffer!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i].getBytes());    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
7	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }	  if(buffer!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeEOFRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
8	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }	  if(buffer!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeEOFRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
9	[BUG]  [BUGGY]  while(buffer!=  null  &&  recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  while(buffer!=  null  &&  recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	while(buffer!=  null  &&  recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }	  if(buffer!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeEOFRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
10	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }	  if(buffer!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeEOFRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
11	[BUG]  [BUGGY]  while(buffer!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  while(buffer!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	while(buffer!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }	  if(buffer!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeEOFRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
12	[BUG]  [BUGGY]  while(buffer!=  null  &&  recordBuf[i]  <  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  while(buffer!=  null  &&  recordBuf[i]  <  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	while(buffer!=  null  &&  recordBuf[i]  <  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }	  if(buffer!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeEOFRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
13	[BUG]  [BUGGY]  if(recordBuf.length  >  0)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(recordBuf.length  >  0)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(recordBuf.length  >  0)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }	  buffer.writeRecord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
14	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  }	  buffer.writeRecord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
15	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  buffer.writeEOFRecord(recordBuf);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	buffer.writeEOFRecord(recordBuf);	  buffer.writeRecord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
16	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }	  buffer.writeRecord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
17	[BUG]  [BUGGY]  if(recordBuf.length  >  0)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(recordBuf.length  >  0)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(recordBuf.length  >  0)  {  buffer.writeRecord(recordBuf);  }	  buffer.writeRecord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
18	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  buffer.writeRecord(recordBuf,  0,  recordBuf.length);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	buffer.writeRecord(recordBuf,  0,  recordBuf.length);	  buffer.writeRecord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
19	[BUG]  [BUGGY]  if(i  <  recordBuf.length)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(i  <  recordBuf.length)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(i  <  recordBuf.length)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }	  if(buffer!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    buffer.writeLong(recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
20	[BUG]  [BUGGY]  if(i  >  0)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(i  >  0)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(i  >  0)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }	  if(buffer!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    buffer.writeLong(recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
21	[BUG]  [BUGGY]  if(i  ==  recordBuf.length)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(i  ==  recordBuf.length)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(i  ==  recordBuf.length)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }	  if(buffer!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    buffer.writeLong(recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
22	[BUG]  [BUGGY]  if(i!=  recordBuf.length)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(i!=  recordBuf.length)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(i!=  recordBuf.length)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }	  if(buffer!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    buffer.writeLong(recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
23	[BUG]  [BUGGY]  if(i  ==  0)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(i  ==  0)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(i  ==  0)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }	  if(buffer!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    buffer.writeLong(recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
24	[BUG]  [BUGGY]  if(i  <  recordBuf.length)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeLong(recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(i  <  recordBuf.length)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeLong(recordBuf.length);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(i  <  recordBuf.length)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeLong(recordBuf.length);  }	  if(buffer!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    buffer.writeLong(recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
25	[BUG]  [BUGGY]  if(i!=  0)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(i!=  0)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(i!=  0)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }	  if(buffer!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    buffer.writeLong(recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
26	[BUG]  [BUGGY]  if(i  >=  recordBuf.length)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(i  >=  recordBuf.length)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(i  >=  recordBuf.length)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }	  if(buffer!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
27	[BUG]  [BUGGY]  ||  recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  ||  recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	||  recordBuf!=  null)  {  buffer.writeRecord(recordBuf);  }	  if(buffer!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
28	[BUG]  [BUGGY]  writeEOFRecord(recordBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  writeEOFRecord(recordBuf,  0,  recordBuf.length);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	writeEOFRecord(recordBuf,  0,  recordBuf.length);	  writeEOFRecord(buffer,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
29	[BUG]  [BUGGY]  writeEOFRecord(recordBuf,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  writeEOFRecord(recordBuf,  0,  buffer.length);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	writeEOFRecord(recordBuf,  0,  buffer.length);	  writeEOFRecord(buffer,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
30	[BUG]  [BUGGY]  writeEOFRecord(buffer,  0,  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  writeEOFRecord(buffer,  0,  recordBuf.length  -  1);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	writeEOFRecord(buffer,  0,  recordBuf.length  -  1);	  writeEOFRecord(buffer,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
31	[BUG]  [BUGGY]  writeEOFRecord(buffer,  0,  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  writeEOFRecord(buffer,  0,  recordBuf.length  +  1);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	writeEOFRecord(buffer,  0,  recordBuf.length  +  1);	  writeEOFRecord(buffer,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
32	[BUG]  [BUGGY]  writeEOFRecord(buffer,  0,  recordBuf.length  -  2);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  writeEOFRecord(buffer,  0,  recordBuf.length  -  2);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	writeEOFRecord(buffer,  0,  recordBuf.length  -  2);	  writeEOFRecord(buffer,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
33	[BUG]  [BUGGY]  if(i!=  recordBuf.length)  {  if(buffer!=  null)  {  buffer.writeBytes(recordBuf);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(i!=  recordBuf.length)  {  if(buffer!=  null)  {  buffer.writeBytes(recordBuf);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(i!=  recordBuf.length)  {  if(buffer!=  null)  {  buffer.writeBytes(recordBuf);  }	  if(buffer!=    null)    {    buffer.writeBytes(recordBuf);    }    else    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
34	[BUG]  [BUGGY]  if(i  ==  recordBuf.length)  {  if(buffer!=  null)  {  buffer.writeBytes(recordBuf);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(i  ==  recordBuf.length)  {  if(buffer!=  null)  {  buffer.writeBytes(recordBuf);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(i  ==  recordBuf.length)  {  if(buffer!=  null)  {  buffer.writeBytes(recordBuf);  }	  if(buffer!=    null)    {    buffer.writeBytes(recordBuf);    }    else    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
35	[BUG]  [BUGGY]  if(i  <  recordBuf.length)  {  if(buffer!=  null)  {  buffer.writeBytes(recordBuf);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(i  <  recordBuf.length)  {  if(buffer!=  null)  {  buffer.writeBytes(recordBuf);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(i  <  recordBuf.length)  {  if(buffer!=  null)  {  buffer.writeBytes(recordBuf);  }	  if(buffer!=    null)    {    buffer.writeBytes(recordBuf);    }    else    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
36	[BUG]  [BUGGY]  if(i  >  0)  {  if(buffer!=  null)  {  buffer.writeBytes(recordBuf);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(i  >  0)  {  if(buffer!=  null)  {  buffer.writeBytes(recordBuf);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(i  >  0)  {  if(buffer!=  null)  {  buffer.writeBytes(recordBuf);  }	  if(buffer!=    null)    {    buffer.writeBytes(recordBuf);    }    else    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
37	[BUG]  [BUGGY]  if(i  ==  recordBuf.length)  {  if(buffer!=  null)  {  buffer.writeBytes(recordBuf);  }  else  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(i  ==  recordBuf.length)  {  if(buffer!=  null)  {  buffer.writeBytes(recordBuf);  }  else  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(i  ==  recordBuf.length)  {  if(buffer!=  null)  {  buffer.writeBytes(recordBuf);  }  else  {  buffer.writeRecord(recordBuf);  }	  if(buffer!=    null)    {    buffer.writeBytes(recordBuf);    }    else    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
38	[BUG]  [BUGGY]  if(i!=  recordBuf.length)  {  if(buffer!=  null)  {  buffer.writeBytes(recordBuf);  }  else  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(i!=  recordBuf.length)  {  if(buffer!=  null)  {  buffer.writeBytes(recordBuf);  }  else  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(i!=  recordBuf.length)  {  if(buffer!=  null)  {  buffer.writeBytes(recordBuf);  }  else  {  buffer.writeRecord(recordBuf);  }	  if(buffer!=    null)    {    buffer.writeBytes(recordBuf);    }    else    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
39	[BUG]  [BUGGY]  if(i  >  0)  {  if(buffer!=  null)  {  buffer.writeBytes(recordBuf);  }  else  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(i  >  0)  {  if(buffer!=  null)  {  buffer.writeBytes(recordBuf);  }  else  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(i  >  0)  {  if(buffer!=  null)  {  buffer.writeBytes(recordBuf);  }  else  {  buffer.writeRecord(recordBuf);  }	  if(buffer!=    null)    {    buffer.writeBytes(recordBuf);    }    else    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
40	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(lONGFILE_GNU);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(lONGFILE_GNU);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(lONGFILE_GNU);  }	  if(buffer!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(lONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
41	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(lONGFILE_GNU);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(lONGFILE_GNU);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(lONGFILE_GNU);  }	  if(buffer!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(lONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
42	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(lONGFILE_GNU);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(lONGFILE_GNU);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(lONGFILE_GNU);  }	  if(buffer!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(lONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
43	[BUG]  [BUGGY]  ||  buffer!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(lONGFILE_GNU);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  ||  buffer!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(lONGFILE_GNU);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	||  buffer!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(lONGFILE_GNU);  }	  if(buffer!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(lONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
44	[BUG]  [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(lONGFILE_GNU);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(lONGFILE_GNU);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(lONGFILE_GNU);  }	  if(buffer!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(lONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
45	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(LONGFILE_GNU);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(LONGFILE_GNU);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(LONGFILE_GNU);  }	  if(buffer!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(lONGFILE_GNU);    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
46	[BUG]  [BUGGY]  System.arraycopy(recordBuf,  0,  buffer,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  System.arraycopy(recordBuf,  0,  buffer,  0,  recordBuf.length);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	System.arraycopy(recordBuf,  0,  buffer,  0,  recordBuf.length);	  System.arraycopy(recordBuf,    0,    buffer,    i,    recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
47	[BUG]  [BUGGY]  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	System.arraycopy(recordBuf,  0,  recordBuf,  0,  recordBuf.length);	  System.arraycopy(recordBuf,    0,    buffer,    i,    recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
48	[BUG]  [BUGGY]  System.arraycopy(recordBuf,  0,  buffer,  offset,  recordBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  System.arraycopy(recordBuf,  0,  buffer,  offset,  recordBuf,  0,  recordBuf.length);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	System.arraycopy(recordBuf,  0,  buffer,  offset,  recordBuf,  0,  recordBuf.length);	  System.arraycopy(recordBuf,    0,    buffer,    i,    recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
49	[BUG]  [BUGGY]  System.arraycopy(recordBuf,  0,  buffer,  i,  recordBuf,  0,  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  System.arraycopy(recordBuf,  0,  buffer,  i,  recordBuf,  0,  recordBuf.length  +  1);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	System.arraycopy(recordBuf,  0,  buffer,  i,  recordBuf,  0,  recordBuf.length  +  1);	  System.arraycopy(recordBuf,    0,    buffer,    i,    recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
50	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  i,  recordBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  i,  recordBuf,  0,  recordBuf.length);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	System.arraycopy(assemBuf,  0,  buffer,  i,  recordBuf,  0,  recordBuf.length);	  System.arraycopy(recordBuf,    0,    buffer,    i,    recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
51	[BUG]  [BUGGY]  System.arraycopy(recordBuf,  0,  buffer,  1,  recordBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  System.arraycopy(recordBuf,  0,  buffer,  1,  recordBuf,  0,  recordBuf.length);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	System.arraycopy(recordBuf,  0,  buffer,  1,  recordBuf,  0,  recordBuf.length);	  System.arraycopy(recordBuf,    0,    buffer,    i,    recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
52	[BUG]  [BUGGY]  os.write(recordBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  os.write(recordBuf,  0,  recordBuf.length);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	os.write(recordBuf,  0,  recordBuf.length);	  os.write(buffer,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
53	[BUG]  [BUGGY]  os.write(buffer,  0,  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  os.write(buffer,  0,  recordBuf.length  +  1);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	os.write(buffer,  0,  recordBuf.length  +  1);	  os.write(buffer,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
54	[BUG]  [BUGGY]  os.write(recordBuf,  0,  buffer.length);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  os.write(recordBuf,  0,  buffer.length);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	os.write(recordBuf,  0,  buffer.length);	  os.write(buffer,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
55	[BUG]  [BUGGY]  os.write(buffer,  0,  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  os.write(buffer,  0,  recordBuf.length  -  1);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	os.write(buffer,  0,  recordBuf.length  -  1);	  os.write(buffer,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
56	[BUG]  [BUGGY]  os.write(assemBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  os.write(assemBuf,  0,  recordBuf.length);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	os.write(assemBuf,  0,  recordBuf.length);	  os.write(buffer,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
57	[BUG]  [BUGGY]  os.write(buffer,  0,  recordBuf.length  +  2);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  os.write(buffer,  0,  recordBuf.length  +  2);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	os.write(buffer,  0,  recordBuf.length  +  2);	  os.write(buffer,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
58	[BUG]  [BUGGY]  if(i!=  recordBuf.length)  {  if(buffer  ==  null)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(i!=  recordBuf.length)  {  if(buffer  ==  null)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(i!=  recordBuf.length)  {  if(buffer  ==  null)  {  buffer.writeRecord(recordBuf);  }	  if(buffer!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    buffer.writeBytes(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
59	[BUG]  [BUGGY]  System.arraycopy(recordBuf,  0,  buffer,  recordBuf,  0,  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  System.arraycopy(recordBuf,  0,  buffer,  recordBuf,  0,  recordBuf.length  -  1);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	System.arraycopy(recordBuf,  0,  buffer,  recordBuf,  0,  recordBuf.length  -  1);	  System.arraycopy(recordBuf,    0,    buffer,    recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
60	[BUG]  [BUGGY]  System.arraycopy(recordBuf,  0,  buffer,  recordBuf,  0,  recordBuf.length  +  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  System.arraycopy(recordBuf,  0,  buffer,  recordBuf,  0,  recordBuf.length  +  1);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	System.arraycopy(recordBuf,  0,  buffer,  recordBuf,  0,  recordBuf.length  +  1);	  System.arraycopy(recordBuf,    0,    buffer,    recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
61	[BUG]  [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  recordBuf,  0,  recordBuf.length);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  System.arraycopy(assemBuf,  0,  buffer,  recordBuf,  0,  recordBuf.length);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	System.arraycopy(assemBuf,  0,  buffer,  recordBuf,  0,  recordBuf.length);	  System.arraycopy(recordBuf,    0,    buffer,    recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
62	[BUG]  [BUGGY]  System.arraycopy(recordBuf,  0,  buffer,  recordBuf,  0,  recordBuf.length  -  2);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  System.arraycopy(recordBuf,  0,  buffer,  recordBuf,  0,  recordBuf.length  -  2);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	System.arraycopy(recordBuf,  0,  buffer,  recordBuf,  0,  recordBuf.length  -  2);	  System.arraycopy(recordBuf,    0,    buffer,    recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
63	[BUG]  [BUGGY]  System.arraycopy(recordBuf,  0,  buffer,  recordBuf,  0,  recordBuf.length  -  recordBuf.length);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  System.arraycopy(recordBuf,  0,  buffer,  recordBuf,  0,  recordBuf.length  -  recordBuf.length);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	System.arraycopy(recordBuf,  0,  buffer,  recordBuf,  0,  recordBuf.length  -  recordBuf.length);	  System.arraycopy(recordBuf,    0,    buffer,    recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
64	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(REcordBuf[i]);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(REcordBuf[i]);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(REcordBuf[i]);  }	  if(buffer!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(REcordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
65	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(REcordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(REcordBuf[i]);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(REcordBuf[i]);  }	  if(buffer!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(REcordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
66	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(REcordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(REcordBuf[i]);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(REcordBuf[i]);  }	  if(buffer!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(REcordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
67	[BUG]  [BUGGY]  while(buffer!=  null  &&  recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(REcordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  while(buffer!=  null  &&  recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(REcordBuf[i]);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	while(buffer!=  null  &&  recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(REcordBuf[i]);  }	  if(buffer!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(REcordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
68	[BUG]  [BUGGY]  while(buffer!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(REcordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  while(buffer!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(REcordBuf[i]);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	while(buffer!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(REcordBuf[i]);  }	  if(buffer!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(REcordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
69	[BUG]  [BUGGY]  while(buffer!=  null  &&  buffer.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(REcordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  while(buffer!=  null  &&  buffer.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(REcordBuf[i]);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	while(buffer!=  null  &&  buffer.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(REcordBuf[i]);  }	  if(buffer!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(REcordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
70	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
71	[BUG]  [BUGGY]  if(buffer!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getName());  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(buffer!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getName());  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(buffer!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getName());  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
72	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	  if(buffer!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
73	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	  if(buffer!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
74	[BUG]  [BUGGY]  while(buffer!=  null  &&  recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  while(buffer!=  null  &&  recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	while(buffer!=  null  &&  recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	  if(buffer!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
75	[BUG]  [BUGGY]  while(buffer!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  while(buffer!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	while(buffer!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	  if(buffer!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
76	[BUG]  [BUGGY]  while(buffer!=  null  &&  recordBuf[i]  <  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  while(buffer!=  null  &&  recordBuf[i]  <  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	while(buffer!=  null  &&  recordBuf[i]  <  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	  if(buffer!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
77	[BUG]  [BUGGY]  if(!closed)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(REcordBuf[i]);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(!closed)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(REcordBuf[i]);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(!closed)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(REcordBuf[i]);  }	  if(buffer!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(REcordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
78	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  RecordBuf.length;  ++i)  {  buffer.writeRecord(REcordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  RecordBuf.length;  ++i)  {  buffer.writeRecord(REcordBuf[i]);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  RecordBuf.length;  ++i)  {  buffer.writeRecord(REcordBuf[i]);  }	  if(buffer!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(REcordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
79	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(RECORDBuf[i]);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(RECORDBuf[i]);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(RECORDBuf[i]);  }	  if(buffer!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(REcordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	4	None	replace
80	[BUG]  [BUGGY]  if(i  >  0)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(i  >  0)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(i  >  0)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeRecord(recordBuf);  }	  if(buffer!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
81	[BUG]  [BUGGY]  if(i!=  recordBuf.length)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(i!=  recordBuf.length)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(i!=  recordBuf.length)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeRecord(recordBuf);  }	  if(buffer!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
82	[BUG]  [BUGGY]  if(i  ==  recordBuf.length)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(i  ==  recordBuf.length)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(i  ==  recordBuf.length)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeRecord(recordBuf);  }	  if(buffer!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
83	[BUG]  [BUGGY]  os.write(buffer,  0,  recordBuf.length  -  2);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  os.write(buffer,  0,  recordBuf.length  -  2);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	os.write(buffer,  0,  recordBuf.length  -  2);	  os.write(buffer,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
84	[BUG]  [BUGGY]  os.write(buffer,  0,  recordBuf.length  +  4);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  os.write(buffer,  0,  recordBuf.length  +  4);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	os.write(buffer,  0,  recordBuf.length  +  4);	  os.write(buffer,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	11	None	replace
85	[BUG]  [BUGGY]  if(buffer!=  null)  {  buffer.writeEOFRecord(recordBuf);  }  else  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(buffer!=  null)  {  buffer.writeEOFRecord(recordBuf);  }  else  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(buffer!=  null)  {  buffer.writeEOFRecord(recordBuf);  }  else  {  buffer.writeRecord(recordBuf);  }	      	non-compiled	[CE]  <identifier>  expected	8	None	replace
86	[BUG]  [BUGGY]  if(i  >  0)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeLong(recordBuf.length);  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(i  >  0)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeLong(recordBuf.length);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(i  >  0)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeLong(recordBuf.length);  }	  if(buffer!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    buffer.writeLong(recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
87	[BUG]  [BUGGY]  if(i  ==  0)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeLong(recordBuf.length);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(i  ==  0)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeLong(recordBuf.length);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(i  ==  0)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeLong(recordBuf.length);  }	  if(buffer!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    buffer.writeLong(recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
88	[BUG]  [BUGGY]  if(i!=  0)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeLong(recordBuf.length);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(i!=  0)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeLong(recordBuf.length);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(i!=  0)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeLong(recordBuf.length);  }	  if(buffer!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    buffer.writeLong(recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
89	[BUG]  [BUGGY]  if(i  >  0)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeInt(recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(i  >  0)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeInt(recordBuf.length);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(i  >  0)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeInt(recordBuf.length);  }	  if(buffer!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    buffer.writeLong(recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
90	[BUG]  [BUGGY]  if(i  >  0)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeLong(recordBuf.length);  }  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(i  >  0)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeLong(recordBuf.length);  }  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(i  >  0)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeLong(recordBuf.length);  }  }	  if(buffer!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    buffer.writeLong(recordBuf.length);    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
91	[BUG]  [BUGGY]  if(i  >  0)  {  if(buffer  ==  null)  {  buffer.writeBytes(recordBuf);  }  else  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(i  >  0)  {  if(buffer  ==  null)  {  buffer.writeBytes(recordBuf);  }  else  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(i  >  0)  {  if(buffer  ==  null)  {  buffer.writeBytes(recordBuf);  }  else  {  buffer.writeRecord(recordBuf);  }	  if(buffer!=    null)    {    buffer.writeBytes(recordBuf);    }    else    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
92	[BUG]  [BUGGY]  if(i  >  0)  {  buffer.writeBytes(recordBuf);  }  else  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(i  >  0)  {  buffer.writeBytes(recordBuf);  }  else  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(i  >  0)  {  buffer.writeBytes(recordBuf);  }  else  {  buffer.writeRecord(recordBuf);  }	  if(buffer!=    null)    {    buffer.writeBytes(recordBuf);    }    else    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
93	[BUG]  [BUGGY]  if(i!=  recordBuf.length)  {  if(buffer  ==  null)  {  buffer.writeBytes(recordBuf);  }  else  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(i!=  recordBuf.length)  {  if(buffer  ==  null)  {  buffer.writeBytes(recordBuf);  }  else  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(i!=  recordBuf.length)  {  if(buffer  ==  null)  {  buffer.writeBytes(recordBuf);  }  else  {  buffer.writeRecord(recordBuf);  }	  if(buffer!=    null)    {    buffer.writeBytes(recordBuf);    }    else    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
94	[BUG]  [BUGGY]  if(i  >  0)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeBytes(recordBuf);  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(i  >  0)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeBytes(recordBuf);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(i  >  0)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeBytes(recordBuf);  }	  if(buffer!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    buffer.writeBytes(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
95	[BUG]  [BUGGY]  if(!closed)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(!closed)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(!closed)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }	  if(buffer!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    buffer.writeBytes(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
96	[BUG]  [BUGGY]  if(!closed)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeBytes(recordBuf);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(!closed)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeBytes(recordBuf);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(!closed)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeBytes(recordBuf);  }	  if(buffer!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    buffer.writeBytes(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
97	[BUG]  [BUGGY]  if(i  >  0)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeBytes(recordBuf);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(i  >  0)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeBytes(recordBuf);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(i  >  0)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeBytes(recordBuf);  }	  if(buffer!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    buffer.writeBytes(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
98	[BUG]  [BUGGY]  if(i  >  0)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf,  recordBuf);  }  else  {  buffer.writeBytes(recordBuf);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(i  >  0)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf,  recordBuf);  }  else  {  buffer.writeBytes(recordBuf);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(i  >  0)  {  if(buffer!=  null)  {  buffer.writeRecord(recordBuf,  recordBuf);  }  else  {  buffer.writeBytes(recordBuf);  }	  if(buffer!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    buffer.writeBytes(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
99	[BUG]  [BUGGY]  if(!closed)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeBytes(recordBuf);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(!closed)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeBytes(recordBuf);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(!closed)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeBytes(recordBuf);  }	  if(buffer!=    null)    {    buffer.writeRecord(recordBuf);    }    else    {    buffer.writeBytes(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
100	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordsBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordsBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordsBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	  if(buffer!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
101	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]	  if(buffer!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
102	[BUG]  [BUGGY]  if(!closed)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(!closed)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(!closed)  {  buffer.writeRecord(recordBuf);  }	  if(buffer!=    null)    {    buffer.writeRecord(recordBuf);    }    	non-compiled	[CE]  <identifier>  expected	3	None	replace
103	[BUG]  [BUGGY]  buffer.writeEOFRecord(i);  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  buffer.writeEOFRecord(i);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	buffer.writeEOFRecord(i);	  buffer.writeRecord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
104	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf[i]);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  buffer.writeRecord(recordBuf[i]);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	buffer.writeRecord(recordBuf[i]);	  buffer.writeRecord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
105	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  i);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  buffer.writeRecord(recordBuf,  i);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	buffer.writeRecord(recordBuf,  i);	  buffer.writeRecord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
106	[BUG]  [BUGGY]  buffer.writeEOFRecord(recordBuf,  i);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  buffer.writeEOFRecord(recordBuf,  i);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	buffer.writeEOFRecord(recordBuf,  i);	  buffer.writeRecord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
107	[BUG]  [BUGGY]  writeEOFRecord(buffer,  0,  recordBuf.length  +  i);  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  writeEOFRecord(buffer,  0,  recordBuf.length  +  i);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	writeEOFRecord(buffer,  0,  recordBuf.length  +  i);	  writeEOFRecord(buffer,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
108	[BUG]  [BUGGY]  writeEOFRecord(buffer,  0,  recordBuf.length  -  4);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  writeEOFRecord(buffer,  0,  recordBuf.length  -  4);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	writeEOFRecord(buffer,  0,  recordBuf.length  -  4);	  writeEOFRecord(buffer,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
109	[BUG]  [BUGGY]  writeEOFRecord(buffer,  0,  recordBuf.length,  i);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  writeEOFRecord(buffer,  0,  recordBuf.length,  i);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	writeEOFRecord(buffer,  0,  recordBuf.length,  i);	  writeEOFRecord(buffer,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
110	[BUG]  [BUGGY]  System.arraycopy(recordBuf,  0,  buffer,  i,  recordBuf,  0,  recordBuf.length  -  1);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  System.arraycopy(recordBuf,  0,  buffer,  i,  recordBuf,  0,  recordBuf.length  -  1);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	System.arraycopy(recordBuf,  0,  buffer,  i,  recordBuf,  0,  recordBuf.length  -  1);	  System.arraycopy(recordBuf,    0,    buffer,    i,    recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
111	[BUG]  [BUGGY]  System.arraycopy(recordBuf,  0,  buffer,  0,  recordBuf.length,  recordBuf.length);  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  System.arraycopy(recordBuf,  0,  buffer,  0,  recordBuf.length,  recordBuf.length);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	System.arraycopy(recordBuf,  0,  buffer,  0,  recordBuf.length,  recordBuf.length);	  System.arraycopy(recordBuf,    0,    buffer,    i,    recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
112	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf[i].getBytes());  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  buffer.writeRecord(recordBuf[i].getBytes());  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	buffer.writeRecord(recordBuf[i].getBytes());	  if(buffer!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i].getBytes());    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
113	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getBytes()  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getBytes()  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getBytes()	  if(buffer!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i].getBytes());    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
114	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordsBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getBytes());  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordsBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getBytes());  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordsBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getBytes());  }	  if(buffer!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i].getBytes());    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
115	[BUG]  [BUGGY]  System.arraycopy(recordBuf,  0,  buffer,  recordBuf,  0,  recordBuf.length  -  4);  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  System.arraycopy(recordBuf,  0,  buffer,  recordBuf,  0,  recordBuf.length  -  4);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	System.arraycopy(recordBuf,  0,  buffer,  recordBuf,  0,  recordBuf.length  -  4);	  System.arraycopy(recordBuf,    0,    buffer,    recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
116	[BUG]  [BUGGY]  System.arraycopy(recordBuf,  0,  buffer,  recordBuf,  0,  recordBuf.length  +  2);  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  System.arraycopy(recordBuf,  0,  buffer,  recordBuf,  0,  recordBuf.length  +  2);  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	System.arraycopy(recordBuf,  0,  buffer,  recordBuf,  0,  recordBuf.length  +  2);	  System.arraycopy(recordBuf,    0,    buffer,    recordBuf,    0,    recordBuf.length);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
117	[BUG]  [BUGGY]  if(!closed)  {  if(buffer!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(!closed)  {  if(buffer!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(!closed)  {  if(buffer!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }	  if(buffer!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeEOFRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
118	[BUG]  [BUGGY]  if(!closed)  {  if(buffer!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(!closed)  {  if(buffer!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(!closed)  {  if(buffer!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }  }	  if(buffer!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeEOFRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
119	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordsBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }  [timeout]  [FE]                        AssertionFailedError    [CONTEXT]    private  void  writeEOFRecord()  throws  IOException  {  for  (int  i  =  0;  i  <  recordBuf.length;  ++i)  {  recordBuf[i]  =  0;  }  buffer.writeRecord(recordBuf);    [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordsBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }  [BUGGY]      [CLASS]  TarArchiveOutputStream  [METHOD]  writeEOFRecord  [RETURN_TYPE]  void  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  wBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  aLen  assemLen  blockSize  i  longFileMode  num  numToWrite  recordSize  wOffset  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordsBuf.length;  ++i)  {  buffer.writeEOFRecord(recordBuf[i]);  }	  if(buffer!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeEOFRecord(recordBuf[i]);    }    	non-compiled	[timeout]	7	None	replace
