bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] this(os, TarBuffer.DEFAULT_BLKSIZE, TarBuffer.DEFAULT_RCDSIZE); [FE] AssertionFailedError [CONTEXT] public TarArchiveOutputStream(OutputStream os) { [BUGGY] this(os, TarBuffer.DEFAULT_BLKSIZE, TarBuffer.DEFAULT_RCDSIZE); [BUGGY] } [CLASS] TarArchiveOutputStream [METHOD] <init> [RETURN_TYPE] OutputStream)  OutputStream os [VARIABLES] byte[] assemBuf recordBuf boolean closed OutputStream os out TarBuffer buffer String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE assemLen longFileMode long currBytes currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	63	63	1	replace	
2	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public TarArchiveOutputStream(OutputStream os) { [BUGGY] [BUGGY] this(os, TarBuffer.DEFAULT_BLKSIZE, TarBuffer.DEFAULT_RCDSIZE); } [CLASS] TarArchiveOutputStream [METHOD] <init> [RETURN_TYPE] OutputStream)  OutputStream os [VARIABLES] byte[] assemBuf recordBuf boolean closed OutputStream os out TarBuffer buffer String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE assemLen longFileMode long currBytes currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	63	63	1	add	
3	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] public TarArchiveOutputStream(OutputStream os) { this(os, TarBuffer.DEFAULT_BLKSIZE, TarBuffer.DEFAULT_RCDSIZE); [BUGGY] } [BUGGY]  [CLASS] TarArchiveOutputStream [METHOD] <init> [RETURN_TYPE] OutputStream)  OutputStream os [VARIABLES] byte[] assemBuf recordBuf boolean closed OutputStream os out TarBuffer buffer String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE assemLen longFileMode long currBytes currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	64	64	1	replace	
4	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public TarArchiveOutputStream(OutputStream os) { this(os, TarBuffer.DEFAULT_BLKSIZE, TarBuffer.DEFAULT_RCDSIZE); [BUGGY] [BUGGY] } [CLASS] TarArchiveOutputStream [METHOD] <init> [RETURN_TYPE] OutputStream)  OutputStream os [VARIABLES] byte[] assemBuf recordBuf boolean closed OutputStream os out TarBuffer buffer String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE assemLen longFileMode long currBytes currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	64	64	1	add	
5	[BUG] [BUGGY] public TarArchiveOutputStream(OutputStream os, int blockSize, int recordSize) { [FE] AssertionFailedError [CONTEXT] [BUGGY] public TarArchiveOutputStream(OutputStream os, int blockSize, int recordSize) { [BUGGY] out = os; this.buffer = new TarBuffer(os, blockSize, recordSize); this.assemLen = 0; this.assemBuf = new byte[recordSize]; this.recordBuf = new byte[recordSize]; } [CLASS] TarArchiveOutputStream [METHOD] <init> [RETURN_TYPE] OutputStream,int,int)  OutputStream os int blockSize int recordSize [VARIABLES] byte[] assemBuf recordBuf boolean closed OutputStream os out TarBuffer buffer String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE assemLen blockSize longFileMode recordSize long currBytes currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	81	81	1	replace	
6	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] [BUGGY] [BUGGY] public TarArchiveOutputStream(OutputStream os, int blockSize, int recordSize) { out = os; this.buffer = new TarBuffer(os, blockSize, recordSize); this.assemLen = 0; this.assemBuf = new byte[recordSize]; this.recordBuf = new byte[recordSize]; } [CLASS] TarArchiveOutputStream [METHOD] <init> [RETURN_TYPE] OutputStream,int,int)  OutputStream os int blockSize int recordSize [VARIABLES] byte[] assemBuf recordBuf boolean closed OutputStream os out TarBuffer buffer String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE assemLen blockSize longFileMode recordSize long currBytes currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	81	81	1	add	
7	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private final byte[]assemBuf; [CLASS] TarArchiveOutputStream  [VARIABLES] 	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	50	50	1	replace	
8	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private final byte[]assemBuf; [CLASS] TarArchiveOutputStream  [VARIABLES] 	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	50	50	1	add	
9	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private int longFileMode = LONGFILE_ERROR; [CLASS] TarArchiveOutputStream  [VARIABLES] 	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	52	52	1	replace	
10	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private int longFileMode = LONGFILE_ERROR; [CLASS] TarArchiveOutputStream  [VARIABLES] 	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	52	52	1	add	
11	[BUG] [BUGGY] out = os; [FE] AssertionFailedError [CONTEXT] public TarArchiveOutputStream(OutputStream os, int blockSize, int recordSize) { [BUGGY] out = os; [BUGGY]  this.buffer = new TarBuffer(os, blockSize, recordSize); this.assemLen = 0; this.assemBuf = new byte[recordSize]; this.recordBuf = new byte[recordSize]; } [CLASS] TarArchiveOutputStream [METHOD] <init> [RETURN_TYPE] OutputStream,int,int)  OutputStream os int blockSize int recordSize [VARIABLES] byte[] assemBuf recordBuf boolean closed OutputStream os out TarBuffer buffer String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE assemLen blockSize longFileMode recordSize long currBytes currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	replace	
12	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public TarArchiveOutputStream(OutputStream os, int blockSize, int recordSize) { [BUGGY] [BUGGY] out = os; this.buffer = new TarBuffer(os, blockSize, recordSize); this.assemLen = 0; this.assemBuf = new byte[recordSize]; this.recordBuf = new byte[recordSize]; } [CLASS] TarArchiveOutputStream [METHOD] <init> [RETURN_TYPE] OutputStream,int,int)  OutputStream os int blockSize int recordSize [VARIABLES] byte[] assemBuf recordBuf boolean closed OutputStream os out TarBuffer buffer String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE assemLen blockSize longFileMode recordSize long currBytes currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	82	82	1	add	
13	[BUG] [BUGGY] this.buffer = new TarBuffer(os, blockSize, recordSize); [FE] AssertionFailedError [CONTEXT] public TarArchiveOutputStream(OutputStream os, int blockSize, int recordSize) { out = os; [BUGGY] this.buffer = new TarBuffer(os, blockSize, recordSize); [BUGGY] this.assemLen = 0; this.assemBuf = new byte[recordSize]; this.recordBuf = new byte[recordSize]; } [CLASS] TarArchiveOutputStream [METHOD] <init> [RETURN_TYPE] OutputStream,int,int)  OutputStream os int blockSize int recordSize [VARIABLES] byte[] assemBuf recordBuf boolean closed OutputStream os out TarBuffer buffer String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE assemLen blockSize longFileMode recordSize long currBytes currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	replace	
14	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public TarArchiveOutputStream(OutputStream os, int blockSize, int recordSize) { out = os; [BUGGY] [BUGGY] this.buffer = new TarBuffer(os, blockSize, recordSize); this.assemLen = 0; this.assemBuf = new byte[recordSize]; this.recordBuf = new byte[recordSize]; } [CLASS] TarArchiveOutputStream [METHOD] <init> [RETURN_TYPE] OutputStream,int,int)  OutputStream os int blockSize int recordSize [VARIABLES] byte[] assemBuf recordBuf boolean closed OutputStream os out TarBuffer buffer String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE assemLen blockSize longFileMode recordSize long currBytes currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	84	84	1	add	
15	[BUG] [BUGGY] this.assemLen = 0; [FE] AssertionFailedError [CONTEXT] public TarArchiveOutputStream(OutputStream os, int blockSize, int recordSize) { out = os; this.buffer = new TarBuffer(os, blockSize, recordSize); [BUGGY] this.assemLen = 0; [BUGGY] this.assemBuf = new byte[recordSize]; this.recordBuf = new byte[recordSize]; } [CLASS] TarArchiveOutputStream [METHOD] <init> [RETURN_TYPE] OutputStream,int,int)  OutputStream os int blockSize int recordSize [VARIABLES] byte[] assemBuf recordBuf boolean closed OutputStream os out TarBuffer buffer String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE assemLen blockSize longFileMode recordSize long currBytes currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	replace	
16	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public TarArchiveOutputStream(OutputStream os, int blockSize, int recordSize) { out = os; this.buffer = new TarBuffer(os, blockSize, recordSize); [BUGGY] [BUGGY] this.assemLen = 0; this.assemBuf = new byte[recordSize]; this.recordBuf = new byte[recordSize]; } [CLASS] TarArchiveOutputStream [METHOD] <init> [RETURN_TYPE] OutputStream,int,int)  OutputStream os int blockSize int recordSize [VARIABLES] byte[] assemBuf recordBuf boolean closed OutputStream os out TarBuffer buffer String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE assemLen blockSize longFileMode recordSize long currBytes currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	85	85	1	add	
17	[BUG] [BUGGY] this.assemBuf = new byte[recordSize]; [FE] AssertionFailedError [CONTEXT] public TarArchiveOutputStream(OutputStream os, int blockSize, int recordSize) { out = os; this.buffer = new TarBuffer(os, blockSize, recordSize); this.assemLen = 0; [BUGGY] this.assemBuf = new byte[recordSize]; [BUGGY] this.recordBuf = new byte[recordSize]; } [CLASS] TarArchiveOutputStream [METHOD] <init> [RETURN_TYPE] OutputStream,int,int)  OutputStream os int blockSize int recordSize [VARIABLES] byte[] assemBuf recordBuf boolean closed OutputStream os out TarBuffer buffer String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE assemLen blockSize longFileMode recordSize long currBytes currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	
18	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public TarArchiveOutputStream(OutputStream os, int blockSize, int recordSize) { out = os; this.buffer = new TarBuffer(os, blockSize, recordSize); this.assemLen = 0; [BUGGY] [BUGGY] this.assemBuf = new byte[recordSize]; this.recordBuf = new byte[recordSize]; } [CLASS] TarArchiveOutputStream [METHOD] <init> [RETURN_TYPE] OutputStream,int,int)  OutputStream os int blockSize int recordSize [VARIABLES] byte[] assemBuf recordBuf boolean closed OutputStream os out TarBuffer buffer String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE assemLen blockSize longFileMode recordSize long currBytes currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	add	
19	[BUG] [BUGGY] this.recordBuf = new byte[recordSize]; [FE] AssertionFailedError [CONTEXT] public TarArchiveOutputStream(OutputStream os, int blockSize, int recordSize) { out = os; this.buffer = new TarBuffer(os, blockSize, recordSize); this.assemLen = 0; this.assemBuf = new byte[recordSize]; [BUGGY] this.recordBuf = new byte[recordSize]; [BUGGY] } [CLASS] TarArchiveOutputStream [METHOD] <init> [RETURN_TYPE] OutputStream,int,int)  OutputStream os int blockSize int recordSize [VARIABLES] byte[] assemBuf recordBuf boolean closed OutputStream os out TarBuffer buffer String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE assemLen blockSize longFileMode recordSize long currBytes currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	87	87	1	replace	
20	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public TarArchiveOutputStream(OutputStream os, int blockSize, int recordSize) { out = os; this.buffer = new TarBuffer(os, blockSize, recordSize); this.assemLen = 0; this.assemBuf = new byte[recordSize]; [BUGGY] [BUGGY] this.recordBuf = new byte[recordSize]; } [CLASS] TarArchiveOutputStream [METHOD] <init> [RETURN_TYPE] OutputStream,int,int)  OutputStream os int blockSize int recordSize [VARIABLES] byte[] assemBuf recordBuf boolean closed OutputStream os out TarBuffer buffer String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE assemLen blockSize longFileMode recordSize long currBytes currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	87	87	1	add	
21	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] public TarArchiveOutputStream(OutputStream os, int blockSize, int recordSize) { out = os; this.buffer = new TarBuffer(os, blockSize, recordSize); this.assemLen = 0; this.assemBuf = new byte[recordSize]; this.recordBuf = new byte[recordSize]; [BUGGY] } [BUGGY]  [CLASS] TarArchiveOutputStream [METHOD] <init> [RETURN_TYPE] OutputStream,int,int)  OutputStream os int blockSize int recordSize [VARIABLES] byte[] assemBuf recordBuf boolean closed OutputStream os out TarBuffer buffer String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE assemLen blockSize longFileMode recordSize long currBytes currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	replace	
22	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public TarArchiveOutputStream(OutputStream os, int blockSize, int recordSize) { out = os; this.buffer = new TarBuffer(os, blockSize, recordSize); this.assemLen = 0; this.assemBuf = new byte[recordSize]; this.recordBuf = new byte[recordSize]; [BUGGY] [BUGGY] } [CLASS] TarArchiveOutputStream [METHOD] <init> [RETURN_TYPE] OutputStream,int,int)  OutputStream os int blockSize int recordSize [VARIABLES] byte[] assemBuf recordBuf boolean closed OutputStream os out TarBuffer buffer String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE assemLen blockSize longFileMode recordSize long currBytes currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	88	88	1	add	
23	[BUG] [BUGGY] writeEOFRecord(); [FE] AssertionFailedError [CONTEXT] public void finish() throws IOException { [BUGGY] writeEOFRecord(); [BUGGY] writeEOFRecord(); } [CLASS] TarArchiveOutputStream [METHOD] finish [RETURN_TYPE] void  [VARIABLES] byte[] assemBuf recordBuf boolean closed OutputStream os out TarBuffer buffer String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE assemLen blockSize longFileMode recordSize long currBytes currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	replace	
24	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public void finish() throws IOException { [BUGGY] [BUGGY] writeEOFRecord(); writeEOFRecord(); } [CLASS] TarArchiveOutputStream [METHOD] finish [RETURN_TYPE] void  [VARIABLES] byte[] assemBuf recordBuf boolean closed OutputStream os out TarBuffer buffer String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE assemLen blockSize longFileMode recordSize long currBytes currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	112	112	1	add	
25	[BUG] [BUGGY] writeEOFRecord(); [FE] AssertionFailedError [CONTEXT] public void finish() throws IOException { writeEOFRecord(); [BUGGY] writeEOFRecord(); [BUGGY] } [CLASS] TarArchiveOutputStream [METHOD] finish [RETURN_TYPE] void  [VARIABLES] byte[] assemBuf recordBuf boolean closed OutputStream os out TarBuffer buffer String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE assemLen blockSize longFileMode recordSize long currBytes currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	113	113	1	replace	
26	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public void finish() throws IOException { writeEOFRecord(); [BUGGY] [BUGGY] writeEOFRecord(); } [CLASS] TarArchiveOutputStream [METHOD] finish [RETURN_TYPE] void  [VARIABLES] byte[] assemBuf recordBuf boolean closed OutputStream os out TarBuffer buffer String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE assemLen blockSize longFileMode recordSize long currBytes currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	113	113	1	add	
27	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] public void finish() throws IOException { writeEOFRecord(); writeEOFRecord(); [BUGGY] } [BUGGY]  [CLASS] TarArchiveOutputStream [METHOD] finish [RETURN_TYPE] void  [VARIABLES] byte[] assemBuf recordBuf boolean closed OutputStream os out TarBuffer buffer String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE assemLen blockSize longFileMode recordSize long currBytes currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	replace	
28	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public void finish() throws IOException { writeEOFRecord(); writeEOFRecord(); [BUGGY] [BUGGY] } [CLASS] TarArchiveOutputStream [METHOD] finish [RETURN_TYPE] void  [VARIABLES] byte[] assemBuf recordBuf boolean closed OutputStream os out TarBuffer buffer String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE assemLen blockSize longFileMode recordSize long currBytes currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	114	114	1	add	
29	[BUG] [BUGGY] TarArchiveEntry entry = (TarArchiveEntry) archiveEntry; [FE] AssertionFailedError [CONTEXT] public void putArchiveEntry(ArchiveEntry archiveEntry) throws IOException { [BUGGY] TarArchiveEntry entry = (TarArchiveEntry) archiveEntry; [BUGGY] if (entry.getName().length() >= TarConstants.NAMELEN) { if (longFileMode == LONGFILE_GNU) {   TarArchiveEntry longLinkEntry = new TarArchiveEntry(TarConstants.GNU_LONGLINK, TarConstants.LF_GNUTYPE_LONGNAME); final byte[] nameBytes = entry.getName().getBytes(); // TODO is it correct to use the default charset here? longLinkEntry.setSize(nameBytes.length + 1); // +1 for NUL [CLASS] TarArchiveOutputStream [METHOD] putArchiveEntry [RETURN_TYPE] void  ArchiveEntry archiveEntry [VARIABLES] byte[] assemBuf nameBytes recordBuf boolean closed OutputStream os out TarBuffer buffer ArchiveEntry archiveEntry String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE assemLen blockSize longFileMode recordSize long currBytes currSize TarArchiveEntry entry longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	replace	
30	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public void putArchiveEntry(ArchiveEntry archiveEntry) throws IOException { [BUGGY] [BUGGY] TarArchiveEntry entry = (TarArchiveEntry) archiveEntry; if (entry.getName().length() >= TarConstants.NAMELEN) { if (longFileMode == LONGFILE_GNU) {   TarArchiveEntry longLinkEntry = new TarArchiveEntry(TarConstants.GNU_LONGLINK, TarConstants.LF_GNUTYPE_LONGNAME); final byte[] nameBytes = entry.getName().getBytes(); // TODO is it correct to use the default charset here? longLinkEntry.setSize(nameBytes.length + 1); // +1 for NUL [CLASS] TarArchiveOutputStream [METHOD] putArchiveEntry [RETURN_TYPE] void  ArchiveEntry archiveEntry [VARIABLES] byte[] assemBuf nameBytes recordBuf boolean closed OutputStream os out TarBuffer buffer ArchiveEntry archiveEntry String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE assemLen blockSize longFileMode recordSize long currBytes currSize TarArchiveEntry entry longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	154	154	1	add	
31	[BUG] [BUGGY] if (entry.getName().length() >= TarConstants.NAMELEN) { [FE] AssertionFailedError [CONTEXT] public void putArchiveEntry(ArchiveEntry archiveEntry) throws IOException { TarArchiveEntry entry = (TarArchiveEntry) archiveEntry; [BUGGY] if (entry.getName().length() >= TarConstants.NAMELEN) { [BUGGY]  if (longFileMode == LONGFILE_GNU) {   TarArchiveEntry longLinkEntry = new TarArchiveEntry(TarConstants.GNU_LONGLINK, TarConstants.LF_GNUTYPE_LONGNAME); final byte[] nameBytes = entry.getName().getBytes(); // TODO is it correct to use the default charset here? longLinkEntry.setSize(nameBytes.length + 1); // +1 for NUL putArchiveEntry(longLinkEntry); [CLASS] TarArchiveOutputStream [METHOD] putArchiveEntry [RETURN_TYPE] void  ArchiveEntry archiveEntry [VARIABLES] byte[] assemBuf nameBytes recordBuf boolean closed OutputStream os out TarBuffer buffer ArchiveEntry archiveEntry String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE assemLen blockSize longFileMode recordSize long currBytes currSize TarArchiveEntry entry longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	
32	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] public void putArchiveEntry(ArchiveEntry archiveEntry) throws IOException { TarArchiveEntry entry = (TarArchiveEntry) archiveEntry; [BUGGY] [BUGGY] if (entry.getName().length() >= TarConstants.NAMELEN) { if (longFileMode == LONGFILE_GNU) {   TarArchiveEntry longLinkEntry = new TarArchiveEntry(TarConstants.GNU_LONGLINK, TarConstants.LF_GNUTYPE_LONGNAME); final byte[] nameBytes = entry.getName().getBytes(); // TODO is it correct to use the default charset here? longLinkEntry.setSize(nameBytes.length + 1); // +1 for NUL putArchiveEntry(longLinkEntry); [CLASS] TarArchiveOutputStream [METHOD] putArchiveEntry [RETURN_TYPE] void  ArchiveEntry archiveEntry [VARIABLES] byte[] assemBuf nameBytes recordBuf boolean closed OutputStream os out TarBuffer buffer ArchiveEntry archiveEntry String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE assemLen blockSize longFileMode recordSize long currBytes currSize TarArchiveEntry entry longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	add	
33	[BUG] [BUGGY] entry.writeEntryHeader(recordBuf); [FE] AssertionFailedError [CONTEXT] write(nameBytes); write(0); // NUL terminator closeArchiveEntry(); } else if (longFileMode != LONGFILE_TRUNCATE) { throw new RuntimeException("file name '" + entry.getName() + "' is too long ( > " + TarConstants.NAMELEN + " bytes)"); } } [BUGGY] entry.writeEntryHeader(recordBuf); [BUGGY] buffer.writeRecord(recordBuf); currBytes = 0; if (entry.isDirectory()) { currSize = 0; } else { currSize = entry.getSize(); } currName = entry.getName(); [CLASS] TarArchiveOutputStream [METHOD] putArchiveEntry [RETURN_TYPE] void  ArchiveEntry archiveEntry [VARIABLES] byte[] assemBuf nameBytes recordBuf boolean closed OutputStream os out TarBuffer buffer ArchiveEntry archiveEntry String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE assemLen blockSize longFileMode recordSize long currBytes currSize TarArchiveEntry entry longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	176	176	1	replace	
34	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] write(nameBytes); write(0); // NUL terminator closeArchiveEntry(); } else if (longFileMode != LONGFILE_TRUNCATE) { throw new RuntimeException("file name '" + entry.getName() + "' is too long ( > " + TarConstants.NAMELEN + " bytes)"); } } [BUGGY] [BUGGY] entry.writeEntryHeader(recordBuf); buffer.writeRecord(recordBuf); currBytes = 0; if (entry.isDirectory()) { currSize = 0; } else { currSize = entry.getSize(); } currName = entry.getName(); [CLASS] TarArchiveOutputStream [METHOD] putArchiveEntry [RETURN_TYPE] void  ArchiveEntry archiveEntry [VARIABLES] byte[] assemBuf nameBytes recordBuf boolean closed OutputStream os out TarBuffer buffer ArchiveEntry archiveEntry String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE assemLen blockSize longFileMode recordSize long currBytes currSize TarArchiveEntry entry longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	176	176	1	add	
35	[BUG] [BUGGY] buffer.writeRecord(recordBuf); [FE] AssertionFailedError [CONTEXT] write(0); // NUL terminator closeArchiveEntry(); } else if (longFileMode != LONGFILE_TRUNCATE) { throw new RuntimeException("file name '" + entry.getName() + "' is too long ( > " + TarConstants.NAMELEN + " bytes)"); } } entry.writeEntryHeader(recordBuf); [BUGGY] buffer.writeRecord(recordBuf); [BUGGY]  currBytes = 0; if (entry.isDirectory()) { currSize = 0; } else { currSize = entry.getSize(); } currName = entry.getName(); } [CLASS] TarArchiveOutputStream [METHOD] putArchiveEntry [RETURN_TYPE] void  ArchiveEntry archiveEntry [VARIABLES] byte[] assemBuf nameBytes recordBuf boolean closed OutputStream os out TarBuffer buffer ArchiveEntry archiveEntry String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE assemLen blockSize longFileMode recordSize long currBytes currSize TarArchiveEntry entry longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	177	177	1	replace	
36	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] write(0); // NUL terminator closeArchiveEntry(); } else if (longFileMode != LONGFILE_TRUNCATE) { throw new RuntimeException("file name '" + entry.getName() + "' is too long ( > " + TarConstants.NAMELEN + " bytes)"); } } entry.writeEntryHeader(recordBuf); [BUGGY] [BUGGY] buffer.writeRecord(recordBuf); currBytes = 0; if (entry.isDirectory()) { currSize = 0; } else { currSize = entry.getSize(); } currName = entry.getName(); } [CLASS] TarArchiveOutputStream [METHOD] putArchiveEntry [RETURN_TYPE] void  ArchiveEntry archiveEntry [VARIABLES] byte[] assemBuf nameBytes recordBuf boolean closed OutputStream os out TarBuffer buffer ArchiveEntry archiveEntry String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE assemLen blockSize longFileMode recordSize long currBytes currSize TarArchiveEntry entry longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	177	177	1	add	
37	[BUG] [BUGGY] currBytes = 0; [FE] AssertionFailedError [CONTEXT] } else if (longFileMode != LONGFILE_TRUNCATE) { throw new RuntimeException("file name '" + entry.getName() + "' is too long ( > " + TarConstants.NAMELEN + " bytes)"); } } entry.writeEntryHeader(recordBuf); buffer.writeRecord(recordBuf); [BUGGY] currBytes = 0; [BUGGY]  if (entry.isDirectory()) { currSize = 0; } else { currSize = entry.getSize(); } currName = entry.getName(); } [CLASS] TarArchiveOutputStream [METHOD] putArchiveEntry [RETURN_TYPE] void  ArchiveEntry archiveEntry [VARIABLES] byte[] assemBuf nameBytes recordBuf boolean closed OutputStream os out TarBuffer buffer ArchiveEntry archiveEntry String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE assemLen blockSize longFileMode recordSize long currBytes currSize TarArchiveEntry entry longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	179	179	1	replace	
38	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] } else if (longFileMode != LONGFILE_TRUNCATE) { throw new RuntimeException("file name '" + entry.getName() + "' is too long ( > " + TarConstants.NAMELEN + " bytes)"); } } entry.writeEntryHeader(recordBuf); buffer.writeRecord(recordBuf); [BUGGY] [BUGGY] currBytes = 0; if (entry.isDirectory()) { currSize = 0; } else { currSize = entry.getSize(); } currName = entry.getName(); } [CLASS] TarArchiveOutputStream [METHOD] putArchiveEntry [RETURN_TYPE] void  ArchiveEntry archiveEntry [VARIABLES] byte[] assemBuf nameBytes recordBuf boolean closed OutputStream os out TarBuffer buffer ArchiveEntry archiveEntry String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE assemLen blockSize longFileMode recordSize long currBytes currSize TarArchiveEntry entry longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	179	179	1	add	
39	[BUG] [BUGGY] if (entry.isDirectory()) { [FE] AssertionFailedError [CONTEXT] + "' is too long ( > " + TarConstants.NAMELEN + " bytes)"); } } entry.writeEntryHeader(recordBuf); buffer.writeRecord(recordBuf); currBytes = 0; [BUGGY] if (entry.isDirectory()) { [BUGGY] currSize = 0; } else { currSize = entry.getSize(); } currName = entry.getName(); } [CLASS] TarArchiveOutputStream [METHOD] putArchiveEntry [RETURN_TYPE] void  ArchiveEntry archiveEntry [VARIABLES] byte[] assemBuf nameBytes recordBuf boolean closed OutputStream os out TarBuffer buffer ArchiveEntry archiveEntry String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE assemLen blockSize longFileMode recordSize long currBytes currSize TarArchiveEntry entry longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	181	181	1	replace	
40	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] + "' is too long ( > " + TarConstants.NAMELEN + " bytes)"); } } entry.writeEntryHeader(recordBuf); buffer.writeRecord(recordBuf); currBytes = 0; [BUGGY] [BUGGY] if (entry.isDirectory()) { currSize = 0; } else { currSize = entry.getSize(); } currName = entry.getName(); } [CLASS] TarArchiveOutputStream [METHOD] putArchiveEntry [RETURN_TYPE] void  ArchiveEntry archiveEntry [VARIABLES] byte[] assemBuf nameBytes recordBuf boolean closed OutputStream os out TarBuffer buffer ArchiveEntry archiveEntry String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE assemLen blockSize longFileMode recordSize long currBytes currSize TarArchiveEntry entry longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	181	181	1	add	
41	[BUG] [BUGGY] currSize = entry.getSize(); [FE] AssertionFailedError [CONTEXT] if (entry.isDirectory()) { currSize = 0; } else { [BUGGY] currSize = entry.getSize(); [BUGGY] } [CLASS] TarArchiveOutputStream [METHOD] putArchiveEntry [RETURN_TYPE] void  ArchiveEntry archiveEntry [VARIABLES] byte[] assemBuf nameBytes recordBuf boolean closed OutputStream os out TarBuffer buffer ArchiveEntry archiveEntry String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE assemLen blockSize longFileMode recordSize long currBytes currSize TarArchiveEntry entry longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	replace	
42	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] if (entry.isDirectory()) { currSize = 0; } else { [BUGGY] [BUGGY] currSize = entry.getSize(); } [CLASS] TarArchiveOutputStream [METHOD] putArchiveEntry [RETURN_TYPE] void  ArchiveEntry archiveEntry [VARIABLES] byte[] assemBuf nameBytes recordBuf boolean closed OutputStream os out TarBuffer buffer ArchiveEntry archiveEntry String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE assemLen blockSize longFileMode recordSize long currBytes currSize TarArchiveEntry entry longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	184	184	1	add	
43	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] if (entry.isDirectory()) { currSize = 0; } else { currSize = entry.getSize(); } [CLASS] TarArchiveOutputStream [METHOD] putArchiveEntry [RETURN_TYPE] void  ArchiveEntry archiveEntry [VARIABLES] byte[] assemBuf nameBytes recordBuf boolean closed OutputStream os out TarBuffer buffer ArchiveEntry archiveEntry String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE assemLen blockSize longFileMode recordSize long currBytes currSize TarArchiveEntry entry longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	186	186	1	replace	
44	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] if (entry.isDirectory()) { currSize = 0; } else { currSize = entry.getSize(); } [CLASS] TarArchiveOutputStream [METHOD] putArchiveEntry [RETURN_TYPE] void  ArchiveEntry archiveEntry [VARIABLES] byte[] assemBuf nameBytes recordBuf boolean closed OutputStream os out TarBuffer buffer ArchiveEntry archiveEntry String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE assemLen blockSize longFileMode recordSize long currBytes currSize TarArchiveEntry entry longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	186	186	1	add	
45	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] buffer.writeRecord(recordBuf); currBytes = 0; if (entry.isDirectory()) { currSize = 0; } else { currSize = entry.getSize(); } currName = entry.getName(); [BUGGY] } [BUGGY]  [CLASS] TarArchiveOutputStream [METHOD] putArchiveEntry [RETURN_TYPE] void  ArchiveEntry archiveEntry [VARIABLES] byte[] assemBuf nameBytes recordBuf boolean closed OutputStream os out TarBuffer buffer ArchiveEntry archiveEntry String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE assemLen blockSize longFileMode recordSize long currBytes currSize TarArchiveEntry entry longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	
46	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] buffer.writeRecord(recordBuf); currBytes = 0; if (entry.isDirectory()) { currSize = 0; } else { currSize = entry.getSize(); } currName = entry.getName(); [BUGGY] [BUGGY] } [CLASS] TarArchiveOutputStream [METHOD] putArchiveEntry [RETURN_TYPE] void  ArchiveEntry archiveEntry [VARIABLES] byte[] assemBuf nameBytes recordBuf boolean closed OutputStream os out TarBuffer buffer ArchiveEntry archiveEntry String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE assemLen blockSize longFileMode recordSize long currBytes currSize TarArchiveEntry entry longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	add	
47	[BUG] [BUGGY] for (int i = 0; i < recordBuf.length; ++i) { [FE] AssertionFailedError [CONTEXT] private void writeEOFRecord() throws IOException { [BUGGY] for (int i = 0; i < recordBuf.length; ++i) { [BUGGY] recordBuf[i] = 0; } buffer.writeRecord(recordBuf); } [CLASS] TarArchiveOutputStream [METHOD] writeEOFRecord [RETURN_TYPE] void  [VARIABLES] byte[] assemBuf nameBytes recordBuf wBuf boolean closed OutputStream os out TarBuffer buffer String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE aLen assemLen blockSize i longFileMode num numToWrite recordSize wOffset long currBytes currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	303	303	1	replace	
48	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private void writeEOFRecord() throws IOException { [BUGGY] [BUGGY] for (int i = 0; i < recordBuf.length; ++i) { recordBuf[i] = 0; } buffer.writeRecord(recordBuf); } [CLASS] TarArchiveOutputStream [METHOD] writeEOFRecord [RETURN_TYPE] void  [VARIABLES] byte[] assemBuf nameBytes recordBuf wBuf boolean closed OutputStream os out TarBuffer buffer String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE aLen assemLen blockSize i longFileMode num numToWrite recordSize wOffset long currBytes currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	303	303	1	add	
49	[BUG] [BUGGY] recordBuf[i] = 0; [FE] AssertionFailedError [CONTEXT] private void writeEOFRecord() throws IOException { for (int i = 0; i < recordBuf.length; ++i) { [BUGGY] recordBuf[i] = 0; [BUGGY] } buffer.writeRecord(recordBuf); } [CLASS] TarArchiveOutputStream [METHOD] writeEOFRecord [RETURN_TYPE] void  [VARIABLES] byte[] assemBuf nameBytes recordBuf wBuf boolean closed OutputStream os out TarBuffer buffer String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE aLen assemLen blockSize i longFileMode num numToWrite recordSize wOffset long currBytes currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	replace	
50	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private void writeEOFRecord() throws IOException { for (int i = 0; i < recordBuf.length; ++i) { [BUGGY] [BUGGY] recordBuf[i] = 0; } buffer.writeRecord(recordBuf); } [CLASS] TarArchiveOutputStream [METHOD] writeEOFRecord [RETURN_TYPE] void  [VARIABLES] byte[] assemBuf nameBytes recordBuf wBuf boolean closed OutputStream os out TarBuffer buffer String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE aLen assemLen blockSize i longFileMode num numToWrite recordSize wOffset long currBytes currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	304	304	1	add	
51	[BUG] [BUGGY] buffer.writeRecord(recordBuf); [FE] AssertionFailedError [CONTEXT] private void writeEOFRecord() throws IOException { for (int i = 0; i < recordBuf.length; ++i) { recordBuf[i] = 0; } [BUGGY] buffer.writeRecord(recordBuf); [BUGGY] } [CLASS] TarArchiveOutputStream [METHOD] writeEOFRecord [RETURN_TYPE] void  [VARIABLES] byte[] assemBuf nameBytes recordBuf wBuf boolean closed OutputStream os out TarBuffer buffer String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE aLen assemLen blockSize i longFileMode num numToWrite recordSize wOffset long currBytes currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	replace	
52	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private void writeEOFRecord() throws IOException { for (int i = 0; i < recordBuf.length; ++i) { recordBuf[i] = 0; } [BUGGY] [BUGGY] buffer.writeRecord(recordBuf); } [CLASS] TarArchiveOutputStream [METHOD] writeEOFRecord [RETURN_TYPE] void  [VARIABLES] byte[] assemBuf nameBytes recordBuf wBuf boolean closed OutputStream os out TarBuffer buffer String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE aLen assemLen blockSize i longFileMode num numToWrite recordSize wOffset long currBytes currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	307	307	1	add	
53	[BUG] [BUGGY] } [FE] AssertionFailedError [CONTEXT] private void writeEOFRecord() throws IOException { for (int i = 0; i < recordBuf.length; ++i) { recordBuf[i] = 0; } buffer.writeRecord(recordBuf); [BUGGY] } [BUGGY]  [CLASS] TarArchiveOutputStream [METHOD] writeEOFRecord [RETURN_TYPE] void  [VARIABLES] byte[] assemBuf nameBytes recordBuf wBuf boolean closed OutputStream os out TarBuffer buffer String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE aLen assemLen blockSize i longFileMode num numToWrite recordSize wOffset long currBytes currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	replace	
54	[BUG] [BUGGY] [FE] AssertionFailedError [CONTEXT] private void writeEOFRecord() throws IOException { for (int i = 0; i < recordBuf.length; ++i) { recordBuf[i] = 0; } buffer.writeRecord(recordBuf); [BUGGY] [BUGGY] } [CLASS] TarArchiveOutputStream [METHOD] writeEOFRecord [RETURN_TYPE] void  [VARIABLES] byte[] assemBuf nameBytes recordBuf wBuf boolean closed OutputStream os out TarBuffer buffer String currName int LONGFILE_ERROR LONGFILE_GNU LONGFILE_TRUNCATE aLen assemLen blockSize i longFileMode num numToWrite recordSize wOffset long currBytes currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	308	308	1	add	
