bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[4];  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  this.assemBuf  =  new  byte[4];  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	this.assemBuf  =  new  byte[4];	  this.assemBuf    =    new    byte[out];    	non-compiled	[CE]  <identifier>  expected	8	None	replace
2	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[blockSize  +  recordSize];  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  this.assemBuf  =  new  byte[blockSize  +  recordSize];  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	this.assemBuf  =  new  byte[blockSize  +  recordSize];	  this.assemBuf    =    new    byte[blockSize];    	non-compiled	[CE]  <identifier>  expected	2	None	replace
3	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[blockSize  +  1];  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  this.assemBuf  =  new  byte[blockSize  +  1];  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	this.assemBuf  =  new  byte[blockSize  +  1];	  this.assemBuf    =    new    byte[blockSize];    	non-compiled	[CE]  <identifier>  expected	2	None	replace
4	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[lockSize];  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  this.assemBuf  =  new  byte[lockSize];  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	this.assemBuf  =  new  byte[lockSize];	  this.assemBuf    =    new    byte[blockSize];    	non-compiled	[CE]  <identifier>  expected	2	None	replace
5	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[LONGFILE_ERROR];  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  this.assemBuf  =  new  byte[LONGFILE_ERROR];  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	this.assemBuf  =  new  byte[LONGFILE_ERROR];	  this.assemBuf    =    new    byte[len];    	non-compiled	[CE]  <identifier>  expected	10	None	replace
6	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[length  +  1];  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  this.assemBuf  =  new  byte[length  +  1];  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	this.assemBuf  =  new  byte[length  +  1];	  this.assemBuf    =    new    byte[length];    	non-compiled	[CE]  <identifier>  expected	4	None	replace
7	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[out.length];  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  this.assemBuf  =  new  byte[out.length];  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	this.assemBuf  =  new  byte[out.length];	  this.assemBuf    =    new    byte[length];    	non-compiled	[CE]  <identifier>  expected	4	None	replace
8	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[1];  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  this.assemBuf  =  new  byte[1];  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	this.assemBuf  =  new  byte[1];	  this.assemBuf    =    new    byte[0];    	non-compiled	[CE]  <identifier>  expected	3	None	replace
9	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[3];  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  this.assemBuf  =  new  byte[3];  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	this.assemBuf  =  new  byte[3];	  this.assemBuf    =    new    byte[2];    	non-compiled	[CE]  <identifier>  expected	5	None	replace
10	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[5];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  this.assemBuf  =  new  byte[5];  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	this.assemBuf  =  new  byte[5];	  this.assemBuf    =    new    byte[2];    	non-compiled	[CE]  <identifier>  expected	5	None	replace
11	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[blockSize  *  recordSize];  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  this.assemBuf  =  new  byte[blockSize  *  recordSize];  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	this.assemBuf  =  new  byte[blockSize  *  recordSize];	  this.assemBuf    =    new    byte[recordSize    *    recordSize];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
12	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[recordSize  *  recordSize  +  1];  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  this.assemBuf  =  new  byte[recordSize  *  recordSize  +  1];  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	this.assemBuf  =  new  byte[recordSize  *  recordSize  +  1];	  this.assemBuf    =    new    byte[recordSize    *    recordSize];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
13	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[length  *  recordSize];  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  this.assemBuf  =  new  byte[length  *  recordSize];  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	this.assemBuf  =  new  byte[length  *  recordSize];	  this.assemBuf    =    new    byte[recordSize    *    recordSize];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
14	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[lockSize  *  recordSize];  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  this.assemBuf  =  new  byte[lockSize  *  recordSize];  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	this.assemBuf  =  new  byte[lockSize  *  recordSize];	  this.assemBuf    =    new    byte[recordSize    *    recordSize];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
15	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[recordSize  +  recordSize];  [CE]  <identifier>  expected  [FE]                AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  this.assemBuf  =  new  byte[recordSize  +  recordSize];  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	this.assemBuf  =  new  byte[recordSize  +  recordSize];	  this.assemBuf    =    new    byte[recordSize    *    recordSize];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
16	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[recordSize  +  3];  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  this.assemBuf  =  new  byte[recordSize  +  3];  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	this.assemBuf  =  new  byte[recordSize  +  3];	  this.assemBuf    =    new    byte[recordSize    +    1];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
17	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[lockSize  +  1];  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  this.assemBuf  =  new  byte[lockSize  +  1];  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	this.assemBuf  =  new  byte[lockSize  +  1];	  this.assemBuf    =    new    byte[recordSize    +    1];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
18	[BUG]  [BUGGY]  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  this.assemLen  =  0;  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	this.assemLen  =  0;	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
19	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
20	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize);  this.assemLen  =  0;  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	this.buffer  =  new  TarBuffer(blockSize,  recordSize);  this.assemLen  =  0;	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
21	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
22	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  recordSize);  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	this.buffer  =  new  TarBuffer(blockSize,  recordSize);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
23	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  blockSize,  recordSize);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  this.buffer  =  new  TarBuffer(blockSize,  blockSize,  recordSize);  this.assemLen  =  0;  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	this.buffer  =  new  TarBuffer(blockSize,  blockSize,  recordSize);  this.assemLen  =  0;	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
24	[BUG]  [BUGGY]  os.write(assemBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                                AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  os.write(assemBuf,  0,  recordSize);  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	os.write(assemBuf,  0,  recordSize);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
25	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[recordSize  *  2];  [CE]  <identifier>  expected  [FE]                  AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  this.assemBuf  =  new  byte[recordSize  *  2];  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	this.assemBuf  =  new  byte[recordSize  *  2];	  this.assemBuf    =    new    byte[recordSize    +    2];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
26	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[RecordSize  +  1];  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  this.assemBuf  =  new  byte[RecordSize  +  1];  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	this.assemBuf  =  new  byte[RecordSize  +  1];	  this.assemBuf    =    new    byte[recordSize    +    2];    	non-compiled	[CE]  <identifier>  expected	6	None	replace
27	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[lONGFILE_GNU];  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  this.assemBuf  =  new  byte[lONGFILE_GNU];  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	this.assemBuf  =  new  byte[lONGFILE_GNU];	  this.assemBuf    =    new    byte[LONGFILE_GNU];    	non-compiled	[CE]  <identifier>  expected	9	None	replace
28	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[lONGFILE_ERROR];  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  this.assemBuf  =  new  byte[lONGFILE_ERROR];  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	this.assemBuf  =  new  byte[lONGFILE_ERROR];	  this.assemBuf    =    new    byte[LONGFILE_GNU];    	non-compiled	[CE]  <identifier>  expected	9	None	replace
29	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[lONGFileMode];  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  this.assemBuf  =  new  byte[lONGFileMode];  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	this.assemBuf  =  new  byte[lONGFileMode];	  this.assemBuf    =    new    byte[LONGFILE_GNU];    	non-compiled	[CE]  <identifier>  expected	9	None	replace
30	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[RecordSize];  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  this.assemBuf  =  new  byte[RecordSize];  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	this.assemBuf  =  new  byte[RecordSize];	  this.assemBuf    =    new    byte[out];    	non-compiled	[CE]  <identifier>  expected	8	None	replace
31	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[LONGFILE_GNU  +  recordSize];  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  this.assemBuf  =  new  byte[LONGFILE_GNU  +  recordSize];  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	this.assemBuf  =  new  byte[LONGFILE_GNU  +  recordSize];	  this.assemBuf    =    new    byte[LONGFILE_GNU];    	non-compiled	[CE]  <identifier>  expected	9	None	replace
32	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[lONGFile_GNU];  [CE]  <identifier>  expected  [FE]            AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  this.assemBuf  =  new  byte[lONGFile_GNU];  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	this.assemBuf  =  new  byte[lONGFile_GNU];	  this.assemBuf    =    new    byte[LONGFILE_GNU];    	non-compiled	[CE]  <identifier>  expected	9	None	replace
33	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[LONGFILE_GNU+1];  [CE]  <identifier>  expected  [FE]              AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  this.assemBuf  =  new  byte[LONGFILE_GNU+1];  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	this.assemBuf  =  new  byte[LONGFILE_GNU+1];	  this.assemBuf    =    new    byte[LONGFILE_GNU];    	non-compiled	[CE]  <identifier>  expected	9	None	replace
34	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  this.assemLen  =  0;	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
35	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
36	[BUG]  [BUGGY]  this.assemLen  =  System.currentTimeMillis();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  this.assemLen  =  System.currentTimeMillis();  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	this.assemLen  =  System.currentTimeMillis();	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
37	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  System.arraycopy(assemBuf,  0,  this.assemBuf,  0,  recordSize);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
38	[BUG]  [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  System.arraycopy(assemBuf,  0,  this.assemLen,  recordSize);  [CE]  <identifier>  expected  [FE]                            AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  System.arraycopy(assemBuf,  0,  this.assemLen,  recordSize);  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	this.buffer  =  new  TarBuffer(out,  blockSize,  recordSize);  System.arraycopy(assemBuf,  0,  this.assemLen,  recordSize);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
39	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[recordSize  *  1];  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  this.assemBuf  =  new  byte[recordSize  *  1];  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	this.assemBuf  =  new  byte[recordSize  *  1];	  this.assemBuf    =    new    byte[recordSize    +    1];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
40	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[recordSize  +  4];  [CE]  <identifier>  expected  [FE]          AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  this.assemBuf  =  new  byte[recordSize  +  4];  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	this.assemBuf  =  new  byte[recordSize  +  4];	  this.assemBuf    =    new    byte[recordSize    +    1];    	non-compiled	[CE]  <identifier>  expected	1	None	replace
41	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[len  *  recordSize];  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  this.assemBuf  =  new  byte[len  *  recordSize];  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	this.assemBuf  =  new  byte[len  *  recordSize];	  this.assemBuf    =    new    byte[recordSize    *    recordSize];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
42	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[outputSize];  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  this.assemBuf  =  new  byte[outputSize];  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	this.assemBuf  =  new  byte[outputSize];	  this.assemBuf    =    new    byte[out];    	non-compiled	[CE]  <identifier>  expected	8	None	replace
43	[BUG]  [BUGGY]  this.assemBuf  =  new  byte[recordSize  *  LONGFILE_GNU];  [CE]  <identifier>  expected  [FE]        AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  this.assemBuf  =  new  byte[recordSize  *  LONGFILE_GNU];  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	this.assemBuf  =  new  byte[recordSize  *  LONGFILE_GNU];	  this.assemBuf    =    new    byte[recordSize    *    recordSize];    	non-compiled	[CE]  <identifier>  expected	11	None	replace
44	[BUG]  [BUGGY]  this.currName  =  os.readLine();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  this.currName  =  os.readLine();  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	this.currName  =  os.readLine();	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
45	[BUG]  [BUGGY]  this.currName  =  os.getPropertyName();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  this.currName  =  os.getPropertyName();  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	this.currName  =  os.getPropertyName();	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
46	[BUG]  [BUGGY]  this.currName  =  os.getCurrentName();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  this.currName  =  os.getCurrentName();  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	this.currName  =  os.getCurrentName();	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
47	[BUG]  [BUGGY]  os.close();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError    [CONTEXT]    public  TarArchiveOutputStream(OutputStream  os,  int  blockSize,  int  recordSize)  {  out  =  os;  this.buffer  =  new  TarBuffer(os,  blockSize,  recordSize);  this.assemLen  =  0;    [BUGGY]  os.close();  [BUGGY]    this.recordBuf  =  new  byte[recordSize];  }  [CLASS]  TarArchiveOutputStream  [METHOD]  <init>  [RETURN_TYPE]  OutputStream,int,int)  OutputStream  os  int  blockSize  int  recordSize  [VARIABLES]  byte[]  assemBuf  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	86	86	1	replace	os.close();	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
