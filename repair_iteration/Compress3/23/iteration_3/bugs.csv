bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  >  0)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  >  0)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  >  0)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }	  if(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(currBuf);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	120	None	replace
2	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  <  0)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  <  0)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  <  0)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }	  if(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(currBuf);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	120	None	replace
3	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  <  0)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  <  0)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  <  0)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }	  if(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(currBuf);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	120	None	replace
4	[BUG]  [BUGGY]  buffer.writeRecord(currName,  currSize  +  1);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeRecord(currName,  currSize  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeRecord(currName,  currSize  +  1);	  buffer.writeRecord(currName,    currSize);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
5	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  currSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeRecord(recordBuf,  currSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeRecord(recordBuf,  currSize);	  buffer.writeRecord(currName,    currSize);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
6	[BUG]  [BUGGY]  buffer.writeRecord(currName,  currSize  -  currBytes);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeRecord(currName,  currSize  -  currBytes);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeRecord(currName,  currSize  -  currBytes);	  buffer.writeRecord(currName,    currSize);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
7	[BUG]  [BUGGY]  buffer.writeRecord(currName,  currBuf);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeRecord(currName,  currBuf);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeRecord(currName,  currBuf);	  buffer.writeRecord(currName,    currSize);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
8	[BUG]  [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currName);    }    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
9	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currName);    }    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
10	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  }  else  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  }  else  {  buffer.writeRecord(recordBuf);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  }  else  {  buffer.writeRecord(recordBuf);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currName);    }    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
11	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf,  currName);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf,  currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(recordBuf,  currName);  }	  buffer.writeRecord(recordBuf,    currName);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
12	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf,  currName);  }  else  {  System.arraycopy(currBytes,  0,  recordBuf,  0,  currSize);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf,  currName);  }  else  {  System.arraycopy(currBytes,  0,  recordBuf,  0,  currSize);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(recordBuf,  currName);  }  else  {  System.arraycopy(currBytes,  0,  recordBuf,  0,  currSize);  }	  buffer.writeRecord(recordBuf,    currName);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
13	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  currName,  currSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeRecord(recordBuf,  currName,  currSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeRecord(recordBuf,  currName,  currSize);	  buffer.writeRecord(recordBuf,    currName);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
14	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf,  currName);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf,  currName);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(recordBuf,  currName);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  buffer.writeRecord(recordBuf,    currName);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
15	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf,  currName);  }  else  {  buffer.writeRecord(currName,  recordBuf);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf,  currName);  }  else  {  buffer.writeRecord(currName,  recordBuf);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(recordBuf,  currName);  }  else  {  buffer.writeRecord(currName,  recordBuf);  }	  buffer.writeRecord(recordBuf,    currName);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
16	[BUG]  [BUGGY]  buffer.writeRecord(currSize,  recordBuf);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeRecord(currSize,  recordBuf);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeRecord(currSize,  recordBuf);	  buffer.writeRecord(recordBuf,    currName);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
17	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  currSize;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  currSize;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  currSize;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(currName);    currBytes    =    currSize;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
18	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName,  currBytes);  currSize  =  currSize;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName,  currBytes);  currSize  =  currSize;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(currName,  currBytes);  currSize  =  currSize;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(currName);    currBytes    =    currSize;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
19	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName);  currBytes  =  0,  currSize;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName);  currBytes  =  0,  currSize;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(currName);  currBytes  =  0,  currSize;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(currName);    currBytes    =    currSize;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
20	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf);  currBytes  =  currSize;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeRecord(recordBuf);  currBytes  =  currSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeRecord(recordBuf);  currBytes  =  currSize;	  if(currName!=    null)    {    buffer.writeRecord(currName);    currBytes    =    currSize;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
21	[BUG]  [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  currSize;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  currSize;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  for(int  i  =  0;  i  <  currSize;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currSize;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
22	[BUG]  [BUGGY]  if(currName!=  null)  {  while(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  while(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  while(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  }	  while(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(currBytes);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
23	[BUG]  [BUGGY]  if(currName!=  null)  {  while(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  while(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  while(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }	  while(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(currBytes);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
24	[BUG]  [BUGGY]  while(currName!=  null  &&  currName.length()  <  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null  &&  currName.length()  <  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null  &&  currName.length()  <  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }	  while(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(currBytes);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
25	[BUG]  [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
26	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
27	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  records.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  records.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  records.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
28	[BUG]  [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  i++)  {  buffer.writeRecord(currBuf);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  i++)  {  buffer.writeRecord(currBuf);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  i++)  {  buffer.writeRecord(currBuf);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    i++)    {    buffer.writeRecord(currBuf);    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
29	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  currName.length;  i++)  {  buffer.writeRecord(currBuf);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  currName.length;  i++)  {  buffer.writeRecord(currBuf);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  currName.length;  i++)  {  buffer.writeRecord(currBuf);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    i++)    {    buffer.writeRecord(currBuf);    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
30	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  i++)  {  buffer.writeRecord(currSize);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  i++)  {  buffer.writeRecord(currSize);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  i++)  {  buffer.writeRecord(currSize);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    i++)    {    buffer.writeRecord(currBuf);    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
31	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  i++)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  i++)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  i++)  {  buffer.writeRecord(recordBuf);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    i++)    {    buffer.writeRecord(currBuf);    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
32	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  buffer.writeRecord(currBytes);    currBytes    =    0;    	non-compiled	[CE]  <identifier>  expected	65	None	replace
33	[BUG]  [BUGGY]  if(currName  ==  null)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  buffer.writeRecord(currBytes);    currBytes    =    0;    	non-compiled	[CE]  <identifier>  expected	65	None	replace
34	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  else  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  else  {  buffer.writeRecord(recordBuf);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  else  {  buffer.writeRecord(recordBuf);  }	  buffer.writeRecord(currBytes);    currBytes    =    0;    	non-compiled	[CE]  <identifier>  expected	65	None	replace
35	[BUG]  [BUGGY]  longLinkEntry!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
36	[BUG]  [BUGGY]  final  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  final  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	final  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
37	[BUG]  [BUGGY]  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  i++)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  i++)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  i++)  {  buffer.writeRecord(currName);  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
38	[BUG]  [BUGGY]  longLinkEntry  ==  null)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry  ==  null)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry  ==  null)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
39	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  i++)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  i++)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	for(int  i  =  0;  i  <  recordBuf.length;  i++)  {  buffer.writeRecord(currName);  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
40	[BUG]  [BUGGY]  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  i++)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  i++)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  i++)  {  buffer.writeRecord(currName);  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
41	[BUG]  [BUGGY]  if(currName!=  null)  {  while(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  while(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  while(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }	  while(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(recordBuf);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
42	[BUG]  [BUGGY]  if(currName!=  null)  {  while(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  while(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  while(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  }	  while(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(recordBuf);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
43	[BUG]  [BUGGY]  while(currName!=  null  &&  currName.length()  <  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null  &&  currName.length()  <  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null  &&  currName.length()  <  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }	  while(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(recordBuf);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
44	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf,  currName);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf,  currName);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(recordBuf,  currName);  currBytes  =  0;  }	  if(currName!=    null)    {    buffer.writeRecord(recordBuf,    currBytes);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
45	[BUG]  [BUGGY]  if(currName  ==  null)  {  buffer.writeRecord(recordBuf,  currName);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  buffer.writeRecord(recordBuf,  currName);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  buffer.writeRecord(recordBuf,  currName);  currBytes  =  0;  }	  if(currName!=    null)    {    buffer.writeRecord(recordBuf,    currBytes);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
46	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  buffer.writeRecord(recordBuf,  currBytes);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  buffer.writeRecord(recordBuf,  currBytes);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  ==  0)  {  buffer.writeRecord(recordBuf,  currBytes);  currBytes  =  0;  }	  if(currName!=    null)    {    buffer.writeRecord(recordBuf,    currBytes);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
47	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf,  currSize);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf,  currSize);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(recordBuf,  currSize);  currBytes  =  0;  }	  if(currName!=    null)    {    buffer.writeRecord(recordBuf,    currBytes);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
48	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  currName);  currBytes  =  0;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeRecord(recordBuf,  currName);  currBytes  =  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeRecord(recordBuf,  currName);  currBytes  =  0;	  if(currName!=    null)    {    buffer.writeRecord(recordBuf,    currBytes);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
49	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf,  0,  currBytes);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf,  0,  currBytes);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(recordBuf,  0,  currBytes);  currBytes  =  0;  }	  if(currName!=    null)    {    buffer.writeRecord(recordBuf,    currBytes);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
50	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName,  recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName,  recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(currName,  recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(currName,    currSize);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
51	[BUG]  [BUGGY]  if(currName  ==  null)  {  buffer.writeRecord(currName,  recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  buffer.writeRecord(currName,  recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  buffer.writeRecord(currName,  recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(currName,    currSize);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
52	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName,  recordBuf);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName,  recordBuf);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(currName,  recordBuf);  currBytes  =  0;  }	  if(currName!=    null)    {    buffer.writeRecord(currName,    currSize);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
53	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName,  0,  currSize);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName,  0,  currSize);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(currName,  0,  currSize);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(currName,    currSize);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
54	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName,  recordBytes);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName,  recordBytes);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(currName,  recordBytes);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(currName,    currSize);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
55	[BUG]  [BUGGY]  if(currName  ==  null)  {  buffer.writeRecord(recordName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  buffer.writeRecord(recordName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  buffer.writeRecord(recordName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(recordName);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
56	[BUG]  [BUGGY]  if(currName  ==  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(recordName);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
57	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf,  currBytes);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf,  currBytes);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(recordBuf,  currBytes);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(recordName);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
58	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  >  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  >  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  >  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }	  if(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(recordBuf);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
59	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  <  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  <  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  <  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }	  if(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(recordBuf);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
60	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  ==  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  ==  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  ==  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }	  if(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(recordBuf);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
61	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  <  =  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  <  =  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  <  =  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }	  if(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(recordBuf);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
62	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  ==  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  ==  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  ==  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
63	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  >=  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  >=  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  >=  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
64	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  >  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  >  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  >  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
65	[BUG]  [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  records.size();  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  records.size();  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  for(int  i  =  0;  i  <  records.size();  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    records.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
66	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  records.size();  ++i)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  records.size();  ++i)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  records.size();  ++i)  {  buffer.writeRecord(recordBuf);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    records.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
67	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  records.size();  ++i)  {  buffer.writeRecord(urlName);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  records.size();  ++i)  {  buffer.writeRecord(urlName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  records.size();  ++i)  {  buffer.writeRecord(urlName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    records.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
68	[BUG]  [BUGGY]  longLinkEntry!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
69	[BUG]  [BUGGY]  final  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  final  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	final  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
70	[BUG]  [BUGGY]  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
71	[BUG]  [BUGGY]  longLinkEntry  ==  null)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry  ==  null)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry  ==  null)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
72	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
73	[BUG]  [BUGGY]  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(recordBuf);  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
74	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  >  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  >  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  >  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }	  if(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(currBytes);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
75	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  <  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  <  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  <  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }	  if(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(currBytes);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
76	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  <  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  <  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  <  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }	  if(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(currBytes);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
77	[BUG]  [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  currSize;  i++)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  currSize;  i++)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  for(int  i  =  0;  i  <  currSize;  i++)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currSize;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
78	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes;  i++)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes;  i++)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes;  i++)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currSize;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
79	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  currBytes;  i++)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  currBytes;  i++)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  currBytes;  i++)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currSize;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
80	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  ==  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  ==  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  ==  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
81	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  >=  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  >=  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  >=  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
82	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  <  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  <  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  <  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
83	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()  ==  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null  ||  currName.length()  ==  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null  ||  currName.length()  ==  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
84	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null    &&    currName.length()    >    0)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	113	None	replace
85	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null    &&    currName.length()    >    0)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	113	None	replace
86	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null    &&    currName.length()    >    0)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	113	None	replace
87	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  <  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  <  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  <  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null    &&    currName.length()    >    0)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	113	None	replace
88	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >=  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  >=  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  >=  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null    &&    currName.length()    >    0)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	113	None	replace
89	[BUG]  [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBytes;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBytes;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBytes;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBytes;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
90	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
91	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
92	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null  ||  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null  ||  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
93	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  >=  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  >=  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  >=  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
94	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  <  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  <  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  <  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
95	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  >  0)  {  while(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  >  0)  {  while(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  >  0)  {  while(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }  }	  while(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(currBuf);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
96	[BUG]  [BUGGY]  if(currName!=  null)  {  while(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  while(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  while(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }  }	  while(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(currBuf);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
97	[BUG]  [BUGGY]  if(currName!=  null)  {  while(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  while(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  while(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }	  while(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(currBuf);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
98	[BUG]  [BUGGY]  while(currName!=  null  &&  currName.length()  <  0)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null  &&  currName.length()  <  0)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null  &&  currName.length()  <  0)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }	  while(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(currBuf);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
99	[BUG]  [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordSize;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordSize;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordSize;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordSize;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
100	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordSize;  ++i)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordSize;  ++i)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordSize;  ++i)  {  buffer.writeRecord(recordBuf);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordSize;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
101	[BUG]  [BUGGY]  if(currName!=  null)  {  while(currName!=  null)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  while(currName!=  null)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  while(currName!=  null)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  }	  while(currName!=    null)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
102	[BUG]  [BUGGY]  while(currName!=  null  &&  currName.equals( "Archive "))  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null  &&  currName.equals( "Archive "))  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null  &&  currName.equals( "Archive "))  {  buffer.writeRecord(currName);  currBytes  =  0;  }	  while(currName!=    null)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
103	[BUG]  [BUGGY]  while(currName!=  null  &&  currName.endsWith( "Archive "))  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null  &&  currName.endsWith( "Archive "))  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null  &&  currName.endsWith( "Archive "))  {  buffer.writeRecord(currName);  currBytes  =  0;  }	  while(currName!=    null)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
104	[BUG]  [BUGGY]  while(currName!=  null  &&  recordBuf.length  >  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null  &&  recordBuf.length  >  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null  &&  recordBuf.length  >  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }	  while(currName!=    null)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
105	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  if(currName!=    null    &&    currName.length()    >    0)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
106	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  if(currName!=    null    &&    currName.length()    >    0)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
107	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBy  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBy  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBy	  if(currName!=    null    &&    currName.length()    >    0)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
108	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBy  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBy  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBy	  if(currName!=    null    &&    currName.length()    >    0)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
109	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currB  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currB  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currB	  if(currName!=    null    &&    currName.length()    >    0)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
110	[BUG]  [BUGGY]  longLinkEntry!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }	  longLinkEntry!=    null)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
111	[BUG]  [BUGGY]  if(currName!=  null)  {  longLinkEntry!=  null)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  longLinkEntry!=  null)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  longLinkEntry!=  null)  {  buffer.writeRecord(currName);  currBytes  =  0;  }	  longLinkEntry!=    null)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
112	[BUG]  [BUGGY]  final  longLinkEntry!=  null)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  final  longLinkEntry!=  null)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	final  longLinkEntry!=  null)  {  buffer.writeRecord(currName);  currBytes  =  0;  }	  longLinkEntry!=    null)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
113	[BUG]  [BUGGY]  if(currName!=  null)  {  longLinkEntry  ==  null)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  longLinkEntry  ==  null)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  longLinkEntry  ==  null)  {  buffer.writeRecord(currName);  currBytes  =  0;  }	  longLinkEntry    ==    null)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
114	[BUG]  [BUGGY]  longLinkEntry  ==  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry  ==  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry  ==  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }	  longLinkEntry    ==    null)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
115	[BUG]  [BUGGY]  final  longLinkEntry  ==  null)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  final  longLinkEntry  ==  null)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	final  longLinkEntry  ==  null)  {  buffer.writeRecord(currName);  currBytes  =  0;  }	  longLinkEntry    ==    null)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
116	[BUG]  [BUGGY]  longLinkEntry  ==  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry  ==  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry  ==  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }	  longLinkEntry    ==    null)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
117	[BUG]  [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currSize);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currSize);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currSize);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currSize);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
118	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currSize);  }  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currSize);  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currSize);  }  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currSize);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
119	[BUG]  [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currSize);  }  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currSize);  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currSize);  }  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currSize);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
120	[BUG]  [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  i++)  {  buffer.writeRecord(currSize);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  i++)  {  buffer.writeRecord(currSize);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  i++)  {  buffer.writeRecord(currSize);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currSize);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
121	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  i++)  {  buffer.writeRecord(currSize);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  i++)  {  buffer.writeRecord(currSize);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  i++)  {  buffer.writeRecord(currSize);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currSize);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
122	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null    &&    currName.length()    >    0)    {    for(int    i    =    0;    i    <    currBytes.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
123	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null    &&    currName.length()    >    0)    {    for(int    i    =    0;    i    <    currBytes.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
124	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null    &&    currName.length()    >    0)    {    for(int    i    =    0;    i    <    currBytes.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
125	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  <  0)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  <  0)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  <  0)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null    &&    currName.length()    >    0)    {    for(int    i    =    0;    i    <    currBytes.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
126	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >=  0)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  >=  0)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  >=  0)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null    &&    currName.length()    >    0)    {    for(int    i    =    0;    i    <    currBytes.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
127	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    recordBuf.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
128	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    recordBuf.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
129	[BUG]  [BUGGY]  if(currName  ==  null)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
130	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  currBytes;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  currBytes;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  currBytes;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
131	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  if(currName!=    null)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
132	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf);  currBytes  =  currBytes;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeRecord(recordBuf);  currBytes  =  currBytes;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeRecord(recordBuf);  currBytes  =  currBytes;	  if(currName!=    null)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
133	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  else  {  buffer.writeRecord(currSize);  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  else  {  buffer.writeRecord(currSize);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  else  {  buffer.writeRecord(currSize);  }	  if(currName!=    null)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
134	[BUG]  [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
135	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  records.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  records.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  records.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
136	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordsBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordsBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordsBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
137	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getName());  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getName());  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i].getName());  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
138	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]  +  currName);  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]  +  currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]  +  currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
139	[BUG]  [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  records.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  records.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  for(int  i  =  0;  i  <  records.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
140	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  buffer.writeRecord(recordName);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  buffer.writeRecord(recordName);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  ==  0)  {  buffer.writeRecord(recordName);  currBytes  =  0;  }	  if(currName!=    null)    {    buffer.writeRecord(recordName);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
141	[BUG]  [BUGGY]  buffer.writeRecord(recordName);  currBytes  =  0;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeRecord(recordName);  currBytes  =  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeRecord(recordName);  currBytes  =  0;	  if(currName!=    null)    {    buffer.writeRecord(recordName);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
142	[BUG]  [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  currName.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  currName.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  for(int  i  =  0;  i  <  currName.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currName.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
143	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordSize.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordSize.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordSize.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currName.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
144	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  currName.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  currName.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  currName.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currName.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
145	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordName.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordName.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordName.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currName.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
146	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null  ||  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null  ||  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    for(int    i    =    0;    i    <    currBytes.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	106	None	replace
147	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  >=  0)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  >=  0)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  >=  0)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    for(int    i    =    0;    i    <    currBytes.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	106	None	replace
148	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  <  0)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  <  0)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  <  0)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    for(int    i    =    0;    i    <    currBytes.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	106	None	replace
149	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  >  0)  {  while(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  >  0)  {  while(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  >  0)  {  while(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  }	  while(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
150	[BUG]  [BUGGY]  if(currName!=  null)  {  while(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  while(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  while(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  }	  while(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
151	[BUG]  [BUGGY]  if(currName!=  null)  {  while(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  while(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  while(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }	  while(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
152	[BUG]  [BUGGY]  while(currName!=  null  &&  currName.length()  <  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null  &&  currName.length()  <  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null  &&  currName.length()  <  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }	  while(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
153	[BUG]  [BUGGY]  while(currName!=  null  ||  currName.length()  >  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null  ||  currName.length()  >  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null  ||  currName.length()  >  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }	  while(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
154	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null  ||  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null  ||  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
155	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  >=  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  >=  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  >=  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
156	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  <  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  <  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  <  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
157	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  currName  =  entry.getName();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  currName  =  entry.getName();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  currName  =  entry.getName();  }	  buffer.writeRecord(recordBuf);    currBytes    =    0;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
158	[BUG]  [BUGGY]  buffer.writeRecord(currName,  recordBuf);  currBytes  =  0;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeRecord(currName,  recordBuf);  currBytes  =  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeRecord(currName,  recordBuf);  currBytes  =  0;	  buffer.writeRecord(recordBuf);    currBytes    =    0;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
159	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  currBytes);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeRecord(recordBuf,  currBytes);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeRecord(recordBuf,  currBytes);	  buffer.writeRecord(currName,    currBytes);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
160	[BUG]  [BUGGY]  buffer.writeRecord(currSize,  currBytes);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeRecord(currSize,  currBytes);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeRecord(currSize,  currBytes);	  buffer.writeRecord(currName,    currBytes);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
161	[BUG]  [BUGGY]  buffer.writeRecord(currName,  assemLen);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeRecord(currName,  assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeRecord(currName,  assemLen);	  buffer.writeRecord(currName,    currBytes);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
162	[BUG]  [BUGGY]  buffer.writeRecord(currName,  currBytes  +  1);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeRecord(currName,  currBytes  +  1);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeRecord(currName,  currBytes  +  1);	  buffer.writeRecord(currName,    currBytes);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
163	[BUG]  [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordSize;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordSize;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordSize;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordSize;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
164	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordSize;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordSize;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordSize;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordSize;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
165	[BUG]  [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordSize;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordSize;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordSize;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordSize;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
166	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  currSize;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  currSize;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  currSize;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordSize;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
167	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }	  if(currName!=    null    &&    currName.length()    >    0)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
168	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  <  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  <  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  <  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }	  if(currName!=    null    &&    currName.length()    >    0)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
169	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.copyRecord(currName);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.copyRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.copyRecord(currName);  }	  if(currName!=    null    &&    currName.length()    >    0)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
170	[BUG]  [BUGGY]  if(recordBytes!=  null)  {  for(int  i  =  0;  i  <  recordBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(recordBytes!=  null)  {  for(int  i  =  0;  i  <  recordBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(recordBytes!=  null)  {  for(int  i  =  0;  i  <  recordBytes.size();  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBytes.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
171	[BUG]  [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBytes.size();  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBytes.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
172	[BUG]  [BUGGY]  if(recordBytes!=  null)  {  for(int  i  =  0;  i  <  currName.size();  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(recordBytes!=  null)  {  for(int  i  =  0;  i  <  currName.size();  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(recordBytes!=  null)  {  for(int  i  =  0;  i  <  currName.size();  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBytes.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
173	[BUG]  [BUGGY]  if(recordBytes!=  null)  {  for(int  i  =  0;  i  <  currSize.size();  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(recordBytes!=  null)  {  for(int  i  =  0;  i  <  currSize.size();  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(recordBytes!=  null)  {  for(int  i  =  0;  i  <  currSize.size();  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBytes.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
174	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(recordBuf);  }	  buffer.writeRecord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
175	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  currName  =  entry.getName();  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  currName  =  entry.getName();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  currName  =  entry.getName();  }	  buffer.writeRecord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
176	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeRecord(currName);  }	  buffer.writeRecord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
177	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(currName,  0,  recordBuf,  0,  recordBuf.length);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(currName,  0,  recordBuf,  0,  recordBuf.length);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  System.arraycopy(currName,  0,  recordBuf,  0,  recordBuf.length);  }	  buffer.writeRecord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
178	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  currName  +=  currName;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  currName  +=  currName;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  currName  +=  currName;  }	  buffer.writeRecord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
179	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  buffer.writeRecord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
180	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currSize);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currSize);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(currSize);  }	  buffer.writeRecord(currSize);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
181	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currSize);  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currSize);  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(currSize);  }  else  {  buffer.writeRecord(currName);  }	  buffer.writeRecord(currSize);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
182	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currSize);  }  else  {  currName  =  entry.getName();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currSize);  }  else  {  currName  =  entry.getName();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(currSize);  }  else  {  currName  =  entry.getName();  }	  buffer.writeRecord(currSize);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
183	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currSize);  }  else  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currSize);  }  else  {  buffer.writeRecord(recordBuf);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(currSize);  }  else  {  buffer.writeRecord(recordBuf);  }	  buffer.writeRecord(currSize);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
184	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  currName.length;  i++)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  currName.length;  i++)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  currName.length;  i++)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
185	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  records.length;  i++)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  records.length;  i++)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  records.length;  i++)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
186	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordsBuf.length;  i++)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordsBuf.length;  i++)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordsBuf.length;  i++)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
187	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null    &&    currName.length()    >    0)    {    for(int    i    =    0;    i    <    currBytes;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
188	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  currBytes;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  for(int  i  =  0;  i  <  currBytes;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	for(int  i  =  0;  i  <  currBytes;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null    &&    currName.length()    >    0)    {    for(int    i    =    0;    i    <    currBytes;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
189	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null    &&    currName.length()    >    0)    {    for(int    i    =    0;    i    <    currBytes;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
190	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  <  0)  {  for(int  i  =  0;  i  <  currBytes;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  <  0)  {  for(int  i  =  0;  i  <  currBytes;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  <  0)  {  for(int  i  =  0;  i  <  currBytes;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null    &&    currName.length()    >    0)    {    for(int    i    =    0;    i    <    currBytes;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
191	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >=  0)  {  for(int  i  =  0;  i  <  currBytes;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  >=  0)  {  for(int  i  =  0;  i  <  currBytes;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  >=  0)  {  for(int  i  =  0;  i  <  currBytes;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null    &&    currName.length()    >    0)    {    for(int    i    =    0;    i    <    currBytes;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
192	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  currName.length;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  currName.length;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  currName.length;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
193	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf);  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
194	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordsBuf.length;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordsBuf.length;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordsBuf.length;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
195	[BUG]  [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBytes.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
196	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  ++i)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  ++i)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  ++i)  {  buffer.writeRecord(recordBuf);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBytes.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
197	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currBuf);    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
198	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currBuf);    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
199	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null  ||  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null  ||  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currBuf);    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
200	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()!=  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null  ||  currName.length()!=  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null  ||  currName.length()!=  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currBuf);    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
201	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.copyRecord(currBuf);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.copyRecord(currBuf);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.copyRecord(currBuf);  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currBuf);    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
202	[BUG]  [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currBuf);    }    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
203	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currBuf);    }    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
204	[BUG]  [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currBuf);    }    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
205	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  }  else  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  }  else  {  buffer.writeRecord(recordBuf);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  }  else  {  buffer.writeRecord(recordBuf);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currBuf);    }    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
206	[BUG]  [BUGGY]  ||  currName!=  null)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  ||  currName!=  null)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	||  currName!=  null)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
207	[BUG]  [BUGGY]  if(currName  ==  null)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
208	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  ==  0)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
209	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  <  0)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  <  0)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  <  0)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
210	[BUG]  [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  i++)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  i++)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  i++)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBytes.length;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
211	[BUG]  [BUGGY]  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
212	[BUG]  [BUGGY]  longLinkEntry!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
213	[BUG]  [BUGGY]  final  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  final  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	final  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
214	[BUG]  [BUGGY]  if(currName!=  null)  {  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
215	[BUG]  [BUGGY]  final  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  final  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	final  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
216	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
217	[BUG]  [BUGGY]  final  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  final  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	final  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
218	[BUG]  [BUGGY]  if(currName!=  null)  {  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
219	[BUG]  [BUGGY]  longLinkEntry!=  null  &&  recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null  &&  recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null  &&  recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
220	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
221	[BUG]  [BUGGY]  longLinkEntry!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
222	[BUG]  [BUGGY]  if(currName!=  null)  {  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
223	[BUG]  [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordSize;  i++)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordSize;  i++)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordSize;  i++)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordSize;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
224	[BUG]  [BUGGY]  if(currName!=  null)  {  while(currName!=  null)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  while(currName!=  null)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  while(currName!=  null)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  }	  while(currName!=    null)    {    buffer.writeRecord(currBytes);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
225	[BUG]  [BUGGY]  while(currName!=  null  &&  currName.equals( "Archive "))  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null  &&  currName.equals( "Archive "))  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null  &&  currName.equals( "Archive "))  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }	  while(currName!=    null)    {    buffer.writeRecord(currBytes);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
226	[BUG]  [BUGGY]  while(currName!=  null  &&  currName.endsWith( "Archive "))  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null  &&  currName.endsWith( "Archive "))  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null  &&  currName.endsWith( "Archive "))  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }	  while(currName!=    null)    {    buffer.writeRecord(currBytes);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
227	[BUG]  [BUGGY]  while(currName!=  null  &&  currName.endsWith( ".jar "))  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null  &&  currName.endsWith( ".jar "))  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null  &&  currName.endsWith( ".jar "))  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }	  while(currName!=    null)    {    buffer.writeRecord(currBytes);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
228	[BUG]  [BUGGY]  longLinkEntry!=  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  longLinkEntry!=    null)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
229	[BUG]  [BUGGY]  final  longLinkEntry!=  null)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  final  longLinkEntry!=  null)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	final  longLinkEntry!=  null)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  longLinkEntry!=    null)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
230	[BUG]  [BUGGY]  longLinkEntry!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  longLinkEntry!=    null)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
231	[BUG]  [BUGGY]  longLinkEntry  ==  null)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry  ==  null)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry  ==  null)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  longLinkEntry!=    null)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
232	[BUG]  [BUGGY]  longLinkEntry!=  null)  {  buffer.writeRecord(urlName);  currBytes  =  0;  }  else  {  buffer.writeRecord(urlName);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null)  {  buffer.writeRecord(urlName);  currBytes  =  0;  }  else  {  buffer.writeRecord(urlName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null)  {  buffer.writeRecord(urlName);  currBytes  =  0;  }  else  {  buffer.writeRecord(urlName);  }	  longLinkEntry!=    null)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
233	[BUG]  [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  records.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  records.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  for(int  i  =  0;  i  <  records.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    records.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
234	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  records.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  records.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  records.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    records.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
235	[BUG]  [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  records.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  records.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  for(int  i  =  0;  i  <  records.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    records.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
236	[BUG]  [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBytes.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
237	[BUG]  [BUGGY]  if(recordBytes!=  null)  {  for(int  i  =  0;  i  <  recordBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(recordBytes!=  null)  {  for(int  i  =  0;  i  <  recordBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(recordBytes!=  null)  {  for(int  i  =  0;  i  <  recordBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBytes.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
238	[BUG]  [BUGGY]  if(recordBytes!=  null)  {  for(int  i  =  0;  i  <  recordBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(recordBytes!=  null)  {  for(int  i  =  0;  i  <  recordBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(recordBytes!=  null)  {  for(int  i  =  0;  i  <  recordBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBytes.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
239	[BUG]  [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBytes.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
240	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBytes.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
241	[BUG]  [BUGGY]  if(entry.isDirectory())  {  if(currName!=  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(entry.isDirectory())  {  if(currName!=  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(entry.isDirectory())  {  if(currName!=  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(recordBuf);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
242	[BUG]  [BUGGY]  if(currName!=  null)  {  recordBuf.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  recordBuf.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  recordBuf.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(recordBuf);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
243	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(REcordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(REcordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(REcordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(recordBuf);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
244	[BUG]  [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBytes.length;    i++)    {    buffer.writeRecord(currBuf);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
245	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  i++)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  i++)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  i++)  {  buffer.writeRecord(recordBuf);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBytes.length;    i++)    {    buffer.writeRecord(currBuf);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
246	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBytes);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBytes);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(recordBytes);  }	  buffer.writeRecord(recordBytes);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
247	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBytes);  }  else  {  currName  =  entry.getName();  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBytes);  }  else  {  currName  =  entry.getName();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(recordBytes);  }  else  {  currName  =  entry.getName();  }	  buffer.writeRecord(recordBytes);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
248	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBytes);  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBytes);  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(recordBytes);  }  else  {  buffer.writeRecord(currName);  }	  buffer.writeRecord(recordBytes);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
249	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBytes);  }  else  {  currName  +=  currName;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBytes);  }  else  {  currName  +=  currName;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(recordBytes);  }  else  {  currName  +=  currName;  }	  buffer.writeRecord(recordBytes);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
250	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBytes);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBytes);  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(recordBytes);  }  else  {  throw  new  IllegalArgumentException( " ");  }	  buffer.writeRecord(recordBytes);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
251	[BUG]  [BUGGY]  buffer.writeRecord(currName);  currBytes  =  currSize;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeRecord(currName);  currBytes  =  currSize;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeRecord(currName);  currBytes  =  currSize;	  if(currName!=    null)    {    buffer.writeRecord(currName);    currBytes    =    currSize;    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
252	[BUG]  [BUGGY]  if(currName  ==  null)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }	  if(currName!=    null)    {    buffer.writeRecord(currName);    currBytes    =    currSize;    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
253	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  ==  0)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }	  if(currName!=    null)    {    buffer.writeRecord(currName);    currBytes    =    currSize;    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
254	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName);  currBytes  =  0,  currSize;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName);  currBytes  =  0,  currSize;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(currName);  currBytes  =  0,  currSize;  }	  if(currName!=    null)    {    buffer.writeRecord(currName);    currBytes    =    currSize;    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
255	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName);  currBytes  =  new  long(currSize);  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName);  currBytes  =  new  long(currSize);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(currName);  currBytes  =  new  long(currSize);  }	  if(currName!=    null)    {    buffer.writeRecord(currName);    currBytes    =    currSize;    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
256	[BUG]  [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  records.length;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  records.length;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  for(int  i  =  0;  i  <  records.length;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    records.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
257	[BUG]  [BUGGY]  if(records!=  null)  {  for(int  i  =  0;  i  <  records.length;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(records!=  null)  {  for(int  i  =  0;  i  <  records.length;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(records!=  null)  {  for(int  i  =  0;  i  <  records.length;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    records.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
258	[BUG]  [BUGGY]  if(records!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(records!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(records!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    records.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
259	[BUG]  [BUGGY]  if(records!=  null)  {  for(int  i  =  0;  i  <  currName.length;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(records!=  null)  {  for(int  i  =  0;  i  <  currName.length;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(records!=  null)  {  for(int  i  =  0;  i  <  currName.length;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    records.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
260	[BUG]  [BUGGY]  buffer.writeRecord(currName);  currBytes  =  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeRecord(currName);  currBytes  =  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeRecord(currName);  currBytes  =  1;	  buffer.writeRecord(currName);    currBytes    =    0;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
261	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  buffer.writeRecord(currBuf);    currBytes    =    0;    	non-compiled	[CE]  <identifier>  expected	82	None	replace
262	[BUG]  [BUGGY]  if(currName  ==  null)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  buffer.writeRecord(currBuf);    currBytes    =    0;    	non-compiled	[CE]  <identifier>  expected	82	None	replace
263	[BUG]  [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  currSize;  i++)  {  buffer.writeRecord(currBuf);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  currSize;  i++)  {  buffer.writeRecord(currBuf);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  for(int  i  =  0;  i  <  currSize;  i++)  {  buffer.writeRecord(currBuf);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currSize;    i++)    {    buffer.writeRecord(currBuf);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
264	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordSize;  i++)  {  buffer.writeRecord(currBuf);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordSize;  i++)  {  buffer.writeRecord(currBuf);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordSize;  i++)  {  buffer.writeRecord(currBuf);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currSize;    i++)    {    buffer.writeRecord(currBuf);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
265	[BUG]  [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordSize;  i++)  {  buffer.writeRecord(currBuf);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordSize;  i++)  {  buffer.writeRecord(currBuf);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordSize;  i++)  {  buffer.writeRecord(currBuf);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currSize;    i++)    {    buffer.writeRecord(currBuf);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
266	[BUG]  [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  i++)  {  buffer.writeRecord(currBytes);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  i++)  {  buffer.writeRecord(currBytes);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  i++)  {  buffer.writeRecord(currBytes);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    i++)    {    buffer.writeRecord(currBytes);    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
267	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  currName.length;  i++)  {  buffer.writeRecord(currBytes);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  currName.length;  i++)  {  buffer.writeRecord(currBytes);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  currName.length;  i++)  {  buffer.writeRecord(currBytes);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    i++)    {    buffer.writeRecord(currBytes);    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
268	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  records.length;  i++)  {  buffer.writeRecord(currBytes);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  records.length;  i++)  {  buffer.writeRecord(currBytes);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  records.length;  i++)  {  buffer.writeRecord(currBytes);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    i++)    {    buffer.writeRecord(currBytes);    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
269	[BUG]  [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currSize;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
270	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currSize;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
271	[BUG]  [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currSize;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
272	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  records.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  records.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  records.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currSize;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
273	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  currName.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  currName.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  currName.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currSize;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
274	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }	  if(currName!=    null    &&    currName.length()    >    0)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currBuf);    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
275	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  <  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  <  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  <  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }	  if(currName!=    null    &&    currName.length()    >    0)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currBuf);    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
276	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  }	  if(currName!=    null    &&    currName.length()    >    0)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currBuf);    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
277	[BUG]  [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  records.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  records.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  for(int  i  =  0;  i  <  records.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    records.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
278	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  records.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  records.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  records.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    records.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
279	[BUG]  [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  records.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  records.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  for(int  i  =  0;  i  <  records.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    records.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
280	[BUG]  [BUGGY]  if(currName  ==  null)  {  buffer.writeRecord(currName,  recordBuf);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  buffer.writeRecord(currName,  recordBuf);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  buffer.writeRecord(currName,  recordBuf);  currBytes  =  0;  }	  if(currName!=    null)    {    buffer.writeRecord(currName,    currBytes);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
281	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  buffer.writeRecord(currName,  currBytes);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  buffer.writeRecord(currName,  currBytes);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  ==  0)  {  buffer.writeRecord(currName,  currBytes);  currBytes  =  0;  }	  if(currName!=    null)    {    buffer.writeRecord(currName,    currBytes);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
282	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName,  recordBytes);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName,  recordBytes);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(currName,  recordBytes);  currBytes  =  0;  }	  if(currName!=    null)    {    buffer.writeRecord(currName,    currBytes);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
283	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  else  {  buffer.writeRecord(currName);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  else  {  buffer.writeRecord(currName);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  else  {  buffer.writeRecord(currName);	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
284	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  ==  0)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  ==  0)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  ==  0)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    buffer.writeRecord(currBuf);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
285	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()  ==  0)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null  ||  currName.length()  ==  0)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null  ||  currName.length()  ==  0)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    buffer.writeRecord(currBuf);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
286	[BUG]  [BUGGY]  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
287	[BUG]  [BUGGY]  longLinkEntry!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
288	[BUG]  [BUGGY]  final  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  final  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	final  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
289	[BUG]  [BUGGY]  longLinkEntry!=  null  &&  currBytes.size()  >  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null  &&  currBytes.size()  >  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null  &&  currBytes.size()  >  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
290	[BUG]  [BUGGY]  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordBytes.size();  ++i)  {  buffer.writeRecord(currName);  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
291	[BUG]  [BUGGY]  longLinkEntry  ==  null)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry  ==  null)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry  ==  null)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
292	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
293	[BUG]  [BUGGY]  buffer.writeRecord(currName,  recordBuf,  currSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeRecord(currName,  recordBuf,  currSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeRecord(currName,  recordBuf,  currSize);	  buffer.writeRecord(currName,    recordBuf);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
294	[BUG]  [BUGGY]  buffer.writeRecord(currName,  recordBuf,  assemLen);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeRecord(currName,  recordBuf,  assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeRecord(currName,  recordBuf,  assemLen);	  buffer.writeRecord(currName,    recordBuf);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
295	[BUG]  [BUGGY]  buffer.writeRecord(currName,  assemBuf);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeRecord(currName,  assemBuf);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeRecord(currName,  assemBuf);	  buffer.writeRecord(currName,    recordBuf);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
296	[BUG]  [BUGGY]  if(currName  ==  null)  {  buffer.writeRecord(currName);  }  else  {  currName  =  entry.getName();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  buffer.writeRecord(currName);  }  else  {  currName  =  entry.getName();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  buffer.writeRecord(currName);  }  else  {  currName  =  entry.getName();  }	  if(currName!=    null)    {    buffer.writeRecord(currName);    }    else    {    currName    =    entry.getName();    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
297	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  buffer.writeRecord(currName);  }  else  {  currName  =  entry.getName();  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  buffer.writeRecord(currName);  }  else  {  currName  =  entry.getName();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  ==  0)  {  buffer.writeRecord(currName);  }  else  {  currName  =  entry.getName();  }	  if(currName!=    null)    {    buffer.writeRecord(currName);    }    else    {    currName    =    entry.getName();    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
298	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  <  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  <  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  <  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }	  if(currName!=    null    ||    currName.length()    <    0)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
299	[BUG]  [BUGGY]  ||  currName!=  null)  {  buffer.writeRecord(currName);  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  ||  currName!=  null)  {  buffer.writeRecord(currName);  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	||  currName!=  null)  {  buffer.writeRecord(currName);  }  else  {  buffer.writeRecord(currName);  }	  if(currName    ==    null)    {    buffer.writeRecord(currName);    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
300	[BUG]  [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currSize);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currSize);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currSize);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    ++i)    {    buffer.writeRecord(currSize);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
301	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currSize);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currSize);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currSize);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    ++i)    {    buffer.writeRecord(currSize);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
302	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currSize);  }  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currSize);  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currSize);  }  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    ++i)    {    buffer.writeRecord(currSize);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
303	[BUG]  [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currSize);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currSize);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currSize);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    ++i)    {    buffer.writeRecord(currSize);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
304	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  ++i)  {  buffer.writeRecord(currSize);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  ++i)  {  buffer.writeRecord(currSize);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  ++i)  {  buffer.writeRecord(currSize);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    ++i)    {    buffer.writeRecord(currSize);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
305	[BUG]  [BUGGY]  buffer.writeBytes(currName,  currSize);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeBytes(currName,  currSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeBytes(currName,  currSize);	  buffer.writeBytes(currName);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
306	[BUG]  [BUGGY]  buffer.writeBytes(currName,  recordBuf);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeBytes(currName,  recordBuf);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeBytes(currName,  recordBuf);	  buffer.writeBytes(currName);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
307	[BUG]  [BUGGY]  buffer.writeBytes(currSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeBytes(currSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeBytes(currSize);	  buffer.writeBytes(currName);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
308	[BUG]  [BUGGY]  buffer.writeBytes(currName,  0,  currSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeBytes(currName,  0,  currSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeBytes(currName,  0,  currSize);	  buffer.writeBytes(currName);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
309	[BUG]  [BUGGY]  buffer.writeBytes(currName,  recordSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeBytes(currName,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeBytes(currName,  recordSize);	  buffer.writeBytes(currName);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
310	[BUG]  [BUGGY]  buffer.write(currName);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.write(currName);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.write(currName);	  buffer.writeBytes(currName);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
311	[BUG]  [BUGGY]  if(currName!=  null  ||  recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  if(currName!=    null    &&    recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
312	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  if(currName!=    null    &&    recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
313	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  if(currName!=    null    &&    recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
314	[BUG]  [BUGGY]  if(currName!=  null  ||  recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }	  if(currName!=    null    &&    recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
315	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  >=  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  >=  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  >=  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }	  if(currName    ==    null    ||    currName.length()    <    0)    {    buffer.writeRecord(currBytes);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	116	None	replace
316	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordName);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(recordName);  }	  buffer.writeRecord(recordName);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
317	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordName);  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordName);  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(recordName);  }  else  {  buffer.writeRecord(currName);  }	  buffer.writeRecord(recordName);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
318	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordName);  }  else  {  currName  =  entry.getName();  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordName);  }  else  {  currName  =  entry.getName();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(recordName);  }  else  {  currName  =  entry.getName();  }	  buffer.writeRecord(recordName);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
319	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordName);  }  else  {  currName  +=  currName;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordName);  }  else  {  currName  +=  currName;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(recordName);  }  else  {  currName  +=  currName;  }	  buffer.writeRecord(recordName);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
320	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordName);  }  else  {  buffer.writeRecord(currName,  currSize);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordName);  }  else  {  buffer.writeRecord(currName,  currSize);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(recordName);  }  else  {  buffer.writeRecord(currName,  currSize);  }	  buffer.writeRecord(recordName);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
321	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    recordBuf.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
322	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  currName.size();  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  currName.size();  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  currName.size();  ++i)  {  buffer.writeRecord(currName);  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    recordBuf.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
323	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordsBuf.size();  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordsBuf.size();  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordsBuf.size();  ++i)  {  buffer.writeRecord(currName);  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    recordBuf.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
324	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length();  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length();  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length();  ++i)  {  buffer.writeRecord(currName);  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    recordBuf.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
325	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()  ==  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null  ||  currName.length()  ==  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null  ||  currName.length()  ==  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    buffer.writeRecord(recordBuf);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
326	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  <  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  <  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  <  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    buffer.writeRecord(recordBuf);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
327	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  >=  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  >=  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  >=  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    buffer.writeRecord(recordBuf);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
328	[BUG]  [BUGGY]  if(currName!=  null)  {  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }	  if(recordBuf!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
329	[BUG]  [BUGGY]  if(currName!=  null)  {  int  recordBuf  =  recordBuf.length;  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  int  recordBuf  =  recordBuf.length;  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  int  recordBuf  =  recordBuf.length;  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  if(recordBuf!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
330	[BUG]  [BUGGY]  if(currName!=  null)  {  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  if(recordBuf!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
331	[BUG]  [BUGGY]  if(currName!=  null)  {  int  recordBufLength  =  recordBuf.length;  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  int  recordBufLength  =  recordBuf.length;  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  int  recordBufLength  =  recordBuf.length;  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  if(recordBuf!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
332	[BUG]  [BUGGY]  if(currName!=  null)  {  int  recordBufSize  =  recordBuf.length;  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  int  recordBufSize  =  recordBuf.length;  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  int  recordBufSize  =  recordBuf.length;  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  if(recordBuf!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
333	[BUG]  [BUGGY]  if(currName!=  null)  {  longLinkEntry!=  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  longLinkEntry!=  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  longLinkEntry!=  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }	  longLinkEntry!=    null)    {    buffer.writeRecord(recordBuf);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
334	[BUG]  [BUGGY]  longLinkEntry!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }	  longLinkEntry!=    null)    {    buffer.writeRecord(recordBuf);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
335	[BUG]  [BUGGY]  final  longLinkEntry!=  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  final  longLinkEntry!=  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	final  longLinkEntry!=  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }	  longLinkEntry!=    null)    {    buffer.writeRecord(recordBuf);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
336	[BUG]  [BUGGY]  longLinkEntry!=  null  &&  currName.endsWith( "ArchiveEntry.length "))  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null  &&  currName.endsWith( "ArchiveEntry.length "))  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null  &&  currName.endsWith( "ArchiveEntry.length "))  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }	  longLinkEntry!=    null)    {    buffer.writeRecord(recordBuf);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
337	[BUG]  [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  currBuf.length;  i++)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  currBuf.length;  i++)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  for(int  i  =  0;  i  <  currBuf.length;  i++)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currBuf.length;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
338	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  ==  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  ==  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  ==  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    buffer.writeRecord(currBytes);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
339	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()  ==  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null  ||  currName.length()  ==  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null  ||  currName.length()  ==  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    buffer.writeRecord(currBytes);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	33	None	replace
340	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  ==  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  ==  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  ==  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    buffer.writeRecord(recordBuf);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	115	None	replace
341	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()  ==  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null  ||  currName.length()  ==  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null  ||  currName.length()  ==  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    buffer.writeRecord(recordBuf);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	115	None	replace
342	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  <  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  <  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  <  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    buffer.writeRecord(recordBuf);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	115	None	replace
343	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  >=  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  >=  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  >=  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    buffer.writeRecord(recordBuf);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	115	None	replace
344	[BUG]  [BUGGY]  while(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currName);  currBytes  =  0;	  while(currName!=    null)    {    buffer.writeRecord(currName);    currBytes    =    0;    	non-compiled	[CE]  <identifier>  expected	92	None	replace
345	[BUG]  [BUGGY]  if(currName!=  null)  {  while(currName!=  null)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  while(currName!=  null)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  while(currName!=  null)  {  buffer.writeRecord(currName);  currBytes  =  0;  }	  while(currName!=    null)    {    buffer.writeRecord(currName);    currBytes    =    0;    	non-compiled	[CE]  <identifier>  expected	92	None	replace
346	[BUG]  [BUGGY]  while(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;	  while(currName!=    null)    {    buffer.writeRecord(currBytes);    currBytes    =    0;    	non-compiled	[CE]  <identifier>  expected	118	None	replace
347	[BUG]  [BUGGY]  if(currName!=  null)  {  while(currName!=  null)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  while(currName!=  null)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  while(currName!=  null)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }	  while(currName!=    null)    {    buffer.writeRecord(currBytes);    currBytes    =    0;    	non-compiled	[CE]  <identifier>  expected	118	None	replace
348	[BUG]  [BUGGY]  while(currName!=  null  &&  currName.equals( "Archive "))  {  buffer.writeRecord(currBytes);  currBytes  =  0;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null  &&  currName.equals( "Archive "))  {  buffer.writeRecord(currBytes);  currBytes  =  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null  &&  currName.equals( "Archive "))  {  buffer.writeRecord(currBytes);  currBytes  =  0;	  while(currName!=    null)    {    buffer.writeRecord(currBytes);    currBytes    =    0;    	non-compiled	[CE]  <identifier>  expected	118	None	replace
349	[BUG]  [BUGGY]  while(currName!=  null)  {  currName.writeRecord(currBytes);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null)  {  currName.writeRecord(currBytes);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null)  {  currName.writeRecord(currBytes);  currBytes  =  0;  }	  while(currName!=    null)    {    buffer.writeRecord(currBytes);    currBytes    =    0;    	non-compiled	[CE]  <identifier>  expected	118	None	replace
350	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  >  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  >  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  >  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	114	None	replace
351	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	114	None	replace
352	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  currSize.size();  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  currSize.size();  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  currSize.size();  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
353	[BUG]  [BUGGY]  longLinkEntry  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
354	[BUG]  [BUGGY]  longLinkEntry!=  null)  {  for(long  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null)  {  for(long  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null)  {  for(long  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
355	[BUG]  [BUGGY]  longLinkEntry!=  null  &&  archiveEntry.isDirectory())  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null  &&  archiveEntry.isDirectory())  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null  &&  archiveEntry.isDirectory())  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
356	[BUG]  [BUGGY]  longLinkEntry!=  null  &&  recordBuf  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null  &&  recordBuf  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null  &&  recordBuf  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
357	[BUG]  [BUGGY]  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  records.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  records.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  records.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    records.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
358	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.getLength();  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.getLength();  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.getLength();  ++i)  {  buffer.writeRecord(currName);  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    recordBuf.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
359	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(urlName);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(urlName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(urlName);  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    recordBuf.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
360	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(recordName);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(recordName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(recordName);  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    recordBuf.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
361	[BUG]  [BUGGY]  buffer.writeRecord(currName,  recordBuf  +  currSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeRecord(currName,  recordBuf  +  currSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeRecord(currName,  recordBuf  +  currSize);	  buffer.writeRecord(currName,    recordBuf);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
362	[BUG]  [BUGGY]  buffer.copyCurrentStructure(currName);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.copyCurrentStructure(currName);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.copyCurrentStructure(currName);	  buffer.writeRecord(recordName);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
363	[BUG]  [BUGGY]  buffer.copyRecord(currName);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.copyRecord(currName);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.copyRecord(currName);	  buffer.writeRecord(recordName);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
364	[BUG]  [BUGGY]  buffer.writeInt(currName);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeInt(currName);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeInt(currName);	  buffer.writeRecord(recordName);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
365	[BUG]  [BUGGY]  buffer.writeRecord(currName,  0);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeRecord(currName,  0);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeRecord(currName,  0);	  buffer.writeRecord(currName,    currSize);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
366	[BUG]  [BUGGY]  buffer.writeRecord(currName,  recordSize);  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeRecord(currName,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeRecord(currName,  recordSize);	  buffer.writeRecord(currName,    currSize);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
367	[BUG]  [BUGGY]  buffer.writeRecord(currName,  recordBytes);  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeRecord(currName,  recordBytes);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeRecord(currName,  recordBytes);	  buffer.writeRecord(currName,    currSize);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
368	[BUG]  [BUGGY]  buffer.writeRecord(currName,  0,  currSize);  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeRecord(currName,  0,  currSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeRecord(currName,  0,  currSize);	  buffer.writeRecord(currName,    currSize);    	non-compiled	[CE]  <identifier>  expected	37	None	replace
369	[BUG]  [BUGGY]  longLinkEntry  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
370	[BUG]  [BUGGY]  archiveEntry!=  null)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  archiveEntry!=  null)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	archiveEntry!=  null)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
371	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName,  recordBuf);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName,  recordBuf);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(currName,  recordBuf);  }	  if(currName!=    null)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
372	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(urlName);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(urlName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(urlName);  }	  if(currName!=    null)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
373	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()!=  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null  ||  currName.length()!=  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null  ||  currName.length()!=  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    buffer.writeRecord(recordBuf);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	2	None	replace
374	[BUG]  [BUGGY]  while(currName!=  null  &&  recordBuf!=  null)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null  &&  recordBuf!=  null)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null  &&  recordBuf!=  null)  {  buffer.writeRecord(currName);  currBytes  =  0;  }	  while(currName!=    null)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
375	[BUG]  [BUGGY]  while(currName  ==  null)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName  ==  null)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName  ==  null)  {  buffer.writeRecord(currName);  currBytes  =  0;  }	  while(currName!=    null)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
376	[BUG]  [BUGGY]  while(currName!=  null  &&  currName.endsWith( ".js "))  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null  &&  currName.endsWith( ".js "))  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null  &&  currName.endsWith( ".js "))  {  buffer.writeRecord(currName);  currBytes  =  0;  }	  while(currName!=    null)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
377	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
378	[BUG]  [BUGGY]  longLinkEntry  ==  null  ||  currName!=  null)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry  ==  null  ||  currName!=  null)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry  ==  null  ||  currName!=  null)  {  buffer.writeRecord(currName);  currBytes  =  0;  }	  longLinkEntry    ==    null)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
379	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  >=  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  >=  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  >=  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currBuf);    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
380	[BUG]  [BUGGY]  longLinkEntry!=  null  &&  recordBuf.length  >  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null  &&  recordBuf.length  >  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null  &&  recordBuf.length  >  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  longLinkEntry!=    null)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
381	[BUG]  [BUGGY]  archiveEntry!=  null)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  archiveEntry!=  null)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	archiveEntry!=  null)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  longLinkEntry!=    null)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
382	[BUG]  [BUGGY]  longLinkEntry  ==  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry  ==  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry  ==  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  longLinkEntry!=    null)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
383	[BUG]  [BUGGY]  if(currName  ==  null)  {  buffer.writeRecord(recordBuf,  currBytes);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  buffer.writeRecord(recordBuf,  currBytes);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  buffer.writeRecord(recordBuf,  currBytes);  currBytes  =  0;  }	  if(currName!=    null)    {    buffer.writeRecord(recordBuf,    currBytes);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
384	[BUG]  [BUGGY]  if(currName  ==  null)  {  buffer.writeRecord(currName,  currBytes);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  buffer.writeRecord(currName,  currBytes);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  buffer.writeRecord(currName,  currBytes);  currBytes  =  0;  }	  if(currName!=    null)    {    buffer.writeRecord(currName,    currBytes);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
385	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  RecordBuffer.length;  i++)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  RecordBuffer.length;  i++)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  RecordBuffer.length;  i++)  {  buffer.writeRecord(currName);  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
386	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  i++)  {  buffer.copyRecord(currName);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  i++)  {  buffer.copyRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  i++)  {  buffer.copyRecord(currName);  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
387	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  i++)  {  buffer.writeRecord(urlName);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  i++)  {  buffer.writeRecord(urlName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  i++)  {  buffer.writeRecord(urlName);  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	44	None	replace
388	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.copyRecord(currName);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.copyRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.copyRecord(currName);  }	  if(currName!=    null    &&    currName.length()    >    0)    {    for(int    i    =    0;    i    <    currBytes.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
389	[BUG]  [BUGGY]  buffer.writeRecord(REcordBuf);  currBytes  =  0;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeRecord(REcordBuf);  currBytes  =  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeRecord(REcordBuf);  currBytes  =  0;	  buffer.writeRecord(currName);    currBytes    =    0;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
390	[BUG]  [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]  +  currName);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]  +  currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]  +  currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
391	[BUG]  [BUGGY]  if(closed)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(closed)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(closed)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(currName);    currBytes    =    currSize;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
392	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(nameBytes);  currBytes  =  currSize;  }  else  {  buffer.writeRecord(nameBytes);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(nameBytes);  currBytes  =  currSize;  }  else  {  buffer.writeRecord(nameBytes);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(nameBytes);  currBytes  =  currSize;  }  else  {  buffer.writeRecord(nameBytes);  }	  if(currName!=    null)    {    buffer.writeRecord(currName);    currBytes    =    currSize;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
393	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  return  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  return  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  return  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(currName);    currBytes    =    currSize;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
394	[BUG]  [BUGGY]  archiveEntry!=  null)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  archiveEntry!=  null)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	archiveEntry!=  null)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
395	[BUG]  [BUGGY]  longLinkEntry!=  null)  {  for(long  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null)  {  for(long  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null)  {  for(long  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
396	[BUG]  [BUGGY]  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  ++i)  {  buffer.writeRecord(currName);  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
397	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(urlName);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(urlName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(urlName);  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
398	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.copyRecord(currName);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.copyRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.copyRecord(currName);  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
399	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  RecordBuffer.length;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  RecordBuffer.length;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  RecordBuffer.length;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
400	[BUG]  [BUGGY]  if(closed)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(closed)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(closed)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
401	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  RecordBuffer.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  RecordBuffer.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  RecordBuffer.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
402	[BUG]  [BUGGY]  if(closed)  {  buffer.writeRecord(recordName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(closed)  {  buffer.writeRecord(recordName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(closed)  {  buffer.writeRecord(recordName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(recordName);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
403	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordName,  currBytes);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordName,  currBytes);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(recordName,  currBytes);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(recordName);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
404	[BUG]  [BUGGY]  buffer.writeRecord(currBytes);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeRecord(currBytes);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeRecord(currBytes);	  buffer.writeRecord(recordBytes);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
405	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()  >  0)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null  ||  currName.length()  >  0)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null  ||  currName.length()  >  0)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }	  if(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(currBuf);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	120	None	replace
406	[BUG]  [BUGGY]  buffer.writeRecord(recordName,  currBytes);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeRecord(recordName,  currBytes);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeRecord(recordName,  currBytes);	  buffer.writeRecord(currName,    currBytes);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
407	[BUG]  [BUGGY]  buffer.copyRecord(recordBuf,  currBytes);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.copyRecord(recordBuf,  currBytes);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.copyRecord(recordBuf,  currBytes);	  buffer.writeRecord(currName,    currBytes);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
408	[BUG]  [BUGGY]  buffer.writeRecord(urlName,  currBytes);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeRecord(urlName,  currBytes);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeRecord(urlName,  currBytes);	  buffer.writeRecord(currName,    currBytes);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
409	[BUG]  [BUGGY]  while(currName!=  null  &&  currName.length()  >=  0)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null  &&  currName.length()  >=  0)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null  &&  currName.length()  >=  0)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }	  while(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(currBuf);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
410	[BUG]  [BUGGY]  while(currName!=  null  &&  currName.length()  ==  0)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null  &&  currName.length()  ==  0)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null  &&  currName.length()  ==  0)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }	  while(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(currBuf);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
411	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  records.size();  ++i)  {  buffer.writeRecord(recordName);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  records.size();  ++i)  {  buffer.writeRecord(recordName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  records.size();  ++i)  {  buffer.writeRecord(recordName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    records.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
412	[BUG]  [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  i++)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  i++)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  i++)  {  buffer.writeRecord(recordBuf);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    i++)    {    buffer.writeRecord(currBuf);    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
413	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  records.length;  i++)  {  buffer.writeRecord(currBuf);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  records.length;  i++)  {  buffer.writeRecord(currBuf);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  records.length;  i++)  {  buffer.writeRecord(currBuf);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    i++)    {    buffer.writeRecord(currBuf);    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
414	[BUG]  [BUGGY]  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordSize;  i++)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordSize;  i++)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordSize;  i++)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordSize;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
415	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordLen;  i++)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordLen;  i++)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordLen;  i++)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordSize;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
416	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordSize;  i++)  {  buffer.writeRecord(recordName);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordSize;  i++)  {  buffer.writeRecord(recordName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordSize;  i++)  {  buffer.writeRecord(recordName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordSize;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
417	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  if(currName!=    null    &&    currName.length()    >    0)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
418	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  if(currName!=    null    &&    currName.length()    >    0)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
419	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currBuf);    }    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
420	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf,  currName);  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf,  currName);  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(recordBuf,  currName);  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(currName);    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
421	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  currBytes);  currBytes  =  0;  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeRecord(recordBuf,  currBytes);  currBytes  =  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeRecord(recordBuf,  currBytes);  currBytes  =  0;	  buffer.writeRecord(currBytes);    currBytes    =    0;    	non-compiled	[CE]  <identifier>  expected	65	None	replace
422	[BUG]  [BUGGY]  buffer.writeRecord(assemBuf);  currBytes  =  0;  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeRecord(assemBuf);  currBytes  =  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeRecord(assemBuf);  currBytes  =  0;	  buffer.writeRecord(currBytes);    currBytes    =    0;    	non-compiled	[CE]  <identifier>  expected	65	None	replace
423	[BUG]  [BUGGY]  if(currName!=  null  &&  recordBuf.length  <  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  recordBuf.length  <  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  recordBuf.length  <  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  if(currName!=    null    &&    recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
424	[BUG]  [BUGGY]  if(currName!=  null  &&  recordBuf.length  >=  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  recordBuf.length  >=  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  recordBuf.length  >=  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  if(currName!=    null    &&    recordBuf.length    >    0)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
425	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()!=  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null  ||  currName.length()!=  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null  ||  currName.length()!=  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
426	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  RecordBuffer.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  RecordBuffer.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  RecordBuffer.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
427	[BUG]  [BUGGY]  while(currName!=  null  &&  recordBuf!=  null)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null  &&  recordBuf!=  null)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null  &&  recordBuf!=  null)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }	  while(currName!=    null)    {    buffer.writeRecord(currBytes);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
428	[BUG]  [BUGGY]  while(currName  ==  null)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName  ==  null)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName  ==  null)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }	  while(currName!=    null)    {    buffer.writeRecord(currBytes);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
429	[BUG]  [BUGGY]  while(currName!=  null)  {  buffer.writeRecord(currName,  currBytes);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null)  {  buffer.writeRecord(currName,  currBytes);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null)  {  buffer.writeRecord(currName,  currBytes);  currBytes  =  0;  }	  while(currName!=    null)    {    buffer.writeRecord(currBytes);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
430	[BUG]  [BUGGY]  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordSize;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordSize;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordSize;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordSize;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
431	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordSize;  ++i)  {  buffer.writeRecord(urlName);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordSize;  ++i)  {  buffer.writeRecord(urlName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordSize;  ++i)  {  buffer.writeRecord(urlName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordSize;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
432	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordSize;  ++i)  {  buffer.writeRecord(recordName);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordSize;  ++i)  {  buffer.writeRecord(recordName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordSize;  ++i)  {  buffer.writeRecord(recordName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordSize;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
433	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordLen;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordLen;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordLen;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordSize;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
434	[BUG]  [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordName.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordName.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordName.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currName.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
435	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  currBuffer.length;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  currBuffer.length;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  currBuffer.length;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    currBytes.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
436	[BUG]  [BUGGY]  while(currName!=  null  &&  currName.length()  >=  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null  &&  currName.length()  >=  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null  &&  currName.length()  >=  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }	  while(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(currBytes);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
437	[BUG]  [BUGGY]  while(currName!=  null  &&  currName.length()  ==  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null  &&  currName.length()  ==  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null  &&  currName.length()  ==  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }	  while(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(currBytes);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
438	[BUG]  [BUGGY]  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
439	[BUG]  [BUGGY]  longLinkEntry  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry  ==  null)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
440	[BUG]  [BUGGY]  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordSize;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordSize;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordSize;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
441	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  currName,  assemLen);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeRecord(recordBuf,  currName,  assemLen);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeRecord(recordBuf,  currName,  assemLen);	  buffer.writeRecord(recordBuf,    currName);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
442	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  currName,  recordSize);  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeRecord(recordBuf,  currName,  recordSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeRecord(recordBuf,  currName,  recordSize);	  buffer.writeRecord(recordBuf,    currName);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
443	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  currName,  currBytes);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeRecord(recordBuf,  currName,  currBytes);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeRecord(recordBuf,  currName,  currBytes);	  buffer.writeRecord(recordBuf,    currName);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
444	[BUG]  [BUGGY]  buffer.writeRecord(currBytes,  recordBuf);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeRecord(currBytes,  recordBuf);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeRecord(currBytes,  recordBuf);	  buffer.writeRecord(recordBuf,    currName);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
445	[BUG]  [BUGGY]  while(currName!=  null  &&  currName.length()  >=  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null  &&  currName.length()  >=  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null  &&  currName.length()  >=  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }	  while(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
446	[BUG]  [BUGGY]  while(currName!=  null  &&  currName.length()  ==  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null  &&  currName.length()  ==  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null  &&  currName.length()  ==  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }	  while(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
447	[BUG]  [BUGGY]  while(currName!=  null  &&  currName.length()  <  =  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null  &&  currName.length()  <  =  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null  &&  currName.length()  <  =  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }	  while(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
448	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  currRecord.length;  i++)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  currRecord.length;  i++)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  currRecord.length;  i++)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currBuf.length;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
449	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  i++)  {  buffer.writeRecord(currName);  }  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  i++)  {  buffer.writeRecord(currName);  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  i++)  {  buffer.writeRecord(currName);  }  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currName);    }    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
450	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  i++)  {  buffer.writeRecord(currName);  }  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  i++)  {  buffer.writeRecord(currName);  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  i++)  {  buffer.writeRecord(currName);  }  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currName);    }    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
451	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()  >  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null  ||  currName.length()  >  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null  ||  currName.length()  >  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }	  if(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(recordBuf);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
452	[BUG]  [BUGGY]  if(currName!=  null  &&  recordBuf.length()  >  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  recordBuf.length()  >  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  recordBuf.length()  >  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }	  if(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(recordBuf);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
453	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName,  currSize);  }  else  {  currName  =  entry.getName();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName,  currSize);  }  else  {  currName  =  entry.getName();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(currName,  currSize);  }  else  {  currName  =  entry.getName();  }	  if(currName!=    null)    {    buffer.writeRecord(currName);    }    else    {    currName    =    entry.getName();    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
454	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName);  }  else  {  currName  =  Entry.getName();  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName);  }  else  {  currName  =  Entry.getName();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(currName);  }  else  {  currName  =  Entry.getName();  }	  if(currName!=    null)    {    buffer.writeRecord(currName);    }    else    {    currName    =    entry.getName();    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
455	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null  ||  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null  ||  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }	  if(currName!=    null    &&    currName.length()    >    0)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currBuf);    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
456	[BUG]  [BUGGY]  if(closed)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(closed)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(closed)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    recordBuf.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	52	None	replace
457	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  records.length;  ++i)  {  buffer.writeRecord(urlName);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  records.length;  ++i)  {  buffer.writeRecord(urlName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  records.length;  ++i)  {  buffer.writeRecord(urlName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    records.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
458	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  records.length;  ++i)  {  buffer.writeRecord(recordName);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  records.length;  ++i)  {  buffer.writeRecord(recordName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  records.length;  ++i)  {  buffer.writeRecord(recordName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    records.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
459	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordCount;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordCount;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordCount;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    records.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
460	[BUG]  [BUGGY]  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currSize);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currSize);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currSize);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currSize);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
461	[BUG]  [BUGGY]  archiveEntry!=  null)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  archiveEntry!=  null)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	archiveEntry!=  null)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
462	[BUG]  [BUGGY]  longLinkEntry!=  null)  {  for(long  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null)  {  for(long  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null)  {  for(long  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
463	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes;  i++)  {  buffer.writeRecord(currBuf);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes;  i++)  {  buffer.writeRecord(currBuf);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes;  i++)  {  buffer.writeRecord(currBuf);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currSize;    i++)    {    buffer.writeRecord(currBuf);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
464	[BUG]  [BUGGY]  buffer.writeFieldName(currName);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeFieldName(currName);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeFieldName(currName);	  buffer.writeRecord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
465	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  records.length;  ++i)  {  buffer.writeRecord(urlName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  records.length;  ++i)  {  buffer.writeRecord(urlName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  records.length;  ++i)  {  buffer.writeRecord(urlName);  currBytes  =  currBytes;  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    records.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
466	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  ++i)  {  buffer.writeRecord(urlName);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  ++i)  {  buffer.writeRecord(urlName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  ++i)  {  buffer.writeRecord(urlName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBytes.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
467	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  ++i)  {  buffer.writeRecord(recordName);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  ++i)  {  buffer.writeRecord(recordName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  ++i)  {  buffer.writeRecord(recordName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBytes.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
468	[BUG]  [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  i++)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  i++)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  i++)  {  buffer.writeRecord(recordBuf);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBytes.length;    i++)    {    buffer.writeRecord(currBuf);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
469	[BUG]  [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  records.length;  i++)  {  buffer.writeRecord(currBuf);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  records.length;  i++)  {  buffer.writeRecord(currBuf);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  for(int  i  =  0;  i  <  records.length;  i++)  {  buffer.writeRecord(currBuf);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBytes.length;    i++)    {    buffer.writeRecord(currBuf);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
470	[BUG]  [BUGGY]  if(currName  ==  null)  {  buffer.writeRecord(recordName);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  buffer.writeRecord(recordName);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  buffer.writeRecord(recordName);  currBytes  =  0;  }	  if(currName!=    null)    {    buffer.writeRecord(recordName);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
471	[BUG]  [BUGGY]  longLinkEntry!=  null)  {  buffer.writeRecord(recordName);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null)  {  buffer.writeRecord(recordName);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null)  {  buffer.writeRecord(recordName);  currBytes  =  0;  }	  if(currName!=    null)    {    buffer.writeRecord(recordName);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
472	[BUG]  [BUGGY]  buffer.writeBytes(currName  +  currSize);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeBytes(currName  +  currSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeBytes(currName  +  currSize);	  buffer.writeBytes(currName);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
473	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()!=  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null  ||  currName.length()!=  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null  ||  currName.length()!=  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    buffer.writeRecord(recordBuf);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	115	None	replace
474	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
475	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.size();  ++i)  {  buffer.writeRecord(urlName);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.size();  ++i)  {  buffer.writeRecord(urlName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.size();  ++i)  {  buffer.writeRecord(urlName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBytes.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
476	[BUG]  [BUGGY]  while(currName!=  null  &&  recordBuf!=  null)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null  &&  recordBuf!=  null)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null  &&  recordBuf!=  null)  {  buffer.writeRecord(currBytes);  currBytes  =  0;	  while(currName!=    null)    {    buffer.writeRecord(currBytes);    currBytes    =    0;    	non-compiled	[CE]  <identifier>  expected	118	None	replace
477	[BUG]  [BUGGY]  while(currName!=  null  &&  recordBuf.length  >  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null  &&  recordBuf.length  >  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null  &&  recordBuf.length  >  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;	  while(currName!=    null)    {    buffer.writeRecord(currBytes);    currBytes    =    0;    	non-compiled	[CE]  <identifier>  expected	118	None	replace
478	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()!=  0)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null  ||  currName.length()!=  0)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null  ||  currName.length()!=  0)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    for(int    i    =    0;    i    <    currBytes.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	106	None	replace
479	[BUG]  [BUGGY]  longLinkEntry  ==  null)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry  ==  null)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry  ==  null)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  else  {  buffer.writeRecord(currName);  }	  if(currName    ==    null)    {    buffer.writeRecord(currName);    currBytes    =    currSize;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
480	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf,  currName);  currBytes  =  currSize;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf,  currName);  currBytes  =  currSize;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(recordBuf,  currName);  currBytes  =  currSize;  }  else  {  buffer.writeRecord(currName);  }	  if(currName    ==    null)    {    buffer.writeRecord(currName);    currBytes    =    currSize;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	58	None	replace
481	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  i++)  {  buffer.writeRecord(urlName);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  i++)  {  buffer.writeRecord(urlName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  i++)  {  buffer.writeRecord(urlName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBytes.length;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
482	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null    &&    currName.length()    >    0)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	113	None	replace
483	[BUG]  [BUGGY]  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordBytes;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordBytes;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordBytes;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBytes;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
484	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes;  ++i)  {  buffer.writeRecord(urlName);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes;  ++i)  {  buffer.writeRecord(urlName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes;  ++i)  {  buffer.writeRecord(urlName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBytes;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
485	[BUG]  [BUGGY]  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currSize;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
486	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  fileSize;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  fileSize;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  fileSize;  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currSize;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
487	[BUG]  [BUGGY]  while(currName!=  null  &&  recordBuf.length()  >  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null  &&  recordBuf.length()  >  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null  &&  recordBuf.length()  >  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }	  while(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(recordBuf);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
488	[BUG]  [BUGGY]  while(currName!=  null  &&  currName.length()  >=  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null  &&  currName.length()  >=  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null  &&  currName.length()  >=  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }	  while(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(recordBuf);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
489	[BUG]  [BUGGY]  while(currName!=  null  &&  currName.length()  ==  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null  &&  currName.length()  ==  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null  &&  currName.length()  ==  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }	  while(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(recordBuf);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
490	[BUG]  [BUGGY]  if(closed)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(closed)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(closed)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
491	[BUG]  [BUGGY]  longLinkEntry!=  null)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
492	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  return  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  return  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  return  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
493	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()!=  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null  ||  currName.length()!=  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null  ||  currName.length()!=  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
494	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf,  currSize);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf,  currSize);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(recordBuf,  currSize);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(currName,    currSize);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
495	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName,  recordSize);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName,  recordSize);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(currName,  recordSize);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(currName,    currSize);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
496	[BUG]  [BUGGY]  if(closed)  {  buffer.writeRecord(currName,  recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(closed)  {  buffer.writeRecord(currName,  recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(closed)  {  buffer.writeRecord(currName,  recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(currName,    currSize);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
497	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf  +  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf  +  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf  +  ++i)  {  buffer.writeRecord(currName);  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    recordBuf;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
498	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordsBuf;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordsBuf;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordsBuf;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    recordBuf;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
499	[BUG]  [BUGGY]  if(closed)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(closed)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(closed)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  if(currName    ==    null)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
500	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordFiles.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordFiles.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordFiles.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
501	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordSize.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordSize.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordSize.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	54	None	replace
502	[BUG]  [BUGGY]  archiveEntry!=  null)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  archiveEntry!=  null)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	archiveEntry!=  null)  {  buffer.writeRecord(currName);  currBytes  =  0;  }	  longLinkEntry!=    null)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
503	[BUG]  [BUGGY]  longLinkEntry!=  null)  {  buffer.writeRecord(urlName);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null)  {  buffer.writeRecord(urlName);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null)  {  buffer.writeRecord(urlName);  currBytes  =  0;  }	  longLinkEntry!=    null)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
504	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >=  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  >=  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  >=  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }	  if(currName!=    null    &&    currName.length()    >    0)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
505	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()  ==  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null  ||  currName.length()  ==  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null  ||  currName.length()  ==  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
506	[BUG]  [BUGGY]  if(currName!=  null)  {  currName  =  new  StringBuffer();  for(int  i  =  0;  i  <  recordSize;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  currName  =  new  StringBuffer();  for(int  i  =  0;  i  <  recordSize;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  currName  =  new  StringBuffer();  for(int  i  =  0;  i  <  recordSize;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordSize;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
507	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordMillis;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordMillis;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordMillis;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordSize;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
508	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName);  currBytes  =  fileMode;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName);  currBytes  =  fileMode;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(currName);  currBytes  =  fileMode;  }	  if(currName!=    null)    {    buffer.writeRecord(currName);    currBytes    =    currSize;    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
509	[BUG]  [BUGGY]  longLinkEntry!=  null)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }	  if(currName!=    null)    {    buffer.writeRecord(currName);    currBytes    =    currSize;    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
510	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName);  currBytes  =  recordSize;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName);  currBytes  =  recordSize;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(currName);  currBytes  =  recordSize;  }	  if(currName!=    null)    {    buffer.writeRecord(currName);    currBytes    =    currSize;    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
511	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordFiles.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordFiles.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordFiles.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    }    	non-compiled	[CE]  <identifier>  expected	89	None	replace
512	[BUG]  [BUGGY]  while(currName!=  null  &&  recordBuf.length  >  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null  &&  recordBuf.length  >  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null  &&  recordBuf.length  >  0)  {  buffer.writeRecord(currName);  currBytes  =  0;	  while(currName!=    null)    {    buffer.writeRecord(currName);    currBytes    =    0;    	non-compiled	[CE]  <identifier>  expected	92	None	replace
513	[BUG]  [BUGGY]  if(closed)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(closed)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(closed)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(recordBuf);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
514	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBytes);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBytes);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(recordBytes);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(recordBuf);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
515	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes;  ++i)  {  buffer.copyRecord(currName);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes;  ++i)  {  buffer.copyRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes;  ++i)  {  buffer.copyRecord(currName);  }	  if(currName!=    null    &&    currName.length()    >    0)    {    for(int    i    =    0;    i    <    currBytes;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
516	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()!=  0)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null  ||  currName.length()!=  0)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null  ||  currName.length()!=  0)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    buffer.writeRecord(currBuf);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	32	None	replace
517	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf);  currBytes  =  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeRecord(recordBuf);  currBytes  =  1;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeRecord(recordBuf);  currBytes  =  1;	  buffer.writeRecord(currBuf);    currBytes    =    0;    	non-compiled	[CE]  <identifier>  expected	82	None	replace
518	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }	  buffer.writeRecord(recordBuf);    currBytes    =    0;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
519	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf;  i++)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf;  i++)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf;  i++)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currSize;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
520	[BUG]  [BUGGY]  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  currSize;  i++)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  currSize;  i++)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null)  {  for(int  i  =  0;  i  <  currSize;  i++)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currSize;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
521	[BUG]  [BUGGY]  longLinkEntry!=  null  &&  currName!=  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null  &&  currName!=  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null  &&  currName!=  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }	  longLinkEntry!=    null)    {    buffer.writeRecord(recordBuf);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
522	[BUG]  [BUGGY]  if(currName  ==  null)  {  buffer.writeRecord(currName,  currBytes);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  buffer.writeRecord(currName,  currBytes);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  buffer.writeRecord(currName,  currBytes);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(currName,    currBytes);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
523	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  <  =  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  <  =  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  <  =  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }	  if(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(currBytes);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
524	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  }	  if(currName!=    null    &&    currName.length()    >    0)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
525	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }	  if(currName!=    null    &&    currName.length()    >    0)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	101	None	replace
526	[BUG]  [BUGGY]  if(currName  ==  null  ||  recordBuf.length()  ==  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null  ||  recordBuf.length()  ==  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null  ||  recordBuf.length()  ==  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    buffer.writeRecord(recordBuf);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	115	None	replace
527	[BUG]  [BUGGY]  while(currName!=  null  &&  currName.length()  <  4)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null  &&  currName.length()  <  4)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null  &&  currName.length()  <  4)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }	  while(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(currBytes);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
528	[BUG]  [BUGGY]  while(currName!=  null  &&  currName.length()  <  =  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null  &&  currName.length()  <  =  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null  &&  currName.length()  <  =  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }	  while(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(currBytes);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
529	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  curr  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  curr  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  curr	  if(currName!=    null    &&    currName.length()    >    0)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
530	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes	  if(currName!=    null    &&    currName.length()    >    0)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	88	None	replace
531	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currName,  currBytes);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currName,  currBytes);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currName,  currBytes);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(currName,    currBytes);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
532	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()  <  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null  ||  currName.length()  <  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null  ||  currName.length()  <  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }	  if(currName!=    null    &&    currName.length()    >    0)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currBuf);    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
533	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  <  =  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  <  =  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  <  =  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }	  if(currName!=    null    ||    currName.length()    <    0)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
534	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currSize);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currSize);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currSize);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currSize);    }    	non-compiled	[CE]  <identifier>  expected	43	None	replace
535	[BUG]  [BUGGY]  longLinkEntry!=  null  &&  currName!=  null)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null  &&  currName!=  null)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null  &&  currName!=  null)  {  buffer.writeRecord(currName);  currBytes  =  0;  }	  longLinkEntry!=    null)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
536	[BUG]  [BUGGY]  longLinkEntry!=  null  &&  currName.endsWith( ".js "))  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null  &&  currName.endsWith( ".js "))  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null  &&  currName.endsWith( ".js "))  {  buffer.writeRecord(currName);  currBytes  =  0;  }	  longLinkEntry!=    null)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
537	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
538	[BUG]  [BUGGY]  if(currName!=  null  &&  recordBuf.isEmpty())  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  recordBuf.isEmpty())  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  recordBuf.isEmpty())  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	50	None	replace
539	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currName);    }    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
540	[BUG]  [BUGGY]  if(recordBytes!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  i++)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(recordBytes!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  i++)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(recordBytes!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  i++)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBytes.length;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
541	[BUG]  [BUGGY]  if(recordBytes!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  i++)  {  buffer.writeRecord(currName);  }  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(recordBytes!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  i++)  {  buffer.writeRecord(currName);  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(recordBytes!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  i++)  {  buffer.writeRecord(currName);  }  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBytes.length;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
542	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.size;  i++)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.size;  i++)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.size;  i++)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBytes.length;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	42	None	replace
543	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currSize;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
544	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currSize;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
545	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currSize;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
546	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  records.size();  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  records.size();  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  records.size();  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    records.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
547	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
548	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf);  currBytes  =  currBytes;  }  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf);  currBytes  =  currBytes;  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf);  currBytes  =  currBytes;  }  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
549	[BUG]  [BUGGY]  longLinkEntry!=  null  &&  currBytes.length  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null  &&  currBytes.length  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null  &&  currBytes.length  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
550	[BUG]  [BUGGY]  longLinkEntry!=  null  &&  currName!=  null)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null  &&  currName!=  null)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null  &&  currName!=  null)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	85	None	replace
551	[BUG]  [BUGGY]  while(currName!=  null  &&  currName.endsWith( ".js "))  {  buffer.writeRecord(currBytes);  currBytes  =  0;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null  &&  currName.endsWith( ".js "))  {  buffer.writeRecord(currBytes);  currBytes  =  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null  &&  currName.endsWith( ".js "))  {  buffer.writeRecord(currBytes);  currBytes  =  0;	  while(currName!=    null)    {    buffer.writeRecord(currBytes);    currBytes    =    0;    	non-compiled	[CE]  <identifier>  expected	118	None	replace
552	[BUG]  [BUGGY]  while(currName  ==  null)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName  ==  null)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName  ==  null)  {  buffer.writeRecord(currBytes);  currBytes  =  0;	  while(currName!=    null)    {    buffer.writeRecord(currBytes);    currBytes    =    0;    	non-compiled	[CE]  <identifier>  expected	118	None	replace
553	[BUG]  [BUGGY]  while(currName!=  null  &&  currName.endsWith( "Archive "))  {  buffer.writeRecord(currBytes);  currBytes  =  0;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null  &&  currName.endsWith( "Archive "))  {  buffer.writeRecord(currBytes);  currBytes  =  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null  &&  currName.endsWith( "Archive "))  {  buffer.writeRecord(currBytes);  currBytes  =  0;	  while(currName!=    null)    {    buffer.writeRecord(currBytes);    currBytes    =    0;    	non-compiled	[CE]  <identifier>  expected	118	None	replace
554	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  records.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  records.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  records.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    records.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
555	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  records.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  records.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  records.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    records.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	8	None	replace
556	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  currBytes;  ++i)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  currBytes;  ++i)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  currBytes;  ++i)  {  buffer.writeRecord(recordBuf);  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    currBytes;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
557	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  else  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  else  {  buffer.writeRecord(recordBuf);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  else  {  buffer.writeRecord(recordBuf);  }	  buffer.writeRecord(currName);    currBytes    =    0;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
558	[BUG]  [BUGGY]  buffer.writeRecord(recordBytes);  currBytes  =  0;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeRecord(recordBytes);  currBytes  =  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeRecord(recordBytes);  currBytes  =  0;	  buffer.writeRecord(currName);    currBytes    =    0;    	non-compiled	[CE]  <identifier>  expected	3	None	replace
559	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()  <  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null  ||  currName.length()  <  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null  ||  currName.length()  <  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }	  if(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(recordBuf);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
560	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  <  recordBuf.length)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  <  recordBuf.length)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  <  recordBuf.length)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }	  if(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(recordBuf);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	99	None	replace
561	[BUG]  [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBytes.length;    i++)    {    buffer.writeRecord(currBuf);    }    	non-compiled	[CE]  <identifier>  expected	47	None	replace
562	[BUG]  [BUGGY]  while(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
563	[BUG]  [BUGGY]  while(currName!=  null  &&  recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null  &&  recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null  &&  recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
564	[BUG]  [BUGGY]  while(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(recordBuf[i]);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(recordBuf[i]);    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
565	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  i++)  {  buffer.writeRecord(currBuf);  }  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  i++)  {  buffer.writeRecord(currBuf);  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  i++)  {  buffer.writeRecord(currBuf);  }  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    i++)    {    buffer.writeRecord(currBuf);    }    	non-compiled	[CE]  <identifier>  expected	49	None	replace
566	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  i++)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  i++)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  i++)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
567	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  currName.length;  i++)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  currName.length;  i++)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  currName.length;  i++)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	41	None	replace
568	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currSize);  }  else  {  buffer.writeString(currName);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currSize);  }  else  {  buffer.writeString(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(currSize);  }  else  {  buffer.writeString(currName);  }	  buffer.writeRecord(currSize);    	non-compiled	[CE]  <identifier>  expected	64	None	replace
569	[BUG]  [BUGGY]  if(currName!=  null)  {  currName  =  recordBuf.toString();  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  currName  =  recordBuf.toString();  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  currName  =  recordBuf.toString();  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
570	[BUG]  [BUGGY]  if(currName!=  null)  {  currName  =  new  StringBuffer();  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  currName  =  new  StringBuffer();  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  currName  =  new  StringBuffer();  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
571	[BUG]  [BUGGY]  if(currName!=  null)  {  currName  =  entry.getName();  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  currName  =  entry.getName();  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  currName  =  entry.getName();  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	40	None	replace
572	[BUG]  [BUGGY]  if(entry.isDirectory())  {  if(currName  ==  null)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(entry.isDirectory())  {  if(currName  ==  null)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(entry.isDirectory())  {  if(currName  ==  null)  {  buffer.writeRecord(currName);  }	  if(currName    ==    null)    {    buffer.writeRecord(currName);    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
573	[BUG]  [BUGGY]  if(entry.isDirectory())  {  if(currName  ==  null)  {  buffer.writeRecord(currName);  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(entry.isDirectory())  {  if(currName  ==  null)  {  buffer.writeRecord(currName);  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(entry.isDirectory())  {  if(currName  ==  null)  {  buffer.writeRecord(currName);  }  else  {  buffer.writeRecord(currName);  }	  if(currName    ==    null)    {    buffer.writeRecord(currName);    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
574	[BUG]  [BUGGY]  if(entry.isDirectory())  {  buffer.writeRecord(currName);  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(entry.isDirectory())  {  buffer.writeRecord(currName);  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(entry.isDirectory())  {  buffer.writeRecord(currName);  }  else  {  buffer.writeRecord(currName);  }	  if(currName    ==    null)    {    buffer.writeRecord(currName);    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
575	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBuf.length;  i++)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBuf.length;  i++)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBuf.length;  i++)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currBuf.length;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
576	[BUG]  [BUGGY]  if(currName!=  null)  {  recordBuf  =  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  recordBuf  =  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  recordBuf  =  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(recordBuf);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
577	[BUG]  [BUGGY]  if(currName!=  null)  {  recordBuf  =  buffer.writeBytes(currName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  recordBuf  =  buffer.writeBytes(currName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  recordBuf  =  buffer.writeBytes(currName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(recordBuf);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
578	[BUG]  [BUGGY]  while(currName!=  null)  {  archiveEntry.writeRecord(currName);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null)  {  archiveEntry.writeRecord(currName);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null)  {  archiveEntry.writeRecord(currName);  currBytes  =  0;  }	  while(currName!=    null)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
579	[BUG]  [BUGGY]  buffer.writeRecord(recordBuf,  currName,  0);  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeRecord(recordBuf,  currName,  0);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeRecord(recordBuf,  currName,  0);	  buffer.writeRecord(recordBuf,    currName);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
580	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf,  currName);  }  else  {  buffer.writeLong(currSize);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf,  currName);  }  else  {  buffer.writeLong(currSize);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(recordBuf,  currName);  }  else  {  buffer.writeLong(currSize);  }	  buffer.writeRecord(recordBuf,    currName);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
581	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf,  currName);  }  else  {  buffer.writeString(currName);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf,  currName);  }  else  {  buffer.writeString(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(recordBuf,  currName);  }  else  {  buffer.writeString(currName);  }	  buffer.writeRecord(recordBuf,    currName);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
582	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf,  currName);  }  else  {  buffer.writeBytes(currSize);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf,  currName);  }  else  {  buffer.writeBytes(currSize);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(recordBuf,  currName);  }  else  {  buffer.writeBytes(currSize);  }	  buffer.writeRecord(recordBuf,    currName);    	non-compiled	[CE]  <identifier>  expected	62	None	replace
583	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBytes.size();  ++i)  {  buffer.writeRecord(currName);  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    recordBuf.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
584	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(recordBuf,  currBytes);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(recordBuf,  currBytes);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(recordBuf,  currBytes);  currBytes  =  0;  }	  if(currName!=    null)    {    buffer.writeRecord(recordBuf,    currBytes);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
585	[BUG]  [BUGGY]  if(recordBytes!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(recordBytes!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(recordBytes!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBytes.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
586	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.size;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.size;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.size;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBytes.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
587	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
588	[BUG]  [BUGGY]  if(currName!=  null  &&  recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
589	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()  <  0)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null  ||  currName.length()  <  0)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null  ||  currName.length()  <  0)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }	  if(currName    ==    null)    {    buffer.writeRecord(currBuf);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
590	[BUG]  [BUGGY]  while(currName!=  null)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }	  if(currName    ==    null)    {    buffer.writeRecord(currBuf);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
591	[BUG]  [BUGGY]  longLinkEntry!=  null  &&  recordBuf.length  >  0  &&  recordBuf.length  >  0)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null  &&  recordBuf.length  >  0  &&  recordBuf.length  >  0)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null  &&  recordBuf.length  >  0  &&  recordBuf.length  >  0)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	84	None	replace
592	[BUG]  [BUGGY]  if(entry.isDirectory())  {  if(currName!=  null)  {  buffer.writeRecord(recordName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(entry.isDirectory())  {  if(currName!=  null)  {  buffer.writeRecord(recordName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(entry.isDirectory())  {  if(currName!=  null)  {  buffer.writeRecord(recordName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(recordName);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
593	[BUG]  [BUGGY]  if(currName!=  null  ||  recordBuf.length  <  0)  {  buffer.writeRecord(recordName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  recordBuf.length  <  0)  {  buffer.writeRecord(recordName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  recordBuf.length  <  0)  {  buffer.writeRecord(recordName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(recordName);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
594	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(currName);    currBytes    =    currSize;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
595	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  ==  0)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(currName);    currBytes    =    currSize;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
596	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName,  recordBuf);  currBytes  =  currSize;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName,  recordBuf);  currBytes  =  currSize;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(currName,  recordBuf);  currBytes  =  currSize;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(currName);    currBytes    =    currSize;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	56	None	replace
597	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  <  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  <  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  <  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currBuf);    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
598	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  recordSize;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  recordSize;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  recordSize;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordSize;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
599	[BUG]  [BUGGY]  while(currName!=  null  &&  currName.length()  <  recordBuf.length)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null  &&  currName.length()  <  recordBuf.length)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null  &&  currName.length()  <  recordBuf.length)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }	  while(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(recordBuf);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
600	[BUG]  [BUGGY]  longLinkEntry!=  null  &&  currName.endsWith( ".js "))  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null  &&  currName.endsWith( ".js "))  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null  &&  currName.endsWith( ".js "))  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }	  longLinkEntry!=    null)    {    buffer.writeRecord(recordBuf);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	61	None	replace
601	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBytes);  }  else  {  buffer.writeString(currName);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBytes);  }  else  {  buffer.writeString(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(recordBytes);  }  else  {  buffer.writeString(currName);  }	  buffer.writeRecord(recordBytes);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
602	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBytes);  }  else  {  buffer.writeInt(currSize);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBytes);  }  else  {  buffer.writeInt(currSize);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(recordBytes);  }  else  {  buffer.writeInt(currSize);  }	  buffer.writeRecord(recordBytes);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
603	[BUG]  [BUGGY]  while(currName!=  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }	  if(currName    ==    null)    {    buffer.writeRecord(recordBuf);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	1	None	replace
604	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currName);  currBytes  =  currSize;  }	  if(currName!=    null)    {    buffer.writeRecord(currName);    currBytes    =    currSize;    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
605	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  currSize;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  currSize;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  currSize;  }	  if(currName!=    null)    {    buffer.writeRecord(currName);    currBytes    =    currSize;    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
606	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
607	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  ==  0)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
608	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName,  recordBuf);  currBytes  =  currBytes;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName,  recordBuf);  currBytes  =  currBytes;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(currName,  recordBuf);  currBytes  =  currBytes;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
609	[BUG]  [BUGGY]  if(currName!=  null  &&  recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null    &&    currName.length()    >    0)    {    for(int    i    =    0;    i    <    currBytes.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
610	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  }	  if(currName!=    null    &&    currName.length()    >    0)    {    for(int    i    =    0;    i    <    currBytes.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
611	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null    &&    currName.length()    >    0)    {    for(int    i    =    0;    i    <    currBytes.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
612	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currSize;  i++)  {  buffer.writeRecord(currBuf);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currSize;  i++)  {  buffer.writeRecord(currBuf);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currSize;  i++)  {  buffer.writeRecord(currBuf);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currSize;    i++)    {    buffer.writeRecord(currBuf);    }    	non-compiled	[CE]  <identifier>  expected	48	None	replace
613	[BUG]  [BUGGY]  if(entry.isDirectory())  {  if(currName!=  null)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(entry.isDirectory())  {  if(currName!=  null)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(entry.isDirectory())  {  if(currName!=  null)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(currName);    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
614	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(currName);    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
615	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  records.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  records.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  records.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    records.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
616	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  records.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  records.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  records.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    records.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	66	None	replace
617	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currName,  currBytes);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currName,  currBytes);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(currName,  currBytes);  currBytes  =  0;  }	  if(currName!=    null)    {    buffer.writeRecord(currName,    currBytes);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
618	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordName);  }  else  {  buffer.writeBytes(currName);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordName);  }  else  {  buffer.writeBytes(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(recordName);  }  else  {  buffer.writeBytes(currName);  }	  buffer.writeRecord(recordName);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
619	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordName);  }  else  {  buffer.writeString(currName);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordName);  }  else  {  buffer.writeString(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(recordName);  }  else  {  buffer.writeString(currName);  }	  buffer.writeRecord(recordName);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
620	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordName);  }  else  {  buffer.writeLong(currName);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordName);  }  else  {  buffer.writeLong(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(recordName);  }  else  {  buffer.writeLong(currName);  }	  buffer.writeRecord(recordName);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
621	[BUG]  [BUGGY]  if(currName!=  null  &&  recordBuf.size()  >  0)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  recordBuf.size()  >  0)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  recordBuf.size()  >  0)  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
622	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  ==  0)  {  for(int  int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  ==  0)  {  for(int  int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  ==  0)  {  for(int  int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    for(int    i    =    0;    i    <    currBytes.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	106	None	replace
623	[BUG]  [BUGGY]  while(currName!=  null  &&  currName.length()  <  =  0)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null  &&  currName.length()  <  =  0)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null  &&  currName.length()  <  =  0)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }	  while(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(currBuf);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
624	[BUG]  [BUGGY]  if(currName!=  null  &&  recordBuf.isEmpty())  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  recordBuf.isEmpty())  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  recordBuf.isEmpty())  {  for(int  i  =  0;  i  <  recordBuf.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
625	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  records.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  records.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  records.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
626	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeBytes(currName);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeBytes(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeBytes(currName);  }	  buffer.writeRecord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
627	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeLong(currName);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeLong(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeLong(currName);  }	  buffer.writeRecord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
628	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeFieldName(currName);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeFieldName(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(recordBuf);  }  else  {  buffer.writeFieldName(currName);  }	  buffer.writeRecord(recordBuf);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
629	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordHandlers.size();  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordHandlers.size();  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordHandlers.size();  ++i)  {  buffer.writeRecord(currName);  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
630	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(recordBuf);  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
631	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(recordBuf);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(currBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(recordBuf);  }	  buffer.writeRecord(currBuf);    currBytes    =    0;    	non-compiled	[CE]  <identifier>  expected	82	None	replace
632	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeLong(currName);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeLong(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeLong(currName);  }	  buffer.writeRecord(recordBuf);    currBytes    =    0;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
633	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordLen;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordLen;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordLen;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordSize;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
634	[BUG]  [BUGGY]  longLinkEntry  ==  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry  ==  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry  ==  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }	  longLinkEntry    ==    null)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
635	[BUG]  [BUGGY]  longLinkEntry  ==  null  ||  currName!=  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry  ==  null  ||  currName!=  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry  ==  null  ||  currName!=  null)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }	  longLinkEntry    ==    null)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
636	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(recordName);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(recordName);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(recordName);  currBytes  =  0;  }	  if(currName!=    null)    {    buffer.writeRecord(recordName);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
637	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  }	  if(currName!=    null    &&    currName.length()    >    0)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	113	None	replace
638	[BUG]  [BUGGY]  if(currName!=  null  &&  recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  recordBuf.length  >  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null    &&    currName.length()    >    0)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	113	None	replace
639	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.endsWith( ".js "))  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.endsWith( ".js "))  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.endsWith( ".js "))  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null    &&    currName.length()    >    0)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	113	None	replace
640	[BUG]  [BUGGY]  while(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  recordBuf;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  recordBuf;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  recordBuf;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    recordBuf;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
641	[BUG]  [BUGGY]  while(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    recordBuf;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
642	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf;  ++i)  {  buffer.writeRecord(recordName);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf;  ++i)  {  buffer.writeRecord(recordName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf;  ++i)  {  buffer.writeRecord(recordName);  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    recordBuf;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
643	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  records.length;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  records.length;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  records.length;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    records.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
644	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  records.length;  ++i)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  records.length;  ++i)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  records.length;  ++i)  {  buffer.writeRecord(recordBuf);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    records.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
645	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  records.size;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  records.size;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  records.size;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    records.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
646	[BUG]  [BUGGY]  if(currName!=  null)  {  currName  =  recordBuf.toString();  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  currName  =  recordBuf.toString();  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  currName  =  recordBuf.toString();  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    currBytes.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
647	[BUG]  [BUGGY]  if(currName!=  null)  {  currName  =  entry.getName();  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  currName  =  entry.getName();  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  currName  =  entry.getName();  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    currBytes.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
648	[BUG]  [BUGGY]  if(currName!=  null)  {  currName  =  new  StringBuffer();  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  currName  =  new  StringBuffer();  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  currName  =  new  StringBuffer();  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    currBytes.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
649	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(recordBuf);  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    currBytes.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
650	[BUG]  [BUGGY]  longLinkEntry!=  null  &&  currBytes.length  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null  &&  currBytes.length  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null  &&  currBytes.length  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
651	[BUG]  [BUGGY]  longLinkEntry!=  null  &&  currName!=  null)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null  &&  currName!=  null)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null  &&  currName!=  null)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currName);  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
652	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  <  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  <  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  <  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	114	None	replace
653	[BUG]  [BUGGY]  if(currName!=  null)  {  currName  =  entry.getName();  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  currName  =  entry.getName();  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  currName  =  entry.getName();  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	114	None	replace
654	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currName);  }  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	102	None	replace
655	[BUG]  [BUGGY]  if(recordBytes!=  null)  {  for(int  i  =  0;  i  <  recordBytes;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(recordBytes!=  null)  {  for(int  i  =  0;  i  <  recordBytes;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(recordBytes!=  null)  {  for(int  i  =  0;  i  <  recordBytes;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBytes;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
656	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes;  ++i)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes;  ++i)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes;  ++i)  {  buffer.writeRecord(recordBuf);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBytes;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
657	[BUG]  [BUGGY]  if(recordBytes!=  null)  {  for(int  i  =  0;  i  <  currName;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(recordBytes!=  null)  {  for(int  i  =  0;  i  <  currName;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(recordBytes!=  null)  {  for(int  i  =  0;  i  <  currName;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBytes;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
658	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes;  ++i)  {  buffer.writeRecord(recordName);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes;  ++i)  {  buffer.writeRecord(recordName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes;  ++i)  {  buffer.writeRecord(recordName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBytes;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
659	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName,  currBytes);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName,  currBytes);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(currName,  currBytes);  }	  buffer.writeRecord(currName,    currBytes);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
660	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName,  currBytes);  }  else  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName,  currBytes);  }  else  {  buffer.writeRecord(recordBuf);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(currName,  currBytes);  }  else  {  buffer.writeRecord(recordBuf);  }	  buffer.writeRecord(currName,    currBytes);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
661	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName,  currBytes);  }  else  {  buffer.writeLong(currSize);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName,  currBytes);  }  else  {  buffer.writeLong(currSize);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(currName,  currBytes);  }  else  {  buffer.writeLong(currSize);  }	  buffer.writeRecord(currName,    currBytes);    	non-compiled	[CE]  <identifier>  expected	63	None	replace
662	[BUG]  [BUGGY]  buffer.writeRecord(currName,  recordBuf,  0,  currSize);  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  buffer.writeRecord(currName,  recordBuf,  0,  currSize);  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	buffer.writeRecord(currName,  recordBuf,  0,  currSize);	  buffer.writeRecord(currName,    recordBuf);    	non-compiled	[CE]  <identifier>  expected	36	None	replace
663	[BUG]  [BUGGY]  while(currName!=  null  &&  currName.endsWith( ".js "))  {  buffer.writeRecord(currName);  currBytes  =  0;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null  &&  currName.endsWith( ".js "))  {  buffer.writeRecord(currName);  currBytes  =  0;  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null  &&  currName.endsWith( ".js "))  {  buffer.writeRecord(currName);  currBytes  =  0;	  while(currName!=    null)    {    buffer.writeRecord(currName);    currBytes    =    0;    	non-compiled	[CE]  <identifier>  expected	92	None	replace
664	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  if(currName    ==    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
665	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  ==  0)  {  for(int  j  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  ==  0)  {  for(int  j  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  ==  0)  {  for(int  j  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null    ||    currName.length()    ==    0)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
666	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currBuf);    }    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
667	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  <  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  <  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  <  0)  {  for(int  i  =  0;  i  <  currBytes.length;  i++)  {  buffer.writeRecord(currBuf);  }  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    i++)    {    buffer.writeRecord(currBuf);    }    }    	non-compiled	[CE]  <identifier>  expected	46	None	replace
668	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currSize);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currSize);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currSize);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    ++i)    {    buffer.writeRecord(currSize);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
669	[BUG]  [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currSize);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  ||  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currSize);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  ||  currName.length()  ==  0)  {  for(int  i  =  0;  i  <  currBytes.length;  ++i)  {  buffer.writeRecord(currSize);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currBytes.length;    ++i)    {    buffer.writeRecord(currSize);    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
670	[BUG]  [BUGGY]  longLinkEntry!=  null  &&  currName!=  null)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null  &&  currName!=  null)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null  &&  currName!=  null)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
671	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length  >  0)  {  for(int  i  =  0;  i  <  currName.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length  >  0)  {  for(int  i  =  0;  i  <  currName.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length  >  0)  {  for(int  i  =  0;  i  <  currName.length;  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currName.length;    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
672	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.size;  i++)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.size;  i++)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.size;  i++)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currSize;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	87	None	replace
673	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >=  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  >=  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  >=  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }	  if(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(currBytes);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
674	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  <  4)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  <  4)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  <  4)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }	  if(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(currBytes);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
675	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes;  ++i)  {  buffer.writeRecord(currName);  }  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes;  ++i)  {  buffer.writeRecord(currName);  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes;  ++i)  {  buffer.writeRecord(currName);  }  }	  if(currName!=    null    &&    currName.length()    >    0)    {    for(int    i    =    0;    i    <    currBytes;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
676	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0,  currBytes  =  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0,  currBytes  =  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0,  currBytes  =  recordBuf.length;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null    &&    currName.length()    >    0)    {    for(int    i    =    0;    i    <    currBytes;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
677	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  i++)  {  buffer.writeRecord(currBytes);  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  i++)  {  buffer.writeRecord(currBytes);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  recordBuf.length;  i++)  {  buffer.writeRecord(currBytes);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    i++)    {    buffer.writeRecord(currBytes);    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
678	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  i++)  {  buffer.writeRecord(currBytes);  }  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  i++)  {  buffer.writeRecord(currBytes);  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBuf.length;  i++)  {  buffer.writeRecord(currBytes);  }  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    i++)    {    buffer.writeRecord(currBytes);    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
679	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >=  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  >=  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  >=  0)  {  buffer.writeRecord(currName);  currBytes  =  0;  }	  if(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	119	None	replace
680	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  <  4)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  <  4)  {  buffer.writeRecord(currName);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  <  4)  {  buffer.writeRecord(currName);  currBytes  =  0;  }	  if(currName!=    null    &&    currName.length()    >    0)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	119	None	replace
681	[BUG]  [BUGGY]  longLinkEntry!=  null  &&  currBytes.size()  >  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null  &&  currBytes.size()  >  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null  &&  currBytes.size()  >  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
682	[BUG]  [BUGGY]  longLinkEntry!=  null  &&  currName!=  null)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null  &&  currName!=  null)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null  &&  currName!=  null)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }	  longLinkEntry!=    null)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
683	[BUG]  [BUGGY]  if(currName!=  null)  {  currName  =  recordBytes.get(currSize);  for(int  i  =  0;  i  <  recordBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  currName  =  recordBytes.get(currSize);  for(int  i  =  0;  i  <  recordBytes.size();  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  currName  =  recordBytes.get(currSize);  for(int  i  =  0;  i  <  recordBytes.size();  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBytes.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
684	[BUG]  [BUGGY]  if(recordBytes!=  null)  {  for(int  i  =  0;  i  <  records.size();  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(recordBytes!=  null)  {  for(int  i  =  0;  i  <  records.size();  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(recordBytes!=  null)  {  for(int  i  =  0;  i  <  records.size();  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBytes.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
685	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.size();  ++i)  {  buffer.writeRecord(recordBuf);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.size();  ++i)  {  buffer.writeRecord(recordBuf);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordBytes.size();  ++i)  {  buffer.writeRecord(recordBuf);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBytes.size();    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
686	[BUG]  [BUGGY]  if(currName  ==  null)  {  buffer.writeRecord(currName,  currSize);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null)  {  buffer.writeRecord(currName,  currSize);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null)  {  buffer.writeRecord(currName,  currSize);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(currName,    currSize);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
687	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName,  0,  currBytes);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName,  0,  currBytes);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(currName,  0,  currBytes);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    buffer.writeRecord(currName,    currSize);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
688	[BUG]  [BUGGY]  while(currName!=  null  &&  currName.endsWith( ".js "))  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null  &&  currName.endsWith( ".js "))  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null  &&  currName.endsWith( ".js "))  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }	  while(currName!=    null)    {    buffer.writeRecord(currBytes);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
689	[BUG]  [BUGGY]  while(currName!=  null  &&  currName.endsWith( ".zip "))  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  while(currName!=  null  &&  currName.endsWith( ".zip "))  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	while(currName!=  null  &&  currName.endsWith( ".zip "))  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }	  while(currName!=    null)    {    buffer.writeRecord(currBytes);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
690	[BUG]  [BUGGY]  longLinkEntry!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null  &&  currName.length()  >  0)  {  buffer.writeRecord(recordBuf);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  longLinkEntry!=    null)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
691	[BUG]  [BUGGY]  longLinkEntry!=  null  &&  entry.isDirectory())  {  buffer.writeRecord(currName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  longLinkEntry!=  null  &&  entry.isDirectory())  {  buffer.writeRecord(currName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	longLinkEntry!=  null  &&  entry.isDirectory())  {  buffer.writeRecord(currName);  currBytes  =  0;  }  else  {  buffer.writeRecord(currName);  }	  longLinkEntry!=    null)    {    buffer.writeRecord(currName);    currBytes    =    0;    }    else    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
692	[BUG]  [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName);  }  else  {  currSize  =  entry.getSize();  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  buffer.writeRecord(currName);  }  else  {  currSize  =  entry.getSize();  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  buffer.writeRecord(currName);  }  else  {  currSize  =  entry.getSize();  }	  if(currName!=    null)    {    buffer.writeRecord(currName);    }    else    {    currName    =    entry.getName();    }    	non-compiled	[CE]  <identifier>  expected	39	None	replace
693	[BUG]  [BUGGY]  if(currName  ==  null  ||  currName.length()  >=  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName  ==  null  ||  currName.length()  >=  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName  ==  null  ||  currName.length()  >=  0)  {  buffer.writeRecord(currBytes);  currBytes  =  0;  }	  if(currName    ==    null    ||    currName.length()    <    0)    {    buffer.writeRecord(currBytes);    currBytes    =    0;    }    	non-compiled	[CE]  <identifier>  expected	116	None	replace
694	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordSize;  i++)  {  buffer.writeRecord(currName);  }  }  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordSize;  i++)  {  buffer.writeRecord(currName);  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordSize;  i++)  {  buffer.writeRecord(currName);  }  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordSize;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
695	[BUG]  [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordMillis;  i++)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null)  {  for(int  i  =  0;  i  <  recordMillis;  i++)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null)  {  for(int  i  =  0;  i  <  recordMillis;  i++)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordSize;    i++)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	86	None	replace
696	[BUG]  [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  currName.length;  ++i)  {  buffer.writeRecord(currName);  }  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  currName.length;  ++i)  {  buffer.writeRecord(currName);  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(recordBuf!=  null)  {  for(int  i  =  0;  i  <  currName.length;  ++i)  {  buffer.writeRecord(currName);  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    recordBuf.length;    ++i)    {    buffer.writeRecord(currName);    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
697	[BUG]  [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      buffer.writeRecord(recordBuf);  currBytes  =  0;  if  (entry.isDirectory())  {  currSize  =  0;  }  else  {  currSize  =  entry.getSize();  }  currName  =  entry.getName();      [BUGGY]  if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }  [BUGGY]        [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	187	187	1	replace	if(currName!=  null  &&  currName.length()  >  0)  {  for(int  i  =  0;  i  <  currBytes.size();  ++i)  {  buffer.writeRecord(currName);  currBytes  =  currBytes;  }  }	  if(currName!=    null)    {    for(int    i    =    0;    i    <    currBytes.size();    ++i)    {    buffer.writeRecord(currName);    currBytes    =    currBytes;    }    }    	non-compiled	[CE]  <identifier>  expected	51	None	replace
