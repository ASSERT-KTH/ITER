projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecord(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecordHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(recordBuf,currBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(currName);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(recordBuf,currName);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.closeArchiveEntry();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=LONGFILE_GNU){entry.writeEntryHeader(recordBuf,currBytes);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(currBytes,recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=LONGFILE_GNU){entry.writeEntryHeader(recordBuf,currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(assemBuf,currBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(currName,recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecordHeader(recordBuf,currBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=LONGFILE_GNU){entry.writeEntryHeader(recordBuf,currBytes);}else{buffer.writeRecord(recordBuf);return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){recordBuf.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){recordBuf.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){recordBuf.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){recordBuf.writeEntryHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){entry.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176buffer.writeRecord(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){for(inti=0;i<recordBuf.length;i++){buffer.write(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){for(inti=0;i<recordBuf.length;++i){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){buffer.writeRecord(recordBuf);}else{System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeRecordHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){entry.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){entry.writeRecordHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeRecordHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){buffer.writeRecord(recordBuf);}else{System.arraycopy(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordSize);}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isDirectory()){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isDirectory()){entry.closeArchiveEntry();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isDirectory()){entry.closeArchiveEntry();}else{buffer.writeRecord(longFileMode);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isArchive()){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.getName().endsWith("Archive")){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isDirectory()){entry.closeArchiveEntry();}else{buffer.writeRecord(LONGFILE_GNU);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isDirectory()){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){recordBuf.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){buffer.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){recordBuf.writeRecordHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeRecordHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){buffer.writeRecordHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Entry<K,V>entry=entry.getEntry();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){recordBuf.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(recordBuf,currName);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(recordBuf,currName);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecordHeader(currName,recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeRecordHeader(recordBuf,currName);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){recordBuf.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){recordBuf.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){buffer.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){buffer.writeRecordHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Entry<K,V>entry=entry.getValue();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){buffer.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){recordBuf.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(!closed){buffer.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){buffer.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(currName);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(currName);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(currName);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(currName);}else{buffer.writeRecord(recordBuf);currBytes=0,currSize;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(currName);}else{buffer.writeRecord(recordBuf);currBytes=1;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(currName);}else{buffer.writeRecord(longFileMode);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(currName);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.copyCurrentEntry(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.copyCurrentEntry(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176this.archiveEntry.copyCurrentEntry(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(assemBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176archiveEntry.copyCurrentEntry(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(recordBuf,currBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecordHeader(recordBuf,currName);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(assemBuf,currName);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(recordBuf,currName,buffer);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecord(recordBuf,currName);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(recordBuf,currName,assemLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecordHeader(recordBuf,currSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(recordBuf,currName);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(recordBuf,currSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(buffer);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeArchiveEntry(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeName(currName);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){recordBuf.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(currName);}else{buffer.writeRecord(currBytes);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(rerecordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){entry.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){entry.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeRecordHader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeRecordBytes(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){entry.writeRecordHeader(recordBuf);}else{buffer.writeRecord(rerecordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){buffer.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){recordBuf=buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.close();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){entry.closeArchiveEntry();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isDirectory()){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(assemBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecordHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){for(inti=0;i<recordBuf.length;i++){buffer.writeLong(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){for(inti=0;i<recordBuf.length;i++){buffer.write(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){for(inti=0;i<recordBuf.length;i++){buffer.writeInt(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176byte[]recordBuf=newbyte[LONGFILE_ERROR.length()];
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){buffer.writeRecord(recordBuf);currBytes=0;}else{buffer.writeRecord(recordBuf);recordSize=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(currBuf,recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(recordBuf,currBytes,assemLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(recordBuf,currBytes,buffer);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){entry.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){entry.writeRecordHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeRecordEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isDirectory()){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);fileName=entry.getName();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(currBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(recordBuf,assemBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){entry.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Entry<String,ArchiveEntry>entry=recordBuf.entrySet().iterator().next();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(assemBuf,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(newFile(recordBuf));
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(recordBuf,recordSize);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(recordBuf,currName);}else{buffer.writeRecord(recordBuf);return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(assemBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(assemBuf);}else{buffer.writeRecord(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed||recordBuf!=null){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes==null){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){for(inti=0;i<recordBuf.length;++i){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){for(inti=0;i<recordBuf.length;++i){buffer.writeLong(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176byte[]recordBuf=newbyte[LONGFILE_GNU.length()];
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){for(inti=recordBuf.length;i<0;i++){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){for(inti=recordBuf.size()-1;i>=0;i++){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed||recordBuf!=null){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed||recordBuf!=null){entry.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(recordBuf,recordSize);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryName(currName);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntry(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryName(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHandler(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(assemBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){if(entry.isDirectory()){entry.closeArchiveEntry();}else{buffer.writeRecord(longFileMode);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(entry.isDirectory()){entry.closeArchiveEntry();}else{buffer.writeRecord(longFileMode);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){if(entry.isDirectory()){entry.closeArchiveEntry();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(entry.isDirectory()){entry.closeArchiveEntry();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isArchive()){entry.closeArchiveEntry();}else{buffer.writeRecord(longFileMode);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed&&recordBuf!=null){buffer.writeRecord(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){buffer.writeRecord(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed&&recordBuf!=null){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){recordBuf.writeRecord(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176this.archiveEntry.copyCurrentEntry(currName);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176this.archiveEntry.copyCurrentEntry(recordBuf,currName);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176this.archiveEntry.copyCurrentEntry(buffer);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176this.archiveEntry.copyCurrentEntry(recordBuf,buffer);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176this.archiveEntry.copyCurrentEntry(entry);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176this.archiveEntry.copyCurrentEntry(recordBuf,currBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176this.archiveEntry.copyCurrentEntry(recordBuf,0,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){recordBuf.writeRecordHader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){entry.writeRecordHader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){buffer.writeRecordHader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){recordBuf.writeRecordHader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeRecordHader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){buffer.writeRecordHader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryName(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){entry.writeEntryName(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeEntryName(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryName(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeEntryName(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){entry.writeEntryName(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeRecordName(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Entry<K,V>currName=entry.getValue();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHandler(currName);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Entry<?>curr=entry.getValue();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Entry<K,V>curr=entry.getValue();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){buffer.writeRecordHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed&&recordBuf!=null){buffer.writeEntryHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){buffer.writeEntryHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed&&recordBuf!=null){buffer.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176safely()){buffer.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed&&recordBuf!=null){buffer.writeRecordHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isArchive()){entry.closeArchiveEntry();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176archiveEntry.closeArchiveEntry();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176finalTarArchiveEntryentry=entry.closeArchiveEntry();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176ArchiveEntry.closeArchiveEntry();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeEntry(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeEntry(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntry(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){entry.writeEntry(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntry(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntry(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntry(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){recordBuf.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){recordBuf.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){entry.writeEntryHeader(recordBuf,recordSize);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){recordBuf.writeEntryHeader(recordBuf,recordSize);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(recordBuf,currSize);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(recordBuf,0,recordSize);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(recordBuf,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176for(inti=0;i<recordBuf.length;i++){buffer.writeLong(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){for(inti=0;i<recordBuf.length;i++){buffer.writeLong(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(recordBuf!=null){for(inti=0;i<recordBuf.length;i++){buffer.writeLong(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(recordBuf!=null&&recordBuf.length>0){for(inti=0;i<recordBuf.length;i++){buffer.writeLong(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(recordBuf!=null&&recordBuf.length>0){for(inti=0;i<recordBuf.length;i++){buffer.writeInt(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(recordBuf!=null){for(inti=0;i<recordBuf.length;i++){buffer.writeInt(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isDirectory()){if(currName!=null){entry.writeEntryHeader(currName);}else{buffer.writeRecord(recordBuf);currBytes=0,currSize;}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isDirectory()){if(currName!=null){entry.writeEntryHeader(currName);}else{buffer.writeRecord(recordBuf);currBytes=0,currSize;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isDirectory()){if(currName!=null){entry.writeEntryHeader(currName);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){currName=entry.getName();}else{buffer.writeRecord(recordBuf);currBytes=0,currSize;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isDirectory()){if(currName==null){entry.writeEntryHeader(currName);}else{buffer.writeRecord(recordBuf);currBytes=0,currSize;}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(assemBuf,recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecordHeader(currBytes,recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(currBuf,currBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(assemBuf,currBytes,assemLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(currName,currBytes,assemLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(currName,recordBuf,assemLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=null){entry.writeEntryHeader(recordBuf,currBytes,assemLen);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=null){entry.writeEntryHeader(recordBuf,currBytes,assemLen);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(currBytes,recordBuf,assemLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(currBuf,currBytes,assemLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){recordBuf.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){buffer.writeRecord(recordBuf,0,recordBuf,0,recordBuf.length);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(recordBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(recordBuf,0,recordBuf,0,recordBuf.length);}else{buffer.writeRecord(recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){recordBuf.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(currName!=null){recordBuf.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(currName!=null){recordBuf.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){recordBuf.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){buffer.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){buffer.writeRecordBuf.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){buffer.writeRecordHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecord(currName,recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeRecord(recordBuf,currName);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeRecord(recordBuf,currName);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){entry.writeRecord(recordBuf,currName);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){entry.writeRecord(recordBuf,currName);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf,currName);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=LONGFILE_GNU){entry.writeEntryHeader(assemBuf,currBytes);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(currBytes,assemBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=LONGFILE_GNU){entry.writeEntryHeader(assemBuf,currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(currBuf,assemBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(currName,currBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(currName,assemBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=LONGFILE_GNU){entry.writeEntryHeader(assemBuf,currBytes);}else{buffer.writeRecord(recordBuf);return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeRecordHeader(recordBuf,currName);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){entry.writeRecordHeader(recordBuf,currName);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){entry.writeRecordHeader(recordBuf,currName);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){recordBuf.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176finalStringcurrName=recordBuf.writeEntryHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null||currName.length()==0){recordBuf.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176trackBuf.writeEntryHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){for(inti=0;i<recordBuf.length;++i){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176for(inti=0;i<recordBuf.length;++i){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(currName!=null&&recordBuf.length>0){for(inti=0;i<recordBuf.length;++i){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(currName!=null){for(inti=0;i<recordBuf.length;++i){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(currName!=null&&currName.length()>0){for(inti=0;i<recordBuf.length;++i){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){for(inti=0;i<records.length;++i){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(recordBuf,recordSize);}else{buffer.writeRecord(recordBuf);return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){buffer.writeRecordHeader(recordBuf,currName);}else{buffer.writeRecord(recordBuf);return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){buffer.writeRecord(recordBuf,currName);}else{buffer.writeRecord(recordBuf);return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(recordBuf,recordName);}else{buffer.writeRecord(recordBuf);return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){entry.writeRecordEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){recordBuf.writeRecordEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){buffer.writeRecordEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeRecordEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){buffer.writeRecordEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordBuf,0,recordSize);}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordSize);}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=LONGFILE_GNU){entry.writeEntryHeader(currBytes);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=null){entry.writeEntryHeader(currBytes);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=LONGFILE_GNU){entry.writeEntryHeader(currBytes);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes==LONGFILE_GNU){entry.writeEntryHeader(currBytes);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=null){entry.writeEntryHeader(currBytes);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=null){entry.writeEntryHeader(currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=LONGFILE_GNU){entry.writeEntryHeader(currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){recordBuf.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){recordBuf.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){recordBuf.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){entry.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordBuf,0,recordBuf.length);}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordBuf,0,recordBuf.length);}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordBuf,0,recordBuf.length);}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(recordBuf!=null&&recordBuf.length>0){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(recordBuf!=null){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=null){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176for(inti=0;i<recordsBuf.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(recordBuf!=null&&recordBuf.length>0){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(recordBuf[i]
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isDirectory()){if(currName!=null){entry.writeEntryHeader(currName);}else{buffer.writeRecord(recordBuf);currBytes=1;}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isDirectory()){if(currName!=null){entry.writeEntryHeader(currName);}else{buffer.writeRecord(recordBuf);currBytes=1;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){currName=entry.getName();}else{buffer.writeRecord(recordBuf);currBytes=1;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isDirectory()){if(currName!=null){entry.writeEntryHeader(currName);}else{buffer.writeRecord(recordBuf);currBytes=
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176for(inti=0;i<recordBuf.length;i++){buffer.write(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(recordBuf!=null){for(inti=0;i<recordBuf.length;i++){buffer.write(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(recordBuf!=null&&recordBuf.length>0){for(inti=0;i<recordBuf.length;i++){buffer.write(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isDirectory()){if(currBytes==null){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){if(currBytes==null){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isDirectory()){if(currBytes==null){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){if(currBytes==null){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=null){recordBuf.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=null){recordBuf.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=null){buffer.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){recordBuf.writeRecordHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176finalStringcurrName=recordBuf.writeRecordHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176this.recordBuf.writeRecordHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176RecordBufferbuffer=recordBuf.writeRecordHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176this.archiveEntry.writeRecordHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176RecordBufferbuffer=recordBuf.writeRecordHeader(currName);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(!closed){entry.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(recordBuf);}else{System.arraycopy(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(!closed){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(!closed){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordSize);}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176System.arraycopy(assemBuf,0,recordBuf,0,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(closed){recordBuf.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){recordBuf.writeEntryHeader(assemBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes==LONGFILE_GNU){entry.writeEntryHeader(recordBuf,currBytes);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes>=LONGFILE_GNU){entry.writeEntryHeader(recordBuf,currBytes);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=LONGFILE_GNU){buffer.writeEntryHeader(recordBuf,currBytes);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=LONGFILE_GNU){buffer.writeRecordHeader(recordBuf,currBytes);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes==LONGFILE_GNU){entry.writeEntryHeader(recordBuf,currBytes);}else{buffer.writeRecord(recordBuf);return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=LONGFILE_GNU){buffer.writeEntryHeader(recordBuf,currBytes);}else{buffer.writeRecord(recordBuf);return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=LONGFILE_ERROR){entry.writeEntryHeader(recordBuf,currBytes);}else{buffer.writeRecord(recordBuf);return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=LONGFILE_GNU){buffer.writeRecordHeader(recordBuf,currBytes);}else{buffer.writeRecord(recordBuf);return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176for(inti=0;i<recordBuf.length;++i){buffer.writeLong(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){for(inti=0;i<recordBuf.length;++i){buffer.writeLong(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(recordBuf!=null){for(inti=0;i<recordBuf.length;++i){buffer.writeLong(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(recordBuf!=null&&recordBuf.length>0){for(inti=0;i<recordBuf.length;++i){buffer.writeLong(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(recordBuf!=null&&recordBuf.length>0){for(inti=0;i<recordBuf.length;++i){buffer.writeInt(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(recordBuf!=null){for(inti=0;i<recordBuf.length;++i){buffer.writeInt(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176for(inti=0;i<recordBuf.length;++i){buffer.writeInt(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(currName!=null){recordBuf.writeRecord(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){recordBuf.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){recordBuf.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){recordBuf.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(recordBuf,currName,buffer);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(recordBuf,currName,buffer);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(recordBuf,currName,buffer);}else{buffer.writeRecord(currName);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(recordBuf,currName,buffer);}else{buffer.writeRecord(longFileMode);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(recordBuf,currName,buffer);}else{buffer.writeRecord(LONGFILE_GNU);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(assemBuf);}else{buffer.writeRecord(assemBuf,0,recordSize,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){recordBuf.writeRecord(assemBuf,0,recordBuf,0,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(assemBuf,0,recordSize,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){buffer.writeRecord(assemBuf,0,recordBuf,0,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(!closed){recordBuf.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){recordBuf.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=null){if(!closed){recordBuf.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes==null){if(!closed){recordBuf.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=null){if(!closed){recordBuf.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){recordBuf.writeRecordHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){buffer.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed&&recordBuf.isDirectory()){recordBuf.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed&&recordBuf.canReadEntry()){recordBuf.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed&&recordBuf.isEnabled()){recordBuf.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeRecordHeader(recordBuf);}else{buffer.writeRecord(rerecordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){buffer.writeRecordHeader(recordBuf);}else{buffer.writeRecord(rerecordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeRecordHeader(rerecordBuf);}else{buffer.writeRecord(rerecordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){buffer.writeRecordHeader(rerecordBuf);}else{buffer.writeRecord(rerecordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=null){for(inti=0;i<recordBuf.length;++i){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes==null){for(inti=0;i<recordBuf.length;++i){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176for(inti=0;i<recordsBuf.length;++i){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){for(inti=0;i<recordsBuf.length;++i){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176for(inti=0;i<recordBuf.length;++i){buffer.writeRecord(recordBuf[i].getName());}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){recordBuf.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){for(inti=0;i<recordBuf.length;i++){buffer.write(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null||currName.length()==recordBuf.length){for(inti=0;i<recordBuf.length;i++){buffer.write(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=LONGFILE_GNU){buffer.writeEntryHeader(recordBuf,currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Entry.writeEntryHeader(recordBuf,currBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=LONGFILE_GNU){currBuf.writeEntryHeader(recordBuf,currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(entry.isDirectory()){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(entry.isDirectory()){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);return;}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){if(entry.isDirectory()){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){if(entry.isDirectory()){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);return;}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){if(entry.isDirectory()){entry.closeArchiveEntry();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){if(entry.isDirectory()){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){for(inti=recordBuf.length;i<0;i++){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=null){for(inti=recordBuf.length;i<0;i++){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes==null){for(inti=recordBuf.length;i<0;i++){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){for(inti=recordBuf.length;i<0;i++){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){for(inti=recordBuf.length;i<0;i++){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176for(inti=recordBuf.length-1;i<0;i++){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176for(inti=recordBuf.length;i>=0;i++){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){recordBuf.writeRecordHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){recordBuf.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){recordBuf.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){recordBuf.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed&&recordBuf.length>0){recordBuf.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){if(!closed){buffer.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isDirectory()){if(!closed){buffer.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(longFileMode!=LONGFILE_GNU){if(!closed){buffer.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(closed){buffer.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(!closed){buffer.writeRecordHeader(recordBuf);}else{buffer.writeRecordBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){recordBuf.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){recordBuf.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(closed){entry.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){recordBuf.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(closed){entry.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(recordBuf);}else{System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){buffer.writeRecord(assemBuf);}else{System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(assemBuf);}else{System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeArchiveEntry(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeArchiveEntry(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeArchiveEntry(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){entry.writeArchiveEntry(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeArchiveEntry(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeArchiveEntry(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeArchiveEntry(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176safely()){buffer.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){recordBuf=buffer.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){recordBuf=buffer.writeRecordHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){buffer.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){buffer.writeRecordHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176buffer.writeRecordHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){recordBuf=buffer.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Entry<K,V>currName=entry.getName();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Entry<K,V>currName=entry.getEntry();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed&&recordBuf!=null){buffer.writeRecordHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed&&recordBuf==null){buffer.writeRecordHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed&&recordBuf>=null){buffer.writeRecordHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Entry<K,V>entry=recordBuf.entry();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176finalTarArchiveEntry<K,V>entry=recordBuf.get(longFileMode);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176finalTarArchiveEntry<K,V>entry=recordBuf.getEntry(longFileMode);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){recordBuf.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){recordBuf.writeEntryHandler(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(currName,recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(currBytes,recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(assemBuf,currSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(currBuf,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(currSize,recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(curr,recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.copyCurrentEntry(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){recordBuf=buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){recordBuf=buffer.writeRecord(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176aughtExceptionHandler.handleMissingRecord(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(currName,recordBuf,buffer);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(currName,currBytes,buffer);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(assemBuf,currBytes,buffer);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(buffer,currBytes,recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(buffer,currBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(currBuf,currBytes,buffer);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Entry<?>entry=recordBuf.getEntry();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Entry<?>entry=recordBuf.entrySet();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176after(recordBuf!=null){buffer.writeRecordHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176safely()){buffer.writeRecordHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(closed){recordBuf.writeRecordHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(closed){buffer.writeRecordHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.copyCurrentEntry(recordBuf,currName);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.copyCurrentEntry(recordBuf,currName);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.copyCurrentEntry(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.copyCurrentEntry(recordBuf,currName);}else{buffer.writeRecord(recordBuf);return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.copyCurrentEntry(recordBuf,currName);}else{buffer.writeRecord(LONGFILE_GNU);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(closed){recordBuf.writeRecord(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176after(recordBuf!=null){buffer.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeRecordHeader(recordBuf,recordSize);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeRecordHeader(recordBuf,recordName);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeRecordHeader(REcordBuf,currName);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeRecordHeader(recordBuf,currSize);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176byte[]recordBuf=newbyte[LONGFILE_ERROR.length()+1];
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176byte[]recordBuf=newbyte[length()];
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176byte[]recordBuf=newbyte[lONGFILE_GNU.length()];
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176byte[]recordBuf=newbyte[longFileMode.length()];
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176byte[]recordBuf=newbyte[LONGFILE_ERROR.length()+2];
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isDirectory()){entry.close();}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isDirectory()){entry.close();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.getName().endsWith("Archive")){entry.close();}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.getName().equals("Archive")){entry.close();}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isDirectory()){entry.close();}else{buffer.writeRecord(longFileMode);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isArchive()){entry.close();}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){entry.close();}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){recordBuf.writeRecordBytes(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){buffer.writeRecordBytes(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){recordBuf.writeRecordBytes(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){buffer.writeRecordBytes(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeRecordBytes(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){recordBuf.writeRecordBytes();}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordSize);}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordBuf,0,recordSize);}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(closed&&recordBuf!=null){buffer.writeRecord(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(closed&&recordBuf!=null){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176after(closed){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(currName,recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(currName,recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBuf!=null){entry.writeEntryHeader(currBuf,recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBuf!=null){entry.writeEntryHeader(currBuf,recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecordHeader(currBuf,recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(recordBuf,currBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBuf!=null){entry.writeEntryHeader(currBuf,recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed&&recordBuf!=null){entry.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed||recordBuf!=null){entry.writeRecordHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Entry.writeEntryHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeEntryHeader(assemBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(closed){entry.writeEntryHeader(assemBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(closed){entry.writeEntryHeader(assemBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(assemBuf);}else{buffer.writeRecord(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(closed){entry.writeEntryHeader(assemBuf);}else{buffer.writeRecord(assemBuf,0,recordBuf,0,recordBuf.length);}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeRecordHeader(currName,recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeRecordHeader(currName,recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecordHeader(currName,recordBuf,assemLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecordHeader(currName,currBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecordHeader(currName,recordBuf,buffer);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(!closed){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=null){if(!closed){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(!closed){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){buffer.writeRecord(assemBuf);}else{System.arraycopy(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(assemBuf);}else{System.arraycopy(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){System.arraycopy(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){System.arraycopy(assemBuf,0,recordBuf,0,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){entry.writeRecordHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176ter.writeRecordHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=LONGFILE_GNU){entry.writeRecordHeader(recordBuf,currBytes);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=recordBuf){entry.writeRecordHeader(recordBuf,currBytes);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=LONGFILE_GNU){entry.writeRecordHeader(recordBuf,currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=recordBuf){entry.writeRecordHeader(recordBuf,currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecordHeader(assemBuf,currBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isDirectory()){if(currName!=null){entry.writeEntryHeader(currName);}else{buffer.writeRecord(recordBuf);currBytes=0;}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isDirectory()){if(currName!=null){entry.writeEntryHeader(currName);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isDirectory()){if(currName==null){entry.writeEntryHeader(currName);}else{buffer.writeRecord(recordBuf);currBytes=0;}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){currName=entry.getName();}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isDirectory()){if(currName!=null){entry.writeEntryHeader(currName);}else{buffer.writeRecord(recordBuf);currBytes=0
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(entry!=null){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){if(entry!=null){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(entry!=null){entry.closeArchiveEntry();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){if(entry!=null){entry.closeArchiveEntry();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(closed){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordSize);}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(closed){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){recordBuf.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currSize!=LONGFILE_GNU){entry.writeRecordHeader(recordBuf,currSize);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currSize!=LONGFILE_GNU){entry.writeRecordHeader(recordBuf,currSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecordHeader(currSize,recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecordHeader(currBuf,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeEntryHeader(recordBuf,assemBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(assemBuf!=null){entry.writeEntryHeader(recordBuf,assemBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeEntryHeader(recordBuf,assemBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(assemBuf!=null){entry.writeEntryHeader(recordBuf,assemBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(assemBuf!=null){entry.writeEntryHeader(assemBuf,recordBuf);}else{buffer.writeRecord(assemBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecordHeader(assemBuf,recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.copyCurrentEntry(currName);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.copyCurrentEntry(currName);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.copyCurrentEntry(currName);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(currName,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(assemBuf,currBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(recordBuf,blockSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(recordBuf,assemLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(longFileMode!=LONGFILE_GNU){if(entry.isDirectory()){entry.closeArchiveEntry();}else{buffer.writeRecord(LONGFILE_GNU);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(entry.isDirectory()){entry.closeArchiveEntry();}else{buffer.writeRecord(LONGFILE_GNU);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(longFileMode!=LONGFILE_ERROR){if(entry.isDirectory()){entry.closeArchiveEntry();}else{buffer.writeRecord(LONGFILE_GNU);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(longFileMode==LONGFILE_ERROR){if(entry.isDirectory()){entry.closeArchiveEntry();}else{buffer.writeRecord(LONGFILE_GNU);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(longFileMode!=LONGFILE_ERROR){if(entry.isDirectory()){entry.closeArchiveEntry();}else{buffer.writeRecord(LONGFILE_GNU);}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(longFileMode!=LONGFILE_GNU){if(entry.isDirectory()){entry.closeArchiveEntry();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(closed||recordBuf!=null){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(closed||recordBuf!=null){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(closed||recordBuf!=null){entry.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed||recordBuf!=null){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed||recordBuf!=null){buffer.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){if(recordBuf!=null){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(recordBuf!=null){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){if(recordBuf!=null){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){if(recordBuf!=null){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(recordBuf!=null){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){if(recordBuf!=null){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){buffer.writeRecord(assemBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176after(closed){buffer.writeRecord(assemBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){recordBuf.writeRecord(assemBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){buffer.writeRecord(assemBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176after(closed){buffer.writeRecord(assemBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){assemBuf.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){recordBuf.writeRecord(assemBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(closed){entry.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(closed){entry.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecordHeader(recordBuf);}else{System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(assemBuf,0,recordBuf,0,recordBuf.length);}else{buffer.writeRecord(assemBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){buffer.writeRecord(assemBuf,0,recordBuf,0,recordBuf.length);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.closeArchiveEntry();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(currName!=null){recordBuf.writeRecordHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(currName!=null&&recordBuf.length>0){buffer.writeRecordHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(currName!=null&&currName.length()>0){recordBuf.writeRecordHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(currName!=null&&recordBuf.length()>0){buffer.writeRecordHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(closed){recordBuf.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(closed){recordBuf.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=null){if(closed){recordBuf.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(currBytes!=null){recordBuf.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176ArchiveEntry<K,V>entry=entry.closeArchiveEntry();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Entry<K,V>entry=entry.closeArchiveEntry();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176ArchiveEntry<K,V>entry=entry.getValue();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){recordBuf=buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){recordBuf=buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){currName=buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){recordBuf=buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){recordBuf=buffer.writeRecord(longFileMode);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){recordBuf=buffer.writeRecord(recordBuf,recordSize);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176byte[]recordBuf=newbyte[LONGFILE_GNU.length()+1];
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176byte[]recordBuf=newbyte[LONGFILE_GNU.length()+2];
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176byte[]recordBuf=newbyte[LONGFILE_GNU.length()+4];
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordBuf,0,recordSize);}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(closed){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(closed){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(currBytes);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(closed){recordBuf.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(closed){recordBuf.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isDirectory()){if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isDirectory()){if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(longFileMode!=LONGFILE_GNU){if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(assemBuf,currName);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(assemBuf,currName);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(assemBuf,currName);}else{buffer.writeRecord(recordBuf);return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecordHeader(currName,assemBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=LONGFILE_GNU){entry.copyCurrentEntry(recordBuf,currBytes);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=LONGFILE_GNU){entry.copyCurrentEntry(recordBuf,currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(currBuf,recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(currName!=null&&recordBuf.length>0){buffer.writeEntryHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){buffer.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(currName!=null){recordBuf.writeEntryHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176buffer.writeEntryHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(currName!=null&&recordBuf.length()>0){buffer.writeEntryHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){recordBuf.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){recordBuf.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){recordBuf.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.copyCurrentEntry(newFile(recordBuf));}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.copyCurrentEntry(newFile(recordBuf));}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(newFile(recordBuf),buffer);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(newFile(assemBuf));
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(newFile(currName));
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(newFile(longFileMode));
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176archiveEntry.copyCurrentEntry(newFile(recordBuf));
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Entry<K,V>entry=archiveEntry.getEntry();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176finalEntry<K,V>entry=entry.getEntry();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Entry<K,V>entry=this.archiveEntry.getEntry();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Entry<K,V>entry=archiveEntry.getValue();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Entry<K,V>entry=buffer.getEntry();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176buffer.writeRecord(assemBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176buffer.writeRecord(recordBuf,0,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176buffer.writeRecord(recordBuf,currBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176buffer.writeRecord(recordBuf,assemLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176buffer.writeRecord(recordBuf,assemBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176archiveEntry.copyCurrentEntry(currName);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176archiveEntry.copyCurrentEntry(recordBuf,currName);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176archiveEntry.copyCurrentEntry(entry);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176archiveEntry.copyCurrentEntry(assemBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176archiveEntry.copyCurrentEntry(recordBuf,currBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176archiveEntry.copyCurrentEntry(assemBuf,recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176archiveEntry.copyCurrentEntry(buffer);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){buffer.writeRecordHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(recordBuf!=null){buffer.writeRecord(recordBuf);currBytes=0;}else{buffer.writeRecord(recordBuf);recordSize=0;}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){if(recordBuf!=null){buffer.writeRecord(recordBuf);currBytes=0;}else{buffer.writeRecord(recordBuf);recordSize=0;}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){if(recordBuf!=null){buffer.writeRecord(recordBuf);currBytes=0;}else{buffer.writeRecord(recordBuf);recordSize=0;}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=null){if(recordBuf!=null){buffer.writeRecord(recordBuf);currBytes=0;}else{buffer.writeRecord(recordBuf);recordSize=0;}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(recordBuf!=null){buffer.writeRecord(recordBuf);currBytes=0;}else{buffer.writeRecord(recordBuf);recordSize=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){if(recordBuf!=null){buffer.writeRecord(recordBuf);currBytes=0;}else{buffer.writeRecord(recordBuf);recordSize=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){if(recordBuf!=null){buffer.writeRecord(recordBuf);currBytes=0;}else{buffer.writeRecord(recordBuf);recordSize=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){recordBuf.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed&&recordBuf.isDirectory()){recordBuf.writeEntryHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(entry.isDirectory()){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);fileName=entry.getName();}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(entry.isDirectory()){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);fileName=entry.getName();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){if(entry.isDirectory()){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);fileName=entry.getName();}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(entry.isDirectory()){entry.closeArchiveEntry();}else{buffer.writeRecord(fileName);fileName=entry.getName();}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){if(entry.isDirectory()){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);fileName=entry.getName();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){if(entry.isDirectory()){entry.closeArchiveEntry();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed&&recordBuf!=null){buffer.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed&&recordBuf!=null&&recordBuf.length>0){buffer.writeRecordHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(closed){entry.writeEntryHeader(assemBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordSize);}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeEntryHeader(assemBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(closed){entry.writeEntryHeader(assemBuf);}else{buffer.writeRecord(assemBuf,0,recordBuf,0,recordSize);}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(closed){entry.writeEntryHeader(assemBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.copyCurrentEntry(assemBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.copyCurrentEntry(assemBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.copyCurrentEntry(assemBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.copyCurrentEntry(assemBuf);}else{buffer.writeRecord(assemBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){buffer.writeRecord(recordBuf);}else{recordBuf=System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(recordBuf);}else{recordBuf=System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=null){if(!closed){buffer.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(!closed){buffer.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=null){if(!closed){buffer.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null||recordBuf.length()==0){recordBuf.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null||recordBuf.writeRecordHeader(recordBuf)){buffer.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(currName!=null&&recordBuf.length>0){buffer.writeRecord(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(currName!=null&&recordBuf.length()>0){buffer.writeRecord(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(currName!=null&&recordBuf!=null){buffer.writeRecord(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.getName().endsWith(".Archive")){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.getName().endsWith("Archive_")){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.getName().endsWith("Archive-")){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.getName().endsWith("Archive")){entry.closeArchiveEntry();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.getName().endsWith("Archive")){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176archiveEntry.copyCurrentEntry(buffer,recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeCurrentEntry(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){recordBuf.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){recordBuf.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){recordBuf.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeRecordHeader(assemBuf);}else{buffer.writeRecord(recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){recordBuf.writeEntryHeader(recordBuf,recordSize);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){recordBuf.writeEntryHeader(recordBuf,recordSize);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeEntryHeader(recordBuf,recordSize);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(recordBuf,recordSize);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){recordBuf.writeRecordHeader(recordBuf,recordSize);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(assemBuf,recordSize);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176for(inti=0;i<recordBuf.length;i++){buffer.writeInt(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){for(inti=0;i<recordBuf.length;i++){buffer.writeInt(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){for(inti=0;i<recordBuf.length;i++){buffer.writeInt(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(recordBuf!=null&&buffer.length>0){for(inti=0;i<recordBuf.length;i++){buffer.writeInt(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176for(inti=0;i<recordsBuf.length;i++){buffer.writeInt(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.copyCurrentEntry(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(!closed){entry.copyCurrentEntry(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){buffer.copyCurrentEntry(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(!closed){recordBuf.copyCurrentEntry(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(entry.isDirectory()){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){if(entry.isDirectory()){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(entry.isDirectory()){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);currBytes=0;}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){if(entry.isDirectory()){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){if(entry.isDirectory()){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);currBytes=0;}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeEntryHandler(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHandler(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeEntryHandler(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){entry.writeEntryHandler(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHandler(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHandler(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHandler(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeName(currName);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeName(currName);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){entry.writeName(currName);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeName(currName);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null||currName.length()==0){entry.writeName(currName);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeName(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(recordBuf,currName,assemLen);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(assemBuf,currName,assemLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(recordBuf,currName,assemLen);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(recordBuf,currName,assemLen);}else{buffer.writeRecord(REcordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176for(inti=recordBuf.size();i>=0;i++){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){for(inti=recordBuf.size();i>=0;i++){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=null){for(inti=recordBuf.size();i>=0;i++){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes==null){for(inti=recordBuf.size();i>=0;i++){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes==null){for(inti=recordBuf.size();i!=0;i++){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176for(inti=recordBuf.size();i!=0;i++){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){for(inti=recordBuf.size();i>>0;i++){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Entry<String,ArchiveEntry>entry=archiveEntry.entrySet().iterator().next();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Entry<String,ArchiveEntry>entry=assemBuf.entrySet().iterator().next();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Entry<String,ArchiveEntry>entry=nameBytes.entrySet().iterator().next();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Entry<String,ArchiveEntry>entry=records.entrySet().iterator().next();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Entry<String,ArchiveEntry>entry=recordsBuf.entrySet().iterator().next();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Entry<String,ArchiveEntry>entry=recordBuf.entrySet().iterator();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryName(currName);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryName(currName);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryName(currName);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryName(currName);}else{buffer.writeRecord(longFileMode);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryName(currName);}else{buffer.writeRecord(recordBuf);currBytes=0,currSize;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryName(currName);}else{buffer.writeRecord(recordBuf);currBytes=1;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryName(currName);}else{buffer.writeRecord(recordBuf,currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(longFileMode!=LONGFILE_GNU){if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(!closed){entry.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(closed||recordBuf!=null){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=null){if(closed||recordBuf!=null){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(closed||recordBuf!=null){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes==null){if(closed||recordBuf!=null){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){if(closed||recordBuf!=null){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=null){if(closed||recordBuf!=null){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){if(closed||recordBuf!=null){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeEntryHeader(assemBuf);}else{buffer.writeRecord(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(assemBuf);}else{buffer.writeRecord(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(assemLen);}else{buffer.writeRecord(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(currName);}else{buffer.writeRecord(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(recordBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){buffer.writeRecord(recordBuf,0,recordBuf,0,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordSize,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){if(closed){entry.writeEntryHeader(currName);}else{buffer.writeRecord(currBytes);currBytes=0;}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(closed){entry.writeEntryHeader(currName);}else{buffer.writeRecord(currBytes);currBytes=0;}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeEntryHeader(currName);}else{buffer.writeRecord(currBytes);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){if(closed){entry.writeEntryHeader(currName);}else{buffer.writeRecord(currBytes);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(closed){entry.writeEntryHeader(currName);}else{buffer.writeRecord(currBytes);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(currName);}else{buffer.writeRecord(currBytes);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null||currName.length()==recordBuf.length){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null||recordBuf.length==0){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){for(inti=0;i<records.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){for(inti=0;i<recordsBuf.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){if(currName!=null){entry.writeEntryHeader(currName);}else{buffer.writeRecord(longFileMode);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){if(currName!=null){entry.writeEntryHeader(currName);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){if(currName==null){entry.writeEntryHeader(currName);}else{buffer.writeRecord(longFileMode);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){if(currName!=null){entry.writeEntryHeader(currName);}else{buffer.writeRecord(longFileMode);}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Entry<K,V>entry=recordBuf.entrySet();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176finalEntry<K,V>entry=entry.getValue();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Entry<K,V>entry=this.archiveEntry.getValue();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Entry<K,V>entry=entry.getValue()+1;
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Entry<K,V>entry=entry.getKey();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(rerecordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(rerecordBuf);}else{buffer.writeRecord(rerecordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){buffer.writeRecord(rerecordBuf);}else{buffer.writeRecord(rerecordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(entry.isDirectory()){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(entry.isDirectory()){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(entry.isDirectory()){entry.closeArchiveEntry();}buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(recordBuf,recordName);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(recordBuf,name);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(recordBuf,currBytes,currSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecordHeader(recordBuf,currBytes,buffer);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(recordBuf,currBytes,assemBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Entry<K,V>entry=archivesEntry.getEntry();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){if(entry.isDirectory()){entry.closeArchiveEntry();}buffer.writeRecord(longFileMode);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){if(entry.isDirectory()){entry.closeArchiveEntry();buffer.writeRecord(longFileMode);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){if(entry.isDirectory()){entry.closeArchiveEntry();}else{buffer.writeRecord(longFileMode,recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){if(entry.isDirectory()){entry.closeArchiveEntry();}else{buffer.writeRecord(longFileMode);return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecordHeader(recordBuf,currBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(currBuf,recordBuf,assemLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeRecord(assemBuf);}else{buffer.writeRecord(recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry!=null&&recordBuf.length>0){entry.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){buffer.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry==null){entry.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.getName().endsWith("Archive")){archiveEntry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.getName().endsWith("Archive")||entry.getName().endsWith("ArchiveEntry.close")){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.getName().endsWith(".Archive")){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(buffer,recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Entry<String,ArchiveEntry>entry=archiveBuf.entrySet().iterator().next();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(buffer,currName,recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(currName,buffer);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(recordBuf,currName,buffer,assemLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(recordBuf,currName,buffer,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(assemBuf,currName,buffer);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(currName,archiveEntry);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed||recordBuf){entry.writeEntryHeader(currName);}else{buffer.writeRecord(currBytes);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(closed){recordBuf.writeEntryHeader(currName);}else{buffer.writeRecord(currBytes);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeRecord(recordBuf);}else{buffer.writeRecord(currBytes);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){for(inti=0;i<recordBuf.length;++i){buffer.writeLong(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){for(inti=0;i<recordBuf.length;++i){buffer.writeInt(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){for(inti=0;i<recordsBuf.length;++i){buffer.writeLong(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){for(inti=0;i<recordBuf.length;++i){buffer.writeInt(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){recordBuf=buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){recordBuf=buffer.copyRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(assemBuf,currBytes,recordLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(assemBuf,currBytes,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(buffer,currBytes,assemLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecordName(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecordName(currName);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(recordBuf);currBytes=0;}else{buffer.writeRecord(recordBuf);recordSize=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){buffer.writeRecord(recordBuf);currBytes=0;}else{buffer.writeRecord(recordBuf);recordSize=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes==null){buffer.writeRecord(recordBuf);currBytes=0;}else{buffer.writeRecord(recordBuf);recordSize=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=null){buffer.writeRecord(currBytes);currBytes=0;}else{buffer.writeRecord(currBytes);recordSize=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=null){buffer.writeRecord(currBytes);currBytes=0;}else{buffer.writeRecord(currBuf);recordSize=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){buffer.writeRecord(currName);currBytes=0;}else{buffer.writeRecord(currName);recordSize=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=null){buffer.writeRecord(currBuf);currBytes=0;}else{buffer.writeRecord(currBuf);recordSize=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){buffer.writeRecordHeader(rerecordBuf);}else{buffer.writeRecord(rerecordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){buffer.writeRecordHeader(reRecordBuf);}else{buffer.writeRecord(rerecordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){buffer.writeRecordHeader(rerecordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(recordBuf,currBytes);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(closed){recordBuf.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(closed){recordBuf=buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(buffer,recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(recordBuf,buffer);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){recordBuf.writeRecord(recordBuf,currBytes);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){recordBuf.writeRecord(currBytes);}else{buffer.writeRecord(currBytes);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){recordBuf=newStringBuffer();buffer.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){entry.writeEntryHeader(currName);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeRecordHeader(currName);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHader(currName);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryWrapperHeader(currName);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){if(closed){buffer.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecordHeader(currName,recordBuf+1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecordHeader(currName,recordBuf,0);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176byte[]recordBuf=newbyte[LONGFILE_ERROR.length()+4];
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){entry.writeEntryHeader(currName);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){entry.writeEntryHeader(currName);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeRecordHeader(currName);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHader(currName);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHandler(currName);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){recordBuf.writeEntryHandler(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){recordBuf.writeEntryHeader(currName);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){recordBuf.writeEntryHeader(buffer);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){recordBuf.writeEntryHeader(getName());}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.getName()!=null){entry.closeArchiveEntry();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed&&recordBuf!=null){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed||recordBuf!=null){entry.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecordHeader(recordBuf,currName,assemLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(buffer,currName,assemLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(currName,assemLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){entry.writeEntryHeader(recordBuf,currName);}else{buffer.writeRecord(recordBuf);return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){recordBuf.writeEntryHeader(recordBuf,currName);}else{buffer.writeRecord(recordBuf);return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(recordBuf,name);}else{buffer.writeRecord(recordBuf);return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeRecord(assemBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){if(closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){for(inti=0;i<recordBuf.length;i++){buffer.write(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=LONGFILE_GNU){entry.writeRecordHeader(recordBuf,currBytes);}else{buffer.writeRecord(recordBuf);return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=LONGFILE_GNU){entry.writeEntryHeader(recordBuf,recordBuf);}else{buffer.writeRecord(recordBuf);return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=LONGFILE_GNU){entry.writeEntryHeader(recordBuf,recordSize);}else{buffer.writeRecord(recordBuf);return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){entry.writeEntryHeader(currName);}else{buffer.writeRecord(longFileMode);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){entry.writeEntryHeader(currName);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Entry<K,V>recordBuf=entry.getValue();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){currName=entry.getName();}else{buffer.writeRecord(longFileMode);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Entry<K,V>recordBuf=entry.getRecordBuf();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){currName=archiveEntry.getName();}else{buffer.writeRecord(longFileMode);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(!closed){entry.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(!closed){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){if(closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordSize);}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176buffer.writeRecord(recordBuf,0);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176buffer.closeArchiveEntry();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176buffer.writeRecord(recordBuf,currSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){for(inti=0;i<records.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){for(inti=0;i<recordsBuf.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){for(inti=0;i<RecordBuffer.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null||recordBuf.length==0){for(inti=0;i<recordBuf.length;i++){buffer.write(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){for(inti=0;i<records.length;i++){buffer.write(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){for(inti=0;i<records.length;i++){buffer.write(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(recordBuf,recordName);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(recordBuf,recordName);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176buffer.writeRecord(recordBuf);currBytes=0;
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.closeArchiveEntry();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf,currBytes);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){buffer.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeRecordHeader(recordBuf);}else{buffer.writeRecord(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){for(inti=0;i<recordBuf.length;++i){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){for(inti=0;i<recordsBuf.length;++i){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){for(inti=0;i<recordsBuf.length;++i){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176recordBuf.writeRecordHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176trackBuf.writeRecordHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176RecordBufferrecordBuf=recordBuf.writeRecordHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){buffer.writeRecord(recordBuf,recordSize);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){buffer.writeRecord(assemBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){buffer.writeRecord(recordBuf,recordSize);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){buffer.writeRecord(longFileMode);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){buffer.writeArchiveEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){entry.writeEntryHeader(recordBuf,currName);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){buffer.writeRecord(recordBuf,currName);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){entry.writeEntryHeader(recordBuf,recordName);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){entry.writeEntryHeader(currName);}else{buffer.writeRecord(recordBuf);currBytes=1;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeRecordHeader(currName);}else{buffer.writeRecord(recordBuf);currBytes=1;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHader(currName);}else{buffer.writeRecord(recordBuf);currBytes=1;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){buffer.writeRecord(currName);}else{buffer.writeRecord(recordBuf);currBytes=1;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(closed){buffer.writeEntryHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed&&recordBuf!=null){recordBuf.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){recordBuf.writeRecord(assemBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176after(closed){buffer.writeRecordHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(closed){recordBuf=buffer.writeRecordHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(closed){recordBuf.writeRecordHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176out.writeRecordHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176OutputStreamout=buffer.getOutputStream();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176after(closed){buffer.writeRecord(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(assemBuf);}else{buffer.writeRecord(assemBuf,0,recordSize,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(assemBuf);}else{buffer.writeRecord(assemLen,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){buffer.writeRecordHeader(recordBuf,currName);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeRecordHeader(recordBuf,name);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){entry.writeRecordHeader(recordBuf,recordName);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){for(inti=recordBuf.size();i>=0;i++){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){for(inti=recordBuf.size();i>=0;i++){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){for(inti=recordBuf.size()-1;i>=0;i++){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176after(closed){buffer.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176after(closed){buffer.writeRecordHeader(recordBuf);}elseif(longFileMode==LONGFILE_GNU){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176after(closed){buffer.writeRecordHeader(recordBuf);}elseif(longFileMode!=LONGFILE_GNU){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176after(closed){buffer.writeRecordHeader(recordBuf);}elseif(longFileMode==LONGFILE_GNU){buffer.writeRecord
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176after(closed){buffer.writeRecordHeader(recordBuf);}if(longFileMode==LONGFILE_GNU){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(recordBuf,nameBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecordHeader(recordBuf,assemBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecordHeader(recordBuf,assemLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeRecordHeader(currName);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Entry<String,ArchiveEntry>buffer=entry.getEntry();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){buffer.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176finalTarArchiveEntry<K,V>entry=archiveEntry.getEntry();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176finalTarArchiveEntry<K,V>entry=recordBuf.getEntry();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes==null){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=null){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=null){buffer.writeRecord(currBuf);}else{buffer.writeRecord(currBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes==null){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176after(closed){buffer.writeRecord(assemBuf);}elseif(longFileMode==LONGFILE_GNU){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176after(closed){buffer.writeRecord(assemBuf);}elseif(longFileMode!=LONGFILE_GNU){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176after(closed){buffer.writeRecord(assemBuf);}elseif(longFileMode>=LONGFILE_GNU){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176after(closed){buffer.writeRecord(assemBuf,recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176after(closed){buffer.writeRecord(assemBuf);}if(recordBuf!=null){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){buffer.writeRecord(recordBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(buffer,recordBuf,currBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(recordBuf,currBytes,buffer);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176after(closed){recordBuf.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(closed&&recordBuf!=null){recordBuf.writeRecord(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeRecord(recordBuf,recordSize);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeRecord(longFileMode);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(closed){recordBuf.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeRecordBytes(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){if(closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeRecordEntryHader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){entry.writeRecordEntryHader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeRecordEntryHeader(recordBuf,recordSize);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){entry.writeRecordEntryHeader(recordBuf);}else{buffer.writeRecord(rerecordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.copyCurrentEntry(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.copyCurrentEntry(recordBuf,recordSize);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(assemBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(buffer,currSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecordHeader(recordBuf,currName,buffer);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176archiveEntry.copyRecord(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176archiveEntry.copyCurrentEntry(recordBuf,currSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(assemBuf);}else{buffer.writeRecord(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(assemLen,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){recordBuf.writeEntryHader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){buffer.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecordEntry(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeArchiveEntry(recordBuf);}else{buffer.writeRecord(recordBuf);return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed||recordBuf!=null){buffer.writeRecordHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){recordBuf.writeRecord(currBuf);}else{buffer.writeRecord(currBytes);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(assemBuf,recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeRecordHeader(recordBuf,recordSize);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.copyCurrentEntry(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176safely()){entry.copyCurrentEntry(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.copyCurrentEntry(recordBuf,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecordHeader(assemBuf,currName);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(assemBuf,currName,recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecord(assemBuf,currName);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(entry.isDirectory()){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);continue;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(entry.isDirectory()){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);return
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeRecordHeader(currName);}else{buffer.writeRecord(recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecordHeader(assemBuf);}else{buffer.writeRecord(recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(currName!=null&&recordBuf!=null){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeRecordHeader(currName);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecordHeader(assemBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){if(entry.isDirectory()){entry.closeArchiveEntry();}else{buffer.writeRecord(LONGFILE_GNU);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){if(entry.isDirectory()){entry.closeArchiveEntry();}buffer.writeRecord(LONGFILE_GNU);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){if(entry.isDirectory()){entry.closeArchiveEntry();buffer.writeRecord(LONGFILE_GNU);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){if(entry.isDirectory()){entry.closeArchiveEntry();}else{buffer.writeRecord(LONGFILE_GNU);return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){entry.close();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176archiveEntry.close();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isDirectory()){entry.close();}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=null){entry.writeEntryHeader(currBytes);}else{buffer.writeRecord(recordBuf);currBytes=1;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=null){entry.writeEntryHeader(currBytes);}else{buffer.writeRecord(recordBuf);currBytes=0;return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(recordBuf,recordBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=LONGFILE_GNU){entry.writeEntryHeader(recordBuf,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecordHeader(recordBuf,recordSize);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){buffer.writeRecordHeader(recordBuf,recordSize);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(recordBuf,0,recordSize);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(recordBuf,currSize);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(recordBuf,currBytes);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(assemBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(assemBuf);}else{buffer.writeRecord(recordBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){buffer.writeRecord(recordBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){if(closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecordHeader(assemBuf,currSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176after(closed){buffer.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(assemBuf,currName);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.copyCurrentEntry(recordBuf,recordSize);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(recordBuf,currName,buffer);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(entry.isDirectory()){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);currBytes=0
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(currName!=null&&recordBuf!=null){buffer.writeRecordHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(currName!=null&&recordBuf.length>0){buffer.writeRecordHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHandler(currName);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeEntryHandler(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecordHandler(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeEntryHandler(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){recordBuf.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){buffer.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecordBytes(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecordHeader(recordBuf,currBytes);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=1;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176buffer.writeRecordHeader(recordBuf);currBytes=0;
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeRecord(recordBuf);}else{buffer.writeRecord(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){recordBuf.writeRecordHeader(0);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){for(inti=0;i<records.length;++i){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){for(inti=0;i<recordsBuf.length;++i){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){for(inti=0;i<RecordBuffer.length;++i){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null||recordBuf!=null){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null||currName!=null){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){if(entry.isDirectory()){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);fileName=entry.getName();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);fileName=entry.getName();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176buffer.writeRecord(recordBuf);fileName=entry.getName();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(entry.isDirectory()){entry.closeArchiveEntry();}else{buffer.writeRecord(fileName);fileName=entry.getName();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentStructure(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentStructure(currName);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeName(name);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeName(fileName);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176after(closed){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(closed){recordBuf.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(closed){recordBuf=buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(closed){recordBuf=buffer.writeRecord(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(closed){recordBuf.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(closed){recordBuf=buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){buffer.writeRecord(recordBuf,currBytes);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(REcordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Entry<K,V>entry=recordBuf.getEntry();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=LONGFILE_GNU){entry.writeEntryHeader(recordBuf,recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=LONGFILE_GNU){entry.writeEntryHeader(recordBuf,recordSize);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=null){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes==null){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=null){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=null){recordBuf.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){buffer.writeRecordHeader(recordBuf,recordSize);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176byte[]recordBuf=newbyte[LONGFILE_GNU.length()+3];
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(closed){recordBuf.writeEntryHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176safely()){entry.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(newFile(recordBuf),currName);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(newFile(recordBuf),assemLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(newFile(recordBuf),recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(newFile(fileName));
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176RecordBufferbuffer=recordBuf.writeEntryHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){recordBuf.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176recordBuf.writeEntryHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeEntry(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeEntry(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeEntry(recordBuf);}else{buffer.writeRecord(recordBuf);return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeEntry(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176this.archiveEntry.copyRecord(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176this.archiveEntry.copyCurrentEntry(recordBuf,currSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176this.archiveEntry.copyCurrentEntry(newFile(recordBuf));
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){for(inti=0;i<recordsBuf.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){for(inti=0;i<recordsBuf.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){for(inti=0;i<recordBuf.length;i++){buffer.writeInt(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){for(inti=0;i<recordsBuf.length;i++){buffer.writeInt(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){for(inti=0;i<recordsBuf.length;i++){buffer.writeInt(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){entry.writeEntryHeader(currName);}else{buffer.writeRecord(recordBuf);currBytes=0,currSize;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(currName);}else{buffer.writeRecord(recordBuf);currBytes=0,currSize;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHader(currName);}else{buffer.writeRecord(recordBuf);currBytes=0,currSize;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){buffer.writeRecord(currName);}else{buffer.writeRecord(recordBuf);currBytes=0,currSize;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(currName);}else{buffer.writeRecord(recordBuf);currBytes=0,currSize
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeRecordFieldHader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeRecordEntry(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed&&recordBuf.length>0){recordBuf.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(closed){recordBuf.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){recordBuf.writeEntryHandler(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed&&buffer.isDirectory()){buffer.writeRecordHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Entry<K,V>entry=recordBuf.getValue();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Entry<K,V>entry=buffer.getValue();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed&&recordBuf!=null){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed||currBytes==null){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed||currBytes!=null){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed||currBytes==null){entry.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed||currBytes!=null){entry.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){System.arraycopy(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){entry.writeRecordBytes(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeRecordBytes(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeRecordBytes(recordBuf,recordSize);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){entry.writeRecordBytes(recordBuf);}else{buffer.writeRecord(rerecordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(recordName);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecord(recordBuf,currSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecord(recordBuf,currName,buffer);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){for(inti=0;i<recordBuf.length;i++){buffer.writeLong(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){for(inti=0;i<recordsBuf.length;i++){buffer.writeLong(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){buffer.writeRecordBytes(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){buffer.writeRecordHader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176after(closed){recordBuf.writeRecordHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176safely()){entry.writeRecordHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){for(inti=recordBuf.length;i>=0;i++){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){for(inti=recordBuf.length;i>=0;i++){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){for(inti=recordBuf.length;i<1;i++){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){for(inti=recordBuf.length;i<2;i++){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(rerecordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){buffer.writeRecord(rerecordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){buffer.writeRecord(rerecordBuf);}else{buffer.writeRecord(rerecordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){entry.closeArchiveEntry();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){buffer.closeArchiveEntry();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Entry<K,V>buffer=entry.getEntry();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176ArchiveEntryentry=getArchiveEntry();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176ArchiveEntryentry=newArchiveEntry(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(assemBuf,recordSize,currBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(assemBuf,assemLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(assemBuf,0,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(assemBuf,recordSize+1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){entry.writeEntryHeader(currName);}else{buffer.writeRecord(longFileMode);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){entry.writeEntryHeader(currName);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHandler(currName);}else{buffer.writeRecord(longFileMode);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Entry<String,ArchiveEntry>entry=entry.getValue();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Entry<String,ArchiveEntry>entry=this.recordBuf.entrySet().iterator().next();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){buffer.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){recordBuf.writeEntryHandler(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed||recordBuf!=null){entry.writeEntryHeader(assemBuf);}else{buffer.writeRecord(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(assemBuf,recordBuf);}else{buffer.writeRecord(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(assemBuf,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed||recordBuf!=null){recordBuf.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes==null){recordBuf.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isRecorded()){entry.closeArchiveEntry();}else{buffer.writeRecord(LONGFILE_GNU);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.getName().endsWith("Archive")){entry.closeArchiveEntry();}else{buffer.writeRecord(LONGFILE_GNU);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.getName().endsWith(".Archive")){entry.closeArchiveEntry();}else{buffer.writeRecord(LONGFILE_GNU);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(recordBuf,0,recordSize);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(recordBuf,recordSize+1);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(recordBuf,currBytes);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Entry<K,V>entry=longLinkEntry.getEntry();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHandler(assemBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(assemBuf);}else{buffer.writeRecord(recordBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(assemBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeEntryHeader(assemBuf);}else{buffer.writeRecord(recordBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeName(currName);}else{buffer.writeRecord(recordName);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){entry.writeRecordHader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){entry.writeRecordHader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(recordBuf,recordBuf);}else{buffer.writeRecord(recordBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(assemBuf);}else{buffer.writeRecord(recordBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(recordBuf,recordBuf);}else{buffer.writeRecord(recordBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(currName);}else{buffer.writeRecord(recordBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){buffer.writeRecord(recordBuf);currBytes=0;}else{buffer.writeRecord(recordBuf);recordSize=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){buffer.writeRecord(currName);currBytes=0;}else{buffer.writeRecord(recordBuf);recordSize=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=null){buffer.writeRecord(currBytes);currBytes=0;}else{buffer.writeRecord(recordBuf);recordSize=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(currName!=null&&recordBuf.length>0){for(inti=0;i<recordBuf.length;i++){buffer.write(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(currName!=null){for(inti=0;i<recordBuf.length;i++){buffer.write(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){entry.writeRecordHeader(recordBuf,currName);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){entry.writeRecordHeader(recordBuf,recordName);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){entry.writeEntryHeader(recordBuf,recordSize);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Entry<?>entry=recordBuf.entryEntry();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){recordBuf.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){recordBuf=buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(currName);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null&&recordBuf.isEnabled(Feature.AUTO_CLOSE_ERROR)){recordBuf.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(currName!=null&&recordBuf.isEnabled(Feature.AUTO_CLOSE_ERROR)){recordBuf.writeEntryHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(currName!=null&&recordBuf.isRecorded()){recordBuf.writeEntryHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null&&recordBuf.isEnabled(Feature.AUTO_CLOSE_SOURCE)){recordBuf.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(currName!=null&&recordBuf.isEnabled(Feature.AUTO_CLOSE_SOURCE)){recordBuf.writeEntryHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){entry.writeEntryHeader(recordBuf,currName);}else{buffer.writeRecord(recordBuf);return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){entry.writeEntryHeader(recordBuf,recordName);}else{buffer.writeRecord(recordBuf);return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){entry.writeEntryHeader(recordBuf,name);}else{buffer.writeRecord(recordBuf);return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=null){entry.writeEntryHeader();}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=null){entry.writeEntryHeader(currBytes);}else{buffer.writeRecord(recordBuf);currBytes=0;break;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isDirectory()){if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecordHeader(currName,LONGFILE_GNU);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed||recordBuf!=null){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(recordBuf,recordSize);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed||recordBuf!=null){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){entry.writeEntryHeader(currName);}else{buffer.writeRecord(recordBuf);currBytes=0,currSize;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHandler(currName);}else{buffer.writeRecord(recordBuf);currBytes=0,currSize;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(recordBuf,recordSize+1);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(recordBuf,recordLONGFILE_GNU);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHandler(recordBuf,recordSize);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(recordBuf,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeRecordEntry(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeRecordHeader(recordBuf,recordSize);}else{buffer.writeRecord(recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(currName,currSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeCurrentEntry(currName,recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(currName!=null){recordBuf.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(!closed||recordBuf!=null){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed||recordBuf!=null){entry.writeEntryHandler(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(recordBuf,recordBuf);}else{buffer.writeRecord(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(assemBuf,recordSize);}else{buffer.writeRecord(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176byte[]recordBuf=newbyte[LONGFILE_GNU.toString()];
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.getName().endsWith("Archive")){entry.closeArchiveEntry();}else{buffer.writeRecord(longFileMode);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isRecorded()){entry.closeArchiveEntry();}else{buffer.writeRecord(longFileMode);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.getName().endsWith(".Archive")){entry.closeArchiveEntry();}else{buffer.writeRecord(longFileMode);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(closed&&recordBuf!=null){buffer.writeRecordHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(closed&&recordBuf!=null){buffer.writeRecordHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){recordBuf.writeEntryWordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(currBytes,recordBuf,0);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry==null){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isDirectory()){if(currBytes==null){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeRecord(recordBuf,recordSize);}else{buffer.writeRecord(recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeRecord(recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null||recordBuf!=null){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null||recordBuf.length<0){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null||recordBuf.length<0){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null&&recordBuf.length>0){buffer.writeRecordHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry!=null&&entry.closeArchiveEntry();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry!=null?entry.closeArchiveEntry():null;
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyIn(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){if(!closed){buffer.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(!closed||recordBuf!=null){buffer.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeCurrentEntry(assemBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeRecord(assemBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeRecord(assemBuf);}else{buffer.writeRecord(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isDirectory()){if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isDirectory()){if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordBuf,0,recordBuf.length);}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(recordBuf,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){entry.writeEntryHeader(currName);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecordHeader(currName,currSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecordHeader(recordBuf,0);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){entry.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){for(inti=recordBuf.length-1;i<0;i++){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){for(inti=recordBuf.length;i<0;i++){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isDirectory()){if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordSize);}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(currName,fileName,buffer);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.getName().endsWith("Archive")||entry.getName().endsWith("Archive")){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.getName().endsWith(".Archive")||entry.getName().endsWith(".Archive")){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.getName().endsWith("Archive")||entry.getName().endsWith("Archive-")){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.getName().endsWith("Archive")||entry.getName().endsWith("ArchiveEntry.close")){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHandler(assemBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(assemLen);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeEntryHeader(assemBuf);}else{buffer.writeRecord(recordBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){for(inti=recordBuf.size();i>=0;i++){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isDirectory()){for(inti=recordBuf.size();i>=0;i++){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(currName!=null&&recordBuf.isRecorded()){recordBuf.writeRecordHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null&&recordBuf.isRecorded()){recordBuf.writeRecordHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null&&recordBuf.length()>0){recordBuf.writeRecordHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(currName!=null&&recordBuf.isRecorded()){recordBuf.writeRecordHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(rerecordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHandler(recordBuf);}else{buffer.writeRecord(rerecordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){entry.writeRecordEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecordEntryHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){entry.writeRecordEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeRecordEntryHandler(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){entry.writeRecordEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntry(assemBuf,recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(assemBuf,recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(closed){recordBuf.writeRecord(assemBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){entry.writeEntryHeader(currName);}else{buffer.writeRecord(recordBuf);currBytes=1;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHandler(currName);}else{buffer.writeRecord(recordBuf);currBytes=1;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.getName().endsWith("Archive")){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isArchive()){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.getName().endsWith(".Archive")){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes==null){for(inti=0;i<recordBuf.length;i++){buffer.writeLong(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){for(inti=0;i<records.length;i++){buffer.writeLong(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(assemLen,currName,recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed||recordBuf!=null){recordBuf.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed||recordBuf!=null){recordBuf.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeCurrentEntry(currName);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){entry.writeRecordBytes(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){entry.writeRecordBytes(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecordHeader(recordBuf,currBytes,0);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecordHeader(recordBuf,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isDirectory()){if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(closed){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){for(inti=0;i<recordBuf.length;++i){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed||recordBuf!=null){entry.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed||recordBuf!=null){entry.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeRecord(recordBuf,recordSize);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Thread.currentThread().getContextClassLoader().writeRecordHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null||recordBuf==null){recordBuf=buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null||recordBuf!=null){recordBuf=buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry==null){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null||entry.isDirectory()){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){entry.closeEntry();}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null||entry.isDirectory()){entry.closeArchiveEntry();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeRecordHeader(assemBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeRecordEntry(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isDirectory()){currName=entry.getName();}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isDirectory()){entry.close();}else{buffer.writeRecord(recordBuf);return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isDirectory()){entry.close();}else{buffer.writeRecord(recordBuf);fileName=entry.getName();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed||recordBuf!=null){recordBuf.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed||recordBuf!=null){recordBuf.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){recordBuf.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){entry.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Entry<String,ArchiveEntry>currName=entry.getName();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes==null){for(inti=0;i<recordBuf.length;++i){buffer.writeLong(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null||recordBuf.length<0){for(inti=0;i<recordBuf.length;++i){buffer.writeLong(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(assemBuf,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(assemBuf,assemLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(assemBuf!=null){entry.writeEntryHeader(assemBuf,recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(assemBuf!=null){entry.writeEntryHeader(assemBuf,recordSize);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){for(inti=0;i<records.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(currName!=null&&recordBuf!=null){buffer.writeEntryHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){for(inti=0;i<records.length;i++){buffer.writeInt(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){for(inti=0;i<recordBuf.length;i++){buffer.writeInt(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){for(inti=0;i<recordBuf.length;i++){buffer.writeInt(recordBuf[i]);}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntry(assemBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed||recordBuf!=null){buffer.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes==null){buffer.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){recordBuf=buffer.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(assemLen,currBytes,recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(assemBuf,0,assemLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){entry.copyCurrentEntry(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){entry.copyCurrentEntry(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){entry.writeEntryHeader(recordBuf,currName);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){entry.writeEntryHeader(recordBuf,recordName);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed||recordBuf!=null){entry.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed||recordBuf!=null){entry.writeEntryHandler(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed||recordBuf!=null){entry.writeEntryHeader(recordBuf,currBytes);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed&&recordBuf.length>0){recordBuf.writeEntryHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed&&recordBuf.endsWith(".js")){recordBuf.writeEntryHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Entry<K,V>entry=entries.getValue();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176this.archiveEntry.copyCurrentEntry(recordBuf,assemLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176this.archiveEntry.copyCurrentEntry(recordBuf,0);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(currName!=null&&recordBuf.length>0){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(currName!=null){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){entry.writeRecordHeader(recordBuf);}else{buffer.writeRecord(rerecordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){entry.writeRecordHeader(rerecordBuf);}else{buffer.writeRecord(rerecordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(assemBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isArchive()){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.getName().endsWith("Archive")){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(currName,recordBuf,0);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(currName,recordBuf,false);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(currName,recordBuf,fileMode);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){entry.writeRecordHeader(recordBuf,recordSize);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(currBytes);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){entry.writeEntryHeader(currName);}else{buffer.writeRecord(currBytes);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){entry.writeEntryHeader(currName);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed||recordBuf==null){recordBuf.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(assemBuf,0,buffer);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed||recordBuf!=null){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(currName);}else{buffer.writeRecord(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(currName!=null&&recordBuf.length>0){recordBuf.writeRecordHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(currName!=null&&recordBuf.length()>0){recordBuf.writeRecordHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){for(inti=0;i<recordBuf.length;++i){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){for(inti=0;i<records.length;++i){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){for(inti=0;i<recordBuf.length;++i){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes==LONGFILE_GNU){entry.writeEntryHeader(recordBuf,currBytes);}else{buffer.writeRecord(recordBuf);returned;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){entry.copyCurrentEntry(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.copyCurrentEntry(recordBuf,recordSize);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null&&recordBuf!=null){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null||recordBuf.length<0){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){entry.writeRecordHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176after(closed){entry.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){entry.writeEntryHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecordHeader(currName);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(closed){buffer.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(true){recordBuf.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null&&recordBuf!=null){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176because(currName!=null){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isArchive()){entry.closeEntry();}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isDirectory()||entry.isDirectory()){entry.closeArchiveEntry();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){recordBuf=buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(closed){recordBuf=buffer.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecordEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.getName().endsWith(".Archive")){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);fileName=entry.getName();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176archiveEntry.copyInstance(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176archiveEntry.writeRecord(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176archiveEntry.copyInformation(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeRecordHeader(recordBuf,currBytes);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeFieldName(currName);
