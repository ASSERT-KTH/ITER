projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecord(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecordHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(recordBuf,currBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(currName);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(recordBuf,currName);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.closeArchiveEntry();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=LONGFILE_GNU){entry.writeEntryHeader(recordBuf,currBytes);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(currBytes,recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=LONGFILE_GNU){entry.writeEntryHeader(recordBuf,currBytes);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(assemBuf,currBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(currName,recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecordHeader(recordBuf,currBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes!=LONGFILE_GNU){entry.writeEntryHeader(recordBuf,currBytes);}else{buffer.writeRecord(recordBuf);return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){recordBuf.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){recordBuf.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){recordBuf.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176while(!closed){recordBuf.writeEntryHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){entry.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){for(inti=0;i<recordBuf.length;i++){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176buffer.writeRecord(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){for(inti=0;i<recordBuf.length;i++){buffer.write(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){for(inti=0;i<recordBuf.length;++i){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){buffer.writeRecord(recordBuf);}else{System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeRecordHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){entry.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){entry.writeRecordHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeRecordHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){buffer.writeRecord(recordBuf);}else{System.arraycopy(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordSize);}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isDirectory()){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isDirectory()){entry.closeArchiveEntry();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isDirectory()){entry.closeArchiveEntry();}else{buffer.writeRecord(longFileMode);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isArchive()){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.getName().endsWith("Archive")){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isDirectory()){entry.closeArchiveEntry();}else{buffer.writeRecord(LONGFILE_GNU);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isDirectory()){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){recordBuf.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){buffer.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){recordBuf.writeRecordHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeRecordHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){buffer.writeRecordHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Entry<K,V>entry=entry.getEntry();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){recordBuf.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(recordBuf,currName);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(recordBuf,currName);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecordHeader(currName,recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeRecordHeader(recordBuf,currName);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){recordBuf.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){recordBuf.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){buffer.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){buffer.writeRecordHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Entry<K,V>entry=entry.getValue();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){buffer.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){recordBuf.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(!closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){if(!closed){buffer.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){buffer.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(currName);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(currName);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(currName);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(currName);}else{buffer.writeRecord(recordBuf);currBytes=0,currSize;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(currName);}else{buffer.writeRecord(recordBuf);currBytes=1;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(currName);}else{buffer.writeRecord(longFileMode);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(currName);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.copyCurrentEntry(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){entry.copyCurrentEntry(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176this.archiveEntry.copyCurrentEntry(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(assemBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176archiveEntry.copyCurrentEntry(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(recordBuf,currBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecordHeader(recordBuf,currName);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(assemBuf,currName);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(recordBuf,currName,buffer);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecord(recordBuf,currName);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(recordBuf,currName,assemLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeRecordHeader(recordBuf,currSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(recordBuf,currName);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(recordBuf,currSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(buffer);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeArchiveEntry(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeName(currName);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){recordBuf.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(currName);}else{buffer.writeRecord(currBytes);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(rerecordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){entry.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){entry.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeRecordHader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeRecordBytes(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){entry.writeRecordHeader(recordBuf);}else{buffer.writeRecord(rerecordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(!closed){buffer.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){recordBuf=buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.close();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){entry.closeArchiveEntry();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isDirectory()){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(assemBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecordHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){for(inti=0;i<recordBuf.length;i++){buffer.writeLong(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){for(inti=0;i<recordBuf.length;i++){buffer.write(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){for(inti=0;i<recordBuf.length;i++){buffer.writeInt(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176byte[]recordBuf=newbyte[LONGFILE_ERROR.length()];
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){buffer.writeRecord(recordBuf);currBytes=0;}else{buffer.writeRecord(recordBuf);recordSize=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(currBuf,recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(recordBuf,currBytes,assemLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(recordBuf,currBytes,buffer);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){entry.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName==null){entry.writeRecordHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeRecordEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeRecord(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry.isDirectory()){entry.closeArchiveEntry();}else{buffer.writeRecord(recordBuf);fileName=entry.getName();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(currBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHeader(recordBuf,assemBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(entry!=null){entry.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176Entry<String,ArchiveEntry>entry=recordBuf.entrySet().iterator().next();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(assemBuf,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.copyCurrentEntry(newFile(recordBuf));
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(recordBuf,recordSize);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currName!=null){entry.writeEntryHeader(recordBuf,currName);}else{buffer.writeRecord(recordBuf);return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(assemBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(assemBuf);}else{buffer.writeRecord(assemBuf,0,recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed||recordBuf!=null){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(currBytes==null){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);currBytes=0;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeRecordHeader(recordBuf);}else{buffer.writeRecord(recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){for(inti=0;i<recordBuf.length;++i){buffer.writeRecord(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){for(inti=0;i<recordBuf.length;++i){buffer.writeLong(recordBuf[i]);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176byte[]recordBuf=newbyte[LONGFILE_GNU.length()];
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){for(inti=recordBuf.length;i<0;i++){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(recordBuf!=null){for(inti=recordBuf.size()-1;i>=0;i++){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed||recordBuf!=null){entry.writeEntryHeader(recordBuf);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed||recordBuf!=null){entry.writeEntryHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(recordBuf,recordSize);}else{buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryName(currName);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntry(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryName(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176entry.writeEntryHandler(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java176if(closed){entry.writeEntryHeader(assemBuf);}else{buffer.writeRecord(recordBuf);System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
