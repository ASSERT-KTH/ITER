bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NULL)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NULL)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NULL)  {	  if(entry.getName().length()    ==    TarConstants.NULL)    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
2	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.LONGLINK)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.LONGLINK)  {	  if(entry.getName().length()    ==    TarConstants.NULL)    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
3	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.SECOND)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.SECOND)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.SECOND)  {	  if(entry.getName().length()    ==    TarConstants.NULL)    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
4	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME  &&  entry.getName().length()  ==  TarConstants.FILE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME  &&  entry.getName().length()  ==  TarConstants.FILE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NAME  &&  entry.getName().length()  ==  TarConstants.FILE_LONGNAME)  {	  if(entry.getName().length()    ==    TarConstants.NAME    ||    entry.getName().length()    ==    TarConstants.FILE_LONGNAME)    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
5	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME  ||  entry.getName().length()  ==  TarConstants.FILE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME  ||  entry.getName().length()  ==  TarConstants.FILE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NAME  ||  entry.getName().length()  ==  TarConstants.FILE_LONGNAME)  {	  if(entry.getName().length()    ==    TarConstants.NAME    ||    entry.getName().length()    ==    TarConstants.FILE_LONGNAME)    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
6	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME  ||  entry.getName().length()!=  TarConstants.FILE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME  ||  entry.getName().length()!=  TarConstants.FILE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NAME  ||  entry.getName().length()!=  TarConstants.FILE_LONGNAME)  {	  if(entry.getName().length()    ==    TarConstants.NAME    ||    entry.getName().length()    ==    TarConstants.FILE_LONGNAME)    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
7	[BUG]  [BUGGY]  if(entry.getName().length()  ==  LONGFILE_ERROR  ||  entry.getName().length()  ==  TarConstants.FILE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  LONGFILE_ERROR  ||  entry.getName().length()  ==  TarConstants.FILE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  LONGFILE_ERROR  ||  entry.getName().length()  ==  TarConstants.FILE_LONGNAME)  {	  if(entry.getName().length()    ==    TarConstants.NAME    ||    entry.getName().length()    ==    TarConstants.FILE_LONGNAME)    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
8	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME_LONGLINK  ||  entry.getName().length()  ==  TarConstants.FILE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME_LONGLINK  ||  entry.getName().length()  ==  TarConstants.FILE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NAME_LONGLINK  ||  entry.getName().length()  ==  TarConstants.FILE_LONGNAME)  {	  if(entry.getName().length()    ==    TarConstants.NAME    ||    entry.getName().length()    ==    TarConstants.FILE_LONGNAME)    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
9	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME  ||  entry.getName().length()  ==  TarConstants.FILE_GNU)  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME  ||  entry.getName().length()  ==  TarConstants.FILE_GNU)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NAME  ||  entry.getName().length()  ==  TarConstants.FILE_GNU)  {	  if(entry.getName().length()    ==    TarConstants.NAME    ||    entry.getName().length()    ==    TarConstants.FILE_LONGNAME)    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
10	[BUG]  [BUGGY]  int  longFileMode  =  entry.getName().getLongSize()  +  1;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  int  longFileMode  =  entry.getName().getLongSize()  +  1;  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	int  longFileMode  =  entry.getName().getLongSize()  +  1;	  int    longFileMode    =    entry.getName().getLongSize();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
11	[BUG]  [BUGGY]  int  longFileMode  =  entry.getName().getLongSize()  -  1;  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  int  longFileMode  =  entry.getName().getLongSize()  -  1;  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	int  longFileMode  =  entry.getName().getLongSize()  -  1;	  int    longFileMode    =    entry.getName().getLongSize();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
12	[BUG]  [BUGGY]  int  longFileMode  =  entry.getName().getLongValue();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  int  longFileMode  =  entry.getName().getLongValue();  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	int  longFileMode  =  entry.getName().getLongValue();	  int    longFileMode    =    entry.getName().getLongSize();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
13	[BUG]  [BUGGY]  int  longFileMode  =  entry.getName().getLONGSize();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  int  longFileMode  =  entry.getName().getLONGSize();  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	int  longFileMode  =  entry.getName().getLONGSize();	  int    longFileMode    =    entry.getName().getLongSize();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
14	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NAMELEN  &&  entry.getName().length()!=  TarConstants.GNUTYPE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NAMELEN  &&  entry.getName().length()!=  TarConstants.GNUTYPE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NAMELEN  &&  entry.getName().length()!=  TarConstants.GNUTYPE_LONGNAME)  {	  if(entry.getName().length()!=    TarConstants.NAMELEN    ||    entry.getName().length()!=    TarConstants.GNUTYPE_LONGNAME)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
15	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAMELEN  ||  entry.getName().length()!=  TarConstants.GNUTYPE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAMELEN  ||  entry.getName().length()!=  TarConstants.GNUTYPE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NAMELEN  ||  entry.getName().length()!=  TarConstants.GNUTYPE_LONGNAME)  {	  if(entry.getName().length()!=    TarConstants.NAMELEN    ||    entry.getName().length()!=    TarConstants.GNUTYPE_LONGNAME)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
16	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAMELEN  &&  entry.getName().length()!=  TarConstants.GNUTYPE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAMELEN  &&  entry.getName().length()!=  TarConstants.GNUTYPE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NAMELEN  &&  entry.getName().length()!=  TarConstants.GNUTYPE_LONGNAME)  {	  if(entry.getName().length()!=    TarConstants.NAMELEN    ||    entry.getName().length()!=    TarConstants.GNUTYPE_LONGNAME)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
17	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NAMELEN  ||  entry.getName().length()  ==  TarConstants.GNUTYPE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NAMELEN  ||  entry.getName().length()  ==  TarConstants.GNUTYPE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NAMELEN  ||  entry.getName().length()  ==  TarConstants.GNUTYPE_LONGNAME)  {	  if(entry.getName().length()!=    TarConstants.NAMELEN    ||    entry.getName().length()!=    TarConstants.GNUTYPE_LONGNAME)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
18	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME  ||  entry.getName().length()!=  TarConstants.GNUTYPE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME  ||  entry.getName().length()!=  TarConstants.GNUTYPE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NAME  ||  entry.getName().length()!=  TarConstants.GNUTYPE_LONGNAME)  {	  if(entry.getName().length()!=    TarConstants.NAMELEN    ||    entry.getName().length()!=    TarConstants.GNUTYPE_LONGNAME)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
19	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME  ||  entry.getName().length()!=  TarConstants.GNUTYPE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME  ||  entry.getName().length()!=  TarConstants.GNUTYPE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NAME  ||  entry.getName().length()!=  TarConstants.GNUTYPE_LONGNAME)  {	  if(entry.getName().length()!=    TarConstants.NAMELEN    ||    entry.getName().length()!=    TarConstants.GNUTYPE_LONGNAME)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
20	[BUG]  [BUGGY]  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
21	[BUG]  [BUGGY]  if(entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  throw  new  Il  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  throw  new  Il  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  throw  new  Il	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
22	[BUG]  [BUGGY]  final  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  final  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	final  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
23	[BUG]  [BUGGY]  ||  entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  throw  new  Il  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  ||  entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  throw  new  Il  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	||  entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  throw  new  Il	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
24	[BUG]  [BUGGY]  if(entry.getName().endsWith( ".Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().endsWith( ".Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().endsWith( ".Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
25	[BUG]  [BUGGY]  if(entry.getName().endsWith( ".Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  throw  new  Il  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().endsWith( ".Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  throw  new  Il  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().endsWith( ".Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  throw  new  Il	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
26	[BUG]  [BUGGY]  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName);  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName);  }	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_ERROR)    {    longLinkEntry.setSize(currName);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
27	[BUG]  [BUGGY]  if(entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(2);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(2);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName);  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(2);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName);  }	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_ERROR)    {    longLinkEntry.setSize(currName);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
28	[BUG]  [BUGGY]  if(entry.getName().endsWith( ".Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().endsWith( ".Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName);  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().endsWith( ".Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName);  }	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_ERROR)    {    longLinkEntry.setSize(currName);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
29	[BUG]  [BUGGY]  final  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName);  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  final  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName);  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	final  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName);  }	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_ERROR)    {    longLinkEntry.setSize(currName);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
30	[BUG]  [BUGGY]  if(entry.getName().endsWith( "Archive_ "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName);  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().endsWith( "Archive_ "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName);  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().endsWith( "Archive_ "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName);  }	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_ERROR)    {    longLinkEntry.setSize(currName);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
31	[BUG]  [BUGGY]  if(entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_ERROR)    {    longLinkEntry.setSize(currName);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
32	[BUG]  [BUGGY]  if(entry.getName().length()  >  TarConstants.NUMBER)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  >  TarConstants.NUMBER)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  >  TarConstants.NUMBER)  {	  if(entry.getName().length()    >=    TarConstants.NUMBER)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
33	[BUG]  [BUGGY]  if(entry.getName().length()  <  =  TarConstants.NUMBER)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  <  =  TarConstants.NUMBER)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  <  =  TarConstants.NUMBER)  {	  if(entry.getName().length()    >=    TarConstants.NUMBER)    {    	non-compiled	[CE]  <identifier>  expected	7	None	replace
34	[BUG]  [BUGGY]  ||  entry.getName().length()  ==  LONGFILE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  ||  entry.getName().length()  ==  LONGFILE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	||  entry.getName().length()  ==  LONGFILE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }	  if(entry.getName().length()    ==    LONGFILE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
35	[BUG]  [BUGGY]  if(entry.getName().length()  ==  LONGFILE_TRUNCATE)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  LONGFILE_TRUNCATE)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  LONGFILE_TRUNCATE)  {  throw  new  IllegalArgumentException( " ");  }	  if(entry.getName().length()    ==    LONGFILE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
36	[BUG]  [BUGGY]  if(entry.getName().length()  ==  LONGFILE_ERROR  ||  entry.getName().length()  ==  LONGFILE_TRUNCATE)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  LONGFILE_ERROR  ||  entry.getName().length()  ==  LONGFILE_TRUNCATE)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  LONGFILE_ERROR  ||  entry.getName().length()  ==  LONGFILE_TRUNCATE)  {  throw  new  IllegalArgumentException( " ");  }	  if(entry.getName().length()    ==    LONGFILE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
37	[BUG]  [BUGGY]  if(entry.getName().length()!=  LONGFILE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  LONGFILE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  LONGFILE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }	  if(entry.getName().length()    ==    LONGFILE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
38	[BUG]  [BUGGY]  if(entry.getName().length()!=  LONGFILE_TRUNCATE)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  LONGFILE_TRUNCATE)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  LONGFILE_TRUNCATE)  {  throw  new  IllegalArgumentException( " ");  }	  if(entry.getName().length()    ==    LONGFILE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
39	[BUG]  [BUGGY]  entry.getName().length()  ==  LONGFILE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  entry.getName().length()  ==  LONGFILE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	entry.getName().length()  ==  LONGFILE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }	  if(entry.getName().length()    ==    LONGFILE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
40	[BUG]  [BUGGY]  longLinkEntry  =  entry.getLongName().getBytes();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  longLinkEntry  =  entry.getLongName().getBytes();  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	longLinkEntry  =  entry.getLongName().getBytes();	  longLinkEntry    =    entry.getName().getBytes();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
41	[BUG]  [BUGGY]  longLinkEntry  =  entry.getName().getBytes()  +  1;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  longLinkEntry  =  entry.getName().getBytes()  +  1;  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	longLinkEntry  =  entry.getName().getBytes()  +  1;	  longLinkEntry    =    entry.getName().getBytes();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
42	[BUG]  [BUGGY]  longLinkEntry  =  entry.getLowerCase().getBytes();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  longLinkEntry  =  entry.getLowerCase().getBytes();  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	longLinkEntry  =  entry.getLowerCase().getBytes();	  longLinkEntry    =    entry.getName().getBytes();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
43	[BUG]  [BUGGY]  longLinkEntry  =  entry.getValue().getBytes();  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  longLinkEntry  =  entry.getValue().getBytes();  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	longLinkEntry  =  entry.getValue().getBytes();	  longLinkEntry    =    entry.getName().getBytes();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
44	[BUG]  [BUGGY]  Long  longLinkEntry  =  entry.getName().getBytes();  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  Long  longLinkEntry  =  entry.getName().getBytes();  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	Long  longLinkEntry  =  entry.getName().getBytes();	  longLinkEntry    =    entry.getName().getBytes();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
45	[BUG]  [BUGGY]  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  return;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  return;  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  return;  }	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_ERROR)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
46	[BUG]  [BUGGY]  ||  entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  return;  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  ||  entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  return;  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	||  entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  return;  }	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_ERROR)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
47	[BUG]  [BUGGY]  if(entry.getName().endsWith( ".Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  return;  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().endsWith( ".Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  return;  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().endsWith( ".Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  return;  }	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_ERROR)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
48	[BUG]  [BUGGY]  if(entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(2);  if(currName.length()  ==  LONGFILE_ERROR)  {  return;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(2);  if(currName.length()  ==  LONGFILE_ERROR)  {  return;  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(2);  if(currName.length()  ==  LONGFILE_ERROR)  {  return;  }	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_ERROR)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
49	[BUG]  [BUGGY]  final  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  return;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  final  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  return;  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	final  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  return;  }	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_ERROR)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
50	[BUG]  [BUGGY]  entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  return;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  return;  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  return;  }	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_ERROR)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
51	[BUG]  [BUGGY]  longFileMode  =  entry.getName().getLongSize()  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  longFileMode  =  entry.getName().getLongSize()  +  1;  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	longFileMode  =  entry.getName().getLongSize()  +  1;	  longFileMode    =    entry.getName().getLongSize();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
52	[BUG]  [BUGGY]  longFileMode  =  entry.getName().getSize();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  longFileMode  =  entry.getName().getSize();  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	longFileMode  =  entry.getName().getSize();	  longFileMode    =    entry.getName().getLongSize();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
53	[BUG]  [BUGGY]  longFileMode  =  entry.getName().getLongSize()  -  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  longFileMode  =  entry.getName().getLongSize()  -  1;  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	longFileMode  =  entry.getName().getLongSize()  -  1;	  longFileMode    =    entry.getName().getLongSize();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
54	[BUG]  [BUGGY]  longFileMode  =  entry.getName().getLONGSize();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  longFileMode  =  entry.getName().getLONGSize();  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	longFileMode  =  entry.getName().getLONGSize();	  longFileMode    =    entry.getName().getLongSize();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
55	[BUG]  [BUGGY]  if(entry.getName().length()  >  TarConstants.NAME)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  >  TarConstants.NAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  >  TarConstants.NAME)  {	  if(entry.getName().length()    >=    TarConstants.NAME)    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
56	[BUG]  [BUGGY]  if(entry.getName().length()  <  =  TarConstants.NAME)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  <  =  TarConstants.NAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  <  =  TarConstants.NAME)  {	  if(entry.getName().length()    >=    TarConstants.NAME)    {    	non-compiled	[CE]  <identifier>  expected	14	None	replace
57	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {	  if(entry.getName().length()    ==    TarConstants.GNU_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
58	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.GNU_LONGLINK  ||  entry.getName().length()  ==  TarConstants.LF_GNUTYPE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.GNU_LONGLINK  ||  entry.getName().length()  ==  TarConstants.LF_GNUTYPE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.GNU_LONGLINK  ||  entry.getName().length()  ==  TarConstants.LF_GNUTYPE_LONGNAME)  {	  if(entry.getName().length()    ==    TarConstants.GNU_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
59	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.FILE_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.FILE_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.FILE_LONGLINK)  {	  if(entry.getName().length()    ==    TarConstants.GNU_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
60	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.GNU_LONGLINK  ||  entry.getName().length()!=  TarConstants.LF_GNUTYPE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.GNU_LONGLINK  ||  entry.getName().length()!=  TarConstants.LF_GNUTYPE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.GNU_LONGLINK  ||  entry.getName().length()!=  TarConstants.LF_GNUTYPE_LONGNAME)  {	  if(entry.getName().length()    ==    TarConstants.GNU_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
61	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.GNU_LONGLINK  ||  entry.getName().length()  ==  TarConstants.FILE_TRUNCATE)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.GNU_LONGLINK  ||  entry.getName().length()  ==  TarConstants.FILE_TRUNCATE)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.GNU_LONGLINK  ||  entry.getName().length()  ==  TarConstants.FILE_TRUNCATE)  {	  if(entry.getName().length()    ==    TarConstants.GNU_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
62	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_SIZE)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_SIZE)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NUMBER_SIZE)  {	  if(entry.getName().length()    ==    TarConstants.NUMBER)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
63	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_ARRAY)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_ARRAY)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NUMBER_ARRAY)  {	  if(entry.getName().length()    ==    TarConstants.NUMBER)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
64	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_BACKSLASH)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_BACKSLASH)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NUMBER_BACKSLASH)  {	  if(entry.getName().length()    ==    TarConstants.NUMBER)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
65	[BUG]  [BUGGY]  if(entry.getName().length()  >=  TarConstants.NAME_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  >=  TarConstants.NAME_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  >=  TarConstants.NAME_LONGLINK)  {	  if(entry.getName().length()    ==    TarConstants.NAME_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
66	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME_LONGLINK  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME_LONGLINK  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NAME_LONGLINK  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {	  if(entry.getName().length()    ==    TarConstants.NAME_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
67	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME_GNU)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME_GNU)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NAME_GNU)  {	  if(entry.getName().length()    ==    TarConstants.NAME_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
68	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME  &&  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME  &&  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NAME  &&  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {	  if(entry.getName().length()!=    TarConstants.NAME    ||    entry.getName().length()!=    TarConstants.LONGFILE_GNU)    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
69	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME  ||  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME  ||  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NAME  ||  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {	  if(entry.getName().length()!=    TarConstants.NAME    ||    entry.getName().length()!=    TarConstants.LONGFILE_GNU)    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
70	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME  &&  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME  &&  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NAME  &&  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {	  if(entry.getName().length()!=    TarConstants.NAME    ||    entry.getName().length()!=    TarConstants.LONGFILE_GNU)    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
71	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME  ||  entry.getName().length()  ==  TarConstants.LONGFILE_GNU)  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME  ||  entry.getName().length()  ==  TarConstants.LONGFILE_GNU)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NAME  ||  entry.getName().length()  ==  TarConstants.LONGFILE_GNU)  {	  if(entry.getName().length()!=    TarConstants.NAME    ||    entry.getName().length()!=    TarConstants.LONGFILE_GNU)    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
72	[BUG]  [BUGGY]  if(entry.getName().length()!=  LONGFILE_ERROR  ||  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  LONGFILE_ERROR  ||  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  LONGFILE_ERROR  ||  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {	  if(entry.getName().length()!=    TarConstants.NAME    ||    entry.getName().length()!=    TarConstants.LONGFILE_GNU)    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
73	[BUG]  [BUGGY]  if(entry.getName().length()!=  LONGFILE_GNU  ||  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  LONGFILE_GNU  ||  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  LONGFILE_GNU  ||  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {	  if(entry.getName().length()!=    TarConstants.NAME    ||    entry.getName().length()!=    TarConstants.LONGFILE_GNU)    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
74	[BUG]  [BUGGY]  if(entry.getName().length()  >=  TarConstants.NUMBER_LONGLINK)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  >=  TarConstants.NUMBER_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  >=  TarConstants.NUMBER_LONGLINK)  {	  if(entry.getName().length()    ==    TarConstants.NUMBER_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
75	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_LONGLINK  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_LONGLINK  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NUMBER_LONGLINK  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {	  if(entry.getName().length()    ==    TarConstants.NUMBER_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
76	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_GNU)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_GNU)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NUMBER_GNU)  {	  if(entry.getName().length()    ==    TarConstants.NUMBER_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
77	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_FILE_TRUNCATE)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_FILE_TRUNCATE)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NUMBER_FILE_TRUNCATE)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_FILE)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
78	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_FILE_TRUNCATE)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_FILE_TRUNCATE)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NUMBER_FILE_TRUNCATE)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_FILE)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
79	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_FILE_ERROR)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_FILE_ERROR)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NUMBER_FILE_ERROR)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_FILE)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
80	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_FILE_ERROR)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_FILE_ERROR)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NUMBER_FILE_ERROR)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_FILE)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
81	[BUG]  [BUGGY]  if(entry.getName().length()  >=  TarConstants.NUMBER_FILE)  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  >=  TarConstants.NUMBER_FILE)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  >=  TarConstants.NUMBER_FILE)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_FILE)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
82	[BUG]  [BUGGY]  if(entry.getName().length()  >=  TarConstants.NUMBER_BACKSLASH)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  >=  TarConstants.NUMBER_BACKSLASH)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  >=  TarConstants.NUMBER_BACKSLASH)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_BACKSLASH)    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
83	[BUG]  [BUGGY]  if(entry.getName().length()  >  TarConstants.NUMBER_BACKSLASH)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  >  TarConstants.NUMBER_BACKSLASH)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  >  TarConstants.NUMBER_BACKSLASH)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_BACKSLASH)    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
84	[BUG]  [BUGGY]  if(entry.getName().length()  <  =  TarConstants.NUMBER_BACKSLASH)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  <  =  TarConstants.NUMBER_BACKSLASH)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  <  =  TarConstants.NUMBER_BACKSLASH)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_BACKSLASH)    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
85	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.LONGNAME)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.LONGNAME)  {	  if(entry.getName().length()    ==    TarConstants.LONGNAME)    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
86	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.GNU_LONGLINK  ||  entry.getName().length()  ==  TarConstants.LONGNAME)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.GNU_LONGLINK  ||  entry.getName().length()  ==  TarConstants.LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.GNU_LONGLINK  ||  entry.getName().length()  ==  TarConstants.LONGNAME)  {	  if(entry.getName().length()    ==    TarConstants.LONGNAME)    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
87	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_ERROR)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_ERROR)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NUMBER_ERROR)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_ERROR)    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
88	[BUG]  [BUGGY]  if(entry.getName().length()  >=  TarConstants.NUMBER_ERROR)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  >=  TarConstants.NUMBER_ERROR)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  >=  TarConstants.NUMBER_ERROR)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_ERROR)    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
89	[BUG]  [BUGGY]  if(entry.getName().length()  >  TarConstants.NUMBER_ERROR)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  >  TarConstants.NUMBER_ERROR)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  >  TarConstants.NUMBER_ERROR)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_ERROR)    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
90	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_ERROR  ||  entry.getName().length()!=  TarConstants.NUMBER_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_ERROR  ||  entry.getName().length()!=  TarConstants.NUMBER_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NUMBER_ERROR  ||  entry.getName().length()!=  TarConstants.NUMBER_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_ERROR)    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
91	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_ERROR  ||  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_ERROR  ||  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NUMBER_ERROR  ||  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_ERROR)    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
92	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_ERROR  ||  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_ERROR  ||  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NUMBER_ERROR  ||  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_ERROR)    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
93	[BUG]  [BUGGY]  if(entry.getName().endsWith(TarConstants.NAME_LONGLINK))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().endsWith(TarConstants.NAME_LONGLINK))  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().endsWith(TarConstants.NAME_LONGLINK))  {	  if(entry.getName().endsWith(TarConstants.NAME))    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
94	[BUG]  [BUGGY]  if(entry.getName().endsWith( "Archive "))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().endsWith( "Archive "))  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().endsWith( "Archive "))  {	  if(entry.getName().endsWith(TarConstants.NAME))    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
95	[BUG]  [BUGGY]  if(entry.getName().endsWith(TarConstants.FILE_ERROR))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().endsWith(TarConstants.FILE_ERROR))  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().endsWith(TarConstants.FILE_ERROR))  {	  if(entry.getName().endsWith(TarConstants.NAME))    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
96	[BUG]  [BUGGY]  if(entry.getName().endsWith(TarConstants.NAME)||  entry.getName().endsWith(TarConstants.FILE_ERROR))  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().endsWith(TarConstants.NAME)||  entry.getName().endsWith(TarConstants.FILE_ERROR))  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().endsWith(TarConstants.NAME)||  entry.getName().endsWith(TarConstants.FILE_ERROR))  {	  if(entry.getName().endsWith(TarConstants.NAME))    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
97	[BUG]  [BUGGY]  if(entry.getName().equals(TarConstants.NAME))  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().equals(TarConstants.NAME))  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().equals(TarConstants.NAME))  {	  if(entry.getName().endsWith(TarConstants.NAME))    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
98	[BUG]  [BUGGY]  if(entry.getName().endsWith(TarConstants.NAME)||  entry.getName().endsWith(TarConstants.GNU_LONGLINK))  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().endsWith(TarConstants.NAME)||  entry.getName().endsWith(TarConstants.GNU_LONGLINK))  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().endsWith(TarConstants.NAME)||  entry.getName().endsWith(TarConstants.GNU_LONGLINK))  {	  if(entry.getName().endsWith(TarConstants.NAME))    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
99	[BUG]  [BUGGY]  if(entry.getName().endsWith(TarConstants.NAME)||  entry.getName().endsWith(TarConstants.LF_GNUTYPE_LONGNAME))  {  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().endsWith(TarConstants.NAME)||  entry.getName().endsWith(TarConstants.LF_GNUTYPE_LONGNAME))  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().endsWith(TarConstants.NAME)||  entry.getName().endsWith(TarConstants.LF_GNUTYPE_LONGNAME))  {	  if(entry.getName().endsWith(TarConstants.NAME))    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
100	[BUG]  [BUGGY]  if(entry.getName().length()  >=  TarConstants.NAME_TRUNCATE)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  >=  TarConstants.NAME_TRUNCATE)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  >=  TarConstants.NAME_TRUNCATE)  {	  if(entry.getName().length()!=    TarConstants.NAME_TRUNCATE)    {    	non-compiled	[CE]  <identifier>  expected	50	None	replace
101	[BUG]  [BUGGY]  if(entry.getName().length()  >  TarConstants.NAME_TRUNCATE)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  >  TarConstants.NAME_TRUNCATE)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  >  TarConstants.NAME_TRUNCATE)  {	  if(entry.getName().length()!=    TarConstants.NAME_TRUNCATE)    {    	non-compiled	[CE]  <identifier>  expected	50	None	replace
102	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME_STRING)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME_STRING)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NAME_STRING)  {	  if(entry.getName().length()!=    TarConstants.NAME_TRUNCATE)    {    	non-compiled	[CE]  <identifier>  expected	50	None	replace
103	[BUG]  [BUGGY]  if(entry.getName().length()!=  LONGFILE_GNU)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  LONGFILE_GNU)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  LONGFILE_GNU)  {	  if(entry.getName().length()!=    TarConstants.NAME_TRUNCATE)    {    	non-compiled	[CE]  <identifier>  expected	50	None	replace
104	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME_FILE_TRUNCATE)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME_FILE_TRUNCATE)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NAME_FILE_TRUNCATE)  {	  if(entry.getName().length()    ==    TarConstants.NAME_FILE)    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
105	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME_FILE_ERROR)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME_FILE_ERROR)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NAME_FILE_ERROR)  {	  if(entry.getName().length()    ==    TarConstants.NAME_FILE)    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
106	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME_FILE_TRUNCATE)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME_FILE_TRUNCATE)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NAME_FILE_TRUNCATE)  {	  if(entry.getName().length()    ==    TarConstants.NAME_FILE)    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
107	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME_FILE)  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME_FILE)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NAME_FILE)  {	  if(entry.getName().length()    ==    TarConstants.NAME_FILE)    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
108	[BUG]  [BUGGY]  if(entry.getName().length()  ==  LONGFILE_ERROR)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  LONGFILE_ERROR)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  LONGFILE_ERROR)  {	  if(entry.getName().length()    ==    TarConstants.FILE_ERROR)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
109	[BUG]  [BUGGY]  if(entry.getName().length()!=  LONGFILE_ERROR)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  LONGFILE_ERROR)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  LONGFILE_ERROR)  {	  if(entry.getName().length()    ==    TarConstants.FILE_ERROR)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
110	[BUG]  [BUGGY]  if(entry.getName().length()  ==  LONGFILE_ERROR  ||  entry.getName().length()  ==  TarConstants.FILE_TRUNCATE)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  LONGFILE_ERROR  ||  entry.getName().length()  ==  TarConstants.FILE_TRUNCATE)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  LONGFILE_ERROR  ||  entry.getName().length()  ==  TarConstants.FILE_TRUNCATE)  {	  if(entry.getName().length()    ==    TarConstants.FILE_ERROR)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
111	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.FILE_ERROR)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.FILE_ERROR)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.FILE_ERROR)  {	  if(entry.getName().length()    ==    TarConstants.FILE_ERROR)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
112	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.FILE_ERROR  ||  entry.getName().length()  ==  LONGFILE_GNU)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.FILE_ERROR  ||  entry.getName().length()  ==  LONGFILE_GNU)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.FILE_ERROR  ||  entry.getName().length()  ==  LONGFILE_GNU)  {	  if(entry.getName().length()    ==    TarConstants.FILE_ERROR)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
113	[BUG]  [BUGGY]  if(entry.getName().length()  ==  LONGFILE_GNU)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  LONGFILE_GNU)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  LONGFILE_GNU)  {	  if(entry.getName().length()    ==    TarConstants.FILE_ERROR)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
114	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NAMELEN  &&  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NAMELEN  &&  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NAMELEN  &&  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {	  if(entry.getName().length()!=    TarConstants.NAMELEN    ||    entry.getName().length()!=    TarConstants.LONGFILE_GNU)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
115	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAMELEN  ||  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAMELEN  ||  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NAMELEN  ||  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {	  if(entry.getName().length()!=    TarConstants.NAMELEN    ||    entry.getName().length()!=    TarConstants.LONGFILE_GNU)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
116	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAMELEN  &&  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAMELEN  &&  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NAMELEN  &&  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {	  if(entry.getName().length()!=    TarConstants.NAMELEN    ||    entry.getName().length()!=    TarConstants.LONGFILE_GNU)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
117	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NAMELEN  ||  entry.getName().length()  ==  TarConstants.LONGFILE_GNU)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NAMELEN  ||  entry.getName().length()  ==  TarConstants.LONGFILE_GNU)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NAMELEN  ||  entry.getName().length()  ==  TarConstants.LONGFILE_GNU)  {	  if(entry.getName().length()!=    TarConstants.NAMELEN    ||    entry.getName().length()!=    TarConstants.LONGFILE_GNU)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
118	[BUG]  [BUGGY]  if(entry.getName().length()!=  LONGFILE_GNU  ||  entry.getName().length()!=  TarConstants.NAMELEN)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  LONGFILE_GNU  ||  entry.getName().length()!=  TarConstants.NAMELEN)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  LONGFILE_GNU  ||  entry.getName().length()!=  TarConstants.NAMELEN)  {	  if(entry.getName().length()!=    TarConstants.NAMELEN    ||    entry.getName().length()!=    TarConstants.LONGFILE_GNU)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
119	[BUG]  [BUGGY]  if(entry.getName().length()  >=  TarConstants.NUMBER_SIZE)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  >=  TarConstants.NUMBER_SIZE)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  >=  TarConstants.NUMBER_SIZE)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_SIZE)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
120	[BUG]  [BUGGY]  if(entry.getName().length()  >  TarConstants.NUMBER_SIZE)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  >  TarConstants.NUMBER_SIZE)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  >  TarConstants.NUMBER_SIZE)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_SIZE)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
121	[BUG]  [BUGGY]  if(entry.getName().length()  <  =  TarConstants.NUMBER_SIZE)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  <  =  TarConstants.NUMBER_SIZE)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  <  =  TarConstants.NUMBER_SIZE)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_SIZE)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
122	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_SIZE  ||  entry.getName().length()!=  TarConstants.NUMBER_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_SIZE  ||  entry.getName().length()!=  TarConstants.NUMBER_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NUMBER_SIZE  ||  entry.getName().length()!=  TarConstants.NUMBER_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_SIZE)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
123	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_SIZE  ||  entry.getName().length()!=  TarConstants.NUMBER_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_SIZE  ||  entry.getName().length()!=  TarConstants.NUMBER_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NUMBER_SIZE  ||  entry.getName().length()!=  TarConstants.NUMBER_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_SIZE)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
124	[BUG]  [BUGGY]  if(entry.getName().length()  >=  TarConstants.NUMBER_ARRAY)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  >=  TarConstants.NUMBER_ARRAY)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  >=  TarConstants.NUMBER_ARRAY)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_ARRAY)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
125	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_ARRAY  ||  entry.getName().length()!=  TarConstants.LF_GNUTYPE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_ARRAY  ||  entry.getName().length()!=  TarConstants.LF_GNUTYPE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NUMBER_ARRAY  ||  entry.getName().length()!=  TarConstants.LF_GNUTYPE_LONGNAME)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_ARRAY)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
126	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_ARRAY  ||  entry.getName().length()!=  TarConstants.LF_GNUTYPE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_ARRAY  ||  entry.getName().length()!=  TarConstants.LF_GNUTYPE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NUMBER_ARRAY  ||  entry.getName().length()!=  TarConstants.LF_GNUTYPE_LONGNAME)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_ARRAY)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
127	[BUG]  [BUGGY]  if(entry.getName().length()  >  TarConstants.NUMBER_ARRAY)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  >  TarConstants.NUMBER_ARRAY)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  >  TarConstants.NUMBER_ARRAY)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_ARRAY)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
128	[BUG]  [BUGGY]  if(entry.getName().length()  <  =  TarConstants.NUMBER_ARRAY)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  <  =  TarConstants.NUMBER_ARRAY)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  <  =  TarConstants.NUMBER_ARRAY)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_ARRAY)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
129	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME  &&  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME  &&  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NAME  &&  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {	  if(entry.getName().length()    ==    TarConstants.NAME    ||    entry.getName().length()    ==    TarConstants.GNU_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
130	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NAME  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {	  if(entry.getName().length()    ==    TarConstants.NAME    ||    entry.getName().length()    ==    TarConstants.GNU_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
131	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NAME  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {	  if(entry.getName().length()    ==    TarConstants.NAME    ||    entry.getName().length()    ==    TarConstants.GNU_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
132	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME  &&  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME  &&  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NAME  &&  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {	  if(entry.getName().length()    ==    TarConstants.NAME    ||    entry.getName().length()    ==    TarConstants.GNU_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
133	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME_QUOTE  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME_QUOTE  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NAME_QUOTE  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {	  if(entry.getName().length()    ==    TarConstants.NAME    ||    entry.getName().length()    ==    TarConstants.GNU_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
134	[BUG]  [BUGGY]  longFileMode  =  entry.getName().getBytes()  +  1;  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  longFileMode  =  entry.getName().getBytes()  +  1;  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	longFileMode  =  entry.getName().getBytes()  +  1;	  longFileMode    =    entry.getName().getBytes();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
135	[BUG]  [BUGGY]  longFileMode  =  entry.getLongName().getBytes();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  longFileMode  =  entry.getLongName().getBytes();  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	longFileMode  =  entry.getLongName().getBytes();	  longFileMode    =    entry.getName().getBytes();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
136	[BUG]  [BUGGY]  longFileMode  =  entry.getSize().getBytes();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  longFileMode  =  entry.getSize().getBytes();  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	longFileMode  =  entry.getSize().getBytes();	  longFileMode    =    entry.getName().getBytes();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
137	[BUG]  [BUGGY]  longFileMode  =  entry.getValue().getBytes();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  longFileMode  =  entry.getValue().getBytes();  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	longFileMode  =  entry.getValue().getBytes();	  longFileMode    =    entry.getName().getBytes();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
138	[BUG]  [BUGGY]  longFileMode  =  entry.getName().getBytes()  -  1;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  longFileMode  =  entry.getName().getBytes()  -  1;  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	longFileMode  =  entry.getName().getBytes()  -  1;	  longFileMode    =    entry.getName().getBytes();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
139	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME_LONGLINK  ||  entry.getName().length()!=  TarConstants.NAME_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME_LONGLINK  ||  entry.getName().length()!=  TarConstants.NAME_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NAME_LONGLINK  ||  entry.getName().length()!=  TarConstants.NAME_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NAME_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
140	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME_LONGLINK  ||  entry.getName().length()!=  TarConstants.NAME_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME_LONGLINK  ||  entry.getName().length()!=  TarConstants.NAME_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NAME_LONGLINK  ||  entry.getName().length()!=  TarConstants.NAME_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NAME_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
141	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME_LONGLINK  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME_LONGLINK  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NAME_LONGLINK  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NAME_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
142	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME_LONGLINK  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME_LONGLINK  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NAME_LONGLINK  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NAME_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
143	[BUG]  [BUGGY]  final  longFileMode  =  entry.getName().getSize();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  final  longFileMode  =  entry.getName().getSize();  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	final  longFileMode  =  entry.getName().getSize();	  final    int    longFileMode    =    entry.getName().getSize();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
144	[BUG]  [BUGGY]  final  int  longFileMode  =  entry.getName().getSize()  +  1;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  final  int  longFileMode  =  entry.getName().getSize()  +  1;  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	final  int  longFileMode  =  entry.getName().getSize()  +  1;	  final    int    longFileMode    =    entry.getName().getSize();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
145	[BUG]  [BUGGY]  final  int  longFileMode  =  entry.getName().getLongValue();  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  final  int  longFileMode  =  entry.getName().getLongValue();  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	final  int  longFileMode  =  entry.getName().getLongValue();	  final    int    longFileMode    =    entry.getName().getSize();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
146	[BUG]  [BUGGY]  final  int  longFileMode  =  entry.getLongName().getSize();  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  final  int  longFileMode  =  entry.getLongName().getSize();  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	final  int  longFileMode  =  entry.getLongName().getSize();	  final    int    longFileMode    =    entry.getName().getSize();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
147	[BUG]  [BUGGY]  final  longFileMode  =  entry.getName().getLongSize();  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  final  longFileMode  =  entry.getName().getLongSize();  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	final  longFileMode  =  entry.getName().getLongSize();	  final    int    longFileMode    =    entry.getName().getSize();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
148	[BUG]  [BUGGY]  final  int  longFileMode  =  entry.getName().getMillis();  [CE]  <identifier>  expected  [FE]                                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  final  int  longFileMode  =  entry.getName().getMillis();  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	final  int  longFileMode  =  entry.getName().getMillis();	  final    int    longFileMode    =    entry.getName().getSize();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
149	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME  &&  entry.getName().length()!=  TarConstants.FILE_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME  &&  entry.getName().length()!=  TarConstants.FILE_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NAME  &&  entry.getName().length()!=  TarConstants.FILE_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NAME    ||    entry.getName().length()!=    TarConstants.FILE_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
150	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME  ||  entry.getName().length()!=  TarConstants.FILE_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME  ||  entry.getName().length()!=  TarConstants.FILE_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NAME  ||  entry.getName().length()!=  TarConstants.FILE_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NAME    ||    entry.getName().length()!=    TarConstants.FILE_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
151	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME  ||  entry.getName().length()  ==  TarConstants.FILE_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME  ||  entry.getName().length()  ==  TarConstants.FILE_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NAME  ||  entry.getName().length()  ==  TarConstants.FILE_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NAME    ||    entry.getName().length()!=    TarConstants.FILE_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
152	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME  &&  entry.getName().length()!=  TarConstants.FILE_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME  &&  entry.getName().length()!=  TarConstants.FILE_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NAME  &&  entry.getName().length()!=  TarConstants.FILE_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NAME    ||    entry.getName().length()!=    TarConstants.FILE_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
153	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME_LONGLINK  ||  entry.getName().length()!=  TarConstants.FILE_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME_LONGLINK  ||  entry.getName().length()!=  TarConstants.FILE_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NAME_LONGLINK  ||  entry.getName().length()!=  TarConstants.FILE_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NAME    ||    entry.getName().length()!=    TarConstants.FILE_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
154	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.FILE_LONGLINK  ||  entry.getName().length()!=  TarConstants.FILE_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.FILE_LONGLINK  ||  entry.getName().length()!=  TarConstants.FILE_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.FILE_LONGLINK  ||  entry.getName().length()!=  TarConstants.FILE_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NAME    ||    entry.getName().length()!=    TarConstants.FILE_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
155	[BUG]  [BUGGY]  if(entry.getName().length()  >=  TarConstants.NUMBER_ALIASING)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  >=  TarConstants.NUMBER_ALIASING)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  >=  TarConstants.NUMBER_ALIASING)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_ALIASING)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
156	[BUG]  [BUGGY]  if(entry.getName().length()  >  TarConstants.NUMBER_ALIASING)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  >  TarConstants.NUMBER_ALIASING)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  >  TarConstants.NUMBER_ALIASING)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_ALIASING)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
157	[BUG]  [BUGGY]  if(entry.getName().length()  <  =  TarConstants.NUMBER_ALIASING)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  <  =  TarConstants.NUMBER_ALIASING)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  <  =  TarConstants.NUMBER_ALIASING)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_ALIASING)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
158	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_ALIASING  ||  entry.getName().length()!=  TarConstants.NUMBER_SIZE)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_ALIASING  ||  entry.getName().length()!=  TarConstants.NUMBER_SIZE)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NUMBER_ALIASING  ||  entry.getName().length()!=  TarConstants.NUMBER_SIZE)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_ALIASING)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
159	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_ALIASING  ||  entry.getName().length()!=  TarConstants.NUMBER_SIZE)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_ALIASING  ||  entry.getName().length()!=  TarConstants.NUMBER_SIZE)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NUMBER_ALIASING  ||  entry.getName().length()!=  TarConstants.NUMBER_SIZE)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_ALIASING)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
160	[BUG]  [BUGGY]  String  currName  =  entry.getName().substring(0,  entry.getValue().length()  -  1);  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  String  currName  =  entry.getName().substring(0,  entry.getValue().length()  -  1);  throw  new  IllegalArgumentException( " ");  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	String  currName  =  entry.getName().substring(0,  entry.getValue().length()  -  1);  throw  new  IllegalArgumentException( " ");	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(0,    entry.getValue().length()    -    1);    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
161	[BUG]  [BUGGY]  if(entry.getName().endsWith( ".Archive "))  {  String  currName  =  entry.getName().substring(0,  entry.getValue().length()  -  1);  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().endsWith( ".Archive "))  {  String  currName  =  entry.getName().substring(0,  entry.getValue().length()  -  1);  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().endsWith( ".Archive "))  {  String  currName  =  entry.getName().substring(0,  entry.getValue().length()  -  1);  throw  new  IllegalArgumentException( " ");  }	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(0,    entry.getValue().length()    -    1);    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
162	[BUG]  [BUGGY]  if(entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(0,  entry.getValue().length());  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(0,  entry.getValue().length());  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(0,  entry.getValue().length());  throw  new  IllegalArgumentException( " ");  }	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(0,    entry.getValue().length()    -    1);    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
163	[BUG]  [BUGGY]  final  String  currName  =  entry.getName().substring(0,  entry.getValue().length()  -  1);  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  final  String  currName  =  entry.getName().substring(0,  entry.getValue().length()  -  1);  throw  new  IllegalArgumentException( " ");  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	final  String  currName  =  entry.getName().substring(0,  entry.getValue().length()  -  1);  throw  new  IllegalArgumentException( " ");	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(0,    entry.getValue().length()    -    1);    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
164	[BUG]  [BUGGY]  ||  entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(0,  entry.getValue().length()  -  1);  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  ||  entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(0,  entry.getValue().length()  -  1);  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	||  entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(0,  entry.getValue().length()  -  1);  throw  new  IllegalArgumentException( " ");  }	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(0,    entry.getValue().length()    -    1);    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
165	[BUG]  [BUGGY]  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_GNU)  {  return;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_GNU)  {  return;  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_GNU)  {  return;  }	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_GNU)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
166	[BUG]  [BUGGY]  ||  entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_GNU)  {  return;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  ||  entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_GNU)  {  return;  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	||  entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_GNU)  {  return;  }	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_GNU)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
167	[BUG]  [BUGGY]  if(entry.getName().endsWith( ".Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_GNU)  {  return;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().endsWith( ".Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_GNU)  {  return;  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().endsWith( ".Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_GNU)  {  return;  }	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_GNU)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
168	[BUG]  [BUGGY]  if(entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(2);  if(currName.length()  ==  LONGFILE_GNU)  {  return;  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(2);  if(currName.length()  ==  LONGFILE_GNU)  {  return;  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(2);  if(currName.length()  ==  LONGFILE_GNU)  {  return;  }	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_GNU)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
169	[BUG]  [BUGGY]  final  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_GNU)  {  return;  }  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  final  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_GNU)  {  return;  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	final  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_GNU)  {  return;  }	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_GNU)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
170	[BUG]  [BUGGY]  final  byte  longFileMode  =  entry.getName().getBytes();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  final  byte  longFileMode  =  entry.getName().getBytes();  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	final  byte  longFileMode  =  entry.getName().getBytes();	  final    int    longFileMode    =    entry.getName().getBytes();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
171	[BUG]  [BUGGY]  final  longFileMode  =  entry.getName().getBytes();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  final  longFileMode  =  entry.getName().getBytes();  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	final  longFileMode  =  entry.getName().getBytes();	  final    int    longFileMode    =    entry.getName().getBytes();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
172	[BUG]  [BUGGY]  final  String  longFileMode  =  entry.getName().getBytes();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  final  String  longFileMode  =  entry.getName().getBytes();  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	final  String  longFileMode  =  entry.getName().getBytes();	  final    int    longFileMode    =    entry.getName().getBytes();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
173	[BUG]  [BUGGY]  final  int  longFileMode  =  entry.getLongName().getBytes();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  final  int  longFileMode  =  entry.getLongName().getBytes();  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	final  int  longFileMode  =  entry.getLongName().getBytes();	  final    int    longFileMode    =    entry.getName().getBytes();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
174	[BUG]  [BUGGY]  final  int  longFileMode  =  entry.getName().getBytes()  +  1;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  final  int  longFileMode  =  entry.getName().getBytes()  +  1;  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	final  int  longFileMode  =  entry.getName().getBytes()  +  1;	  final    int    longFileMode    =    entry.getName().getBytes();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
175	[BUG]  [BUGGY]  final  int  longFileMode  =  entry.getSize().getBytes();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  final  int  longFileMode  =  entry.getSize().getBytes();  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	final  int  longFileMode  =  entry.getSize().getBytes();	  final    int    longFileMode    =    entry.getName().getBytes();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
176	[BUG]  [BUGGY]  if(entry.getName().length()  ==  LONGFILE_ERROR  ||  entry.getName().length()  ==  TarConstants.LONGFILE_GNU)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  LONGFILE_ERROR  ||  entry.getName().length()  ==  TarConstants.LONGFILE_GNU)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  LONGFILE_ERROR  ||  entry.getName().length()  ==  TarConstants.LONGFILE_GNU)  {	  if(entry.getName().length()    ==    TarConstants.NAMELEN    ||    entry.getName().length()    ==    TarConstants.LONGFILE_GNU)    {    	non-compiled	[CE]  <identifier>  expected	53	None	replace
177	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAMELEN  &&  entry.getName().length()  ==  TarConstants.LONGFILE_GNU)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAMELEN  &&  entry.getName().length()  ==  TarConstants.LONGFILE_GNU)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NAMELEN  &&  entry.getName().length()  ==  TarConstants.LONGFILE_GNU)  {	  if(entry.getName().length()    ==    TarConstants.NAMELEN    ||    entry.getName().length()    ==    TarConstants.LONGFILE_GNU)    {    	non-compiled	[CE]  <identifier>  expected	53	None	replace
178	[BUG]  [BUGGY]  if(entry.getName().length()  ==  LONGFILE_GNU  ||  entry.getName().length()  ==  TarConstants.NAMELEN)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  LONGFILE_GNU  ||  entry.getName().length()  ==  TarConstants.NAMELEN)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  LONGFILE_GNU  ||  entry.getName().length()  ==  TarConstants.NAMELEN)  {	  if(entry.getName().length()    ==    TarConstants.NAMELEN    ||    entry.getName().length()    ==    TarConstants.LONGFILE_GNU)    {    	non-compiled	[CE]  <identifier>  expected	53	None	replace
179	[BUG]  [BUGGY]  if(entry.getName().length()!=  LONGFILE_ERROR  ||  entry.getName().length()  ==  TarConstants.LONGFILE_GNU)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  LONGFILE_ERROR  ||  entry.getName().length()  ==  TarConstants.LONGFILE_GNU)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  LONGFILE_ERROR  ||  entry.getName().length()  ==  TarConstants.LONGFILE_GNU)  {	  if(entry.getName().length()    ==    TarConstants.NAMELEN    ||    entry.getName().length()    ==    TarConstants.LONGFILE_GNU)    {    	non-compiled	[CE]  <identifier>  expected	53	None	replace
180	[BUG]  [BUGGY]  final  int  longFileMode  =  entry.getName().getLongSize()  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  final  int  longFileMode  =  entry.getName().getLongSize()  +  1;  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	final  int  longFileMode  =  entry.getName().getLongSize()  +  1;	  final    int    longFileMode    =    entry.getName().getLongSize();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
181	[BUG]  [BUGGY]  final  longFileMode  =  entry.getName().getLongSize()  +  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  final  longFileMode  =  entry.getName().getLongSize()  +  1;  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	final  longFileMode  =  entry.getName().getLongSize()  +  1;	  final    int    longFileMode    =    entry.getName().getLongSize();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
182	[BUG]  [BUGGY]  final  int  longFileMode  =  entry.getName().getLongSize()  -  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  final  int  longFileMode  =  entry.getName().getLongSize()  -  1;  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	final  int  longFileMode  =  entry.getName().getLongSize()  -  1;	  final    int    longFileMode    =    entry.getName().getLongSize();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
183	[BUG]  [BUGGY]  final  longFileMode  =  entry.getName().getLONGSize();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  final  longFileMode  =  entry.getName().getLONGSize();  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	final  longFileMode  =  entry.getName().getLONGSize();	  final    int    longFileMode    =    entry.getName().getLongSize();    	non-compiled	[CE]  <identifier>  expected	29	None	replace
184	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME_SIZE)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME_SIZE)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NAME_SIZE)  {	  if(entry.getName().length()    ==    TarConstants.NAME_SIZE)    {    	non-compiled	[CE]  <identifier>  expected	39	None	replace
185	[BUG]  [BUGGY]  if(entry.getName().length()  >=  TarConstants.NAME_SIZE)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  >=  TarConstants.NAME_SIZE)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  >=  TarConstants.NAME_SIZE)  {	  if(entry.getName().length()    ==    TarConstants.NAME_SIZE)    {    	non-compiled	[CE]  <identifier>  expected	39	None	replace
186	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME_SIZE  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME_SIZE  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NAME_SIZE  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {	  if(entry.getName().length()    ==    TarConstants.NAME_SIZE)    {    	non-compiled	[CE]  <identifier>  expected	39	None	replace
187	[BUG]  [BUGGY]  int  longFileMode  =  entry.getLongName().getBytes();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  int  longFileMode  =  entry.getLongName().getBytes();  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	int  longFileMode  =  entry.getLongName().getBytes();	  int    longFileMode    =    entry.getName().getBytes();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
188	[BUG]  [BUGGY]  int  longFileMode  =  entry.getName().getBytes()  +  1;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  int  longFileMode  =  entry.getName().getBytes()  +  1;  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	int  longFileMode  =  entry.getName().getBytes()  +  1;	  int    longFileMode    =    entry.getName().getBytes();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
189	[BUG]  [BUGGY]  byte  longFileMode  =  entry.getName().getBytes();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  byte  longFileMode  =  entry.getName().getBytes();  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	byte  longFileMode  =  entry.getName().getBytes();	  int    longFileMode    =    entry.getName().getBytes();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
190	[BUG]  [BUGGY]  int  longFileMode  =  entry.getSize().getBytes();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  int  longFileMode  =  entry.getSize().getBytes();  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	int  longFileMode  =  entry.getSize().getBytes();	  int    longFileMode    =    entry.getName().getBytes();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
191	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.UNKNOWN)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.UNKNOWN)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.UNKNOWN)  {	  if(entry.getName().length()    ==    TarConstants.UNKNOWN)    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
192	[BUG]  [BUGGY]  if(entry.getName().length()  >=  TarConstants.UNKNOWN)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  >=  TarConstants.UNKNOWN)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  >=  TarConstants.UNKNOWN)  {	  if(entry.getName().length()    ==    TarConstants.UNKNOWN)    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
193	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.UNKNOWN  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.UNKNOWN  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.UNKNOWN  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {	  if(entry.getName().length()    ==    TarConstants.UNKNOWN)    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
194	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.UNKNOWN  ||  entry.getName().length()  ==  TarConstants.HOUR_SIZE)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.UNKNOWN  ||  entry.getName().length()  ==  TarConstants.HOUR_SIZE)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.UNKNOWN  ||  entry.getName().length()  ==  TarConstants.HOUR_SIZE)  {	  if(entry.getName().length()    ==    TarConstants.UNKNOWN)    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
195	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.UNKNOWN  ||  entry.getName().length()  ==  TarConstants.FILE_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.UNKNOWN  ||  entry.getName().length()  ==  TarConstants.FILE_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.UNKNOWN  ||  entry.getName().length()  ==  TarConstants.FILE_LONGLINK)  {	  if(entry.getName().length()    ==    TarConstants.UNKNOWN)    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
196	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.UNKNOWN  ||  entry.getName().length()  ==  TarConstants.FOR)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.UNKNOWN  ||  entry.getName().length()  ==  TarConstants.FOR)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.UNKNOWN  ||  entry.getName().length()  ==  TarConstants.FOR)  {	  if(entry.getName().length()    ==    TarConstants.UNKNOWN)    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
197	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_LONGNAME)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NUMBER_LONGNAME)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_LONGNAME)    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
198	[BUG]  [BUGGY]  if(entry.getName().length()  >=  TarConstants.NUMBER_LONGNAME)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  >=  TarConstants.NUMBER_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  >=  TarConstants.NUMBER_LONGNAME)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_LONGNAME)    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
199	[BUG]  [BUGGY]  if(entry.getName().length()  >  TarConstants.NUMBER_LONGNAME)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  >  TarConstants.NUMBER_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  >  TarConstants.NUMBER_LONGNAME)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_LONGNAME)    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
200	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_LONGNAME  ||  entry.getName().length()!=  TarConstants.NUMBER_LONGNAME)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_LONGNAME  ||  entry.getName().length()!=  TarConstants.NUMBER_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NUMBER_LONGNAME  ||  entry.getName().length()!=  TarConstants.NUMBER_LONGNAME)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_LONGNAME)    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
201	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_LONGNAME  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_LONGNAME  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NUMBER_LONGNAME  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_LONGNAME)    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
202	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_LONGNAME  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_LONGNAME  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NUMBER_LONGNAME  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_LONGNAME)    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
203	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_ALIASING  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_ALIASING  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NUMBER_ALIASING  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {	  if(entry.getName().length()    ==    TarConstants.NUMBER_ALIASING)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
204	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_ALIASING  ||  entry.getName().length()  ==  TarConstants.UNKNOWN_SIZE)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_ALIASING  ||  entry.getName().length()  ==  TarConstants.UNKNOWN_SIZE)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NUMBER_ALIASING  ||  entry.getName().length()  ==  TarConstants.UNKNOWN_SIZE)  {	  if(entry.getName().length()    ==    TarConstants.NUMBER_ALIASING)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
205	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_ALIASING  ||  entry.getName().length()  ==  TarConstants.SECOND_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_ALIASING  ||  entry.getName().length()  ==  TarConstants.SECOND_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NUMBER_ALIASING  ||  entry.getName().length()  ==  TarConstants.SECOND_LONGLINK)  {	  if(entry.getName().length()    ==    TarConstants.NUMBER_ALIASING)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
206	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_ALIASING  ||  entry.getName().length()  ==  TarConstants.LONGFILE_GNU)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_ALIASING  ||  entry.getName().length()  ==  TarConstants.LONGFILE_GNU)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NUMBER_ALIASING  ||  entry.getName().length()  ==  TarConstants.LONGFILE_GNU)  {	  if(entry.getName().length()    ==    TarConstants.NUMBER_ALIASING)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
207	[BUG]  [BUGGY]  Long  longFileMode  =  entry.getName().getLongSize()  +  1;  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  Long  longFileMode  =  entry.getName().getLongSize()  +  1;  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	Long  longFileMode  =  entry.getName().getLongSize()  +  1;	  Long    longFileMode    =    entry.getName().getLongSize();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
208	[BUG]  [BUGGY]  Long  longFileMode  =  entry.getName().getLongSize()  -  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  Long  longFileMode  =  entry.getName().getLongSize()  -  1;  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	Long  longFileMode  =  entry.getName().getLongSize()  -  1;	  Long    longFileMode    =    entry.getName().getLongSize();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
209	[BUG]  [BUGGY]  Long  longFileMode  =  entry.getName().getLONGSize();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  Long  longFileMode  =  entry.getName().getLONGSize();  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	Long  longFileMode  =  entry.getName().getLONGSize();	  Long    longFileMode    =    entry.getName().getLongSize();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
210	[BUG]  [BUGGY]  Long  longFileMode  =  entry.getName().getBytes();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  Long  longFileMode  =  entry.getName().getBytes();  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	Long  longFileMode  =  entry.getName().getBytes();	  Long    longFileMode    =    entry.getName().getLongSize();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
211	[BUG]  [BUGGY]  Long  longFileMode  =  entry.getName().getLongValue()  +  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  Long  longFileMode  =  entry.getName().getLongValue()  +  1;  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	Long  longFileMode  =  entry.getName().getLongValue()  +  1;	  Long    longFileMode    =    entry.getName().getLongValue();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
212	[BUG]  [BUGGY]  Long  longFileMode  =  entry.getName().getLongValue()  -  1;  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  Long  longFileMode  =  entry.getName().getLongValue()  -  1;  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	Long  longFileMode  =  entry.getName().getLongValue()  -  1;	  Long    longFileMode    =    entry.getName().getLongValue();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
213	[BUG]  [BUGGY]  Integer  longFileMode  =  entry.getName().getLongValue();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  Integer  longFileMode  =  entry.getName().getLongValue();  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	Integer  longFileMode  =  entry.getName().getLongValue();	  Long    longFileMode    =    entry.getName().getLongValue();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
214	[BUG]  [BUGGY]  Long  longFileMode  =  entry.getName().getLongValue()  +  2;  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  Long  longFileMode  =  entry.getName().getLongValue()  +  2;  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	Long  longFileMode  =  entry.getName().getLongValue()  +  2;	  Long    longFileMode    =    entry.getName().getLongValue();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
215	[BUG]  [BUGGY]  Long  longFileMode  =  entry.getName().getLongValue()  *  2;  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  Long  longFileMode  =  entry.getName().getLongValue()  *  2;  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	Long  longFileMode  =  entry.getName().getLongValue()  *  2;	  Long    longFileMode    =    entry.getName().getLongValue();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
216	[BUG]  [BUGGY]  longFileMode  =  entry.getName().getLongValue()  +  1;  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  longFileMode  =  entry.getName().getLongValue()  +  1;  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	longFileMode  =  entry.getName().getLongValue()  +  1;	  longFileMode    =    entry.getName().getLongValue();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
217	[BUG]  [BUGGY]  longFileMode  =  entry.getName().getLongValue()  -  1;  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  longFileMode  =  entry.getName().getLongValue()  -  1;  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	longFileMode  =  entry.getName().getLongValue()  -  1;	  longFileMode    =    entry.getName().getLongValue();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
218	[BUG]  [BUGGY]  longFileMode  =  entry.getName().getValue();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  longFileMode  =  entry.getName().getValue();  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	longFileMode  =  entry.getName().getValue();	  longFileMode    =    entry.getName().getLongValue();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
219	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME  &&  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME  &&  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NAME  &&  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NAME    ||    entry.getName().length()!=    TarConstants.GNU_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
220	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME  &&  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME  &&  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NAME  &&  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NAME    ||    entry.getName().length()!=    TarConstants.GNU_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
221	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME  ||  entry.getName().length()  >=  TarConstants.GNU_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME  ||  entry.getName().length()  >=  TarConstants.GNU_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NAME  ||  entry.getName().length()  >=  TarConstants.GNU_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NAME    ||    entry.getName().length()!=    TarConstants.GNU_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
222	[BUG]  [BUGGY]  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName  +  1);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName  +  1);  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName  +  1);  }	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_ERROR)    {    longLinkEntry.setSize(currName    +    1);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
223	[BUG]  [BUGGY]  if(entry.getName().endsWith( ".Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName  +  1);  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().endsWith( ".Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName  +  1);  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().endsWith( ".Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName  +  1);  }	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_ERROR)    {    longLinkEntry.setSize(currName    +    1);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
224	[BUG]  [BUGGY]  if(entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(2);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName  +  1);  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(2);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName  +  1);  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(2);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName  +  1);  }	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_ERROR)    {    longLinkEntry.setSize(currName    +    1);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
225	[BUG]  [BUGGY]  if(entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName  +  1  [CE]  <identifier>  expected  [FE]                                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName  +  1  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName  +  1	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_ERROR)    {    longLinkEntry.setSize(currName    +    1);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
226	[BUG]  [BUGGY]  if(entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName  +  [CE]  <identifier>  expected  [FE]                                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName  +  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName  +	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_ERROR)    {    longLinkEntry.setSize(currName    +    1);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
227	[BUG]  [BUGGY]  final  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName  +  1);  }  [CE]  <identifier>  expected  [FE]                                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  final  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName  +  1);  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	final  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName  +  1);  }	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_ERROR)    {    longLinkEntry.setSize(currName    +    1);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
228	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME  &&  entry.getName().length()!=  TarConstants.FILE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME  &&  entry.getName().length()!=  TarConstants.FILE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NAME  &&  entry.getName().length()!=  TarConstants.FILE_LONGNAME)  {	  if(entry.getName().length()!=    TarConstants.NAME    ||    entry.getName().length()!=    TarConstants.FILE_LONGNAME)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
229	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME  &&  entry.getName().length()!=  TarConstants.FILE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME  &&  entry.getName().length()!=  TarConstants.FILE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NAME  &&  entry.getName().length()!=  TarConstants.FILE_LONGNAME)  {	  if(entry.getName().length()!=    TarConstants.NAME    ||    entry.getName().length()!=    TarConstants.FILE_LONGNAME)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
230	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.FILE_LONGNAME  ||  entry.getName().length()!=  TarConstants.FILE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.FILE_LONGNAME  ||  entry.getName().length()!=  TarConstants.FILE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.FILE_LONGNAME  ||  entry.getName().length()!=  TarConstants.FILE_LONGNAME)  {	  if(entry.getName().length()!=    TarConstants.NAME    ||    entry.getName().length()!=    TarConstants.FILE_LONGNAME)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
231	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.FILE_LONGNAME  ||  entry.getName().length()!=  TarConstants.FILE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.FILE_LONGNAME  ||  entry.getName().length()!=  TarConstants.FILE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.FILE_LONGNAME  ||  entry.getName().length()!=  TarConstants.FILE_LONGNAME)  {	  if(entry.getName().length()!=    TarConstants.NAME    ||    entry.getName().length()!=    TarConstants.FILE_LONGNAME)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
232	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_LONGLINK  ||  entry.getName().length()!=  TarConstants.NUMBER_LONGLINK)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_LONGLINK  ||  entry.getName().length()!=  TarConstants.NUMBER_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NUMBER_LONGLINK  ||  entry.getName().length()!=  TarConstants.NUMBER_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
233	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_LONGLINK  ||  entry.getName().length()!=  TarConstants.NUMBER_LONGLINK)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_LONGLINK  ||  entry.getName().length()!=  TarConstants.NUMBER_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NUMBER_LONGLINK  ||  entry.getName().length()!=  TarConstants.NUMBER_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
234	[BUG]  [BUGGY]  if(entry.getName().length()  >  TarConstants.NUMBER_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  >  TarConstants.NUMBER_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  >  TarConstants.NUMBER_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
235	[BUG]  [BUGGY]  if(entry.getName().length()  <  =  TarConstants.NUMBER_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  <  =  TarConstants.NUMBER_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  <  =  TarConstants.NUMBER_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
236	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.LONGNAME  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.LONGNAME  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.LONGNAME  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {	  if(entry.getName().length()    ==    TarConstants.LONGNAME)    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
237	[BUG]  [BUGGY]  if(entry.getName().startsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  return;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().startsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  return;  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().startsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  return;  }	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_ERROR)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
238	[BUG]  [BUGGY]  Long  longFileMode  =  entry.getName().getShortValue();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  Long  longFileMode  =  entry.getName().getShortValue();  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	Long  longFileMode  =  entry.getName().getShortValue();	  Long    longFileMode    =    entry.getName().getLongValue();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
239	[BUG]  [BUGGY]  longFileMode  =  entry.getName().getBytes(fileSize);  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  longFileMode  =  entry.getName().getBytes(fileSize);  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	longFileMode  =  entry.getName().getBytes(fileSize);	  longFileMode    =    entry.getName().getBytes();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
240	[BUG]  [BUGGY]  if(entry.getName().endsWith(TarConstants.NUMBER_LONGNAME))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().endsWith(TarConstants.NUMBER_LONGNAME))  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().endsWith(TarConstants.NUMBER_LONGNAME))  {	  if(entry.getName().length()!=    TarConstants.NUMBER_LONGNAME)    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
241	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_LONGNAME  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_LONGNAME  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NUMBER_LONGNAME  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_LONGNAME)    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
242	[BUG]  [BUGGY]  if(entry.getName().endsWith(TarConstants.NUMBER_BACKSLASH))  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().endsWith(TarConstants.NUMBER_BACKSLASH))  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().endsWith(TarConstants.NUMBER_BACKSLASH))  {	  if(entry.getName().length()!=    TarConstants.NUMBER_BACKSLASH)    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
243	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_BACKSLASH  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_BACKSLASH  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NUMBER_BACKSLASH  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_BACKSLASH)    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
244	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.LONGFILE_GNU)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.LONGFILE_GNU)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.LONGFILE_GNU)  {	  if(entry.getName().length()    ==    TarConstants.NAME_TRUNCATE)    {    	non-compiled	[CE]  <identifier>  expected	38	None	replace
245	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME_STRING)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME_STRING)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NAME_STRING)  {	  if(entry.getName().length()    ==    TarConstants.NAME_TRUNCATE)    {    	non-compiled	[CE]  <identifier>  expected	38	None	replace
246	[BUG]  [BUGGY]  longFileMode  =  entry.getName().getQualifiedName();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  longFileMode  =  entry.getName().getQualifiedName();  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	longFileMode  =  entry.getName().getQualifiedName();	  longFileMode    =    entry.getName().getLongSize();    	non-compiled	[CE]  <identifier>  expected	44	None	replace
247	[BUG]  [BUGGY]  final  int  longFileMode  =  entry.getLongFileMode().getBytes();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  final  int  longFileMode  =  entry.getLongFileMode().getBytes();  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	final  int  longFileMode  =  entry.getLongFileMode().getBytes();	  final    int    longFileMode    =    entry.getName().getBytes();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
248	[BUG]  [BUGGY]  if(entry  ==  null  ||  entry.getName().length()!=  TarConstants.NUMBER_ARRAY)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry  ==  null  ||  entry.getName().length()!=  TarConstants.NUMBER_ARRAY)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry  ==  null  ||  entry.getName().length()!=  TarConstants.NUMBER_ARRAY)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_ARRAY)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
249	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_ARRAY  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_ARRAY  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NUMBER_ARRAY  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_ARRAY)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
250	[BUG]  [BUGGY]  if(entry.getName().endsWith(TarConstants.NUMBER_ARRAY))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().endsWith(TarConstants.NUMBER_ARRAY))  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().endsWith(TarConstants.NUMBER_ARRAY))  {	  if(entry.getName().length()!=    TarConstants.NUMBER_ARRAY)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
251	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_ARRAY  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_ARRAY  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NUMBER_ARRAY  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_ARRAY)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
252	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME_LONGLINK  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME_LONGLINK  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NAME_LONGLINK  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NAME_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
253	[BUG]  [BUGGY]  if(entry.getName().endsWith(TarConstants.NUMBER_ALIASING))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().endsWith(TarConstants.NUMBER_ALIASING))  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().endsWith(TarConstants.NUMBER_ALIASING))  {	  if(entry.getName().length()!=    TarConstants.NUMBER_ALIASING)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
254	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_ALIASING  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_ALIASING  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NUMBER_ALIASING  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_ALIASING)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
255	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_ALIASING  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_ALIASING  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NUMBER_ALIASING  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_ALIASING)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
256	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_ALIASING  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_ALIASING  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NUMBER_ALIASING  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_ALIASING)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
257	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_ALIASING  ||  entry.getName().length()  ==  TarConstants.GNUTYPE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_ALIASING  ||  entry.getName().length()  ==  TarConstants.GNUTYPE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NUMBER_ALIASING  ||  entry.getName().length()  ==  TarConstants.GNUTYPE_LONGNAME)  {	  if(entry.getName().length()    ==    TarConstants.NUMBER_ALIASING)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
258	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_ALIASING  ||  entry.getName().length()  ==  TarConstants.FILE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_ALIASING  ||  entry.getName().length()  ==  TarConstants.FILE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NUMBER_ALIASING  ||  entry.getName().length()  ==  TarConstants.FILE_LONGNAME)  {	  if(entry.getName().length()    ==    TarConstants.NUMBER_ALIASING)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
259	[BUG]  [BUGGY]  if(entry.getName().endsWith(TarConstants.NUMBER_SIZE))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().endsWith(TarConstants.NUMBER_SIZE))  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().endsWith(TarConstants.NUMBER_SIZE))  {	  if(entry.getName().length()!=    TarConstants.NUMBER_SIZE)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
260	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_SIZE  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_SIZE  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NUMBER_SIZE  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_SIZE)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
261	[BUG]  [BUGGY]  if(entry.getName().length()  ==  LONGFILE_GNU)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  LONGFILE_GNU)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  LONGFILE_GNU)  {  throw  new  IllegalArgumentException( " ");  }	  if(entry.getName().length()    ==    LONGFILE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
262	[BUG]  [BUGGY]  if(entry.getName().length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(entry.getName().length()    ==    LONGFILE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
263	[BUG]  [BUGGY]  if(entry.getName()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName()!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName()!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  if(entry.getName().length()    ==    LONGFILE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
264	[BUG]  [BUGGY]  if(entry.getName().endsWith(TarConstants.NUMBER_LONGLINK))  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().endsWith(TarConstants.NUMBER_LONGLINK))  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().endsWith(TarConstants.NUMBER_LONGLINK))  {	  if(entry.getName().length()    ==    TarConstants.NUMBER_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
265	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME_FILE_ERROR)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME_FILE_ERROR)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NAME_FILE_ERROR)  {	  if(entry.getName().length()!=    TarConstants.NAME_TRUNCATE)    {    	non-compiled	[CE]  <identifier>  expected	50	None	replace
266	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME_LONGNAME)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NAME_LONGNAME)  {	  if(entry.getName().length()    ==    TarConstants.NAME_SIZE)    {    	non-compiled	[CE]  <identifier>  expected	39	None	replace
267	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME_LONGNAME)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NAME_LONGNAME)  {	  if(entry.getName().length()    ==    TarConstants.NAME_SIZE)    {    	non-compiled	[CE]  <identifier>  expected	39	None	replace
268	[BUG]  [BUGGY]  entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_ERROR)    {    longLinkEntry.setSize(currName);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
269	[BUG]  [BUGGY]  entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.set  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.set  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.set	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_ERROR)    {    longLinkEntry.setSize(currName);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
270	[BUG]  [BUGGY]  entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName);  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName);  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName);  }	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_ERROR)    {    longLinkEntry.setSize(currName);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
271	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAMELEN  ||  entry.getName().length()  ==  TarConstants.GNUTYPE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAMELEN  ||  entry.getName().length()  ==  TarConstants.GNUTYPE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NAMELEN  ||  entry.getName().length()  ==  TarConstants.GNUTYPE_LONGNAME)  {	  if(entry.getName().length()!=    TarConstants.NAMELEN    ||    entry.getName().length()!=    TarConstants.GNUTYPE_LONGNAME)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
272	[BUG]  [BUGGY]  if(entry.getName()!=  null  ||  entry.getName().length()!=  TarConstants.NAMELEN  ||  entry.getName().length()!=  TarConstants.GNUTYPE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName()!=  null  ||  entry.getName().length()!=  TarConstants.NAMELEN  ||  entry.getName().length()!=  TarConstants.GNUTYPE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName()!=  null  ||  entry.getName().length()!=  TarConstants.NAMELEN  ||  entry.getName().length()!=  TarConstants.GNUTYPE_LONGNAME)  {	  if(entry.getName().length()!=    TarConstants.NAMELEN    ||    entry.getName().length()!=    TarConstants.GNUTYPE_LONGNAME)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
273	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAMELEN  ||  entry.getName().length()  >=  TarConstants.GNUTYPE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAMELEN  ||  entry.getName().length()  >=  TarConstants.GNUTYPE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NAMELEN  ||  entry.getName().length()  >=  TarConstants.GNUTYPE_LONGNAME)  {	  if(entry.getName().length()!=    TarConstants.NAMELEN    ||    entry.getName().length()!=    TarConstants.GNUTYPE_LONGNAME)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
274	[BUG]  [BUGGY]  if(entry  ==  null  ||  entry.getName().endsWith(TarConstants.NAME))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry  ==  null  ||  entry.getName().endsWith(TarConstants.NAME))  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry  ==  null  ||  entry.getName().endsWith(TarConstants.NAME))  {	  if(entry.getName().endsWith(TarConstants.NAME))    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
275	[BUG]  [BUGGY]  if(entry.getName().startsWith(TarConstants.NAME_LONGLINK))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().startsWith(TarConstants.NAME_LONGLINK))  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().startsWith(TarConstants.NAME_LONGLINK))  {	  if(entry.getName().endsWith(TarConstants.NAME))    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
276	[BUG]  [BUGGY]  if(entry.getName().endsWith(TarConstants.GNU_LONGLINK))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().endsWith(TarConstants.GNU_LONGLINK))  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().endsWith(TarConstants.GNU_LONGLINK))  {	  if(entry.getName().endsWith(TarConstants.NAME))    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
277	[BUG]  [BUGGY]  if(entry.getName().startsWith(TarConstants.NAME_LONGLINK)||  entry.getName().endsWith(TarConstants.NAME_LONGLINK))  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().startsWith(TarConstants.NAME_LONGLINK)||  entry.getName().endsWith(TarConstants.NAME_LONGLINK))  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().startsWith(TarConstants.NAME_LONGLINK)||  entry.getName().endsWith(TarConstants.NAME_LONGLINK))  {	  if(entry.getName().endsWith(TarConstants.NAME))    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
278	[BUG]  [BUGGY]  if(entry  ==  null  ||  entry.getName().length()!=  TarConstants.NUMBER_ERROR)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry  ==  null  ||  entry.getName().length()!=  TarConstants.NUMBER_ERROR)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry  ==  null  ||  entry.getName().length()!=  TarConstants.NUMBER_ERROR)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_ERROR)    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
279	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_ERROR  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_ERROR  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NUMBER_ERROR  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_ERROR)    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
280	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_ERROR  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_ERROR  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NUMBER_ERROR  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_ERROR)    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
281	[BUG]  [BUGGY]  if(entry.getName().endsWith(TarConstants.NUMBER_ERROR))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().endsWith(TarConstants.NUMBER_ERROR))  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().endsWith(TarConstants.NUMBER_ERROR))  {	  if(entry.getName().length()!=    TarConstants.NUMBER_ERROR)    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
282	[BUG]  [BUGGY]  if(entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(2);  if(currName.length()  ==  LONGFILE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(2);  if(currName.length()  ==  LONGFILE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(2);  if(currName.length()  ==  LONGFILE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
283	[BUG]  [BUGGY]  if(entry.getName().startsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().startsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().startsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
284	[BUG]  [BUGGY]  if(entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(2);  if(currName.length()  ==  LONGFILE_ERROR)  {  throw  new  Il  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(2);  if(currName.length()  ==  LONGFILE_ERROR)  {  throw  new  Il  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(2);  if(currName.length()  ==  LONGFILE_ERROR)  {  throw  new  Il	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
285	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.GNU_LONGLINK  ||  entry.getName().length()  ==  TarConstants.FILE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.GNU_LONGLINK  ||  entry.getName().length()  ==  TarConstants.FILE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.GNU_LONGLINK  ||  entry.getName().length()  ==  TarConstants.FILE_LONGNAME)  {	  if(entry.getName().length()    ==    TarConstants.NAME    ||    entry.getName().length()    ==    TarConstants.FILE_LONGNAME)    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
286	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.FILE_ERROR  ||  entry.getName().length()  ==  TarConstants.FILE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.FILE_ERROR  ||  entry.getName().length()  ==  TarConstants.FILE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.FILE_ERROR  ||  entry.getName().length()  ==  TarConstants.FILE_LONGNAME)  {	  if(entry.getName().length()    ==    TarConstants.NAME    ||    entry.getName().length()    ==    TarConstants.FILE_LONGNAME)    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
287	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.GNU_LONGLINK  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.GNU_LONGLINK  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.GNU_LONGLINK  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {	  if(entry.getName().length()    ==    TarConstants.NAME    ||    entry.getName().length()    ==    TarConstants.GNU_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
288	[BUG]  [BUGGY]  if(entry.getName()!=  null  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName()!=  null  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName()!=  null  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {	  if(entry.getName().length()    ==    TarConstants.NAME    ||    entry.getName().length()    ==    TarConstants.GNU_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
289	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_GNU)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_GNU)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NUMBER_GNU)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
290	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_FILE_LONGLINK)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_FILE_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NUMBER_FILE_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
291	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME_ERROR)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME_ERROR)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NAME_ERROR)  {	  if(entry.getName().length()    ==    TarConstants.NAME_FILE)    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
292	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.LONGFILE_ERROR)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.LONGFILE_ERROR)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.LONGFILE_ERROR)  {	  if(entry.getName().length()    ==    TarConstants.NAME_FILE)    {    	non-compiled	[CE]  <identifier>  expected	13	None	replace
293	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME  ||  entry.getName().length()  ==  TarConstants.LONGFILE_GNU)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME  ||  entry.getName().length()  ==  TarConstants.LONGFILE_GNU)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NAME  ||  entry.getName().length()  ==  TarConstants.LONGFILE_GNU)  {	  if(entry.getName().length()!=    TarConstants.NAME    ||    entry.getName().length()!=    TarConstants.LONGFILE_GNU)    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
294	[BUG]  [BUGGY]  if(entry.getName()!=  null  ||  entry.getName().length()!=  TarConstants.NAME  ||  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName()!=  null  ||  entry.getName().length()!=  TarConstants.NAME  ||  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName()!=  null  ||  entry.getName().length()!=  TarConstants.NAME  ||  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {	  if(entry.getName().length()!=    TarConstants.NAME    ||    entry.getName().length()!=    TarConstants.LONGFILE_GNU)    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
295	[BUG]  [BUGGY]  if(entry.getName()  ==  null  ||  entry.getName().length()!=  TarConstants.NAME  ||  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName()  ==  null  ||  entry.getName().length()!=  TarConstants.NAME  ||  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName()  ==  null  ||  entry.getName().length()!=  TarConstants.NAME  ||  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {	  if(entry.getName().length()!=    TarConstants.NAME    ||    entry.getName().length()!=    TarConstants.LONGFILE_GNU)    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
296	[BUG]  [BUGGY]  LongLinkEntry  longLinkEntry  =  entry.getName().getBytes();  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  LongLinkEntry  longLinkEntry  =  entry.getName().getBytes();  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	LongLinkEntry  longLinkEntry  =  entry.getName().getBytes();	  longLinkEntry    =    entry.getName().getBytes();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
297	[BUG]  [BUGGY]  longLinkEntry  =  entry.getName().getBytes(entry.getValue());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  longLinkEntry  =  entry.getName().getBytes(entry.getValue());  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	longLinkEntry  =  entry.getName().getBytes(entry.getValue());	  longLinkEntry    =    entry.getName().getBytes();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
298	[BUG]  [BUGGY]  longLinkEntry  =  entry.getLong().getBytes();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  longLinkEntry  =  entry.getLong().getBytes();  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	longLinkEntry  =  entry.getLong().getBytes();	  longLinkEntry    =    entry.getName().getBytes();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
299	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_FILE  ||  entry.getName().length()!=  TarConstants.LONGFILE_TRUNCATE)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_FILE  ||  entry.getName().length()!=  TarConstants.LONGFILE_TRUNCATE)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NUMBER_FILE  ||  entry.getName().length()!=  TarConstants.LONGFILE_TRUNCATE)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_FILE)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
300	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_FILE  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_FILE  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NUMBER_FILE  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_FILE)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
301	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_FILE  ||  entry.getName().length()!=  TarConstants.GNUTYPE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_FILE  ||  entry.getName().length()!=  TarConstants.GNUTYPE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NUMBER_FILE  ||  entry.getName().length()!=  TarConstants.GNUTYPE_LONGNAME)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_FILE)    {    	non-compiled	[CE]  <identifier>  expected	9	None	replace
302	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.FILE_ERROR  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.FILE_ERROR  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.FILE_ERROR  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {	  if(entry.getName().length()    ==    TarConstants.FILE_ERROR)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
303	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.UNKNOWN  ||  entry.getName().length()  ==  TarConstants.GNUTYPE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.UNKNOWN  ||  entry.getName().length()  ==  TarConstants.GNUTYPE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.UNKNOWN  ||  entry.getName().length()  ==  TarConstants.GNUTYPE_LONGNAME)  {	  if(entry.getName().length()    ==    TarConstants.UNKNOWN)    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
304	[BUG]  [BUGGY]  if(entry.getName().endsWith(TarConstants.UNKNOWN))  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().endsWith(TarConstants.UNKNOWN))  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().endsWith(TarConstants.UNKNOWN))  {	  if(entry.getName().length()    ==    TarConstants.UNKNOWN)    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
305	[BUG]  [BUGGY]  if(entry.getName()  ==  null  ||  entry.getName().length()!=  TarConstants.NAME  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName()  ==  null  ||  entry.getName().length()!=  TarConstants.NAME  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName()  ==  null  ||  entry.getName().length()!=  TarConstants.NAME  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NAME    ||    entry.getName().length()!=    TarConstants.GNU_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
306	[BUG]  [BUGGY]  if(entry.getName()!=  null  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName()!=  null  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName()!=  null  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NAME    ||    entry.getName().length()!=    TarConstants.GNU_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
307	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NULL  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NULL  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NULL  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {	  if(entry.getName().length()    ==    TarConstants.NULL)    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
308	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NULL  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NULL  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NULL  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {	  if(entry.getName().length()    ==    TarConstants.NULL)    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
309	[BUG]  [BUGGY]  if(entry.getName()!=  null  ||  entry.getName().length()!=  TarConstants.NAMELEN  ||  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName()!=  null  ||  entry.getName().length()!=  TarConstants.NAMELEN  ||  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName()!=  null  ||  entry.getName().length()!=  TarConstants.NAMELEN  ||  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {	  if(entry.getName().length()!=    TarConstants.NAMELEN    ||    entry.getName().length()!=    TarConstants.LONGFILE_GNU)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
310	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAMELEN  ||  entry.getName().length()  >=  TarConstants.LONGFILE_GNU)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAMELEN  ||  entry.getName().length()  >=  TarConstants.LONGFILE_GNU)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NAMELEN  ||  entry.getName().length()  >=  TarConstants.LONGFILE_GNU)  {	  if(entry.getName().length()!=    TarConstants.NAMELEN    ||    entry.getName().length()!=    TarConstants.LONGFILE_GNU)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
311	[BUG]  [BUGGY]  Long  longFileMode  =  entry.getName().getLongBytes();  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  Long  longFileMode  =  entry.getName().getLongBytes();  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	Long  longFileMode  =  entry.getName().getLongBytes();	  Long    longFileMode    =    entry.getName().getLongSize();    	non-compiled	[CE]  <identifier>  expected	45	None	replace
312	[BUG]  [BUGGY]  longFileMode  =  entry.getName().getShortValue();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  longFileMode  =  entry.getName().getShortValue();  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	longFileMode  =  entry.getName().getShortValue();	  longFileMode    =    entry.getName().getLongValue();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
313	[BUG]  [BUGGY]  longFileMode  =  entry.getName().getIntValue();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  longFileMode  =  entry.getName().getIntValue();  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	longFileMode  =  entry.getName().getIntValue();	  longFileMode    =    entry.getName().getLongValue();    	non-compiled	[CE]  <identifier>  expected	46	None	replace
314	[BUG]  [BUGGY]  int  longFileMode  =  entry.getLongFileMode().getBytes();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  int  longFileMode  =  entry.getLongFileMode().getBytes();  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	int  longFileMode  =  entry.getLongFileMode().getBytes();	  int    longFileMode    =    entry.getName().getBytes();    	non-compiled	[CE]  <identifier>  expected	31	None	replace
315	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.GNUTYPE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.GNUTYPE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.GNUTYPE_LONGNAME)  {	  if(entry.getName().length()    ==    TarConstants.GNU_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
316	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.GNU_LONGLINK  ||  entry.getName().length()  ==  TarConstants.GNUTYPE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.GNU_LONGLINK  ||  entry.getName().length()  ==  TarConstants.GNUTYPE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.GNU_LONGLINK  ||  entry.getName().length()  ==  TarConstants.GNUTYPE_LONGNAME)  {	  if(entry.getName().length()    ==    TarConstants.GNU_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	35	None	replace
317	[BUG]  [BUGGY]  entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_GNU)  {  return;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_GNU)  {  return;  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_GNU)  {  return;  }	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_GNU)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
318	[BUG]  [BUGGY]  if(entry.getName().startsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_GNU)  {  return;  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().startsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_GNU)  {  return;  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().startsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_GNU)  {  return;  }	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_GNU)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
319	[BUG]  [BUGGY]  entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(2);  if(currName.length()  ==  LONGFILE_GNU)  {  return;  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(2);  if(currName.length()  ==  LONGFILE_GNU)  {  return;  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(2);  if(currName.length()  ==  LONGFILE_GNU)  {  return;  }	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_GNU)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
320	[BUG]  [BUGGY]  final  int  longFileMode  =  entry.getName().getLength();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  final  int  longFileMode  =  entry.getName().getLength();  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	final  int  longFileMode  =  entry.getName().getLength();	  final    int    longFileMode    =    entry.getName().getSize();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
321	[BUG]  [BUGGY]  entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName  +  1);  }  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName  +  1);  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName  +  1);  }	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_ERROR)    {    longLinkEntry.setSize(currName    +    1);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
322	[BUG]  [BUGGY]  byte  longFileMode  =  entry.getName().getLongSize();  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  byte  longFileMode  =  entry.getName().getLongSize();  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	byte  longFileMode  =  entry.getName().getLongSize();	  int    longFileMode    =    entry.getName().getLongSize();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
323	[BUG]  [BUGGY]  if(entry.getName()!=  null  ||  entry.getName().length()!=  TarConstants.FILE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName()!=  null  ||  entry.getName().length()!=  TarConstants.FILE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName()!=  null  ||  entry.getName().length()!=  TarConstants.FILE_LONGNAME)  {	  if(entry.getName().length()!=    TarConstants.NAME    ||    entry.getName().length()!=    TarConstants.FILE_LONGNAME)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
324	[BUG]  [BUGGY]  if(entry.getName()  ==  null  ||  entry.getName().length()!=  TarConstants.FILE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName()  ==  null  ||  entry.getName().length()!=  TarConstants.FILE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName()  ==  null  ||  entry.getName().length()!=  TarConstants.FILE_LONGNAME)  {	  if(entry.getName().length()!=    TarConstants.NAME    ||    entry.getName().length()!=    TarConstants.FILE_LONGNAME)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
325	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME  ||  entry.getName().length()  ==  TarConstants.FILE_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME  ||  entry.getName().length()  ==  TarConstants.FILE_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NAME  ||  entry.getName().length()  ==  TarConstants.FILE_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NAME    ||    entry.getName().length()!=    TarConstants.FILE_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
326	[BUG]  [BUGGY]  if(entry.getName()!=  null  ||  entry.getName().length()!=  TarConstants.FILE_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName()!=  null  ||  entry.getName().length()!=  TarConstants.FILE_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName()!=  null  ||  entry.getName().length()!=  TarConstants.FILE_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NAME    ||    entry.getName().length()!=    TarConstants.FILE_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
327	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.FILE_LONGLINK  ||  entry.getName().length()!=  TarConstants.FILE_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.FILE_LONGLINK  ||  entry.getName().length()!=  TarConstants.FILE_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.FILE_LONGLINK  ||  entry.getName().length()!=  TarConstants.FILE_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NAME    ||    entry.getName().length()!=    TarConstants.FILE_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
328	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME  ||  entry.getName().length()  >=  TarConstants.FILE_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME  ||  entry.getName().length()  >=  TarConstants.FILE_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NAME  ||  entry.getName().length()  >=  TarConstants.FILE_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NAME    ||    entry.getName().length()!=    TarConstants.FILE_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
329	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.FILE_ERROR  ||  entry.getName().length()  ==  TarConstants.LONGFILE_TRUNCATE)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.FILE_ERROR  ||  entry.getName().length()  ==  TarConstants.LONGFILE_TRUNCATE)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.FILE_ERROR  ||  entry.getName().length()  ==  TarConstants.LONGFILE_TRUNCATE)  {	  if(entry.getName().length()    ==    TarConstants.FILE_ERROR)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
330	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.FILE_ERROR  ||  entry.getName().length()  ==  TarConstants.LONGFILE_GNU)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.FILE_ERROR  ||  entry.getName().length()  ==  TarConstants.LONGFILE_GNU)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.FILE_ERROR  ||  entry.getName().length()  ==  TarConstants.LONGFILE_GNU)  {	  if(entry.getName().length()    ==    TarConstants.FILE_ERROR)    {    	non-compiled	[CE]  <identifier>  expected	1	None	replace
331	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME_SIZE  ||  entry.getName().length()  ==  TarConstants.LONGFILE_TRUNCATE)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME_SIZE  ||  entry.getName().length()  ==  TarConstants.LONGFILE_TRUNCATE)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NAME_SIZE  ||  entry.getName().length()  ==  TarConstants.LONGFILE_TRUNCATE)  {	  if(entry.getName().length()    ==    TarConstants.NAME_SIZE)    {    	non-compiled	[CE]  <identifier>  expected	39	None	replace
332	[BUG]  [BUGGY]  if(entry.getName().endsWith(TarConstants.NAME_SIZE))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().endsWith(TarConstants.NAME_SIZE))  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().endsWith(TarConstants.NAME_SIZE))  {	  if(entry.getName().length()    ==    TarConstants.NAME_SIZE)    {    	non-compiled	[CE]  <identifier>  expected	39	None	replace
333	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.LONGNAME  ||  entry.getName().length()  ==  TarConstants.GNUTYPE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.LONGNAME  ||  entry.getName().length()  ==  TarConstants.GNUTYPE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.LONGNAME  ||  entry.getName().length()  ==  TarConstants.GNUTYPE_LONGNAME)  {	  if(entry.getName().length()    ==    TarConstants.LONGNAME)    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
334	[BUG]  [BUGGY]  if(entry.getName().endsWith(TarConstants.LONGNAME))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().endsWith(TarConstants.LONGNAME))  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().endsWith(TarConstants.LONGNAME))  {	  if(entry.getName().length()    ==    TarConstants.LONGNAME)    {    	non-compiled	[CE]  <identifier>  expected	25	None	replace
335	[BUG]  [BUGGY]  entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName  +  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName  +  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName  +	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_ERROR)    {    longLinkEntry.setSize(currName    +    1);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
336	[BUG]  [BUGGY]  if(entry.getName().endsWith( ".Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName  +  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().endsWith( ".Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName  +  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().endsWith( ".Archive "))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName  +	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_ERROR)    {    longLinkEntry.setSize(currName    +    1);    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
337	[BUG]  [BUGGY]  entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(2);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName);  }  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(2);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName);  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	entry.getName().endsWith( "Archive "))  {  String  currName  =  entry.getName().substring(2);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName);  }	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_ERROR)    {    longLinkEntry.setSize(currName);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
338	[BUG]  [BUGGY]  if(entry.getName().endsWith( ".Archive "))  {  String  currName  =  entry.getName().substring(2);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName);  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().endsWith( ".Archive "))  {  String  currName  =  entry.getName().substring(2);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName);  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().endsWith( ".Archive "))  {  String  currName  =  entry.getName().substring(2);  if(currName.length()  ==  LONGFILE_ERROR)  {  longLinkEntry.setSize(currName);  }	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_ERROR)    {    longLinkEntry.setSize(currName);    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
339	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_ALIASING  ||  entry.getName().length()  ==  TarConstants.LONGFILE_TRUNCATE)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_ALIASING  ||  entry.getName().length()  ==  TarConstants.LONGFILE_TRUNCATE)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NUMBER_ALIASING  ||  entry.getName().length()  ==  TarConstants.LONGFILE_TRUNCATE)  {	  if(entry.getName().length()    ==    TarConstants.NUMBER_ALIASING)    {    	non-compiled	[CE]  <identifier>  expected	3	None	replace
340	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.GNU_LONGLINK  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.GNU_LONGLINK  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.GNU_LONGLINK  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NAME    ||    entry.getName().length()!=    TarConstants.GNU_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
341	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.GNU_LONGLINK  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.GNU_LONGLINK  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.GNU_LONGLINK  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NAME    ||    entry.getName().length()!=    TarConstants.GNU_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
342	[BUG]  [BUGGY]  if(entry.getName().length()  >=  TarConstants.NAME  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  >=  TarConstants.NAME  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  >=  TarConstants.NAME  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NAME    ||    entry.getName().length()!=    TarConstants.GNU_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	15	None	replace
343	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_LONGLINK  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_LONGLINK  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NUMBER_LONGLINK  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
344	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_LONGLINK  ||  entry.getName().length()!=  TarConstants.GNUTYPE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_LONGLINK  ||  entry.getName().length()!=  TarConstants.GNUTYPE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NUMBER_LONGLINK  ||  entry.getName().length()!=  TarConstants.GNUTYPE_LONGNAME)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
345	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	5	None	replace
346	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_ERROR  ||  entry.getName().length()!=  TarConstants.GNUTYPE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_ERROR  ||  entry.getName().length()!=  TarConstants.GNUTYPE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NUMBER_ERROR  ||  entry.getName().length()!=  TarConstants.GNUTYPE_LONGNAME)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_ERROR)    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
347	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_ERROR  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_ERROR  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NUMBER_ERROR  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_ERROR)    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
348	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_ERROR  ||  entry.getName().length()!=  TarConstants.FILE_GNU)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_ERROR  ||  entry.getName().length()!=  TarConstants.FILE_GNU)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NUMBER_ERROR  ||  entry.getName().length()!=  TarConstants.FILE_GNU)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_ERROR)    {    	non-compiled	[CE]  <identifier>  expected	43	None	replace
349	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_ARRAY  ||  entry.getName().length()!=  TarConstants.GNUTYPE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_ARRAY  ||  entry.getName().length()!=  TarConstants.GNUTYPE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NUMBER_ARRAY  ||  entry.getName().length()!=  TarConstants.GNUTYPE_LONGNAME)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_ARRAY)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
350	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_ARRAY  ||  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_ARRAY  ||  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NUMBER_ARRAY  ||  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_ARRAY)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
351	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_ARRAY  ||  entry.getName().length()!=  TarConstants.LONGFILE_TRUNCATE)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_ARRAY  ||  entry.getName().length()!=  TarConstants.LONGFILE_TRUNCATE)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NUMBER_ARRAY  ||  entry.getName().length()!=  TarConstants.LONGFILE_TRUNCATE)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_ARRAY)    {    	non-compiled	[CE]  <identifier>  expected	8	None	replace
352	[BUG]  [BUGGY]  if(entry.getName().endsWith(TarConstants.NAME_ERROR))  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().endsWith(TarConstants.NAME_ERROR))  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().endsWith(TarConstants.NAME_ERROR))  {	  if(entry.getName().endsWith(TarConstants.NAME))    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
353	[BUG]  [BUGGY]  if(entry.getName().endsWith(TarConstants.FILE_GNU))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().endsWith(TarConstants.FILE_GNU))  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().endsWith(TarConstants.FILE_GNU))  {	  if(entry.getName().endsWith(TarConstants.NAME))    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
354	[BUG]  [BUGGY]  if(entry.getName().endsWith(TarConstants.NAME_LITERAL))  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().endsWith(TarConstants.NAME_LITERAL))  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().endsWith(TarConstants.NAME_LITERAL))  {	  if(entry.getName().endsWith(TarConstants.NAME))    {    	non-compiled	[CE]  <identifier>  expected	12	None	replace
355	[BUG]  [BUGGY]  longLinkEntry  =  entry.getName().getBytes(currName);  [CE]  <identifier>  expected  [FE]                              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  longLinkEntry  =  entry.getName().getBytes(currName);  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	longLinkEntry  =  entry.getName().getBytes(currName);	  longLinkEntry    =    entry.getName().getBytes();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
356	[BUG]  [BUGGY]  longLinkEntry  =  entry.getName().getBytes(entry.getSize());  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  longLinkEntry  =  entry.getName().getBytes(entry.getSize());  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	longLinkEntry  =  entry.getName().getBytes(entry.getSize());	  longLinkEntry    =    entry.getName().getBytes();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
357	[BUG]  [BUGGY]  longLinkEntry  =  entry.getSize().getBytes();  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  longLinkEntry  =  entry.getSize().getBytes();  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	longLinkEntry  =  entry.getSize().getBytes();	  longLinkEntry    =    entry.getName().getBytes();    	non-compiled	[CE]  <identifier>  expected	33	None	replace
358	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_SIZE  ||  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_SIZE  ||  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NUMBER_SIZE  ||  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_SIZE)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
359	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_SIZE  ||  entry.getName().length()!=  TarConstants.LONGFILE_TRUNCATE)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_SIZE  ||  entry.getName().length()!=  TarConstants.LONGFILE_TRUNCATE)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NUMBER_SIZE  ||  entry.getName().length()!=  TarConstants.LONGFILE_TRUNCATE)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_SIZE)    {    	non-compiled	[CE]  <identifier>  expected	42	None	replace
360	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_LONGLINK  ||  entry.getName().length()  ==  TarConstants.GNUTYPE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_LONGLINK  ||  entry.getName().length()  ==  TarConstants.GNUTYPE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NUMBER_LONGLINK  ||  entry.getName().length()  ==  TarConstants.GNUTYPE_LONGNAME)  {	  if(entry.getName().length()    ==    TarConstants.NUMBER_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	6	None	replace
361	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_LONGNAME  ||  entry.getName().length()!=  TarConstants.GNUTYPE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_LONGNAME  ||  entry.getName().length()!=  TarConstants.GNUTYPE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NUMBER_LONGNAME  ||  entry.getName().length()!=  TarConstants.GNUTYPE_LONGNAME)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_LONGNAME)    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
362	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_LONGNAME  ||  entry.getName().length()!=  TarConstants.FILE_TRUNCATE)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_LONGNAME  ||  entry.getName().length()!=  TarConstants.FILE_TRUNCATE)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NUMBER_LONGNAME  ||  entry.getName().length()!=  TarConstants.FILE_TRUNCATE)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_LONGNAME)    {    	non-compiled	[CE]  <identifier>  expected	41	None	replace
363	[BUG]  [BUGGY]  if(entry.getName().endsWith(LONGFILE_GNU))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  throw  new  Il  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().endsWith(LONGFILE_GNU))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  throw  new  Il  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().endsWith(LONGFILE_GNU))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  throw  new  Il	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
364	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_BACKSLASH  ||  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {  [CE]  <identifier>  expected  [FE]            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_BACKSLASH  ||  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NUMBER_BACKSLASH  ||  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_BACKSLASH)    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
365	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_BACKSLASH  ||  entry.getName().length()!=  TarConstants.GNUTYPE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_BACKSLASH  ||  entry.getName().length()!=  TarConstants.GNUTYPE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NUMBER_BACKSLASH  ||  entry.getName().length()!=  TarConstants.GNUTYPE_LONGNAME)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_BACKSLASH)    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
366	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_BACKSLASH  ||  entry.getName().length()!=  TarConstants.FILE_GNU)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_BACKSLASH  ||  entry.getName().length()!=  TarConstants.FILE_GNU)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NUMBER_BACKSLASH  ||  entry.getName().length()!=  TarConstants.FILE_GNU)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_BACKSLASH)    {    	non-compiled	[CE]  <identifier>  expected	26	None	replace
367	[BUG]  [BUGGY]  if(entry.getName().endsWith( ".Archive "))  {  String  currName  =  entry.getName().substring(0,  entry.getValue().length());  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().endsWith( ".Archive "))  {  String  currName  =  entry.getName().substring(0,  entry.getValue().length());  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().endsWith( ".Archive "))  {  String  currName  =  entry.getName().substring(0,  entry.getValue().length());  throw  new  IllegalArgumentException( " ");  }	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(0,    entry.getValue().length()    -    1);    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
368	[BUG]  [BUGGY]  String  currName  =  entry.getName().substring(0,  entry.getValue().length()  -  1);  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  String  currName  =  entry.getName().substring(0,  entry.getValue().length()  -  1);  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	String  currName  =  entry.getName().substring(0,  entry.getValue().length()  -  1);  throw  new  IllegalArgumentException( " ");  }	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(0,    entry.getValue().length()    -    1);    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
369	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME_LONGLINK  ||  entry.getName().length()!=  TarConstants.GNUTYPE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME_LONGLINK  ||  entry.getName().length()!=  TarConstants.GNUTYPE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NAME_LONGLINK  ||  entry.getName().length()!=  TarConstants.GNUTYPE_LONGNAME)  {	  if(entry.getName().length()!=    TarConstants.NAME_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	11	None	replace
370	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NULL  ||  entry.getName().length()  ==  TarConstants.GNUTYPE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NULL  ||  entry.getName().length()  ==  TarConstants.GNUTYPE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NULL  ||  entry.getName().length()  ==  TarConstants.GNUTYPE_LONGNAME)  {	  if(entry.getName().length()    ==    TarConstants.NULL)    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
371	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.FILE_GNU)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.FILE_GNU)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.FILE_GNU)  {	  if(entry.getName().length()    ==    TarConstants.NULL)    {    	non-compiled	[CE]  <identifier>  expected	27	None	replace
372	[BUG]  [BUGGY]  long  longFileMode  =  entry.getName().getLongValue();  [CE]  <identifier>  expected  [FE]                          AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  long  longFileMode  =  entry.getName().getLongValue();  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	long  longFileMode  =  entry.getName().getLongValue();	  Long    longFileMode    =    entry.getName().getLongValue();    	non-compiled	[CE]  <identifier>  expected	47	None	replace
373	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME_TRUNCATE  ||  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME_TRUNCATE  ||  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NAME_TRUNCATE  ||  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {	  if(entry.getName().length()!=    TarConstants.NAME_TRUNCATE)    {    	non-compiled	[CE]  <identifier>  expected	50	None	replace
374	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME_ERROR)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME_ERROR)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NAME_ERROR)  {	  if(entry.getName().length()!=    TarConstants.NAME_TRUNCATE)    {    	non-compiled	[CE]  <identifier>  expected	50	None	replace
375	[BUG]  [BUGGY]  if(entry.getName().endsWith(TarConstants.NAME_TRUNCATE))  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().endsWith(TarConstants.NAME_TRUNCATE))  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().endsWith(TarConstants.NAME_TRUNCATE))  {	  if(entry.getName().length()!=    TarConstants.NAME_TRUNCATE)    {    	non-compiled	[CE]  <identifier>  expected	50	None	replace
376	[BUG]  [BUGGY]  final  longFileMode  =  entry.getName().getLONGFILE_TRUNCATE();  [CE]  <identifier>  expected  [FE]                                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  final  longFileMode  =  entry.getName().getLONGFILE_TRUNCATE();  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	final  longFileMode  =  entry.getName().getLONGFILE_TRUNCATE();	  final    int    longFileMode    =    entry.getName().getSize();    	non-compiled	[CE]  <identifier>  expected	34	None	replace
377	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.LONGFILE_GNU  ||  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.LONGFILE_GNU  ||  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.LONGFILE_GNU  ||  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {	  if(entry.getName().length()!=    TarConstants.NAME    ||    entry.getName().length()!=    TarConstants.LONGFILE_GNU)    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
378	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.LONGFILE_ERROR  ||  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.LONGFILE_ERROR  ||  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.LONGFILE_ERROR  ||  entry.getName().length()!=  TarConstants.LONGFILE_GNU)  {	  if(entry.getName().length()!=    TarConstants.NAME    ||    entry.getName().length()!=    TarConstants.LONGFILE_GNU)    {    	non-compiled	[CE]  <identifier>  expected	52	None	replace
379	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.LONGFILE_GNU  ||  entry.getName().length()!=  TarConstants.FILE_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.LONGFILE_GNU  ||  entry.getName().length()!=  TarConstants.FILE_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.LONGFILE_GNU  ||  entry.getName().length()!=  TarConstants.FILE_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NAME    ||    entry.getName().length()!=    TarConstants.FILE_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
380	[BUG]  [BUGGY]  if(entry.getName().length()  >=  TarConstants.NAME  ||  entry.getName().length()  ==  TarConstants.FILE_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  >=  TarConstants.NAME  ||  entry.getName().length()  ==  TarConstants.FILE_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  >=  TarConstants.NAME  ||  entry.getName().length()  ==  TarConstants.FILE_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NAME    ||    entry.getName().length()!=    TarConstants.FILE_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	16	None	replace
381	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.LONGFILE_GNU  ||  entry.getName().length()  ==  TarConstants.FILE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.LONGFILE_GNU  ||  entry.getName().length()  ==  TarConstants.FILE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.LONGFILE_GNU  ||  entry.getName().length()  ==  TarConstants.FILE_LONGNAME)  {	  if(entry.getName().length()    ==    TarConstants.NAME    ||    entry.getName().length()    ==    TarConstants.FILE_LONGNAME)    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
382	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.FILE_GNU  ||  entry.getName().length()  ==  TarConstants.FILE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.FILE_GNU  ||  entry.getName().length()  ==  TarConstants.FILE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.FILE_GNU  ||  entry.getName().length()  ==  TarConstants.FILE_LONGNAME)  {	  if(entry.getName().length()    ==    TarConstants.NAME    ||    entry.getName().length()    ==    TarConstants.FILE_LONGNAME)    {    	non-compiled	[CE]  <identifier>  expected	40	None	replace
383	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.LONGFILE_GNU  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.LONGFILE_GNU  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.LONGFILE_GNU  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {	  if(entry.getName().length()    ==    TarConstants.NAME    ||    entry.getName().length()    ==    TarConstants.GNU_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
384	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.FILE_GNU  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                  AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.FILE_GNU  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.FILE_GNU  ||  entry.getName().length()  ==  TarConstants.GNU_LONGLINK)  {	  if(entry.getName().length()    ==    TarConstants.NAME    ||    entry.getName().length()    ==    TarConstants.GNU_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	37	None	replace
385	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.LONGFILE_GNU  ||  entry.getName().length()!=  TarConstants.FILE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.LONGFILE_GNU  ||  entry.getName().length()!=  TarConstants.FILE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.LONGFILE_GNU  ||  entry.getName().length()!=  TarConstants.FILE_LONGNAME)  {	  if(entry.getName().length()!=    TarConstants.NAME    ||    entry.getName().length()!=    TarConstants.FILE_LONGNAME)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
386	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.FILE_LONGNAME  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.FILE_LONGNAME  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.FILE_LONGNAME  ||  entry.getName().length()!=  TarConstants.GNU_LONGLINK)  {	  if(entry.getName().length()!=    TarConstants.NAME    ||    entry.getName().length()!=    TarConstants.FILE_LONGNAME)    {    	non-compiled	[CE]  <identifier>  expected	51	None	replace
387	[BUG]  [BUGGY]  if(entry.getName().length()  >=  TarConstants.NAMELEN  ||  entry.getName().length()  ==  TarConstants.LONGFILE_GNU)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  >=  TarConstants.NAMELEN  ||  entry.getName().length()  ==  TarConstants.LONGFILE_GNU)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  >=  TarConstants.NAMELEN  ||  entry.getName().length()  ==  TarConstants.LONGFILE_GNU)  {	  if(entry.getName().length()!=    TarConstants.NAMELEN    ||    entry.getName().length()!=    TarConstants.LONGFILE_GNU)    {    	non-compiled	[CE]  <identifier>  expected	49	None	replace
388	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.UNKNOWN  ||  entry.getName().length()  ==  TarConstants.LONGFILE_GNU)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.UNKNOWN  ||  entry.getName().length()  ==  TarConstants.LONGFILE_GNU)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.UNKNOWN  ||  entry.getName().length()  ==  TarConstants.LONGFILE_GNU)  {	  if(entry.getName().length()    ==    TarConstants.UNKNOWN)    {    	non-compiled	[CE]  <identifier>  expected	36	None	replace
389	[BUG]  [BUGGY]  if(entry.getName().endsWith(LONGFILE_ERROR))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_GNU)  {  return;  }  [CE]  <identifier>  expected  [FE]                            AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().endsWith(LONGFILE_ERROR))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_GNU)  {  return;  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().endsWith(LONGFILE_ERROR))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_GNU)  {  return;  }	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_GNU)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
390	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_INT)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NUMBER_INT)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NUMBER_INT)  {	  if(entry.getName().length()    ==    TarConstants.NUMBER)    {    	non-compiled	[CE]  <identifier>  expected	2	None	replace
391	[BUG]  [BUGGY]  if(entry.getName().endsWith(LONGFILE_GNU))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  return;  }  [CE]  <identifier>  expected  [FE]                      AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().endsWith(LONGFILE_GNU))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  return;  }  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().endsWith(LONGFILE_GNU))  {  String  currName  =  entry.getName().substring(1);  if(currName.length()  ==  LONGFILE_ERROR)  {  return;  }	  if(entry.getName().endsWith(   "Archive   "))    {    String    currName    =    entry.getName().substring(1);    if(currName.length()    ==    LONGFILE_ERROR)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
392	[BUG]  [BUGGY]  longFileMode  =  entry.getClass().getName().getBytes();  [CE]  <identifier>  expected  [FE]                    AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  longFileMode  =  entry.getClass().getName().getBytes();  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	longFileMode  =  entry.getClass().getName().getBytes();	  longFileMode    =    entry.getName().getBytes();    	non-compiled	[CE]  <identifier>  expected	28	None	replace
393	[BUG]  [BUGGY]  final  String  currName  =  entry.getName().getBytes();  [CE]  <identifier>  expected  [FE]                        AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  final  String  currName  =  entry.getName().getBytes();  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	final  String  currName  =  entry.getName().getBytes();	  final    int    longFileMode    =    entry.getName().getBytes();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
394	[BUG]  [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME_LONGLINK  ||  entry.getName().length()  ==  TarConstants.GNUTYPE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()  ==  TarConstants.NAME_LONGLINK  ||  entry.getName().length()  ==  TarConstants.GNUTYPE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()  ==  TarConstants.NAME_LONGLINK  ||  entry.getName().length()  ==  TarConstants.GNUTYPE_LONGNAME)  {	  if(entry.getName().length()    ==    TarConstants.NAME_LONGLINK)    {    	non-compiled	[CE]  <identifier>  expected	10	None	replace
395	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME  ||  entry.getName().length()  ==  TarConstants.GNUTYPE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NAME  ||  entry.getName().length()  ==  TarConstants.GNUTYPE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NAME  ||  entry.getName().length()  ==  TarConstants.GNUTYPE_LONGNAME)  {	  if(entry.getName().length()!=    TarConstants.NAMELEN    ||    entry.getName().length()!=    TarConstants.GNUTYPE_LONGNAME)    {    	non-compiled	[CE]  <identifier>  expected	48	None	replace
396	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_ALIASING  ||  entry.getName().length()!=  TarConstants.GNUTYPE_LONGNAME)  {  [CE]  <identifier>  expected  [FE]              AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_ALIASING  ||  entry.getName().length()!=  TarConstants.GNUTYPE_LONGNAME)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NUMBER_ALIASING  ||  entry.getName().length()!=  TarConstants.GNUTYPE_LONGNAME)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_ALIASING)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
397	[BUG]  [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_ALIASING  ||  entry.getName().length()!=  TarConstants.LONGFILE_TRUNCATE)  {  [CE]  <identifier>  expected  [FE]                AssertionFailedError      [CONTEXT]      public  void  putArchiveEntry(ArchiveEntry  archiveEntry)  throws  IOException  {  TarArchiveEntry  entry  =  (TarArchiveEntry)  archiveEntry;      [BUGGY]  if(entry.getName().length()!=  TarConstants.NUMBER_ALIASING  ||  entry.getName().length()!=  TarConstants.LONGFILE_TRUNCATE)  {  [BUGGY]        if  (longFileMode  ==  LONGFILE_GNU)  {    TarArchiveEntry  longLinkEntry  =  new  TarArchiveEntry(TarConstants.GNU_LONGLINK,  TarConstants.LF_GNUTYPE_LONGNAME);  final  byte[]  nameBytes  =  entry.getName().getBytes();  //  TODO  is  it  correct  to  use  the  default  charset  here?  longLinkEntry.setSize(nameBytes.length  +  1);  //  +1  for  NUL  putArchiveEntry(longLinkEntry);  [CLASS]  TarArchiveOutputStream  [METHOD]  putArchiveEntry  [RETURN_TYPE]  void  ArchiveEntry  archiveEntry  [VARIABLES]  byte[]  assemBuf  nameBytes  recordBuf  boolean  closed  OutputStream  os  out  TarBuffer  buffer  ArchiveEntry  archiveEntry  String  currName  int  LONGFILE_ERROR  LONGFILE_GNU  LONGFILE_TRUNCATE  assemLen  blockSize  longFileMode  recordSize  long  currBytes  currSize  TarArchiveEntry  entry  longLinkEntry  	projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java	1.0	155	155	1	replace	if(entry.getName().length()!=  TarConstants.NUMBER_ALIASING  ||  entry.getName().length()!=  TarConstants.LONGFILE_TRUNCATE)  {	  if(entry.getName().length()!=    TarConstants.NUMBER_ALIASING)    {    	non-compiled	[CE]  <identifier>  expected	24	None	replace
