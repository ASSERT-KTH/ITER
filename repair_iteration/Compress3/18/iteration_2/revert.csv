projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,0,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,assemBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,assemLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,0);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,0,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,0,recordSize+1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,0,recordBuf.length);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,0,recordBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,0,recordSize-1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,0,assemBuf.length);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,0,assemLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,assemLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,0,assemLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,recordLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,assemLen+1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed){for(inti=0;i<recordBuf.length;i++){buffer[i]=entry.getName();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed){for(inti=0;i<recordBuf.length;i++){currBytes+=recordBuf[i];}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed){for(inti=0;i<recordBuf.length;i++){currBytes+=recordBuf.length;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed){for(inti=0;i<recordBuf.length;i++){buffer[i]=entry.getISOControl();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed){for(inti=0;i<recordBuf.length;i++){buffer[i]=archiveEntry.getName();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed){for(inti=0;i<recordBuf.length;i++){buffer[i]=archiveEntry.getISOControl();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed){for(inti=0;i<recordBuf.length;i++){buffer.append('/');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177||!closed){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(!closed&&recordBuf!=null){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(!closed){buffer.writeRecord(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(!closed&&recordBuf!=null){buffer.writeRecord(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177Entry<K,V>entry=entry.getEntry();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,0);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,0L);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed){buffer.writeRecord(assemBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed){buffer.writeRecord(assemBuf);}else{System.arraycopy(assemBuf,0,assemBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed){buffer.writeRecord(assemBuf);}else{System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed){buffer.writeRecord(assemBuf);}else{buffer.writeRecord(assemBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,nameBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordBuffer(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(assemBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(recordBuf,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(recordBuf,assemLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordBytes(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(recordBuf,0,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,currBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,recordSize+1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,currSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177longLinkEntry=buffer.getDirectoryEntry(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(currBytes==null){longLinkEntry=archiveEntry.getLongLinkEntry();if(longLinkEntry!=null){buffer.closeArchiveEntry();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(currBytes==null){longLinkEntry=archiveEntry.getLongLinkEntry();if(!closed){thrownewRuntimeException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(currBytes==null){longLinkEntry=archiveEntry.getDirectory();if(!closed){thrownewRuntimeException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(currBytes==null){longLinkEntry=archiveEntry.getDirectory();if(closed){thrownewRuntimeException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177finalOutputStreamout=newFileOutputStream(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed){thrownewRuntimeException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.copyCurrentStructure(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeBytes(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.copyCurrentStructure(assemBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,0,recordLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed||recordBuf!=null){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){buffer.writeRecord(recordBuf,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed){buffer.writeRecord(recordBuf,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,0,recordLONGFILE_ERROR);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,recordBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(recordBuf,currBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(recordBuf,0);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,nameBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,recordBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,0,recordSize+2);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,recordSize-1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordEntryHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(!closed){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed||buffer.isDirectory()){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,assemLen+1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith("Archive")){intblockSize=recordBuf.length;for(inti=0;i<blockSize;i++){buffer.append('/');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith("Archive")){intblockSize=recordBuf.length;for(inti=0;i<blockSize;++i){buffer.append('/');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith("Archive")){for(inti=0,len=recordBuf.length;i<len;++i){currBytes+=recordBuf[i];}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith("Archive")){StringcurrName=entry.getName();if(currName==null){return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith("Archive")){intblockSize=recordBuf.length;for(inti=0;i<blockSize;i++){buffer.append('n');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith("Archive")){intblockSize=recordBuf.length;for(inti=0;i<blockSize;i++){currBytes+=blockSize;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith("Archive")){intblockSize=recordBuf.length;for(inti=0;i<blockSize;++i){buffer.append('n');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeInt(recordBuf.length);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){thrownewRuntimeException("Archiveentryistoolong(>"+TarConstants.NAMELEN+"bytes)");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed){thrownewRuntimeException("Archiveentryistoolong(>"+TarConstants.NAMELEN+"bytes)");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){thrownewRuntimeException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177safely()){thrownewRuntimeException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177Thread.currentThread().setContextClassLoader(entry.getClass().getClassLoader());
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177safely(closed){thrownewRuntimeException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith(".Archive")){StringcurrName=entry.getName();if(currName==null){return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177||entry.getName().endsWith("Archive")){StringcurrName=entry.getName();if(currName==null){return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177StringcurrName=entry.getName();if(currName==null){return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith("Archive")){StringcurrName=entry.getName();if(currName!=null){return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith("Archive")||entry.getName().endsWith("Archive")){StringcurrName=entry.getName();if(currName==null){return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177||entry.getName().endsWith(".Archive")){StringcurrName=entry.getName();if(currName==null){return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,0,recordBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,0L);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(!closed&&recordBuf.length>0){buffer.writeRecord(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(!closed){buffer.writeRecord(recordBuf,0,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(!closed){buffer.writeRecord(assemBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(!closed){buffer.writeRecord(recordBuf,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed&&buffer.isDirectory()){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed&&buffer.isDirectory()){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed||entry.isDirectory()){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed||recordBuf.isDirectory()){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed||buffer.isDirectory()){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177||entry.getName().endsWith("Archive")){for(inti=0,len=recordBuf.length;i<len;++i){currBytes+=recordBuf[i];}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith(".Archive")){for(inti=0,len=recordBuf.length;i<len;++i){currBytes+=recordBuf[i];}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177||entry.getName().endsWith("Archive")){for(inti=0,len=recordBuf.length;i<len;++i){currBytes+=recordBuf[i]
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith("Archive")){for(inti=0,len=recordBuf.length;i<len;++i){currBytes+=recordBuf[0];}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177||entry.getName().endsWith("Archive")){for(inti=0,len=recordBuf.length;i<len;++i){currBytes+=recordBuf[
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177longLinkEntry=archiveEntry.getLongLinkEntry();if(!closed){thrownewRuntimeException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.isDirectory()){if(currBytes==null){longLinkEntry=archiveEntry.getLongLinkEntry();if(!closed){thrownewRuntimeException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(longFileMode!=LONGFILE_GNU){if(currBytes==null){longLinkEntry=archiveEntry.getLongLinkEntry();if(!closed){thrownewRuntimeException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(longFileMode!=LONGFILE_GNU){if(currBytes==null){longLinkEntry=archiveEntry.getLongLinkEntry();if(!closed){thrownewRuntimeException("
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177longLinkEntry=archiveEntry.getLongLinkEntry();if(closed){thrownewRuntimeException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(currBytes!=null){longLinkEntry=archiveEntry.getLongLinkEntry();if(!closed){thrownewRuntimeException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith(".Archive")){intblockSize=recordBuf.length;for(inti=0;i<blockSize;i++){currBytes+=blockSize;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().startsWith("Archive")){intblockSize=recordBuf.length;for(inti=0;i<blockSize;i++){currBytes+=blockSize;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith("Archive_")){intblockSize=recordBuf.length;for(inti=0;i<blockSize;i++){currBytes+=blockSize;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177((TarArchiveEntry)entry).getName().endsWith("Archive")){intblockSize=recordBuf.length;for(inti=0;i<blockSize;i++){currBytes+=blockSize;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith(".Archives")){intblockSize=recordBuf.length;for(inti=0;i<blockSize;i++){currBytes+=blockSize;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith("Archive")||entry.getName().endsWith("Archive")){intblockSize=recordBuf.length;for(inti=0;i<blockSize;i++){currBytes+=
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){buffer.writeRecord(assemBuf);}else{System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed){System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(!closed){System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}else{System.arraycopy(assemBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,0,recordBuf.length);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,0,recordBuf.length-1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,0,recordBuf.length+1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,0,recordBuf.length-2);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,0,recordBuf.length+2);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,0,recordBuf.length-4);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed&&recordBuf!=null){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(!closed&&recordBuf==null){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(!closed||recordBuf!=null){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed){while(recordBuf!=null){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(!closed&&recordBuf>=null){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed&&recordBuf!=null){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed||recordBuf==null){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(currBytes!=null){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(currBytes==null){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(currName!=null){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177longLinkEntry=archiveEntry.getDirectory();if(!closed){thrownewRuntimeException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(longFileMode!=LONGFILE_GNU){if(currBytes==null){longLinkEntry=archiveEntry.getDirectory();if(!closed){thrownewRuntimeException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(longFileMode==LONGFILE_GNU){if(currBytes==null){longLinkEntry=archiveEntry.getDirectory();if(!closed){thrownewRuntimeException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.isDirectory()){if(currBytes==null){longLinkEntry=archiveEntry.getDirectory();if(!closed){thrownewRuntimeException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(longFileMode!=LONGFILE_GNU){if(currBytes==null){longLinkEntry=archiveEntry.getDirectory();if(!closed){thrownewRuntimeException("
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(longFileMode==LONGFILE_GNU){if(currBytes==null){longLinkEntry=archiveEntry.getDirectory();if(!closed){thrownewRuntimeException("
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(recordBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(recordLongFileMode);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(currName);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(recordHandler);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith(".Archive")){intblockSize=recordBuf.length;for(inti=0;i<blockSize;++i){buffer.append('n');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().startsWith("Archive")){intblockSize=recordBuf.length;for(inti=0;i<blockSize;++i){buffer.append('n');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith("Archive_")){intblockSize=recordBuf.length;for(inti=0;i<blockSize;++i){buffer.append('n');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith(".archives")){intblockSize=recordBuf.length;for(inti=0;i<blockSize;++i){buffer.append('n');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith(".Archives")){intblockSize=recordBuf.length;for(inti=0;i<blockSize;++i){buffer.append('n');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith("Archive")||entry.getName().endsWith("Archive")){intblockSize=recordBuf.length;for(inti=0;i<blockSize;++i){buffer.append('n');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){buffer.writeRecord(assemBuf);}else{buffer.writeRecord(assemBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(!closed){buffer.writeRecord(assemBuf);}else{buffer.writeRecord(assemBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(!closed){assemBuf.writeRecord(assemBuf);}else{buffer.writeRecord(assemBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(!closed&&assemBuf!=null){buffer.writeRecord(assemBuf);}else{buffer.writeRecord(assemBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177safely()){buffer.writeRecord(assemBuf);}else{buffer.writeRecord(assemBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){buffer.writeRecord(assemBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){for(inti=0;i<recordBuf.length;i++){buffer[i]=archiveEntry.getISOControl();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){for(inti=0;i<recordBuf.length;i++){buffer[i]=entry.getISOControl();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed){for(inti=0;i<recordBuf.length;i++){buffer[i]=repositoryEntry.getISOControl();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){for(inti=0;i<recordBuf.length;i++){buffer[i]=repositoryEntry.getISOControl();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed){for(inti=0;i<recordBuf.length;i++){buffer[i]=archiveEntry.getIOControl();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.write(assemBuf,0,recordBuf.length);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeBytes(assemBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.write(assemBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeBytes(recordBuf,0,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.write(assemBuf,recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeBytes(entry.getName());
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeBytes(assemBuf,0,recordBuf.length);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,0,blockSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,0,recordSize+1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,0,recordSize-1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,currBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,0,nameBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,currSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,nameBytes,currSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,0,assemLen+1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,recordSize+1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,assemLen+2);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,assemLen+4);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,assemLen+3);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,2);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,0,recordBytes.length);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordBuffer(recordBuffer);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordBuffer(assemBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed){buffer.writeRecordBuffer(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordBuffer(recordBuf,0,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordBuffer(recordBuf,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordBuffer(recordBuffer,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,0,recordLONGFILE_ERROR);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,0,recordLONGFILE_GNU);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,0,recordLONGFILE_GNU);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(0,0,recordLONGFILE_ERROR);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,0,recordBufLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,0,assemLen+1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){buffer.writeRecord(assemBuf);}else{System.arraycopy(assemBuf,0,assemBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177System.arraycopy(assemBuf,0,assemBuf,0,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed){System.arraycopy(assemBuf,0,assemBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed){buffer.writeRecord(assemBuf);}else{system.arraycopy(assemBuf,0,assemBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,0,currSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,0,currSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,0,currBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,assemBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,0,nameBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,0,recordLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,recordLen+1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,blockSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,0,recordSize-2);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,0,recordSize/1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,0,recordSize*1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177longLinkEntry=archiveEntry.getLongLinkEntry();if(longLinkEntry!=null){buffer.closeArchiveEntry();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.isDirectory()){if(currBytes==null){longLinkEntry=archiveEntry.getLongLinkEntry();if(longLinkEntry!=null){buffer.closeArchiveEntry();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177finallongLinkEntry=archiveEntry.getLongLinkEntry();if(longLinkEntry!=null){buffer.closeArchiveEntry();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(currBytes!=null){longLinkEntry=archiveEntry.getLongLinkEntry();if(longLinkEntry!=null){buffer.closeArchiveEntry();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(currBytes==null){currBytes=archiveEntry.getLongLinkEntry();if(longLinkEntry!=null){buffer.closeArchiveEntry();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.isDirectory()){if(currBytes==null){longLinkEntry=archiveEntry.getLongLinkEntry();if(longLinkEntry!=null){buffer.closeArchiveEntry();}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177&&!closed){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177||(!closed&&recordBuf.length>0)){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177||(closed&&recordBuf.length()>0)){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177||closed){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177||close){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,1L);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,0,assemBuf.length);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(assemBuf!=null){buffer.writeRecord(recordBuf,0,assemBuf.length);}else{buffer.writeRecord(assemBuf,0,assemBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(assemBuf!=null){buffer.writeRecord(recordBuf,0,assemBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(assemBuf!=null){buffer.writeRecord(recordBuf,0,assemBuf.length);}else{buffer.writeRecord(recordBuf,0,assemBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(assemBuf!=null){buffer.writeRecord(recordBuf,0,assemBuf.length);}else{buffer.writeRecord(assemBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith(".Archive")){intblockSize=recordBuf.length;for(inti=0;i<blockSize;++i){buffer.append('/');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().startsWith("Archive")){intblockSize=recordBuf.length;for(inti=0;i<blockSize;++i){buffer.append('/');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith("Archive_")){intblockSize=recordBuf.length;for(inti=0;i<blockSize;++i){buffer.append('/');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith(".archives")){intblockSize=recordBuf.length;for(inti=0;i<blockSize;++i){buffer.append('/');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith(".Archives")){intblockSize=recordBuf.length;for(inti=0;i<blockSize;++i){buffer.append('/');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith("Archive")||entry.getName().endsWith("Archive")){intblockSize=recordBuf.length;for(inti=0;i<blockSize;++i){buffer.append('/
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){for(inti=0;i<recordBuf.length;i++){buffer.append('/');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(currName!=null){if(!closed){for(inti=0;i<recordBuf.length;i++){buffer.append('/');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177Entry<K,V>entry=entry.getEntry();if(entry!=null){for(inti=0;i<recordBuf.length;i++){buffer.append('/');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed){for(inti=0;i<recordBuf.length;i++){buffer.append('/').append(longFileMode);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(currName!=null){if(!closed){for(inti=0;i<recordBuf.length;i++){buffer.append('/').append(longFileMode);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){for(inti=0;i<recordBuf.length;i++){buffer.append('/').append(longFileMode);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177longLinkEntry=entry.getDirectoryEntry(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177longLinkEntry=buffer.getDirectoryEntry(entry);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177longLinkEntry=buffer.getDirectoryEntry(recordBuf,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177longLinkEntry=archiveEntry.getDirectoryEntry(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177longLinkEntry=buffer.getDirectoryEntry(entry.getName());
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177archiveEntry=buffer.getDirectoryEntry(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177longLinkEntry=buffer.getDirectoryEntry(longFileMode);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordEntryHeader(assemBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordEntryHeader(recordBuf,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordEntryHeader(recordBuf,assemLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordEntryHeader(recordBuf,0,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordEntryHeader(entry.getName());
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordEntry(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,0,recordBytes+1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,0,recordBytes,currSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,0,recordBytes-1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith(".Archive")){intblockSize=recordBuf.length;for(inti=0;i<blockSize;i++){buffer.append('n');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().startsWith("Archive")){intblockSize=recordBuf.length;for(inti=0;i<blockSize;i++){buffer.append('n');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith("Archive_")){intblockSize=recordBuf.length;for(inti=0;i<blockSize;i++){buffer.append('n');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith(".archives")){intblockSize=recordBuf.length;for(inti=0;i<blockSize;i++){buffer.append('n');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith(".Archives")){intblockSize=recordBuf.length;for(inti=0;i<blockSize;i++){buffer.append('n');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith("Archive")||entry.getName().endsWith("Archive")){intblockSize=recordBuf.length;for(inti=0;i<blockSize;i++){buffer.append('
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed){for(inti=0;i<recordBuf.length;i++){buffer[i]=Entry.getISOControl();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed){for(inti=0;i<recordsBuf.length;i++){buffer[i]=entry.getISOControl();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){for(inti=0;i<recordBuf.length;i++){buffer[i]=Entry.getISOControl();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed){for(inti=0;i<records.length;i++){buffer[i]=entry.getISOControl();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed){for(inti=0;i<recordBuf.length;i++){buffer[i]=entry.getIOControl();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,0,recordBytes.length);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,0,assemSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,0,recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(assemBuf,currBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(currBytes,recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(recordBuf,currSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(recordBuf,0,currBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(recordBuf,currBytes,assemLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(recordBuf,currBytes+1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(!closed&&recordBuf.length>0){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(!closed){buffer.writeRecord(recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(!closed){buffer.writeRecord(assemBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(true){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.copyCurrentStructure(assemBuf,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeCurrentStructure(assemBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeCurrentStructure(assemBuf,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.copyCurrentStructure(currName);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.copyCurrentStructure(assemBuf,currBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeCurrentStructure(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177safely()){buffer.writeRecord(recordBuf,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(!closed){buffer.writeRecord(recordBuf,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(!closed){recordBuf.writeRecord(recordBuf,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177Entry<K,V>entry=entry.getValue();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177Entry<K,V>entry=archiveEntry.getEntry();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177Entry<K,V>entry=entry.getKey();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177finalEntry<K,V>entry=entry.getEntry();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177Entry<K,V>entry=entry.getAncestor();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,recordBuf,currSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177longLinkEntry=archiveEntry.getDirectory();if(closed){thrownewRuntimeException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(longFileMode!=LONGFILE_GNU){if(currBytes==null){longLinkEntry=archiveEntry.getDirectory();if(closed){thrownewRuntimeException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(longFileMode==LONGFILE_GNU){if(currBytes==null){longLinkEntry=archiveEntry.getDirectory();if(closed){thrownewRuntimeException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.isDirectory()){if(currBytes==null){longLinkEntry=archiveEntry.getDirectory();if(closed){thrownewRuntimeException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177longLinkEntry=archiveEntry.getDirectory();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(longFileMode!=LONGFILE_GNU){if(currBytes==null){longLinkEntry=archiveEntry.getDirectory();if(closed){thrownewRuntimeException("
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(longFileMode==LONGFILE_GNU){if(currBytes==null){longLinkEntry=archiveEntry.getDirectory();if(closed){thrownewRuntimeException("
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){for(inti=0;i<recordBuf.length;i++){buffer[i]=archiveEntry.getName();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){for(inti=0;i<recordBuf.length;i++){buffer[i]=entry.getName();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed){for(inti=0;i<recordBuf.length;i++){buffer[i]=repositoryEntry.getName();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){for(inti=0;i<recordBuf.length;i++){buffer[i]=repositoryEntry.getName();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed){for(inti=0;i<recordBuf.length;i++){buffer[i]=file.getName();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeInt(assemBuf.length);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeInt(recordBuf.length-1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeInt(assemBuf,0,recordBuf.length);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeInt(recordBuf.length+1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeLong(recordBuf.length);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeInt(recordBuf.length,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){for(inti=0;i<recordBuf.length;i++){currBytes+=recordBuf[i];}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(currBytes!=null){if(!closed){for(inti=0;i<recordBuf.length;i++){currBytes+=recordBuf[i];}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(currBytes==null){if(!closed){for(inti=0;i<recordBuf.length;i++){currBytes+=recordBuf[i];}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(currBytes!=null){if(!closed){for(inti=0;i<recordBuf.length;i++){currBytes+=recordBuf[i];}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(currBytes==null){if(!closed){for(inti=0;i<recordBuf.length;i++){currBytes+=recordBuf[i];}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(recordBuf!=null){if(!closed){for(inti=0;i<recordBuf.length;i++){currBytes+=recordBuf[i];}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed){buffer.writeRecordHeader(assemBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed){buffer.writeRecordHeader(assemBuf);}else{buffer.writeRecordHeader(assemBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed){buffer.writeRecordHeader(assemBuf);}else{System.arraycopy(assemBuf,0,assemBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed){buffer.writeRecordHeader(assemBuf);}else{buffer.writeRecordHeader(assemLen);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177||!closed){buffer.writeRecord(assemBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,0,recordSize/2);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,0,recordSize+4);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,0,recordSize*2);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177finalOutputStreamout=newFileOutputStream(assemBuf,recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177finalOutputStreamout=newFileOutputStream(assemBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177finalOutputStreamout=newFileOutputStream(assemBuf,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177finalOutputStreamout=newFileOutputStream(entry.getName());
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177finalOutputStreamout=newFileOutputStream(assemBuf,recordBuf.length);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177finalOutputStreamout=newFileOutputStream(recordBuf,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177finalOutputStreamout=newFileOutputStream(recordBuf,buffer.length);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,0,recordLen+1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){for(inti=0;i<recordBuf.length;i++){currBytes+=recordBuf.length;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(currBytes!=null){if(!closed){for(inti=0;i<recordBuf.length;i++){currBytes+=recordBuf.length;}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(currBytes==null){if(!closed){for(inti=0;i<recordBuf.length;i++){currBytes+=recordBuf.length;}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(currBytes!=null){if(!closed){for(inti=0;i<recordBuf.length;i++){currBytes+=recordBuf.length;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(currBytes==null){if(!closed){for(inti=0;i<recordBuf.length;i++){currBytes+=recordBuf.length;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(currBytes!=null){if(closed){for(inti=0;i<recordBuf.length;i++){currBytes+=recordBuf.length;}}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,recordSize+2);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,blockSize+1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,recordSize+4);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(assemBuf,assemLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(recordBuf,0,assemLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(recordBuf,assemLen+1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(assemBuf,recordLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(assemBuf,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(assemBuf,0,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(recordBuf,0,recordBuf.length);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(recordBuf,0,recordSize+1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(recordBuf,0,recordBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(recordBuf,0,assemBuf.length);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(recordBuf,0,recordSize-1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,assemLen+2);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,recordSize-2);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,blockSize-1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,recordSize-4);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,recordSize*1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,recordSize/1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(!closed&&recordBuf==null){buffer.writeRecord(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(!closed&&recordBuf!=null){buffer.writeRecord(recordBuf,0,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(!closed&&recordBuf!=null){buffer.writeRecord(assemBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(!closed||recordBuf!=null){buffer.writeRecord(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,currBytes,assemLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,assemBuf,currBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,0,currBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(currBytes,recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(recordBuf,1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(recordBuf,0L);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(assemBuf,0);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith(".Archive")){intblockSize=recordBuf.length;for(inti=0;i<blockSize;i++){buffer.append('/');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().startsWith("Archive")){intblockSize=recordBuf.length;for(inti=0;i<blockSize;i++){buffer.append('/');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith("Archive_")){intblockSize=recordBuf.length;for(inti=0;i<blockSize;i++){buffer.append('/');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith(".archives")){intblockSize=recordBuf.length;for(inti=0;i<blockSize;i++){buffer.append('/');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith(".Archives")){intblockSize=recordBuf.length;for(inti=0;i<blockSize;i++){buffer.append('/');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith("Archive")||entry.getName().endsWith("Archive")){intblockSize=recordBuf.length;for(inti=0;i<blockSize;i++){buffer.append('/
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordBytes(assemBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordBytes(recordBuf,0,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed){buffer.writeRecordBytes(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordBytes(recordBuf,assemLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordBytes(recordBuf,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordBytes(recordBuf,currSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.copyCurrentStructure(entry);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.copyCurrentStructure(recordBuf,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.copyCurrentStructure(assemBuf,recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.closeArchiveEntry();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed){for(inti=0;i<recordBuf.length;i++){buffer[i]=Entry.getName();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed){for(inti=0;i<recordsBuf.length;i++){buffer[i]=entry.getName();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){for(inti=0;i<recordBuf.length;i++){buffer[i]=Entry.getName();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed){for(inti=0;i<records.length;i++){buffer[i]=entry.getName();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){for(inti=0;i<recordsBuf.length;i++){buffer[i]=entry.getName();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(closed){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(closed){buffer.writeRecord(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(recordBuf,recordSize+1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(recordBuf,recordBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){buffer.writeRecord(recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(!closed){recordBuf.writeRecord(recordBuf,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordBuffer(recordBuf+1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordBuffer(recordBuf,0);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed||recordBuf){thrownewRuntimeException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){thrownewRuntimeException(""));}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){thrownewRuntimeException("Archiveentryhasbeenclosed");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){thrownewRuntimeException("Archiveentryhasbeenclosed.");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(!closed&&buffer.isDirectory()){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(!closed){buffer.writeRecordHeader(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){for(inti=0;i<recordsBuf.length;i++){buffer.append('/');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){for(inti=0;i<records.length;i++){buffer.append('/');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){for(inti=0;i<recordBuf.length;i++){buffer.append("./");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(assemBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed){buffer.writeRecord(recordBuf);}else{buffer.writeRecord(assemBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){buffer.writeRecord(assemBuf,recordSize);}else{buffer.writeRecord(assemBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed){buffer.writeRecord(assemLen);}else{buffer.writeRecord(assemBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){buffer.writeRecord(recordBuf,recordSize+1);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed){buffer.writeRecord(recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed){buffer.writeRecord(recordBuf,recordSize+1);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(currBytes!=null){for(inti=0;i<recordBuf.length;i++){currBytes+=recordBuf[i];}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(currBytes==null){for(inti=0;i<recordBuf.length;i++){currBytes+=recordBuf[i];}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){for(inti=0;i<records.length;i++){currBytes+=recordBuf[i];}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){for(inti=0;i<recordBuf.length;i++){currBytes+=recordBuf[i].recordSize;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed){for(inti=0;i<records.length;i++){currBytes+=recordBuf[i];}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,recordSize-1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,nameBytes,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(nameBytes,recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177&&!closed){buffer.writeRecord(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordEntryHeader(recordBuf,nameBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordEntryHeader(recordBuf,assemBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordEntryHeader(recordBuf,currBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177((TarArchiveEntry)entry).getName().endsWith("Archive")){intblockSize=recordBuf.length;for(inti=0;i<blockSize;++i){buffer.append('n');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith("Archive")){buffer.append(blockSize,recordBuf.length);for(inti=0;i<blockSize;++i){buffer.append('n');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith("Archive")||entry.getName().endsWith("Archive")){intblockSize=recordBuf.length;for(inti=0;i<blockSize;++i){buffer.append('
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith('/')){intblockSize=recordBuf.length;for(inti=0;i<blockSize;i++){buffer.append('/');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177((TarArchiveEntry)entry).getName().endsWith("Archive")){intblockSize=recordBuf.length;for(inti=0;i<blockSize;i++){buffer.append('/');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith(".archives")){intblockSize=recordBuf.length;for(inti=0;i<blockSize;i++){currBytes+=blockSize;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177((TarArchiveEntry)entry).getName().endsWith(currName)){intblockSize=recordBuf.length;for(inti=0;i<blockSize;i++){currBytes+=blockSize;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith("Archive")){intblockSize=recordBuf.length;for(inti=0;i<blockSize;i++){currBytes+=blockSize
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().startsWith("Archive")){StringcurrName=entry.getName();if(currName==null){return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith("Archive")||entry.getName().endsWith(".js")){StringcurrName=entry.getName();if(currName==null){return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith("Archive_")){StringcurrName=entry.getName();if(currName==null){return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith("Archive")){currName=entry.getName();if(currName==null){return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(currBytes!=null){for(inti=0;i<recordBuf.length;i++){currBytes+=recordBuf.length;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){for(inti=0;i<records.length;i++){currBytes+=recordBuf.length;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){for(inti=0;i<recordsBuf.length;i++){currBytes+=recordBuf.length;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){for(inti=0;i<recordBuf.length;i++){currBytes+=recordSize;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){for(inti=0;i<recordBuf.length;i++){currBytes+=RecordBuffer.length;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,0,recordLONGFILE_ERROR+1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,0,recordLONGFILE_ERROR,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){if(currBytes==null){longLinkEntry=archiveEntry.getLongLinkEntry();if(longLinkEntry!=null){buffer.closeArchiveEntry();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(currBytes!=null){currBytes=archiveEntry.getLongLinkEntry();if(longLinkEntry!=null){buffer.closeArchiveEntry();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){longLinkEntry=archiveEntry.getLongLinkEntry();if(longLinkEntry!=null){buffer.closeArchiveEntry();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){if(longLinkEntry==null){buffer.closeArchiveEntry();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(longFileMode==LONGFILE_GNU){if(currBytes==null){longLinkEntry=archiveEntry.getDirectory();if(closed){thrownewRuntimeException(""));}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){for(inti=0;i<recordsBuf.length;i++){buffer[i]=entry.getISOControl();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){for(inti=0;i<recordBuf.length;i++){buffer[i]=entry.getIOControl();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177finalOutputStreamout=newFileOutputStream(recordBuf,buffer);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177finalOutputStreamout=newFileOutputStream(recordBuffer);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed||recordBuf.length!=0){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed||recordBuf.length<0){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,nameBytes+1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,0,recordLen+1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeInt(recordBuf.length-2);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeInt(recordBuf.length+2);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){for(inti=0;i<records.length;i++){buffer[i]=entry.getName();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){for(inti=0;i<recordBuf.length;i++){buffer[i]=newArchiveEntry(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){for(inti=0;i<recordBuf.length;i++){buffer[i]=newTarBuffer();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(recordGNU);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(recordSize+1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(recordHashed);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(recordBuf,assemBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(recordBuf,nameBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177longLinkEntry=buffer.getDirectoryEntry(recordBuf,fileMode);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177longLinkEntry=buffer.getDirectoryEntry(recordBuf,0);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(!closed&&buffer.isDirectory()){buffer.writeRecord(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(!closed){buffer.writeRecordHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(closed&&recordBuf!=null){buffer.writeRecord(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(currBytes!=null&&recordBuf!=null){buffer.writeRecord(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(!closed&&recordBuf>=null){buffer.writeRecord(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith('/')){intblockSize=recordBuf.length;for(inti=0;i<blockSize;++i){buffer.append('/');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177((TarArchiveEntry)entry).getName().endsWith("Archive")){intblockSize=recordBuf.length;for(inti=0;i<blockSize;++i){buffer.append('/');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith("Archive")||entry.getName().endsWith("Archive")){intblockSize=recordBuf.length;for(inti=0;i<blockSize;++i){buffer.
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed||recordBuf!=null){buffer.writeRecord(assemBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,0,recordLen-1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,nameBytes,currSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){buffer.writeRecord(recordBuf);}else{System.arraycopy(assemBuf,0,assemBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){System.arraycopy(assemBuf,0,assemBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177Entry<K,V>entry=recordBuf.getEntry();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177Entry<K,V>entry=this.archiveEntry.getEntry();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177Entry<K,V>entry=buffer.getEntry();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177Entry<K,V>entry=archiveEntry.getEntry(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(recordBuf,1,0);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177((TarArchiveEntry)entry).getName().endsWith("Archive")){intblockSize=recordBuf.length;for(inti=0;i<blockSize;i++){buffer.append('n');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith("Archive")){longblockSize=recordBuf.length;for(inti=0;i<blockSize;i++){buffer.append('n');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.write(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeBytes(recordBuf,assemLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeBytes(recordBuf,currSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordBytes(recordBuf,currBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordBytes(recordBuf,0);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177((TarArchiveEntry)entry).getName().endsWith("Archive")){for(inti=0,len=recordBuf.length;i<len;++i){currBytes+=recordBuf[i];}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith("Archive_")){for(inti=0,len=recordBuf.length;i<len;++i){currBytes+=recordBuf[i];}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith("Archive")||entry.getName().endsWith("Archive")){for(inti=0,len=recordBuf.length;i<len;++i){currBytes+=recordBu
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith("Archive")){currBytes=recordBuf.length;for(inti=0,len=recordBuf.length;i<len;++i){currBytes+=recordBuf[i];}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith("Archive")||entry.getName().endsWith("Archive")){for(inti=0,len=recordBuf.length;i<len;++i){currBytes+=recordBuf[
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){buffer.writeRecord(recordBuf);}else{System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed){buffer.writeRecord(recordBuf);}else{System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){buffer.writeRecord(assemBuf,recordBuf);}else{System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){for(inti=0;i<recordBuf.length;i++){buffer[i]=getName();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.copyCurrentEntry(assemBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){for(inti=0;i<recordBuf.length;i++){buffer[i]=getISOControl();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(closed&&recordBuf!=null){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(currBytes!=null&&recordBuf!=null){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,0,assemBuf.length-1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,0,recordBuf.length-1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.copyCurrentStructure(recordBuf,currBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(longFileMode==LONGFILE_GNU){if(currBytes==null){longLinkEntry=archiveEntry.getLongLinkEntry();if(!closed){thrownewRuntimeException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(longFileMode==LONGFILE_GNU){if(currBytes==null){longLinkEntry=archiveEntry.getLongLinkEntry();if(!closed){thrownewRuntimeException("
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(currBytes==null){currBytes=archiveEntry.getLongLinkEntry();if(!closed){thrownewRuntimeException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){buffer.writeRecord(recordBuf,recordSize+2);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177out.writeRecord(recordBuf,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(closed){recordBuf.writeRecord(recordBuf,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(!closed){for(inti=0;i<recordBuf.length;i++){buffer[i]=entry.getISOControl();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177for(inti=0;i<recordBuf.length;i++){buffer[i]=entry.getISOControl();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){for(inti=0;i<records.length;i++){buffer[i]=entry.getISOControl();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(closed){buffer.writeRecord(recordBuf,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177longLinkEntry=buffer.getLongDirectoryEntry(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(!closed){for(inti=0;i<recordBuf.length;i++){buffer.append('/');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){for(inti=0;i<recordBuf.length;i++){buffer.append("/");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){for(inti=0;i<recordBuf.length;i++){buffer.append(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){buffer.writeRecord(assemBuf,0,assemBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed||recordSize>0){buffer.writeRecord(assemBuf);}else{System.arraycopy(assemBuf,0,assemBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){buffer.writeRecord(assemBuf,0,assemBuf);}else{System.arraycopy(assemBuf,0,assemBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(!closed&&recordBuf!=null&&recordBuf.length>0){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177finalOutputStreamout=newFileOutputStream(recordBuf,fileMode);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177finalOutputStreamout=newFileOutputStream(recordBuf,assemLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed||recordBuf!=null){buffer.writeRecord(recordBuf,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,recordSize*recordSize-1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,assemLen-1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,recordLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed||buffer.isDirectory()){buffer.writeRecord(assemBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){buffer.writeRecord(assemBuf,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,0,0);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(!closed){buffer.writeRecord(recordBuf,0);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(recordBuf,0,recordBytes.length);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed||recordBuf!=null){buffer.writeRecord(assemBuf);}else{buffer.writeRecord(assemBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordEntryHeader(recordBuf,0);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordEntryHeader(recordBuf,file);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,assemBuf,nameBytes);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,nameBytes+1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeCurrentStructure(recordBuf,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeEntryHeader(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(!closed){for(inti=0;i<recordBuf.length;i++){buffer[i]=entry.getName();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemLen,0,recordBuf.length);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeInt(assemLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeInt(recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(currBytes!=null){longLinkEntry=archiveEntry.getDirectory();if(closed){thrownewRuntimeException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry!=null){longLinkEntry=archiveEntry.getDirectory();if(closed){thrownewRuntimeException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(currBytes!=null){longLinkEntry=archiveEntry.getDirectory();if(!closed){thrownewRuntimeException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry!=null){longLinkEntry=archiveEntry.getDirectory();if(!closed){thrownewRuntimeException("");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(!closed){for(inti=0;i<recordBuf.length;i++){currBytes+=recordBuf[i];}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBytes,recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(!closed){for(inti=0;i<recordBuf.length;i++){buffer[i]=archiveEntry.getName();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){for(inti=0;i<recordBuf.length;i++){buffer[i]=entity.getName();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(assemBuf,0,assemLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(recordSize,assemLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177intblockSize=recordBuf.length;for(inti=0;i<blockSize;++i){buffer.append('/');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith("Archive")){longblockSize=recordBuf.length;for(inti=0;i<blockSize;++i){buffer.append('/');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith(".Archive")){currName=entry.getName();if(currName==null){return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177Entry<String,ArchiveEntry>entry=entry.getName();if(currName==null){return;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemBuf,recordBytes,currSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordBuffer(recordBuf,assemLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(recordSize,recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(recordBuf,recordSize-1);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(!closed&&buffer.writeRecord(recordBuf)!=0){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed||recordBuf.length==0){buffer.writeRecord(recordBuf);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(recordLONGFILE_GNU);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177intblockSize=recordBuf.length;for(inti=0;i<blockSize;i++){buffer.append('n');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith(".Archive_")){intblockSize=recordBuf.length;for(inti=0;i<blockSize;i++){buffer.append('n');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed||recordBuf!=null){buffer.writeRecord(assemBuf);}else{System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(!closed){buffer.writeRecord(assemBuf);}else{System.arraycopy(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){buffer.writeRecord(assemBuf,0,recordBuf,0,recordBuf.length);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBytes,0,recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(recordBuf,0,recordBytes,assemLen);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177Thread.currentThread().getContextClassLoader().writeRecord(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeEntry(assemBuf,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177intblockSize=recordBuf.length;for(inti=0;i<blockSize;i++){buffer.append('/');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith("Archive")){longblockSize=recordBuf.length;for(inti=0;i<blockSize;i++){buffer.append('/');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177intblockSize=recordBuf.length;for(inti=0;i<blockSize;i++){currBytes+=blockSize;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith("Archive")){longblockSize=recordBuf.length;for(inti=0;i<blockSize;i++){currBytes+=blockSize;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith("Archive")){intcurrSize=recordBuf.length;for(inti=0;i<blockSize;i++){currBytes+=blockSize;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith("Archive")||entry.getName().endsWith("Archive")){intblockSize=recordBuf.length;for(inti=0;i<blockSize;i++){currBytes
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177Entry<K,V>entry=recordBuf.entrySet();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177Entry<K,V>entry=archiveEntry.getValue();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177Entry<K,V>entry=cacheEntry.getEntry();
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177intblockSize=recordBuf.length;for(inti=0;i<blockSize;++i){buffer.append('n');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith("Archive")){longblockSize=recordBuf.length;for(inti=0;i<blockSize;++i){buffer.append('n');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith(".Archive_")){intblockSize=recordBuf.length;for(inti=0;i<blockSize;++i){buffer.append('n');}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(longFileMode!=LONGFILE_GNU){if(currBytes==null){longLinkEntry=archiveEntry.getLongLinkEntry();if(longLinkEntry!=null){buffer.closeArchiveEntry();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry!=null){longLinkEntry=archiveEntry.getLongLinkEntry();if(longLinkEntry!=null){buffer.closeArchiveEntry();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordBytes(recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177entry.getName().endsWith("Archive")){for(inti=0,len=recordBuf.length;i<len;++i){currBytes+=recordBuf[i];}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith("Archive")){currBytes+=recordBuf[i];}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177((TarArchiveEntry)entry).getName().endsWith("Archive")){currBytes+=recordBuf[i];}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(entry.getName().endsWith("Archive")){for(inti=0,len=recordBuf.length;i<len;++i){currBytes+=recordBuf[i]
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177||!closed){buffer.writeRecord(recordBuf,0,recordSize);}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){thrownewRuntimeException("TarArchiveEntryistoolong(>"+TarConstants.NAMELEN+"bytes)");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){thrownewRuntimeException("Archiveentryistoocloseable(>"+TarConstants.NAMELEN+"bytes)");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){thrownewRuntimeException("TarArchiveEntryistoocloseable(>"+TarConstants.NAMELEN+"bytes)");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){thrownewRuntimeException("Archiveentryistoolong(>"+TarConstants.NAMELEN+")");}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecord(assemLen,recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(!closed){for(inti=0;i<recordBuf.length;i++){buffer[i]=archiveEntry.getISOControl();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(closed){for(inti=0;i<recordBuf.length;i++){buffer[i]=entity.getISOControl();}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeRecordHeader(recordSize,0);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.write(assemBuf,0,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177buffer.writeBytes(assemBuf,0,recordSize);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(!closed&&recordBuf!=null&&recordBuf.length>0){buffer.writeRecord(recordBuf);
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177while(!closed){for(inti=0;i<recordBuf.length;i++){currBytes+=recordBuf.length;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(currBytes==null){for(inti=0;i<recordBuf.length;i++){currBytes+=recordBuf.length;}
projects/Compress3/src/main/java/org/apache/commons/compress/archivers/tar/TarArchiveOutputStream.java177if(!closed){for(inti=0;i<records.length;i++){currBytes+=recordBuf.length;}
